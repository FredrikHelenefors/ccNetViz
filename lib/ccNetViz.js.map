{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/color.js","webpack:///./src/gl.js","webpack:///./src/shader.js","webpack:///./src/utils.js","webpack:///./src/primitiveTools.js","webpack:///./src/primitive.js","webpack:///./src/quadTree.js","webpack:///./src/layout/force.js","webpack:///./src/layout/random.js","webpack:///./src/layout/utils.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/layout/layout.js","webpack:///./src/geomutils.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/shaders/easeFunctions/index.js","webpack:///./src/shaders/easeFunctions/linear.glsl","webpack:///./src/shaders/easeFunctions/sin-in.glsl","webpack:///./src/shaders/easeFunctions/sin-out.glsl","webpack:///./src/shaders/easeFunctions/sin-inout.glsl","webpack:///./src/shaders/easeFunctions/exp-in.glsl","webpack:///./src/shaders/easeFunctions/exp-out.glsl","webpack:///./src/shaders/easeFunctions/exp-inout.glsl","webpack:///./src/shaders/easeFunctions/bounce-in.glsl","webpack:///./src/shaders/easeFunctions/bounce-out.glsl","webpack:///./src/shaders/easeFunctions/bounce-inout.glsl","webpack:///./src/shaders/easeFunctions/circular-in.glsl","webpack:///./src/shaders/easeFunctions/circular-out.glsl","webpack:///./src/shaders/easeFunctions/circular-inout.glsl","webpack:///./src/shaders/easeFunctions/quad-in.glsl","webpack:///./src/shaders/easeFunctions/quad-out.glsl","webpack:///./src/shaders/easeFunctions/quad-inout.glsl","webpack:///./src/shaders/easeFunctions/cubic-in.glsl","webpack:///./src/shaders/easeFunctions/cubic-out.glsl","webpack:///./src/shaders/easeFunctions/cubic-inout.glsl","webpack:///./src/shaders/easeFunctions/quart-in.glsl","webpack:///./src/shaders/easeFunctions/quart-out.glsl","webpack:///./src/shaders/easeFunctions/quart-inout.glsl","webpack:///./src/shaders/easeFunctions/quint-in.glsl","webpack:///./src/shaders/easeFunctions/quint-out.glsl","webpack:///./src/shaders/easeFunctions/quint-inout.glsl","webpack:///./src/shaders/elements/getShiftFuncs.glsl","webpack:///./src/shaders/elements/fsLineHead.glsl","webpack:///./src/shaders/elements/fsLineAnimateBasic.glsl","webpack:///./src/shaders/elements/fsLineAnimateGradient.glsl","webpack:///./src/shaders/elements/fsLineMain.glsl","webpack:///./src/shaders/elements/fsCurve.glsl","webpack:///./src/shaders/elements/index.js","webpack:///./src/shaders/elements/vsLineHead.glsl","webpack:///./src/shaders/elements/vsLineMain.glsl","webpack:///./src/shaders/elements/vsCurveHead.glsl","webpack:///./src/shaders/elements/vsCurveMain.glsl","webpack:///./src/shaders/elements/vsCircleHead.glsl","webpack:///./src/shaders/elements/vsCircleMain.glsl","webpack:///./src/shaders/elements/vsLineArrowHead.glsl","webpack:///./src/shaders/elements/vsLineArrowMain.glsl","webpack:///./src/shaders/elements/vsCurveArrowHead.glsl","webpack:///./src/shaders/elements/vsCurveArrowMain.glsl","webpack:///./src/shaders/elements/vsCircleArrowHead.glsl","webpack:///./src/shaders/elements/vsCircleArrowMain.glsl","webpack:///./src/shaders/elements/fsLineBasic.glsl","webpack:///./src/shaders/elements/fsColorTexture.glsl","webpack:///./src/shaders/elements/fsVarColorTexture.glsl","webpack:///./src/shaders/elements/vsLabelsShader.glsl","webpack:///./src/shaders/elements/fsLabelTexture.glsl","webpack:///./src/shaders/elements/vsNode.glsl","webpack:///./src/shaders/elements/vsNodeColored.glsl","webpack:///./src/layer/util.js","webpack:///./src/layer/shapes/baseShape.js","webpack:///./src/layer/shapes/edge.js","webpack:///./src/layer/shapes/node.js","webpack:///./src/layer/shapes/edgeArrow.js","webpack:///./src/layer/shapes/labels.js","webpack:///./src/layer/index.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/texts.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./src/ccNetViz.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","endsWith","ShelfPack","w","h","options","this","autoResize","shelves","freebins","stats","bins","maxId","Shelf","y","x","free","Bin","id","maxw","maxh","refcount","pack","concat","allocation","results","length","width","height","packOne","inPlace","push","w2","h2","j","shelf","Math","max","resize","bin","waste","h1","w1","best","freebin","Infinity","getBin","ref","allocFreebin","allocShelf","index","splice","alloc","unref","clear","Color","color","_classCallCheck","g","b","arguments","test","exec","v","parseInt","substring","gl","extensions","getSupportedExtensions","result","e","indexOf","getExtension","type","source","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","uniform4f","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","defaultAttr","Shader","vs","fs","shaderParams","shader_classCallCheck","_gl","_vs","_fs","program","_program","createProgram","attachShader","ccNetViz_gl","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","uniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","attribute","attributes","ACTIVE_ATTRIBUTES","getActiveAttrib","size","useProgram","enableVertexAttribArray","disableVertexAttribArray","Utils","from","k","obj","isObject","url","callback","xmlhttp","cbk","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","responseType","open","send","partitionByStyle","data","parts","pN","el","part","style","undefined","idx","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","animateColor","primitive","_this","primitive_classCallCheck","Array","isArray","join","iV","iI","fb","shader","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","forEach","init","floor","maxBufferSize","numVertices","nV","min","nI","numIndices","indices","Uint16Array","zerofiller","indicesarr","verticesarr","apply","vertices","set","styles","adder","isDirty","_iIs","Uint32Array","_iVs","_iBs","Uint8Array","_sizes","store","section","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","addSection","update","DYNAMIC_DRAW","updateEl","pos","buffer","olds","error","bufferSubData","BYTES_PER_ELEMENT","storeToPos","draw","context","uniformMatrix4fv","transform","uniform1f","time","renderTime","texture","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","quadTree","points","xs","ys","x1_","y1_","x2_","y2_","dx","dy","insert","x1","y1","x2","y2","leaf","nx","ny","insertChild","nPoint","point","xm","ym","below","nodes","visit","f","node","sx","sy","children","find","x0","y0","x3","y3","closestPoint","minDistance2","distance2","distance","sqrt","findNode","force","edges","alpha","friction","charge","gravity","theta2","chargeDistance2","distances","strengths","charges","repulse","quad","_","cx","cy","dw","dn","px","py","pointCharge","step","q","target","weight","accumulate","random","ccNetViz_quadtree","fixed","rnd","fixed2","minX","maxX","minY","maxY","_default","random_classCallCheck","_nodes","create2dArray","rows","columns","_toConsumableArray","keys","map","fill","degrees","ordered_nodes","sort","ordered_degrees","getDepth","depth","depth_visited","Error","tmpDepth","getRanges","abs","start","layout_options","circular_classCallCheck","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","cos","sin","tree_classCallCheck","visited_leafs_parent","layer","centered","visited_leafs","child","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","treeT_classCallCheck","visited","drawTreeTop","hierarchical_classCallCheck","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","lib_es6","input","src_default","TypeError","ml_array_min_lib_es6","ml_array_rescale_lib_es6","output","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","count","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","slice","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","warn","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","Number","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","tmp","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","ii","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newData","newMatrix","empty","rng","matrix1","matrix2","klass","jj","previousColumn","isEchelonForm","checked","isReducedEchelonForm","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","dot","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","add","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","rand","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","mathMethod","inplaceMeth","staticMeth","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","xr","xi","yr","yi","spectral_classCallCheck","A","reduce","foo","EigenvalueDecomposition","iii","arr","mini","second_min","second_mini","third_min","twoSmallest","foo_","xy","maxx","maxy","minx","miny","normalize","spectral2_classCallCheck","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","node_degree","deg","dims","u","ones","uhk","itt_count","stop","uk","ul","top_","vmi","ratio","vsi","normalize2","coordinates","pow","euclideanDistance","narr","hive_classCallCheck","_margin","_radius","_nlines","nodes_segment","angle","grid_classCallCheck","sq","nnodes","nlines","nlines2","versinus_classCallCheck","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","dim","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","edgeSource","edgeTarget","uniqid","is_edge","se","te","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","calcBBox","toBBox","bbox","distBBox","extend","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","compare","mid","stack","pop","select","sd","exp","swap","all","_all","search","len","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","item","remove","parent","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","EPS","cuberoot","distance2ToBezier","eqresult","acos","solveCubic","mindist","dist","getBBFromPoints","xmin","xmax","ymin","ymax","val","pDistance2","xx","yy","C","len_sq","param","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","pointInRect","eq","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","bezierIntersectsRect","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","dist2","ct","getEdgeShift","screensize","ctx","cty","citx","city","ccNetViz_geomutils","getCurveShift","aspect2","len2","curveExc","sizex","nodeSize","sizey","Node","spatialSearch_classCallCheck","Label","textpos","fontSize","isSDF","getLabelSize","wantedSize","label","fontScale","offset","offsety","edge","bb","getTextPos","p1x","p1y","p2x","p2y","Line","getPoints","Circle","xsize","ysize","getBezierPoints","d1","d2","Curve","n2","n3","sortByDistances","e1","e2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sdi","_loop","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","rbushtree","ret","isEdge","isLabel","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","easeFunctions","linear","sin-in","sin-out","sin-inout","exp-in","exp-out","exp-inout","bounce-in","bounce-out","bounce-inout","circular-in","circular-out","circular-inout","quad-in","quad-out","quad-inout","cubic-in","cubic-out","cubic-inout","quart-in","quart-out","quart-inout","quint-in","quint-out","quint-inout","getShiftFuncs","fsLineHead","fsLineAnimateBasic","fsLineAnimateGradient","fsLineMain","fsCurve","vsLine","vsCurve","vsCircle","vsLineArrow","vsCurveArrow","vsCircleArrow","easeFunctionPart","ease","elementShaders","fsLineAnimate","fsLineBasic","fsColorTexture","fsVarColorTexture","vsLabelsShader","fsLabelTexture","fsCircle","vsNode","vsNodeColored","sc","BaseShape","baseShape_classCallCheck","_primitive","BaseShapeManager","_filler","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","animateStylesTransl","none","basic","gradient","getEdgeAnimateType","edgeStyle","hasAnimation","edge_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","ccNetViz_primitive","animateEase","exc","uniform2f","screen","lineSize","aspect","uniformColor","animateType","animateSpeed","_this2","lineStepSize","_this3","setVerticeCurveShift","csx","csy","cisx","cisy","ct1","ct2","curveShift","circleShift","edgesFiller","position","lengthSoFar","normal","startPos","endPos","curve","ydiff2","ydiff3","ydiff4","getNodeSize","node_classCallCheck","node_possibleConstructorReturn","node_getPrototypeOf","NodeColored","nodesFiller","textureCoord","colors","shaderparams","offsetMul","bindEdgeArrows","view","getSize","getEdgesCnt","arrowsize","cexc","tx","ty","singles","direction","LineArrow","edgeArrow_classCallCheck","edgeArrow_possibleConstructorReturn","edgeArrow_getPrototypeOf","CurveArrow","CircleArrow","EdgeArrowManager","_this4","lineArrows","curveArrows","circleArrows","bindLabels","is_outline","backgroundColor","getLabelType","sdfSize","boldness","height_font","outlineColor","labels_classCallCheck","labels_possibleConstructorReturn","labels_getPrototypeOf","LabelOutline","LabelManager","relative","steps","src_layer","canvas","textures","files","events","getLabelHideSize","getNodesCnt","onRedraw","redraw","hasEdgeAnimation","edgeTypes","edgePoses","labelsFiller","getFiller","arrowFiller","getCurrentSpatialSearch","spatialSearch","ccNetViz_spatialSearch","layout","removedNodes","removedEdges","getIndex","nidx","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","ti","is_bidirectional_overlap","bidirectional","ccNetViz_layout","is","defaultAdder","labelAdder","enableLazyRedraw","reset","slf","getTexture","scene","nodesColored","labelsOutline","arrow","element","findArea","updateNode","updateEdge","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getVisibleNodes","getVisibleEdges","cntShownNodes","cntShownEdges","initExtensions","elements","loadCalled","lineEdge","getPrimitive","curveEdge","circleEdge","lineArrow","curveArrow","circleArrow","nodeColored","labelOutline","textures_classCallCheck","_load","debounce","_textures","_pending","_n","action","allLoaded","ccNetViz_utils","emptyObject","files_classCallCheck","_files","dataType","JSON","parse","ajax","_transformFile","default_classCallCheck","_size","_canvas","document","createElement","display","_el","body","appendChild","_context","getContext","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","GlyphAtlas","resetCache","atlas_classCallCheck","_resetCache","ids","dirty","ALPHA","split","glyphs","rects","glyph","markDirty","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","rect","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","glyphTrimmer_classCallCheck","lb","rb","glyphData","numCols","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newWidth","bufferCol","valueOf","glyphTrimmer_toConsumableArray","Uint8ClampedArray","advance","SpriteGenerator","spriteGenerator_classCallCheck","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","char","imgData","getImageData","_edt","charCodeAt","process","_edt1d","SimpleGlyph","sdf_classCallCheck","atlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","curFont","pbf","_getChar","String","fromCharCode","glyphID","cache","addGlyph","updateTexture","texts_classCallCheck","_modules","default","ccNetViz_defaultTexts","ccNetViz_sdfTexts","lazyEvents_classCallCheck","_enable","func","wait","immediate","timeout","timestamp","_arguments","later","last","Date","now","setTimeout","callNow","pushUnique","layers","insertTempLayer","checkUniqId","interactivityBatch_classCallCheck","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","__uniqid","_actualTempNodes","_actualTempEdges","main","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","sCanvas","antialias","lastUniqId","mergeArrays","cmp","ccNetViz","self","backgroundStyle","background","removed","setted","minSize","maxSize","drawFunc","ccNetViz_lazyEvents","checkRemoved","ccNetViz_layer","batch","getBatch","ccNetViz_interactivityBatch","promises","ccNetVizPlugins","Integration","shapes","Promise","config","then","plugin","reflow","applyChanges","removeNode","removeEdge","addEdge","addNode","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","hideSize","silent","ox","oy","ortho","offsetX","offsetY","viewport","COLOR_BUFFER_BIT","startTime","drawNums","drawOnce","drawLoop","fps","requestAnimationFrame","getScreenCoords","conf","getBoundingClientRect","getLayerCoords","disth","distw","findMerge","funcname","f1","f2","getTextPosition","chars","zoomevts","addEvts","evts","addEventListener","passive","passiveEvts","removeEvts","removeEventListener","onDownThis","downe","which","parseTouchEvts","touches","clientX","clientY","dragged","custom","origdist","od","onDrag","panning","zooming","mx","my","drag","checkChangeViewport","preventDefault","up","onClick","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","lCoords","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","onContextMenu","gl_lose","loseContext","disable","last_view","is_change","onChangeViewport","toDataURL","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","isWebGLSupported"],"mappings":"CAAA,SAAAA,EAAAC,GACA,oBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,SACA,sBAAAG,eAAAC,IACAD,OAAA,GAAAH,OACA,CACA,IAAAK,EAAAL,IACA,QAAAM,KAAAD,GAAA,iBAAAJ,gBAAAF,GAAAO,GAAAD,EAAAC,IAPA,CASCC,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,GAAA,CACAJ,EAAAI,EACAC,GAAA,EACAV,QAAA,IAUA,OANAW,EAAAF,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAQ,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CT,EAAAe,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD5B,EAAA+B,EAAA,GAIA/B,IAAAgC,EAAA,kCChFA,MAAAC,EAAAtB,OAAAkB,UAAAI,SAMAxC,EAAAD,QAJA,SAAAmC,GACA,OAAAM,EAAA7B,KAAAuB,GAAAO,SAAA,4BCJgEzC,EAAAD,QAG/D,WAgBD,SAAA2C,EAAAC,EAAAC,EAAAC,GACAA,KAAA,GACAC,KAAAH,KAAA,GACAG,KAAAF,KAAA,GACAE,KAAAC,aAAAF,EAAAE,WACAD,KAAAE,QAAA,GACAF,KAAAG,SAAA,GACAH,KAAAI,MAAA,GACAJ,KAAAK,KAAA,GACAL,KAAAM,MAAA,EAuVA,SAAAC,EAAAC,EAAAX,EAAAC,GACAE,KAAAS,EAAA,EACAT,KAAAQ,IACAR,KAAAH,EAAAG,KAAAU,KAAAb,EACAG,KAAAF,IAsDA,SAAAa,EAAAC,EAAAH,EAAAD,EAAAX,EAAAC,GACAE,KAAAY,KACAZ,KAAAS,IACAT,KAAAQ,IACAR,KAAAH,IACAG,KAAAF,IACAE,KAAAa,KAAAhB,EACAG,KAAAc,KAAAhB,EACAE,KAAAe,SAAA,EAGA,OAvYAnB,EAAAN,UAAA0B,KAAA,SAAAX,EAAAN,GACAM,EAAA,GAAAY,OAAAZ,GACAN,KAAA,GAKA,IAHA,IACAF,EAAAC,EAAAc,EAAAM,EADAC,EAAA,GAGA7D,EAAA,EAAmBA,EAAA+C,EAAAe,OAAiB9D,IAKpC,GAJAuC,EAAAQ,EAAA/C,GAAAuC,GAAAQ,EAAA/C,GAAA+D,MACAvB,EAAAO,EAAA/C,GAAAwC,GAAAO,EAAA/C,GAAAgE,OACAV,EAAAP,EAAA/C,GAAAsD,GAEAf,GAAAC,EAAA,CAEA,KADAoB,EAAAlB,KAAAuB,QAAA1B,EAAAC,EAAAc,IAEA,SAEAb,EAAAyB,UACAnB,EAAA/C,GAAAmD,EAAAS,EAAAT,EACAJ,EAAA/C,GAAAkD,EAAAU,EAAAV,EACAH,EAAA/C,GAAAsD,GAAAM,EAAAN,IAEAO,EAAAM,KAAAP,GAQA,GAAAlB,KAAAE,QAAAkB,OAAA,GAIA,IAHA,IAAAM,EAAA,EACAC,EAAA,EAEAC,EAAA,EAAuBA,EAAA5B,KAAAE,QAAAkB,OAAyBQ,IAAA,CAChD,IAAAC,EAAA7B,KAAAE,QAAA0B,GACAD,GAAAE,EAAA/B,EACA4B,EAAAI,KAAAC,IAAAF,EAAAhC,EAAAgC,EAAAnB,KAAAgB,GAGA1B,KAAAgC,OAAAN,EAAAC,GAGA,OAAAR,GAuBAvB,EAAAN,UAAAiC,QAAA,SAAA1B,EAAAC,EAAAc,GACA,IAEAqB,EAAAJ,EAAAK,EAAA5E,EAsFA6E,EAAAR,EAAAS,EAAAV,EAxFAW,EAAA,CAAgBC,SAAA,EAAAT,OAAA,EAAAK,MAAAK,KAChB/B,EAAA,EAIA,oBAAAI,GAAA,iBAAAA,EAAA,CAEA,GADAqB,EAAAjC,KAAAwC,OAAA5B,GAGA,OADAZ,KAAAyC,IAAAR,GACAA,EAEA,iBAAArB,IACAZ,KAAAM,MAAAwB,KAAAC,IAAAnB,EAAAZ,KAAAM,aAGAM,IAAAZ,KAAAM,MAIA,IAAAhD,EAAA,EAAeA,EAAA0C,KAAAG,SAAAiB,OAA0B9D,IAAA,CAIzC,GAAAwC,KAHAmC,EAAAjC,KAAAG,SAAA7C,IAGAwD,MAAAjB,IAAAoC,EAAApB,KACA,OAAAb,KAAA0C,aAAApF,EAAAuC,EAAAC,EAAAc,GAGAd,EAAAmC,EAAAnB,MAAAjB,EAAAoC,EAAApB,MAIAf,GAAAmC,EAAAnB,MAAAjB,GAAAoC,EAAApB,OACAqB,EAAAD,EAAApB,KAAAoB,EAAAnB,KAAAjB,EAAAC,GACAuC,EAAAH,QACAG,EAAAH,QACAG,EAAAC,QAAAhF,GAMA,IAAAA,EAAA,EAAeA,EAAA0C,KAAAE,QAAAkB,OAAyB9D,IAKxC,GAHAkD,IADAqB,EAAA7B,KAAAE,QAAA5C,IACAwC,IAGAD,EAAAgC,EAAAnB,MAAA,CAIA,GAAAZ,IAAA+B,EAAA/B,EACA,OAAAE,KAAA2C,WAAArF,EAAAuC,EAAAC,EAAAc,GAGAd,EAAA+B,EAAA/B,GAIAA,EAAA+B,EAAA/B,IACAoC,GAAAL,EAAA/B,KAAAD,GACAwC,EAAAH,QACAG,EAAAC,SAAA,EACAD,EAAAH,QACAG,EAAAR,MAAAvE,GAKA,WAAA+E,EAAAC,QACAtC,KAAA0C,aAAAL,EAAAC,QAAAzC,EAAAC,EAAAc,IAGA,IAAAyB,EAAAR,MACA7B,KAAA2C,WAAAN,EAAAR,MAAAhC,EAAAC,EAAAc,GAIAd,GAAAE,KAAAF,EAAAU,GAAAX,GAAAG,KAAAH,GACAgC,EAAA,IAAAtB,EAAAC,EAAAR,KAAAH,EAAAC,GACAE,KAAA2C,WAAA3C,KAAAE,QAAAuB,KAAAI,GAAA,EAAAhC,EAAAC,EAAAc,IAQAZ,KAAAC,YAGAkC,EAAAR,EAAA3B,KAAAF,IACAsC,EAAAV,EAAA1B,KAAAH,IAEAsC,GAAAtC,EAAAuC,KACAV,EAAA,EAAAI,KAAAC,IAAAlC,EAAAuC,KAEAD,EAAAC,GAAAtC,EAAAqC,KACAR,EAAA,EAAAG,KAAAC,IAAAjC,EAAAqC,IAGAnC,KAAAgC,OAAAN,EAAAC,GACA3B,KAAAuB,QAAA1B,EAAAC,EAAAc,IAGA,MAgBAhB,EAAAN,UAAAoD,aAAA,SAAAE,EAAA/C,EAAAC,EAAAc,GACA,IAAAqB,EAAAjC,KAAAG,SAAA0C,OAAAD,EAAA,MAOA,OANAX,EAAArB,KACAqB,EAAApC,IACAoC,EAAAnC,IACAmC,EAAAlB,SAAA,EACAf,KAAAK,KAAAO,GAAAqB,EACAjC,KAAAyC,IAAAR,GACAA,GAgBArC,EAAAN,UAAAqD,WAAA,SAAAC,EAAA/C,EAAAC,EAAAc,GACA,IACAqB,EADAjC,KAAAE,QAAA0C,GACAE,MAAAjD,EAAAC,EAAAc,GAGA,OAFAZ,KAAAK,KAAAO,GAAAqB,EACAjC,KAAAyC,IAAAR,GACAA,GAYArC,EAAAN,UAAAkD,OAAA,SAAA5B,GACA,OAAAZ,KAAAK,KAAAO,IAaAhB,EAAAN,UAAAmD,IAAA,SAAAR,GACA,QAAAA,EAAAlB,SAAA,CACA,IAAAjB,EAAAmC,EAAAnC,EACAE,KAAAI,MAAAN,GAAA,KAAAE,KAAAI,MAAAN,IAGA,OAAAmC,EAAAlB,UAcAnB,EAAAN,UAAAyD,MAAA,SAAAd,GACA,WAAAA,EAAAlB,SACA,GAGA,KAAAkB,EAAAlB,WACAf,KAAAI,MAAA6B,EAAAnC,YACAE,KAAAK,KAAA4B,EAAArB,IACAZ,KAAAG,SAAAsB,KAAAQ,IAGAA,EAAAlB,WAUAnB,EAAAN,UAAA0D,MAAA,WACAhD,KAAAE,QAAA,GACAF,KAAAG,SAAA,GACAH,KAAAI,MAAA,GACAJ,KAAAK,KAAA,GACAL,KAAAM,MAAA,GAaAV,EAAAN,UAAA0C,OAAA,SAAAnC,EAAAC,GACAE,KAAAH,IACAG,KAAAF,IACA,QAAAxC,EAAA,EAAmBA,EAAA0C,KAAAE,QAAAkB,OAAyB9D,IAC5C0C,KAAAE,QAAA5C,GAAA0E,OAAAnC,GAEA,UAkCAU,EAAAjB,UAAAwD,MAAA,SAAAjD,EAAAC,EAAAc,GACA,GAAAf,EAAAG,KAAAU,MAAAZ,EAAAE,KAAAF,EACA,YAEA,IAAAW,EAAAT,KAAAS,EAGA,OAFAT,KAAAS,GAAAZ,EACAG,KAAAU,MAAAb,EACA,IAAAc,EAAAC,EAAAH,EAAAT,KAAAQ,EAAAX,EAAAC,IAaAS,EAAAjB,UAAA0C,OAAA,SAAAnC,GAGA,OAFAG,KAAAU,MAAAb,EAAAG,KAAAH,EACAG,KAAAH,KACA,GA2BAD,EAxbgE5C,4CCiB3CiG,EACjB,SAAAA,EAAYC,GAOR,+FAPeC,CAAAnD,KAAAiD,GAIfjD,KAAKxB,EAAIwB,KAAKoD,EAAIpD,KAAKqD,EAAI,EAC3BrD,KAAK3C,EAAI,EAEL6F,aAAiBD,EACjBjD,KAAKxB,EAAI0E,EAAM1E,EACfwB,KAAKoD,EAAIF,EAAME,EACfpD,KAAKqD,EAAIH,EAAMG,EACfrD,KAAK3C,EAAI6F,EAAM7F,OACZ,GAAIiG,UAAUlC,QAAU,EAI3BpB,KAAKxB,EAAI8E,UAAU,GACnBtD,KAAKoD,EAAIE,UAAU,GACnBtD,KAAKqD,EAAIC,UAAU,GACnBA,UAAUlC,OAAS,IAAMpB,KAAK3C,EAAIiG,UAAU,SACzC,GAAI,2CAA2CC,KAAKL,GAAQ,CAI/DA,EAAQ,2CAA2CM,KAAKN,GACxD,IAAI3E,EAAM,SAAAkF,GAAC,OAAIC,SAASD,EAAG,IAAM,KAEjCzD,KAAKxB,EAAID,EAAI2E,EAAM,IACnBlD,KAAKoD,EAAI7E,EAAI2E,EAAM,IACnBlD,KAAKqD,EAAI9E,EAAI2E,EAAM,IACnBlD,KAAK3C,EAAIkB,EAAI2E,EAAM,SAChB,GAAI,kCAAkCK,KAAKL,GAAQ,CAGtDA,EAAQ,kCAAkCM,KAAKN,GAC/C,IAAI3E,EAAM,SAAAkF,GAAC,OAAIC,SAASD,EAAG,IAAM,KAEjCzD,KAAKxB,EAAID,EAAI2E,EAAM,IACnBlD,KAAKoD,EAAI7E,EAAI2E,EAAM,IACnBlD,KAAKqD,EAAI9E,EAAI2E,EAAM,SAChB,GAAI,wCAAwCK,KAAKL,GAAQ,CAG5DA,EAAQ,wCAAwCM,KAAKN,GACrD,IAAI3E,EAAM,SAAAkF,GAAC,OAAIC,SAASD,EAAG,IAAM,KAEjCzD,KAAKxB,EAAID,EAAI2E,EAAM,IACnBlD,KAAKoD,EAAI7E,EAAI2E,EAAM,IACnBlD,KAAKqD,EAAI9E,EAAI2E,EAAM,QACZ,qBAAqBK,KAAKL,KAGjCA,EAAQQ,SAASR,EAAMS,UAAU,GAAI,IAGrC3D,KAAKxB,GAAK0E,GAAS,GAAK,KAAO,IAC/BlD,KAAKoD,GAAKF,GAAS,EAAI,KAAO,IAC9BlD,KAAKqD,GAAa,IAARH,GAAe,6WCjEbU,GAGlB,IAFA,IAAIC,EAAaD,EAAGE,yBAChBC,EAAS,GACJzG,EAAI,EAAGA,EAAIgG,UAAUlC,OAAQ9D,IAAK,CACvC,IAAI0G,EAAIV,UAAUhG,IACjByG,EAAOC,GAAKH,EAAWI,QAAQD,IAAM,IAAMJ,EAAGM,aAAaF,GAEhE,OAAOD,uCAISH,EAAIO,EAAMC,GAC1B,IAAIL,EAASH,EAAGS,aAAaF,GAI7B,OAHAP,EAAGU,aAAaP,EAAQK,GACxBR,EAAGW,cAAcR,GAEZH,EAAGY,mBAAmBT,EAAQH,EAAGa,gBAI/BV,GAHHW,QAAQC,IAAIf,EAAGgB,iBAAiBb,IACzB,4CAOMH,EAAIiB,EAAKC,EAAQ/E,GAClC,IAAIgE,EAASH,EAAGmB,gBAEZC,EAAQ,IAAIC,MAEZC,EAAO,WACLF,EAAMG,OAAS,KACfvB,EAAGwB,YAAYxB,EAAGyB,WAAYtB,IAI1BhE,GAAW,IAAIuF,KACjB1B,EAAG2B,YAAY3B,EAAG4B,qBAAqB,GACvC5B,EAAG6B,WAAW7B,EAAGyB,WAAY,EAAGzB,EAAG8B,UAAW9B,EAAG8B,UAAW9B,EAAG+B,cAAeX,GAC9EpB,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGiC,mBAAoBjC,EAAGkC,QAC1DlC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGmC,mBAAoBnC,EAAGkC,QAC1DlC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGoC,eAAgBpC,EAAGqC,eACtDrC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGsC,eAAgBtC,EAAGqC,iBAEtDrC,EAAG2B,YAAY3B,EAAG4B,qBAAqB,GACvC5B,EAAG6B,WAAW7B,EAAGyB,WAAY,EAAGzB,EAAGuC,KAAMvC,EAAGuC,KAAMvC,EAAG+B,cAAeX,GACpEpB,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGiC,mBAAoBjC,EAAGkC,QAC1DlC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGmC,mBAAoBnC,EAAGkC,QAC1DlC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGoC,eAAgBpC,EAAGqC,eACtDrC,EAAGgC,cAAchC,EAAGyB,WAAYzB,EAAGsC,eAAgBtC,EAAGqC,gBAGxDrC,EAAGwB,YAAYxB,EAAGyB,WAAY,MAC9BP,GAAUA,KAQhB,OALAE,EAAMG,OAASD,EACfF,EAAMoB,IAAMvB,EACZG,EAAMqB,cAAgBrB,EAAMsB,eAAiBpB,IAE7CnB,EAAOiB,MAAQA,EACRjB,uCAGSH,EAAI2C,EAAUrD,GAC9BU,EAAG4C,UAAUD,EAAUrD,EAAM1E,EAAG0E,EAAME,EAAGF,EAAMG,EAAGH,EAAM7F,iCAG/CoJ,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACzC,IAAIC,EAAK,GAAKN,EAAOC,GACjBM,EAAK,GAAKL,EAASC,GACnBK,EAAK,GAAKJ,EAAOC,GAEjB/C,EAAS,IAAImD,aAAa,IAiB9B,OAhBAnD,EAAO,IAAM,EAAIgD,EACjBhD,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,IAAM,EAAIiD,EACjBjD,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,IAAM,EAAIkD,EACjBlD,EAAO,IAAM,EACbA,EAAO,KAAO0C,EAAOC,GAASK,EAC9BhD,EAAO,KAAO6C,EAAMD,GAAUK,EAC9BjD,EAAO,KAAO+C,EAAMD,GAAQI,EAC5BlD,EAAO,IAAM,EACNA,qNC3Fb,IAAIoD,EAAc,CAACjE,MAAO,GAELkE,aACnB,SAAAA,EAAYxD,EAAIyD,EAAIC,EAAIC,gGAAcC,CAAAxH,KAAAoH,GACpCpH,KAAKyH,IAAM7D,EACX5D,KAAK0H,IAAML,EACXrH,KAAK2H,IAAML,EAEX,IAAIM,EAAU5H,KAAK6H,SAAWjE,EAAGkE,gBAEjClE,EAAGmE,aAAaH,EAASI,EAAY3D,aAAaT,EAAIA,EAAGqE,cAAeZ,IACxEzD,EAAGmE,aAAaH,EAASI,EAAY3D,aAAaT,EAAIA,EAAGsE,gBAAiBZ,IAC1E1D,EAAGuE,YAAYP,GAEf5H,KAAKoI,SAAW,GAEhB,IADA,IAAIjJ,EAAIyE,EAAGyE,oBAAoBT,EAAShE,EAAG0E,iBAClChL,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIW,EAAO2F,EAAG2E,iBAAiBX,EAAStK,GAAGW,KAC3C+B,KAAKoI,SAASnK,GAAQ2F,EAAG4E,mBAAmBZ,EAAS3J,GAGzD,IAAIwK,GAAclB,GAAgB,IAAImB,WAAa,GAEnD1I,KAAK2I,WAAa,GAClBxJ,EAAIyE,EAAGyE,oBAAoBT,EAAShE,EAAGgF,mBACvC,IAAK,IAAItL,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIW,EAAO2F,EAAGiF,gBAAgBjB,EAAStK,GAAGW,KAC1C+B,KAAK2I,WAAW1K,GAAQ,CAAE2E,MAAOtF,EAAGwL,KAAML,EAAWxK,IAASmJ,EAAOsB,UAAUzK,IAAS,4DAM5F,OAAOkJ,sCAIPnH,KAAKyH,IAAIsB,WAAW/I,KAAK6H,UAGzB,IADA,IAAI1I,EAAIa,KAAKyH,IAAIY,oBAAoBrI,KAAK6H,SAAU7H,KAAKyH,IAAImB,mBACpDtL,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK0C,KAAKyH,IAAIuB,wBAAwB1L,oCAK3D,IADA,IAAI6B,EAAIa,KAAKyH,IAAIY,oBAAoBrI,KAAK6H,SAAU7H,KAAKyH,IAAImB,mBACpDtL,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK0C,KAAKyH,IAAIwB,yBAAyB3L,kNC/C/C4L,qLACLC,GACZ,IAAI,IAAI7L,EAAI,EAAGA,EAAIgG,UAAUlC,OAAQ9D,IACnC,IAAI,IAAI8L,KAAK9F,UAAUhG,GACrB6L,EAAKC,GAAK9F,UAAUhG,GAAG8L,GAG3B,OAAOD,mCAGQE,GACf,OAAOA,IAAQjL,OAAOiL,uCAGLA,GACjB,IAAIH,EAAMI,SAASD,GACjB,OAAO,EAET,IAAI,IAAID,KAAKC,EACX,OAAO,EACT,OAAO,+BAGGE,EAAKC,EAAUrF,GACzB,IAAIsF,EAGmCC,GADvCD,EAAU,IAAIE,gBACNC,oBAA+BF,EAMpCF,EALM,WACqB,GAAtBC,EAAQI,YAAqC,KAAlBJ,EAAQK,QACrCJ,EAAY,eAARvF,EAAwBsF,EAAQM,SAAWN,EAAQO,gBAI1D7F,IAAMsF,EAAQQ,aAAa9F,GAC9BsF,EAAQS,KAAK,MAAOX,GAAK,GACzBE,EAAQU,oDC1CZ,SAASC,EAAiBC,GAItB,IAHA,IAAIC,EAAQ,GAERC,EAAK,GACAjN,EAAI,EAAGA,EAAI+M,EAAKjJ,OAAQ9D,IAAK,CAClC,IAAIkN,EAAKH,EAAK/M,GACVmN,EAAOH,EAAME,EAAGE,OAASJ,EAAME,EAAGE,QAAU,QAChCC,IAAbF,EAAKG,MACNH,EAAKG,IAAM,IACbH,EAAKG,IAAInJ,KAAKnE,GAEdkN,EAAGK,GAAKN,EAAGC,EAAGE,YAA0BC,IAAjBJ,EAAGC,EAAGE,OAAuB,EAAIH,EAAGC,EAAGE,OAAO,EAErED,EAAKhJ,KAAK+I,GAGd,OAAOF,EAGX,SAASQ,EAAkBJ,EAAOK,EAAWC,GACzC,IAAIjH,EAAS,GAETkH,EAAO,SAAAxL,GACP,GAAIA,EAAG,IAAK,IAAID,KAAKC,EAAGsE,EAAOvE,GAAKC,EAAED,IAY1C,OATAyL,EAAKF,GACLE,EAAKP,GAEDM,IACAC,EAAKF,EAAUC,IACfN,GAASO,EAAKP,EAAMM,KAExBjH,EAAOb,MAAQa,EAAOb,OAAS,IAAIgI,EAAenH,EAAOb,OACzDa,EAAOoH,aAAepH,EAAOoH,cAAgB,IAAID,EAAenH,EAAOoH,cAChEpH,4KCzBUqH,aACnB,SAAAA,EAAYxH,EAAImH,EAAWC,EAAe3D,EAAIC,EAAIpI,EAAMqI,GAAc,IAAA8D,EAAArL,kGAAAsL,CAAAtL,KAAAoL,GAChEG,MAAMC,QAAQnE,KAChBA,EAAKA,EAAGoE,KAAK,OAEXF,MAAMC,QAAQlE,KAChBA,EAAKA,EAAGmE,KAAK,OAEf,IAOIC,EACFC,EAuIEC,EA/IAC,EAAS,IAAIC,EAAgBlI,EAAIyD,EAAIC,EAAIC,GACzCwE,EAAU,GACVC,EAAW,GAEXC,EAAkB,GAElBjI,EAAI,GAGNkI,EAAK,EACLC,EAAK,EAEHC,EAAa,SAACC,EAAQ5B,GACxB,GAAI4B,EAAOvD,KAAM,CACf,IAAI3J,EAAI,EAIR,OAHAsL,EAAK6B,QAAQ,SAAA9M,GACXL,GAAKkN,EAAOvD,KAAK9E,EAAGxE,KAEfL,EAEP,OAAOsL,EAAKrJ,QAKZmL,EAAO,SAACF,EAAQlN,GAClBuM,EAAKC,EAAK,EACV,IAAI5J,EAAMD,KAAK0K,MAAMpB,EAAUqB,cAAgBJ,EAAOK,aAClDC,EAAK7K,KAAK8K,IAAI7K,EAAK5C,GAAKgN,EAAKD,GAAMnK,GACnC8K,EAAKF,EAAKN,EAAOS,WAErB,IAAK9I,EAAE+I,SAAW/I,EAAE+I,QAAQ3L,SAAWyL,EAGrC,IAAK,IAAIxP,KAFT2G,EAAE+I,QAAU,IAAIC,YAAYH,GAC5BF,GAAMN,EAAOK,YACCb,EAAOlD,WACnB3E,EAAE3G,GAAK,IAAI6J,aAAa2E,EAAOlD,WAAWtL,GAAGyL,KAAO6D,IAItDM,EACG,SAACxJ,EAAGiI,EAAIC,EAAIe,EAAaI,GAE5B,IADA,IAAII,EAAa,CAACzJ,EAAEsJ,QAASrB,EAAIC,GACxBrO,EAAI,EAAGA,EAAIwP,EAAYxP,IAAK4P,EAAWzL,KAAK,GAGrD,IADA,IAAI0L,EAAc,MAACxC,EAAWe,EAAIC,GACzBrO,EAAI,EAAGA,EAAIoP,EAAapP,IAAK6P,EAAY1L,KAAK,GAEvD,IAAK,IAAI2H,KAAK3F,EACF,YAAN2F,EACFgC,EAAU2B,QAAQK,MAAM/B,EAAM6B,IAE9BC,EAAY,GAAK1J,EAAE2F,GACnBgC,EAAUiC,SAASD,MAAM/B,EAAM8B,KAMvCnN,KAAKsN,IAAM,SAAC1J,EAAI2J,EAAQC,EAAOnD,EAAMC,EAAO/L,GAC1C,IAAIkP,GAAU,EAEdvB,EAAK,EACLC,EAAK,EAELd,EAAKqC,KAAO,IAAIC,YAAYtD,EAAKjJ,QACjCiK,EAAKuC,KAAO,IAAID,YAAYtD,EAAKjJ,QACjCiK,EAAKwC,KAAO,IAAIC,WAAWzD,EAAKjJ,QAChCiK,EAAK0C,OAAS,IAAID,WAAWzD,EAAKjJ,QAElC,IAAI4M,EAAQ,SAAAC,GACV,IAAI5K,EAAI0I,EAAQI,GAChB,IAAK9I,EAEH,IAAK,IAAIhG,KADT0O,EAAQI,GAAM9I,EAAI,GACJW,EAAGX,EAAEhG,GAAKuG,EAAGsK,eAE7B,IAAK,IAAI7Q,KAAKwO,EAAOlD,WACnB/E,EAAGuK,WAAWvK,EAAGwK,aAAc/K,EAAEhG,IACjCuG,EAAGyK,WAAWzK,EAAGwK,aAAcpK,EAAE3G,GAAIuG,EAAG0K,aAE1C1K,EAAGuK,WAAWvK,EAAG2K,qBAAsBlL,EAAE0J,SACzCnJ,EAAGyK,WAAWzK,EAAG2K,qBAAsBvK,EAAE+I,QAASnJ,EAAG0K,aACrDjL,EAAEyJ,WAAanB,EACftI,EAAEqJ,YAAchB,EAChBuC,EAAQlC,QAAQtK,KAAK4B,GACrB8I,KAIF,IAAK,IAAI3M,KADTwM,EAAW,GACG1B,EAAO,CACnB4B,EAAKC,EAEL,IAAI8B,EAAU,CACZvD,MAAOI,EAAkByC,EAAO/N,GAAIuL,EAAWC,GAC/Ce,QAAS,GACTyC,UAAWhP,GAGT6M,EAAS9N,EAAI0P,EAAQvD,OACzB2B,EAAOK,YAAcL,EAAOK,aAAe,EAC3CL,EAAOS,WAAaT,EAAOS,YAAc,EAEzC,IAAIrC,EAAOH,EAAM9K,GAEbiP,EAAKrC,EAAWC,EAAQ5B,GAC5B8B,EAAKF,EAAQoC,GAEb,IADA,IAAI1M,EAAMqJ,EAAUqB,cACXnP,EAAI,EAAGA,EAAImN,EAAKrJ,OAAQ9D,IAAK,CACpC,IAAImC,EAAI4M,EAAOvD,KAAOuD,EAAOvD,KAAK9E,EAAGyG,EAAKnN,IAAM,EAC5CoR,EAAMhD,EAAKjM,EAAI4M,EAAOK,YACtBiC,EAAMhD,EAAKlM,EAAI4M,EAAOS,WAEtB4B,GAAO3M,IACTiM,EAAMC,GACN1B,EAAKF,EAAQoC,GACbC,EAAMhD,EACNiD,EAAMhD,GAGJU,EAAOiB,IAAItJ,EAAGyG,EAAKnN,GAAIoO,EAAIC,KAAK8B,GAAU,GAE9C,IAAI7C,EAAMH,EAAKG,IAAItN,GACnB+N,EAAKqC,KAAK9C,GAAOe,EACjBN,EAAKuC,KAAKhD,GAAOc,EACjBL,EAAKwC,KAAKjD,GAAOuB,EACjBd,EAAK0C,OAAOnD,GAAOnL,EAEnBkM,EAAKgD,EACLjD,EAAKgD,EAEPV,EAAMC,GAMN,IAAIW,EAJJ,WACE5C,EAASvK,KAAKzB,MACdiM,EAAgBjM,KAAKwO,WAAaxO,MAEfd,KAAK+O,GAE1BT,EAAQA,EAAMS,EAASW,GAAcA,IAGvC,OAAOnB,GAITzN,KAAK6O,OAAS,SAASjL,EAAI8E,EAAW2B,EAAM9L,GAC1C,IAAIjB,EAAI,EACNwL,EAAO+C,EAAOlD,WAAWD,GAAWI,KACtCkD,EAASM,QAAQ,SAAS2B,GACxB,IAAI5B,EAAS9N,EAAI0P,EAAQvD,OACzB2B,EAAOK,YAAcL,EAAOK,aAAe,EAE3CuB,EAAQlC,QAAQO,QAAQ,SAAStI,KAC7B4H,GAAMA,EAAGxK,SAAW0H,EAAO9E,EAAE0I,eAC5Bd,EAAK,IAAI1E,aAAa4B,EAAO9E,EAAE0I,cAClC,IACE,IAAIhB,EAAK,EACTA,EAAK1H,EAAE0I,YACPhB,IACGW,EAAOvD,KAAOuD,EAAOvD,KAAK9E,EAAGqG,EAAK/M,IAAM,GAAK+O,EAAOK,YAEvDL,EAAOiB,IAAI1B,EAAIvB,EAAK/M,KAAMoO,GAC5B9H,EAAGuK,WAAWvK,EAAGwK,aAAcpK,EAAE0E,IACjC9E,EAAGyK,WAAWzK,EAAGwK,aAAcxC,EAAIhI,EAAGkL,mBAK5C9O,KAAK+O,SAAW,SAACnL,EAAI4G,EAAIwE,EAAKzQ,GAC5B,IAiBI0P,EAAUhC,EAAgBzB,EAAGE,OAE7B2B,EAAS9N,EAAI0P,EAAQvD,OACzB2B,EAAOK,YAAcL,EAAOK,aAAe,EAC3CL,EAAOS,WAAaT,EAAOS,YAAc,EAEzCX,EAAKD,EAAK,EAEV,IAAI+C,EAAShB,EAAQlC,QAAQV,EAAKwC,KAAKmB,IACnCvP,EAAI4M,EAAOvD,KAAOuD,EAAOvD,KAAKmG,EAAQzE,GAAM,EAC5C0E,EAAO7D,EAAK0C,OAAOiB,GACvB,GAAIvP,EAAIyP,EACNxK,QAAQyK,MACN,6DACE1P,EACA,MACAyP,EACA,sDANN,CAcA,IAHA3C,EAAKF,EAAQ6C,GACb7C,EAAOiB,IAAItJ,EAAGwG,EAAI,EAAG,GAEd/K,EAAIyP,EAAMzP,IAEfwN,EACEjJ,EACAvE,EAAI4M,EAAOK,YACXjN,EAAI4M,EAAOS,WACXT,EAAOK,YACPL,EAAOS,aAjDM,SAACzJ,EAAGqI,EAAIC,GACvB,IAAK,IAAItO,KAAKwO,EAAOlD,WACnB/E,EAAGuK,WAAWvK,EAAGwK,aAAc/K,EAAEhG,IACjCuG,EAAGwL,cACDxL,EAAGwK,aACHvC,EAAOlD,WAAWtL,GAAGyL,KAAO4C,EAAK1H,EAAE3G,GAAGgS,kBACtCrL,EAAE3G,IAGNuG,EAAGuK,WAAWvK,EAAG2K,qBAAsBlL,EAAE0J,SACzCnJ,EAAGwL,cACDxL,EAAG2K,qBACH5C,EAAK3H,EAAE+I,QAAQsC,kBACfrL,EAAE+I,SA0CNuC,CAAWL,EAFF5D,EAAKuC,KAAKoB,GACV3D,EAAKqC,KAAKsB,MAIrBhP,KAAKuP,KAAO,SAAAC,GACVA,EAAQ3D,OAASA,EACjBA,EAAO3M,OAEP0E,EAAG6L,iBAAiB5D,EAAOzD,SAASsH,WAAW,EAAOF,EAAQE,WAC9D9L,EAAG+L,UAAU9D,EAAOzD,SAASwH,KAAMJ,EAAQK,YAE3C7D,EAASM,QAAQ,SAAA2B,GACXA,EAAQvD,MAAMoF,UAChB7B,EAAQvD,MAAMoF,QAAQjB,QAAUZ,EAAQvD,MAAMoF,QAAQjB,SACtDjL,EAAGmM,cAAcnM,EAAGoM,UACpBpM,EAAGwB,YAAYxB,EAAGyB,WAAY4I,EAAQvD,MAAMoF,SAC5ClM,EAAGqM,UAAUpE,EAAOzD,SAAS0H,QAAS,IAGxCN,EAAQ9E,MAAQuD,EAAQvD,MACpBxL,EAAKsQ,IAETvB,EAAQlC,QAAQO,QAAQ,SAAAtI,GAGtB,IAAK,IAAI3G,KAFTuG,EAAGuK,WAAWvK,EAAG2K,qBAAsBvK,EAAE+I,SAE3BlB,EAAOlD,WAAY,CAC/B,IAAID,EAAYmD,EAAOlD,WAAWtL,GAClCuG,EAAGuK,WAAWvK,EAAGwK,aAAcpK,EAAE3G,IACjCuG,EAAGsM,oBACDxH,EAAU9F,MACV8F,EAAUI,KACVlF,EAAGuM,OACH,EACA,EACA,GAIJvM,EAAGwM,aAAaxM,EAAGyM,UAAWrM,EAAE8I,WAAYlJ,EAAG0M,eAAgB,OAInEzE,EAAO0E,iEAIKtB,EAAQvD,GACtB,IAAK,IAAIpO,EAAI,EAAGsE,EAAI,EAAI8J,EAAIvM,EAAImE,UAAUlC,OAAQ9D,EAAI6B,EAAG7B,IAAKsE,IAC5DqN,EAAOrN,GAAK0B,UAAUhG,mCAGX2R,EAAQvD,GACrB,IAAK,IAAIpO,EAAI,EAAGsE,EAAI,EAAI8J,EAAIvM,EAAImE,UAAUlC,OAAQ9D,EAAI6B,EAAG7B,IAAKsE,IAC5DqN,EAAOrN,GAAK0B,UAAUhG,kCAGZ2R,EAAQvD,GACpB,IAAK,IAAIpO,EAAI,EAAGsE,EAAI,EAAI8J,EAAIvM,EAAImE,UAAUlC,OAAQ9D,EAAI6B,EAAG7B,IAAK,CAC5D,IAAIS,EAAIuF,UAAUhG,GAClB2R,EAAOrN,KAAO7D,EAAES,EAChByQ,EAAOrN,KAAO7D,EAAEqF,EAChB6L,EAAOrN,KAAO7D,EAAEsF,EAChB4L,EAAOrN,KAAO7D,EAAEV,mCAIL4R,EAAQvD,EAAIC,GACzB,IAAK,IAAIrO,EAAI,EAAGsE,EAAI+J,EAAIxM,EAAImE,UAAUlC,OAAQ9D,EAAI6B,EAAG7B,IAAKsE,IACxDqN,EAAOrN,GAAK8J,EAAKpI,UAAUhG,gCAGnB2R,EAAQvD,EAAIC,GACtBP,EAAU2B,QAAQkC,EAAQvD,EAAIC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,yCAIjD,OAAO,mDCtTI6E,EAAA,SAASC,GACpB,IAAIzS,EAAG0S,EAAIC,EAAIrT,EAAG6B,EAAGyR,EAAKC,EAAKC,EAAKC,EAMpC,IAJAD,EAAMC,IAAQH,EAAMC,EAAMtO,KAC1BmO,EAAK,GAAIC,EAAK,GACdxR,EAAIsR,EAAOrP,OAEN9D,EAAI,EAAGA,EAAI6B,IAAK7B,GACjBU,EAAIyS,EAAOnT,IACLmD,EAAImQ,IAAKA,EAAM5S,EAAEyC,GACnBzC,EAAEwC,EAAIqQ,IAAKA,EAAM7S,EAAEwC,GACnBxC,EAAEyC,EAAIqQ,IAAKA,EAAM9S,EAAEyC,GACnBzC,EAAEwC,EAAIuQ,IAAKA,EAAM/S,EAAEwC,GACvBkQ,EAAGjP,KAAKzD,EAAEyC,GACVkQ,EAAGlP,KAAKzD,EAAEwC,GAGd,IAAIwQ,EAAKF,EAAMF,EACXK,EAAKF,EAAMF,EA0Bf,SAASK,EAAO/R,EAAGnB,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,GACpC,GAAInS,EAAEoS,KAAM,CACR,IAAIC,EAAKrS,EAAEsB,EACPgR,EAAKtS,EAAEqB,EAEX,GAAW,OAAPgR,EACA,GAAIA,IAAO/Q,GAAKgR,IAAOjR,EACnBkR,EAAYvS,EAAGnB,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,OAEnC,CACD,IAAIK,EAASxS,EAAEyS,MACfzS,EAAEsB,EAAItB,EAAEqB,EAAIrB,EAAEyS,MAAQ,KACtBF,EAAYvS,EAAGwS,EAAQH,EAAIC,EAAIN,EAAIC,EAAIC,EAAIC,GAC3CI,EAAYvS,EAAGnB,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,QAGxCnS,EAAEsB,EAAIA,EAAGtB,EAAEqB,EAAIA,EAAGrB,EAAEyS,MAAQ5T,OAGhC0T,EAAYvS,EAAGnB,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,GAI5C,SAASI,EAAYvS,EAAGnB,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,GACzC,IAAIO,EAAiB,IAAXV,EAAKE,GACXS,EAAiB,IAAXV,EAAKE,GACX5K,EAAQjG,GAAKoR,EACbE,EAAQvR,GAAKsR,EACbxU,EAAIyU,GAAS,EAAIrL,EAErBvH,EAAEoS,MAAO,EAGT7K,EAAQyK,EAAKU,EAAKR,EAAKQ,EACvBE,EAAQX,EAAKU,EAAKR,EAAKQ,EACvBZ,EAJA/R,EAAIA,EAAE6S,MAAM1U,KAAO6B,EAAE6S,MAAM1U,GArDpB,CACHiU,MAAM,EACNS,MAAO,GACPJ,MAAO,KACPnR,EAAG,KACHD,EAAG,OAoDGxC,EAAGyC,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,GA5DnCN,EAAKC,EAAKF,EAAMF,EAAMG,EAAKF,EAAMF,EAAMK,EAuGvC,IAAIlU,EApGO,CACHwU,MAAM,EACNS,MAAO,GACPJ,MAAO,KACPnR,EAAG,KACHD,EAAG,MAmGX,IAHAzD,EAAKkV,MAAQ,SAAAC,GAAC,OA5Fd,SAASD,EAAMC,EAAGC,EAAMhB,EAAIC,EAAIC,EAAIC,GAChC,IAAKY,EAAEC,EAAMhB,EAAIC,EAAIC,EAAIC,GAAK,CAC1B,IAAIc,EAAiB,IAAXjB,EAAKE,GACXgB,EAAiB,IAAXjB,EAAKE,GACXgB,EAAWH,EAAKH,MAEhBM,EAAS,IAAIL,EAAMC,EAAGI,EAAS,GAAInB,EAAIC,EAAIgB,EAAIC,GAC/CC,EAAS,IAAIL,EAAMC,EAAGI,EAAS,GAAIF,EAAIhB,EAAIC,EAAIgB,GAC/CC,EAAS,IAAIL,EAAMC,EAAGI,EAAS,GAAInB,EAAIkB,EAAID,EAAId,GAC/CgB,EAAS,IAAIL,EAAMC,EAAGI,EAAS,GAAIF,EAAIC,EAAIhB,EAAIC,IAmFzCW,CAAMC,EAAGnV,EAAM6T,EAAKC,EAAKC,EAAKC,IAChDhU,EAAKwV,KAAO,SAAC9R,EAAGD,GAAJ,OA1CZ,SAAkBzD,EAAM0D,EAAGD,EAAGgS,EAAIC,EAAIC,EAAIC,GACtC,IACIC,EADAC,EAAetQ,IAoCnB,OAjCA,SAAUgQ,EAAKJ,EAAMhB,EAAIC,EAAIC,EAAIC,GAC7B,KAAIH,EAAKuB,GAAMtB,EAAKuB,GAAMtB,EAAKmB,GAAMlB,EAAKmB,GAA1C,CAEA,IAAIb,EACJ,GAAIA,EAAQO,EAAKP,MAAO,CACpB,IAAIZ,EAAKvQ,EAAI0R,EAAK1R,EACdwQ,EAAKzQ,EAAI2R,EAAK3R,EACdsS,EAAY9B,EAAKA,EAAKC,EAAKA,EAE/B,GAAI6B,EAAYD,EAAc,CAC1B,IAAIE,EAAWjR,KAAKkR,KAAKH,EAAeC,GACxCN,EAAK/R,EAAIsS,EAAUN,EAAKjS,EAAIuS,EAC5BL,EAAKjS,EAAIsS,EAAUJ,EAAKnS,EAAIuS,EAC5BH,EAAehB,GAUvB,IANA,IAAIU,EAAWH,EAAKH,MAChBH,EAAiB,IAAXV,EAAKE,GACXS,EAAiB,IAAXV,EAAKE,GAINhU,GAFGkD,GAAKsR,IAEK,EAHVrR,GAAKoR,EAGgBjQ,EAAItE,EAAI,EAAGA,EAAIsE,IAAKtE,EACjD,GAAI6U,EAAOG,EAAa,EAAJhV,GAAQ,OAAY,EAAJA,GAChC,KAAK,EAAGiV,EAAKJ,EAAMhB,EAAIC,EAAIS,EAAIC,GAAK,MACpC,KAAK,EAAGS,EAAKJ,EAAMN,EAAIT,EAAIC,EAAIS,GAAK,MACpC,KAAK,EAAGS,EAAKJ,EAAMhB,EAAIW,EAAID,EAAIP,GAAK,MACpC,KAAK,EAAGiB,EAAKJ,EAAMN,EAAIC,EAAIT,EAAIC,KA5B3C,CA+BGvU,EAAMyV,EAAIC,EAAIC,EAAIC,GAEdC,EAKWK,CAASlW,EAAM0D,EAAGD,EAAGoQ,EAAKC,EAAKC,EAAKC,IAErDzT,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK4T,EAAOnU,EAAM0T,EAAOnT,GAAIoT,EAAGpT,GAAIqT,EAAGrT,GAAIsT,EAAKC,EAAKC,EAAKC,GAK7E,QAJEzT,EAEFoT,EAAKC,EAAKF,EAASzS,EAAI,KAEhBjB,GCjIImW,EAAA,SAASlB,EAAOmB,GAAqB,IAU1CC,EAV4BrT,EAAcuD,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAJ,GAGtC+P,EAAW,GACXC,GAAU,GACVC,EAAU,GACVC,EAAS,IACT1K,EAAO,CAAC,EAAE,GACV2K,EAAkBlR,IAGlBmR,EAAY,GACZC,EAAY,GACZC,EAAU,GAiChB,SAASC,EAAQ1B,GACb,OAAO,SAAS2B,EAAM3C,EAAI4C,EAAG1C,GACzB,GAAIyC,EAAKlC,QAAUO,EAAM,CACrB,IAAInB,EAAK8C,EAAKE,GAAK7B,EAAK1R,EACpBwQ,EAAK6C,EAAKG,GAAK9B,EAAK3R,EACpB0T,EAAK7C,EAAKF,EACVgD,EAAKnD,EAAKA,EAAKC,EAAKA,EAExB,GAAIiD,EAAKA,EAAKV,EAASW,EAAI,CACvB,GAAIA,EAAKV,EAAiB,CACtB,IAAIrK,EAAI0K,EAAKR,OAASa,EACtBhC,EAAKiC,IAAMpD,EAAK5H,EAChB+I,EAAKkC,IAAMpD,EAAK7H,EAEpB,OAAO,EAGX,GAAI0K,EAAKlC,OAASuC,GAAMA,EAAKV,EAAiB,CAC1C,IAAIrK,EAAI0K,EAAKQ,YAAcH,EAC3BhC,EAAKiC,IAAMpD,EAAK5H,EAChB+I,EAAKkC,IAAMpD,EAAK7H,GAGxB,OAAQ0K,EAAKR,QAIrB,SAASiB,IACL,IAAKnB,GAAS,KAAO,IAEjB,OADAA,EAAQ,GACD,EAOX,IAJA,IAAIoB,EAAGrW,EAAGsB,EAAGb,EAAGjB,EAAGyL,EAAG3I,EAAGD,EACrBrB,EAAI6S,EAAM5Q,OACVtD,EAAIqV,EAAM/R,OAEL9D,EAAI,EAAGA,EAAIQ,EAAGR,IAEnBmC,GADAtB,EAAIgV,EAAM7V,IACJ8G,QAIFzG,GAFJ8C,GADA7B,EAAIT,EAAEsW,QACAhU,EAAIhB,EAAEgB,GAECA,GADbD,EAAI5B,EAAE4B,EAAIf,EAAEe,GACSA,KAEjBC,GADA9C,EAAIyV,EAAQO,EAAUrW,KAAOK,EAAImE,KAAKkR,KAAKrV,IAAM+V,EAAUpW,IAAMK,EAEjE6C,GAAK7C,EACLiB,EAAE6B,GAAKA,GAAK2I,EAAI3J,EAAEiV,QAAU9V,EAAE8V,OAASjV,EAAEiV,SACzC9V,EAAE4B,GAAKA,EAAI4I,EACX3J,EAAEgB,GAAKA,GAAK2I,EAAI,EAAIA,GACpB3J,EAAEe,GAAKA,EAAI4I,GAInB,GAAIA,EAAIgK,EAAQG,EAAS,CACrB9S,EAAIqI,EAAK,GAAK,EACdtI,EAAIsI,EAAK,GAAK,EAEd,IAAK,IAAIxL,EAAI,EAAGA,EAAI6B,EAAG7B,KACnBa,EAAI6T,EAAM1U,IACRmD,IAAMA,EAAItC,EAAEsC,GAAK2I,EACnBjL,EAAEqC,IAAMA,EAAIrC,EAAEqC,GAAK4I,EAI3B,GAAIkK,EAAQ,EA/FhB,SAASqB,EAAWb,EAAMV,EAAOQ,GAC7B,IAAII,EAAK,EAAGC,EAAK,EAEjB,GADAH,EAAKR,OAAS,GACTQ,EAAKvC,KAIN,IAHA,IACIxT,EADAiU,EAAQ8B,EAAK9B,MACV7S,EAAI6S,EAAM5Q,OAER9D,EAAI,EAAGA,EAAI6B,EAAG7B,IAEV,OADTS,EAAIiU,EAAM1U,MAEVqX,EAAW5W,EAAGqV,EAAOQ,GACrBE,EAAKR,QAAUvV,EAAEuV,OACjBU,GAAMjW,EAAEuV,OAASvV,EAAEiW,GACnBC,GAAMlW,EAAEuV,OAASvV,EAAEkW,IAG3B,GAAIH,EAAKlC,MAAO,CACPkC,EAAKvC,OACNuC,EAAKlC,MAAMnR,GAAKqB,KAAK8S,SAAW,GAChCd,EAAKlC,MAAMpR,GAAKsB,KAAK8S,SAAW,IAEpC,IAAIxL,EAAIgK,EAAQQ,EAAQE,EAAKlC,MAAMhP,OACnCkR,EAAKR,QAAUQ,EAAKQ,YAAclL,EAClC4K,GAAM5K,EAAI0K,EAAKlC,MAAMnR,EACrBwT,GAAM7K,EAAI0K,EAAKlC,MAAMpR,EAEzBsT,EAAKE,GAAKA,EAAKF,EAAKR,OACpBQ,EAAKG,GAAKA,EAAKH,EAAKR,OAqEhBqB,CAAWH,EAAIK,EAAkB7C,GAAQoB,EAAOQ,GAEhD,IAAK,IAAItW,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIa,EAAI6T,EAAM1U,IACba,EAAE2W,OAASN,EAAEvC,MAAM4B,EAAQ1V,KAKpC,IADA,IAAM4W,EAAM,SAACnI,EAAI7K,GAAL,OAAaD,KAAK8S,UAAY7S,EAAI6K,GAAOA,GAC5CtP,EAAI,EAAGA,EAAI6B,EAAG7B,KACnBa,EAAI6T,EAAM1U,IACJwX,OAAS3W,EAAE6W,QACb7W,EAAEsC,EAAItC,EAAEiW,GACRjW,EAAEqC,EAAIrC,EAAEkW,KAGRlW,EAAEsC,IAAMtC,EAAEiW,IAAMjW,EAAEiW,GAAKjW,EAAEsC,IAAM4S,EAC/BlV,EAAEqC,IAAMrC,EAAEkW,IAAMlW,EAAEkW,GAAKlW,EAAEqC,IAAM6S,EAE5BtT,QAA4B4K,IAAjB5K,EAAQkV,QACf9W,EAAEsC,EAAIV,EAAQkV,MAAQ9W,EAAEsC,EAAIV,EAAQmV,QACnC/W,EAAEsC,EAAIsU,EAAIhV,EAAQkV,KAAMlV,EAAQmV,QAEjC/W,EAAEqC,EAAIT,EAAQoV,MAAQhX,EAAEqC,EAAIT,EAAQqV,QACnCjX,EAAEqC,EAAIuU,EAAIhV,EAAQoV,KAAMpV,EAAQqV,SAOpDpV,KAAKoN,MAAQ,WAKT,IAJA,IAAIjO,EAAI6S,EAAM5Q,OACVpD,EAAI8D,KAAKkR,KAAK7T,GACdM,EAAI,GAAMzB,EAELV,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIa,EAAI6T,EAAM1U,GACda,EAAEuW,OAAS,EACXvW,EAAEsC,OAAYkK,IAARxM,EAAEsC,EAAkBtC,EAAEsC,EAAIhB,EAAKnC,EAAIU,EAAKA,EAC9CG,EAAEqC,OAAYmK,IAARxM,EAAEqC,EAAkBrC,EAAEqC,EAAIf,EAAIqC,KAAK0K,MAAMlP,EAAIU,GAAKA,EACxDG,EAAEiW,GAAKjW,EAAEsC,EACTtC,EAAEkW,GAAKlW,EAAEqC,EACToT,EAAQtW,GAAKgW,EAGjB,IAAK,IAAIhW,EAAI,EAAGA,EAAI6V,EAAM/R,OAAQ9D,IAAK,CACnC,IAAIa,EAAIgV,EAAM7V,GACda,EAAEiG,OAAOsQ,SACTvW,EAAEsW,OAAOC,SACThB,EAAUpW,GAjKG,GAkKbqW,EAAUrW,GAjKG,EAqKjB,IADA8V,EAAQ,IACAmB,MAER,OAAO,2LC1Kb,SAAAc,EAAYrD,gGAAMsD,CAAAtV,KAAAqV,GAChBrV,KAAKuV,OAASvD,yDAId,IAAK,IAAI1U,EAAI,EAAG6B,EAAIa,KAAKuV,OAAOnU,OAAQ9D,EAAI6B,EAAG7B,IAAK,CAClD,IAAIa,EAAI6B,KAAKuV,OAAOjY,GACpBa,EAAEsC,EAAIqB,KAAK8S,SACXzW,EAAEqC,EAAIsB,KAAK8S,oYCTV,SAASY,EAAeC,EAAMC,GACjC,OAAOC,EAAIpK,MAAMkK,GAAMG,QAAQC,IAAI,SAAAvY,GAAC,OAAIiO,MAAMmK,GAASI,KAAK,KAGzD,SAASC,EAAQ/D,EAAOmB,GAE7B,IAAI4C,EAAUxK,MAAMyG,EAAM5Q,QAAQ0U,KAAK,GACvC3C,EAAM7G,QAAQ,SAAStI,GACnB+R,EAAQ/R,EAAEI,OAAOxB,QAAU,EAC3BmT,EAAQ/R,EAAEyQ,OAAO7R,QAAU,IAG/B,IAAIoT,EAAgBD,EAAQF,IAAI,SAASrL,EAAIlN,GACzC,MAAO,CAAEsF,MAAOtF,EAAGqB,MAAO6L,KAE9BwL,EAAcC,KAAK,SAAS5Y,EAAGgG,GAC3B,QAAShG,EAAEsB,MAAQ0E,EAAE1E,UAAYtB,EAAEsB,QAAU0E,EAAE1E,OAAS,IAE5D,IAAIuX,EAAkBF,EAAcH,IAAI,SAASrL,GAC7C,OAAOuL,EAAQvL,EAAG5H,SAEtB,MAAO,CAAEoP,MAAOgE,EACPD,QAASG,GAGb,SAASC,EAAS9M,GACrB,IAAI+M,EAAQ,EAaZ,OAZI/M,EAAIiJ,UACJjJ,EAAIiJ,SAAShG,QAAQ,SAAUtO,GAClC,GAAuB,GAAnBA,EAAEqY,cACL,MAAM,IAAIC,MAAM,gDAEjBtY,EAAEqY,eAAgB,EACX,IAAIE,EAAWJ,EAASnY,GACpBuY,EAAWH,IACXA,EAAQG,KAIb,EAAIH,EAGR,SAASI,EAAUrX,GAExB,IADAA,EAAI2C,KAAK2U,IAAItX,KACL,EACJ,MAAO,CACLuX,MAAO,GACPnC,KAAM,GAIZ,MAAO,CACHmC,MAFQ,IAGRnC,KAAM,IAAapV,EAAE,2LCxCzB,SAAAkW,EAAYrD,EAAOmB,GAA4B,IAArBwD,EAAqBrT,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAJ,gGAAIsT,CAAA5W,KAAAqV,GAC7CrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAK8W,YAAc,EAAEhV,KAAKiV,GAAG/E,EAAM5Q,OACE,MAAjCuV,EAAeK,eACtBhX,KAAKiX,gBAAkB,EAEvBjX,KAAKiX,gBAAkBN,EAAeK,sEAIjC,IADA,IAAIE,EAAKnB,EAAQ/V,KAAKuV,OAAQvV,KAAK6W,QAC1BvZ,EAAE,EAAGA,EAAE0C,KAAKuV,OAAOnU,SAAU9D,EAClC0C,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOnC,EAAI,IAA2D,KAArD,EAAEqB,KAAKqV,IAAInX,KAAKiX,gBAAgB3Z,EAAE0C,KAAK8W,cAChF9W,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOpC,EAAI,IAA2D,KAArD,EAAEsB,KAAKsV,IAAIpX,KAAKiX,gBAAgB3Z,EAAE0C,KAAK8W,cAChF9W,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAO8R,OAASwC,EAAGnB,QAAQzY,+NCxB3D,SAAA+X,EAAYrD,EAAOmB,gGAAOkE,CAAArX,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,kEAGCpW,GAAsC,IAAhCua,EAAgChU,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAX,EAAGiU,EAAQjU,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAF,EACjDvG,EAAKya,UAAW,EAChBza,EAAKsZ,eAAgB,EAGrB,IADA,IAAIoB,EAAgB,EACXna,EAAE,EAAGA,EAAIP,EAAKuV,SAASlR,OAAQ9D,IAAI,CACxC,IAAIoa,EAAQ3a,EAAKuV,SAAShV,GACJ,GAAlBoa,EAAMF,WACNC,GAAiBzX,KAAK2X,iBAAiBD,EAAOD,EAAcH,EAAsBC,EAAM,IAShG,OANqB,GAAjBxa,EAAKuV,UACLmF,IAGJ1a,EAAKyD,EAAIR,KAAK4X,OAAON,GAAsBG,EAAc,GAAG,GAAKzX,KAAK6X,OACtE9a,EAAK0D,GAAK8W,EAAM,GAAGvX,KAAK8X,MAAQ9X,KAAK+X,OAC9BN,kCASP,IAAIzF,EAAQhS,KAAKuV,OAEjBvD,EAAM1F,QAAQ,SAASnN,EAAE7B,GACrB6B,EAAE6Y,QAAU,GACZ7Y,EAAEmT,SAAW,GACbnT,EAAEqY,UAAW,IAEjBxX,KAAK6W,OAAOvK,QAAQ,SAAStI,EAAE1G,GAC3B0G,EAAEI,OAAOkO,SAAS7Q,KAAKuC,EAAEyQ,QACzBzQ,EAAEyQ,OAAOuD,QAAQvW,KAAKuC,EAAEI,UAG5B,IAAK,IAAI9G,EAAI,EAAGA,EAAI0U,EAAM5Q,OAAQ9D,IAC9B,GAA+B,GAA3B0U,EAAM1U,GAAG0a,QAAQ5W,OAAY,CAC7B,IAAIrE,EAAOiV,EAAM1U,GACjB,MAGR,IAEIkB,EAAIgY,EAFML,EAASpZ,IAGvBiD,KAAK+X,OAASvZ,EAAEkY,MAChB1W,KAAK8X,MAAQtZ,EAAE+V,KAIf,IAAI0D,EAAQ,EACZjG,EAAM1F,QAAQ,SAAS6F,GACS,GAAxBA,EAAKG,SAASlR,QACd6W,MAGRzZ,EAAIgY,EAAUyB,GAEdjY,KAAK6X,OAASrZ,EAAEkY,MAChB1W,KAAK4X,MAAQpZ,EAAE+V,KAGfvU,KAAK2X,iBAAiB5a,+NCrE1B,SAAAsY,EAAYrD,EAAOmB,gGAAO+E,CAAAlY,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,6DAGJpW,GAAsC,IAAhCua,EAAgChU,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAX,EAAGiU,EAAQjU,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,GAAF,EAE9CvG,EAAKob,SAAU,EACfpb,EAAKsZ,eAAgB,EACrBtZ,EAAK0D,EAAIT,KAAK+X,OAAO/X,KAAK8X,OAAOP,EAAM,GACvCxa,EAAKyD,EAAI,GAAGR,KAAK6X,OAAO7X,KAAK4X,MAAON,GAGpC,IADA,IAAIG,EAAgB,EACXna,EAAE,EAAGA,EAAIP,EAAKuV,SAASlR,OAAQ9D,IAAI,CACzC,IAAIoa,EAAQ3a,EAAKuV,SAAShV,GACJ,GAAlBoa,EAAMF,WACRC,GAAiBzX,KAAKoY,YAAYV,EAAOD,EAAcH,EAAsBC,EAAM,IAMxF,OAH2B,GAAxBxa,EAAKuV,SAASlR,QACbqW,IAEGA,kCAGL,IAAIzF,EAAQhS,KAAKuV,OAKjBvD,EAAM1F,QAAQ,SAASnN,EAAE7B,GACrB6B,EAAE6Y,QAAU,GACZ7Y,EAAEmT,SAAW,GACbnT,EAAEqY,UAAW,IAEjBxX,KAAK6W,OAAOvK,QAAQ,SAAStI,EAAE1G,GAC3B0G,EAAEI,OAAOkO,SAAS7Q,KAAKuC,EAAEyQ,QACzBzQ,EAAEyQ,OAAOuD,QAAQvW,KAAKuC,EAAEI,UAG5B,IAAK,IAAI9G,EAAI,EAAGA,EAAI0U,EAAM5Q,OAAQ9D,IAC9B,GAA+B,GAA3B0U,EAAM1U,GAAG0a,QAAQ5W,OAAY,CAC7B,IAAIrE,EAAOiV,EAAM1U,GACjB,MAGR,IAEIkB,EAAIgY,EAFML,EAASpZ,IAGvBiD,KAAK+X,OAASvZ,EAAEkY,MAChB1W,KAAK8X,MAAQtZ,EAAE+V,KAIf,IAAI0D,EAAQ,EACZjG,EAAM1F,QAAQ,SAAS6F,GACS,GAAxBA,EAAKG,SAASlR,QACd6W,MAIRzZ,EAAIgY,EAAUyB,GACdjY,KAAK6X,OAAUrZ,EAAEkY,MACjB1W,KAAK4X,MAAQpZ,EAAE+V,KASfvU,KAAKoY,YAAYrb,+NCzErB,SAAAsY,EAAYrD,EAAOmB,gGAAOkF,CAAArY,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAK6X,OAAS,IACd7X,KAAK+X,OAAS,8DAGL/F,EAAOuF,GACd,GAAIvF,EAAM5Q,OAAS,EAEf,IADA,IAAMwW,GAAS,EAAI,EAAE5X,KAAK6X,SAAS7F,EAAM5Q,OAAO,GACvC9D,EAAE,EAAGA,EAAE0U,EAAM5Q,SAAU9D,EAC5B0U,EAAM1U,GAAG6a,SAAU,EACnBnG,EAAM1U,GAAGia,MAAQA,EACjBvF,EAAM1U,GAAGkD,EAAIR,KAAK6X,OAASva,EAAEsa,OAIjC5F,EAAM,GAAGmG,SAAU,EACnBnG,EAAM,GAAGuF,MAAQA,EACjBvF,EAAM,GAAGxR,EAAI,GAGjB,IADA,IAAI8X,EAAa,GACRhb,EAAE,EAAGA,EAAE0U,EAAM5Q,OAAQ9D,IAE1B,IADA,IAAIib,EAAYvG,EAAM1U,GAAG0a,QAAQ/W,OAAO+Q,EAAM1U,GAAGgV,UACxC1Q,EAAE,EAAGA,EAAI2W,EAAUnX,OAAQQ,IACJ,GAAxB2W,EAAU3W,GAAGuW,SAAqBG,EAAWE,SAASD,EAAU3W,KAChE0W,EAAW7W,KAAK8W,EAAU3W,IAItC,OAAyB,GAArB0W,EAAWlX,OACJmW,EAGAvX,KAAKyY,WAAWH,EAAYf,EAAM,mCAS7C,IAAIvF,EAAQhS,KAAKuV,OACjBvD,EAAM1F,QAAQ,SAASnN,EAAE7B,GACrB6B,EAAE6Y,QAAU,GACZ7Y,EAAEmT,SAAW,GACbnT,EAAEgZ,SAAU,IAEhBnY,KAAK6W,OAAOvK,QAAQ,SAAStI,EAAE1G,GAC3B0G,EAAEI,OAAOkO,SAAS7Q,KAAKuC,EAAEyQ,QACzBzQ,EAAEyQ,OAAOuD,QAAQvW,KAAKuC,EAAEI,UAO5B,IADA,IAAIsU,EAAQ,GACHpb,EAAI,EAAGA,EAAI0U,EAAM5Q,OAAQ9D,IACP,GAAnB0U,EAAM1U,GAAGqb,QACTD,EAAMjX,KAAKuQ,EAAM1U,IAGzB,GAAoB,GAAhBob,EAAMtX,OACN,IAAK,IAAI9D,EAAI,EAAGA,EAAI0U,EAAM5Q,OAAQ9D,IACC,GAA3B0U,EAAM1U,GAAG0a,QAAQ5W,QACjBsX,EAAMjX,KAAKuQ,EAAM1U,IAI7B,GAAoB,GAAhBob,EAAMtX,OAAY,CAElB,IAAIwX,EAAgB,EACpB5G,EAAM1F,QAAQ,SAAS6F,GACfA,EAAKG,SAASlR,OAASwX,IACvBA,EAAgBzG,EAAKG,SAASlR,UAItC4Q,EAAM1F,QAAQ,SAAS6F,GACfA,EAAKG,SAASlR,QAAUwX,GACxBF,EAAMjX,KAAK0Q,KAcvB,IAJA,IAAMiE,EAAQpW,KAAKyY,WAAWC,EAAO,GAE/BZ,GAAS,EAAE,EAAE9X,KAAK+X,SAAS3B,EAAM,GAE9B9Y,EAAE,EAAGA,EAAE0C,KAAKuV,OAAOnU,SAAU9D,EAClC0C,KAAKuV,OAAOjY,GAAGmD,EAAIT,KAAK+X,OAASD,GAAO9X,KAAKuV,OAAOjY,GAAGia,MAAQ,wDChF1D,IAAAsB,EAlBf,SAAYC,GACZ,IAAOC,IAAOD,GACd,UAAAE,UAAA,0BAGA,OAAAF,EAAA1X,OACA,UAAA4X,UAAA,2BAKA,IAFA,IAAAjX,EAAA+W,EAAA,GAEAxb,EAAA,EAAiBA,EAAAwb,EAAA1X,OAAkB9D,IACnCwb,EAAAxb,GAAAyE,MAAA+W,EAAAxb,IAGA,OAAAyE,GCGe,IAAAkX,EAlBf,SAAYH,GACZ,IAAOC,IAAOD,GACd,UAAAE,UAAA,0BAGA,OAAAF,EAAA1X,OACA,UAAA4X,UAAA,2BAKA,IAFA,IAAApM,EAAAkM,EAAA,GAEAxb,EAAA,EAAiBA,EAAAwb,EAAA1X,OAAkB9D,IACnCwb,EAAAxb,GAAAsP,MAAAkM,EAAAxb,IAGA,OAAAsP,GC2Be,IAAAsM,EA9Cf,SAAAJ,GACA,IAQAK,EARApZ,EAAAuD,UAAAlC,OAAA,QAAAuJ,IAAArH,UAAA,GAAAA,UAAA,MAEA,IAAOyV,IAAOD,GACd,UAAAE,UAAA,0BACG,OAAAF,EAAA1X,OACH,UAAA4X,UAAA,2BAKA,QAAArO,IAAA5K,EAAAoZ,OAAA,CACA,IAASJ,IAAOhZ,EAAAoZ,QAChB,UAAAH,UAAA,+CAGAG,EAAApZ,EAAAoZ,YAEAA,EAAA,IAAA5N,MAAAuN,EAAA1X,QAGA,IAAAgY,EAAmBH,EAAGH,GACtBO,EAAmBR,EAAGC,GAEtB,GAAAM,IAAAC,EACA,UAAAC,WAAA,+EAGA,IAAAC,EAAAxZ,EAAA6M,IACA4M,OAAA,IAAAD,EAAAxZ,EAAA0Z,WAAAL,EAAA,EAAAG,EACAG,EAAA3Z,EAAAgC,IACA4X,OAAA,IAAAD,EAAA3Z,EAAA0Z,WAAAJ,EAAA,EAAAK,EAEA,GAAAF,GAAAG,EACA,UAAAL,WAAA,8CAKA,IAFA,IAAAM,GAAAD,EAAAH,IAAAH,EAAAD,GAEA9b,EAAA,EAAiBA,EAAAwb,EAAA1X,OAAkB9D,IACnC6b,EAAA7b,IAAAwb,EAAAxb,GAAA8b,GAAAQ,EAAAJ,EAGA,OAAAL,GCxCe,MAAMU,EACrBC,YAAAC,GAGA,IAKAzc,EAAAsE,EAAAwH,EAAA5J,EAAAC,EAAAb,EAAA6E,EACAuW,EAAAC,EANAC,GAFAH,EAAaI,GAAeC,YAAAL,IAE5BM,QACA5E,EAAAyE,EAAAzE,KACAC,EAAAwE,EAAAxE,QACA4E,EAAA,IAAA/O,MAAAkK,GACA8E,EAAA,EAIA,IAAAjd,EAAA,EAAeA,EAAAmY,EAAUnY,IACzBgd,EAAAhd,KAKA,IAFA0c,EAAA,IAAAzO,MAAAkK,GAEA7T,EAAA,EAAeA,EAAA8T,EAAa9T,IAAA,CAC5B,IAAAtE,EAAA,EAAiBA,EAAAmY,EAAUnY,IAC3B0c,EAAA1c,GAAA4c,EAAA3b,IAAAjB,EAAAsE,GAGA,IAAAtE,EAAA,EAAiBA,EAAAmY,EAAUnY,IAAA,CAG3B,IAFA2c,EAAAnY,KAAA8K,IAAAtP,EAAAsE,GACAnC,EAAA,EACA2J,EAAA,EAAmBA,EAAA6Q,EAAU7Q,IAC7B3J,GAAAya,EAAA3b,IAAAjB,EAAA8L,GAAA4Q,EAAA5Q,GAEA4Q,EAAA1c,IAAAmC,EACAya,EAAA5M,IAAAhQ,EAAAsE,EAAAoY,EAAA1c,IAIA,IADAkC,EAAAoC,EACAtE,EAAAsE,EAAA,EAAqBtE,EAAAmY,EAAUnY,IAC/BwE,KAAA2U,IAAAuD,EAAA1c,IAAAwE,KAAA2U,IAAAuD,EAAAxa,MACAA,EAAAlC,GAIA,GAAAkC,IAAAoC,EAAA,CACA,IAAAwH,EAAA,EAAmBA,EAAAsM,EAAatM,IAChCxK,EAAAsb,EAAA3b,IAAAiB,EAAA4J,GACA8Q,EAAA5M,IAAA9N,EAAA4J,EAAA8Q,EAAA3b,IAAAqD,EAAAwH,IACA8Q,EAAA5M,IAAA1L,EAAAwH,EAAAxK,GAGA6E,EAAA6W,EAAA9a,GACA8a,EAAA9a,GAAA8a,EAAA1Y,GACA0Y,EAAA1Y,GAAA6B,EAEA8W,KAGA,GAAA3Y,EAAA6T,GAAA,IAAAyE,EAAA3b,IAAAqD,KACA,IAAAtE,EAAAsE,EAAA,EAAuBtE,EAAAmY,EAAUnY,IACjC4c,EAAA5M,IAAAhQ,EAAAsE,EAAAsY,EAAA3b,IAAAjB,EAAAsE,GAAAsY,EAAA3b,IAAAqD,MAKA5B,KAAAwa,GAAAN,EACAla,KAAAsa,cACAta,KAAAua,YAOAT,aAGA,IAFA,IAAAzP,EAAArK,KAAAwa,GACAC,EAAApQ,EAAAqL,QACA9T,EAAA,EAAmBA,EAAA6Y,EAAS7Y,IAC5B,OAAAyI,EAAAzI,MACA,SAGA,SAQAkY,MAAAnb,GACAA,EAAY+b,GAAMN,YAAAzb,GAElB,IAAAub,EAAAla,KAAAwa,GAGA,GAFAN,EAAAzE,OAEA9W,EAAA8W,KACA,UAAAa,MAAA,6BAEA,GAAAtW,KAAA2a,aACA,UAAArE,MAAA,yBAGA,IAGAhZ,EAAAsE,EAAAwH,EAHAwR,EAAAjc,EAAA+W,QACAmF,EAAAlc,EAAAmc,aAAA9a,KAAAsa,YAAA,EAAAM,EAAA,GACAlF,EAAAwE,EAAAxE,QAGA,IAAAtM,EAAA,EAAeA,EAAAsM,EAAatM,IAC5B,IAAA9L,EAAA8L,EAAA,EAAqB9L,EAAAoY,EAAapY,IAClC,IAAAsE,EAAA,EAAmBA,EAAAgZ,EAAWhZ,IAC9BiZ,EAAAvd,GAAAsE,IAAAiZ,EAAAzR,GAAAxH,GAAAsY,EAAA5c,GAAA8L,GAIA,IAAAA,EAAAsM,EAAA,EAAyBtM,GAAA,EAAQA,IAAA,CACjC,IAAAxH,EAAA,EAAiBA,EAAAgZ,EAAWhZ,IAC5BiZ,EAAAzR,GAAAxH,IAAAsY,EAAA9Q,MAEA,IAAA9L,EAAA,EAAiBA,EAAA8L,EAAO9L,IACxB,IAAAsE,EAAA,EAAmBA,EAAAgZ,EAAWhZ,IAC9BiZ,EAAAvd,GAAAsE,IAAAiZ,EAAAzR,GAAAxH,GAAAsY,EAAA5c,GAAA8L,GAIA,OAAAyR,EAOAE,kBACA,IAAA1Q,EAAArK,KAAAwa,GACA,IAAAnQ,EAAA2Q,WACA,UAAA1E,MAAA,yBAIA,IAFA,IAAAyE,EAAA/a,KAAAua,UACAE,EAAApQ,EAAAqL,QACA9T,EAAA,EAAmBA,EAAA6Y,EAAS7Y,IAC5BmZ,GAAA1Q,EAAAzI,MAEA,OAAAmZ,EAOAE,4BAKA,IAJA,IAAA5Q,EAAArK,KAAAwa,GACA/E,EAAApL,EAAAoL,KACAC,EAAArL,EAAAqL,QACAmF,EAAA,IAAgBH,GAAMjF,EAAAC,GACtBpY,EAAA,EAAmBA,EAAAmY,EAAUnY,IAC7B,QAAAsE,EAAA,EAAqBA,EAAA8T,EAAa9T,IAElCiZ,EAAAvd,GAAAsE,GADAtE,EAAAsE,EACAyI,EAAA/M,GAAAsE,GACStE,IAAAsE,EACT,EAEA,EAIA,OAAAiZ,EAOAK,4BAKA,IAJA,IAAA7Q,EAAArK,KAAAwa,GACA/E,EAAApL,EAAAoL,KACAC,EAAArL,EAAAqL,QACAmF,EAAA,IAAgBH,GAAMjF,EAAAC,GACtBpY,EAAA,EAAmBA,EAAAmY,EAAUnY,IAC7B,QAAAsE,EAAA,EAAqBA,EAAA8T,EAAa9T,IAElCiZ,EAAAvd,GAAAsE,GADAtE,GAAAsE,EACAyI,EAAA/M,GAAAsE,GAEA,EAIA,OAAAiZ,EAOAM,6BACA,OAAAnb,KAAAsa,YAAAc,SCrMO,SAAAC,EAAAhe,EAAAgG,GACP,IAAA7E,EAAA,EACA,OAAAsD,KAAA2U,IAAApZ,GAAAyE,KAAA2U,IAAApT,IACA7E,EAAA6E,EAAAhG,EACAyE,KAAA2U,IAAApZ,GAAAyE,KAAAkR,KAAA,EAAAxU,MAEA,IAAA6E,GACA7E,EAAAnB,EAAAgG,EACAvB,KAAA2U,IAAApT,GAAAvB,KAAAkR,KAAA,EAAAxU,MAEA,EAGO,SAAA8c,EAAA7F,EAAAC,EAAA/W,GAEP,IADA,IAAA4c,EAAA,IAAAhQ,MAAAkK,GACAnY,EAAA,EAAiBA,EAAAmY,EAAUnY,IAAA,CAC3Bie,EAAAje,GAAA,IAAAiO,MAAAmK,GACA,QAAA9T,EAAA,EAAmBA,EAAA8T,EAAa9T,IAChC2Z,EAAAje,GAAAsE,GAAAjD,EAGA,OAAA4c,ECRe,MAAMC,EACrB1B,YAAAnb,EAAAoB,EAAA,IAGA,IAAAjC,GAFAa,EAAYwb,GAAeC,YAAAzb,IAE3B8W,KACAtW,EAAAR,EAAA+W,QAEA,MAAA+F,2BACAA,GAAA,EAAAC,4BACAA,GAAA,EAAAC,cACAA,GAAA,GACK5b,EAEL,IAIA1C,EAJAue,EAAAC,QAAAJ,GACAK,EAAAD,QAAAH,GAEAK,GAAA,EAEA,GAAAje,EAAAqB,EACA,GAAAwc,EAMO,CAEP7d,GADAT,EAAAsB,EAAAqd,aACAvG,KACAtW,EAAA9B,EAAAqY,QACAqG,GAAA,EACA,IAAAE,EAAAL,EACAA,EAAAE,EACAA,EAAAG,OAZA5e,EAAAsB,EAAA0b,QAEA3V,QAAAwX,KACA,+FAYA7e,EAAAsB,EAAA0b,QAGA,IAAA8B,EAAAra,KAAA8K,IAAA9O,EAAAqB,GACAid,EAAAta,KAAA8K,IAAA9O,EAAA,EAAAqB,GACAM,EAAA,IAAA8L,MAAA6Q,GACAC,EAAYf,EAAgBxd,EAAAqe,EAAA,GAC5BG,EAAYhB,EAAgBnc,IAAA,GAE5B6E,EAAA,IAAAuH,MAAApM,GACAod,EAAA,IAAAhR,MAAAzN,GAEA0e,EAAA,IAAAjR,MAAA6Q,GACA,QAAA9e,EAAA,EAAmBA,EAAA8e,EAAQ9e,IAAAkf,EAAAlf,KAE3B,IAAAmf,EAAA3a,KAAA8K,IAAA9O,EAAA,EAAAqB,GACAud,EAAA5a,KAAAC,IAAA,EAAAD,KAAA8K,IAAAzN,EAAA,EAAArB,IACA6e,EAAA7a,KAAAC,IAAA0a,EAAAC,GAEA,QAAAtT,EAAA,EAAmBA,EAAAuT,EAASvT,IAAA,CAC5B,GAAAA,EAAAqT,EAAA,CACAhd,EAAA2J,GAAA,EACA,QAAA9L,EAAA8L,EAAuB9L,EAAAQ,EAAOR,IAC9BmC,EAAA2J,GAAiBiS,EAAU5b,EAAA2J,GAAA/L,EAAAC,GAAA8L,IAE3B,OAAA3J,EAAA2J,GAAA,CACA/L,EAAA+L,MAAA,IACA3J,EAAA2J,IAAA3J,EAAA2J,IAEA,QAAA9L,EAAA8L,EAAyB9L,EAAAQ,EAAOR,IAChCD,EAAAC,GAAA8L,IAAA3J,EAAA2J,GAEA/L,EAAA+L,OAAA,EAEA3J,EAAA2J,IAAA3J,EAAA2J,GAGA,QAAAxH,EAAAwH,EAAA,EAAyBxH,EAAAzC,EAAOyC,IAAA,CAChC,GAAAwH,EAAAqT,GAAA,IAAAhd,EAAA2J,GAAA,CACA,IAAAxK,EAAA,EACA,QAAAtB,EAAA8L,EAAyB9L,EAAAQ,EAAOR,IAChCsB,GAAAvB,EAAAC,GAAA8L,GAAA/L,EAAAC,GAAAsE,GAEAhD,KAAAvB,EAAA+L,MACA,QAAA9L,EAAA8L,EAAyB9L,EAAAQ,EAAOR,IAChCD,EAAAC,GAAAsE,IAAAhD,EAAAvB,EAAAC,GAAA8L,GAGApF,EAAApC,GAAAvE,EAAA+L,GAAAxH,GAGA,GAAAga,GAAAxS,EAAAqT,EACA,QAAAnf,EAAA8L,EAAuB9L,EAAAQ,EAAOR,IAC9B+e,EAAA/e,GAAA8L,GAAA/L,EAAAC,GAAA8L,GAIA,GAAAA,EAAAsT,EAAA,CACA1Y,EAAAoF,GAAA,EACA,QAAA9L,EAAA8L,EAAA,EAA2B9L,EAAA6B,EAAO7B,IAClC0G,EAAAoF,GAAiBiS,EAAUrX,EAAAoF,GAAApF,EAAA1G,IAE3B,OAAA0G,EAAAoF,GAAA,CACApF,EAAAoF,EAAA,OACApF,EAAAoF,GAAA,EAAApF,EAAAoF,IAEA,QAAA9L,EAAA8L,EAAA,EAA6B9L,EAAA6B,EAAO7B,IACpC0G,EAAA1G,IAAA0G,EAAAoF,GAEApF,EAAAoF,EAAA,MAGA,GADApF,EAAAoF,IAAApF,EAAAoF,GACAA,EAAA,EAAAtL,GAAA,IAAAkG,EAAAoF,GAAA,CACA,QAAA9L,EAAA8L,EAAA,EAA6B9L,EAAAQ,EAAOR,IACpCif,EAAAjf,GAAA,EAEA,QAAAA,EAAA8L,EAAA,EAA6B9L,EAAAQ,EAAOR,IACpC,QAAAsE,EAAAwH,EAAA,EAA+BxH,EAAAzC,EAAOyC,IACtC2a,EAAAjf,IAAA0G,EAAApC,GAAAvE,EAAAC,GAAAsE,GAGA,QAAAA,EAAAwH,EAAA,EAA6BxH,EAAAzC,EAAOyC,IAAA,CACpC,IAAAhD,GAAAoF,EAAApC,GAAAoC,EAAAoF,EAAA,GACA,QAAA9L,EAAA8L,EAAA,EAA+B9L,EAAAQ,EAAOR,IACtCD,EAAAC,GAAAsE,IAAAhD,EAAA2d,EAAAjf,IAIA,GAAAwe,EACA,QAAAxe,EAAA8L,EAAA,EAA6B9L,EAAA6B,EAAO7B,IACpCgf,EAAAhf,GAAA8L,GAAApF,EAAA1G,IAMA,IAAAkC,EAAAsC,KAAA8K,IAAAzN,EAAArB,EAAA,GAYA,GAXA2e,EAAAtd,IACAM,EAAAgd,GAAApf,EAAAof,OAEA3e,EAAA0B,IACAC,EAAAD,EAAA,MAEAkd,EAAA,EAAAld,IACAwE,EAAA0Y,GAAArf,EAAAqf,GAAAld,EAAA,IAEAwE,EAAAxE,EAAA,KAEAoc,EAAA,CACA,QAAAha,EAAA6a,EAAuB7a,EAAAua,EAAQva,IAAA,CAC/B,QAAAtE,EAAA,EAAuBA,EAAAQ,EAAOR,IAC9B+e,EAAA/e,GAAAsE,GAAA,EAEAya,EAAAza,MAAA,EAEA,QAAAwH,EAAAqT,EAAA,EAA2BrT,GAAA,EAAQA,IACnC,OAAA3J,EAAA2J,GAAA,CACA,QAAAxH,EAAAwH,EAAA,EAA6BxH,EAAAua,EAAQva,IAAA,CACrC,IAAAhD,EAAA,EACA,QAAAtB,EAAA8L,EAA2B9L,EAAAQ,EAAOR,IAClCsB,GAAAyd,EAAA/e,GAAA8L,GAAAiT,EAAA/e,GAAAsE,GAEAhD,KAAAyd,EAAAjT,MACA,QAAA9L,EAAA8L,EAA2B9L,EAAAQ,EAAOR,IAClC+e,EAAA/e,GAAAsE,IAAAhD,EAAAyd,EAAA/e,GAAA8L,GAGA,QAAA9L,EAAA8L,EAAyB9L,EAAAQ,EAAOR,IAChC+e,EAAA/e,GAAA8L,IAAAiT,EAAA/e,GAAA8L,GAEAiT,EAAAjT,MAAA,EAAAiT,EAAAjT,MACA,QAAA9L,EAAA,EAAyBA,EAAA8L,EAAA,EAAW9L,IACpC+e,EAAA/e,GAAA8L,GAAA,MAES,CACT,QAAA9L,EAAA,EAAyBA,EAAAQ,EAAOR,IAChC+e,EAAA/e,GAAA8L,GAAA,EAEAiT,EAAAjT,MAAA,GAKA,GAAA0S,EACA,QAAA1S,EAAAjK,EAAA,EAAyBiK,GAAA,EAAQA,IAAA,CACjC,GAAAA,EAAAsT,GAAA,IAAA1Y,EAAAoF,GACA,QAAAxH,EAAAwH,EAAA,EAA6BxH,EAAAzC,EAAOyC,IAAA,CACpC,IAAAhD,EAAA,EACA,QAAAtB,EAAA8L,EAAA,EAA+B9L,EAAA6B,EAAO7B,IACtCsB,GAAA0d,EAAAhf,GAAA8L,GAAAkT,EAAAhf,GAAAsE,GAEAhD,KAAA0d,EAAAlT,EAAA,GAAAA,GACA,QAAA9L,EAAA8L,EAAA,EAA+B9L,EAAA6B,EAAO7B,IACtCgf,EAAAhf,GAAAsE,IAAAhD,EAAA0d,EAAAhf,GAAA8L,GAIA,QAAA9L,EAAA,EAAuBA,EAAA6B,EAAO7B,IAC9Bgf,EAAAhf,GAAA8L,GAAA,EAEAkT,EAAAlT,MAAA,EAOA,IAHA,IAAAwT,EAAApd,EAAA,EAEAqd,EAAAC,OAAAC,QACAvd,EAAA,IACA,IAAA4J,EAAA4T,EACA,IAAA5T,EAAA5J,EAAA,EAAqB4J,IAAA,IACrB,IAAAA,EAD8BA,IAAA,CAI9B,MAAAgK,EACA0J,OAAAG,UAAAJ,EAAA/a,KAAA2U,IAAAhX,EAAA2J,GAAAtH,KAAA2U,IAAAhX,EAAA2J,EAAA,KACA,GAAAtH,KAAA2U,IAAAzS,EAAAoF,KAAAgK,GAAA0J,OAAAI,MAAAlZ,EAAAoF,IAAA,CACApF,EAAAoF,GAAA,EACA,OAGA,GAAAA,IAAA5J,EAAA,EACAwd,EAAA,MACO,CACP,IAAAG,EACA,IAAAA,EAAA3d,EAAA,EAAwB2d,GAAA/T,GACxB+T,IAAA/T,EADiC+T,IAAA,CAIjC,IAAAve,GACAue,IAAA3d,EAAAsC,KAAA2U,IAAAzS,EAAAmZ,IAAA,IACAA,IAAA/T,EAAA,EAAAtH,KAAA2U,IAAAzS,EAAAmZ,EAAA,OACA,GAAArb,KAAA2U,IAAAhX,EAAA0d,KAAAN,EAAAje,EAAA,CACAa,EAAA0d,GAAA,EACA,OAGAA,IAAA/T,EACA4T,EAAA,EACSG,IAAA3d,EAAA,EACTwd,EAAA,GAEAA,EAAA,EACA5T,EAAA+T,GAMA,OAFA/T,IAEA4T,GACA,QACA,IAAA9K,EAAAlO,EAAAxE,EAAA,GACAwE,EAAAxE,EAAA,KACA,QAAAoC,EAAApC,EAAA,EAA6BoC,GAAAwH,EAAQxH,IAAA,CACrC,IAAAhD,EAAoByc,EAAU5b,EAAAmC,GAAAsQ,GAC9BkL,EAAA3d,EAAAmC,GAAAhD,EACAye,EAAAnL,EAAAtT,EAMA,GALAa,EAAAmC,GAAAhD,EACAgD,IAAAwH,IACA8I,GAAAmL,EAAArZ,EAAApC,EAAA,GACAoC,EAAApC,EAAA,GAAAwb,EAAApZ,EAAApC,EAAA,IAEAka,EACA,QAAAxe,EAAA,EAA6BA,EAAA6B,EAAO7B,IACpCsB,EAAAwe,EAAAd,EAAAhf,GAAAsE,GAAAyb,EAAAf,EAAAhf,GAAAkC,EAAA,GACA8c,EAAAhf,GAAAkC,EAAA,IAAA6d,EAAAf,EAAAhf,GAAAsE,GAAAwb,EAAAd,EAAAhf,GAAAkC,EAAA,GACA8c,EAAAhf,GAAAsE,GAAAhD,EAIA,MAEA,QACA,IAAAsT,EAAAlO,EAAAoF,EAAA,GACApF,EAAAoF,EAAA,KACA,QAAAxH,EAAAwH,EAAyBxH,EAAApC,EAAOoC,IAAA,CAChC,IAAAhD,EAAoByc,EAAU5b,EAAAmC,GAAAsQ,GAC9BkL,EAAA3d,EAAAmC,GAAAhD,EACAye,EAAAnL,EAAAtT,EAIA,GAHAa,EAAAmC,GAAAhD,EACAsT,GAAAmL,EAAArZ,EAAApC,GACAoC,EAAApC,GAAAwb,EAAApZ,EAAApC,GACAga,EACA,QAAAte,EAAA,EAA6BA,EAAAQ,EAAOR,IACpCsB,EAAAwe,EAAAf,EAAA/e,GAAAsE,GAAAyb,EAAAhB,EAAA/e,GAAA8L,EAAA,GACAiT,EAAA/e,GAAA8L,EAAA,IAAAiU,EAAAhB,EAAA/e,GAAAsE,GAAAwb,EAAAf,EAAA/e,GAAA8L,EAAA,GACAiT,EAAA/e,GAAAsE,GAAAhD,EAIA,MAEA,QACA,MAAA0e,EAAAxb,KAAAC,IACAD,KAAA2U,IAAAhX,EAAAD,EAAA,IACAsC,KAAA2U,IAAAhX,EAAAD,EAAA,IACAsC,KAAA2U,IAAAzS,EAAAxE,EAAA,IACAsC,KAAA2U,IAAAhX,EAAA2J,IACAtH,KAAA2U,IAAAzS,EAAAoF,KAEAmU,EAAA9d,EAAAD,EAAA,GAAA8d,EACAE,EAAA/d,EAAAD,EAAA,GAAA8d,EACAG,EAAAzZ,EAAAxE,EAAA,GAAA8d,EACAI,EAAAje,EAAA2J,GAAAkU,EACAK,EAAA3Z,EAAAoF,GAAAkU,EACAja,IAAAma,EAAAD,IAAAC,EAAAD,GAAAE,KAAA,EACA1f,EAAAwf,EAAAE,GAAAF,EAAAE,GACA,IAAAG,EAAA,EACA,IAAAva,GAAA,IAAAtF,IAMA6f,EAAA7f,GAAAsF,GAJAua,EADAva,EAAA,EACA,EAAAvB,KAAAkR,KAAA3P,IAAAtF,GAEA+D,KAAAkR,KAAA3P,IAAAtF,MAIA,IAAAmU,GAAAwL,EAAAH,IAAAG,EAAAH,GAAAK,EACAxa,EAAAsa,EAAAC,EACA,QAAA/b,EAAAwH,EAAyBxH,EAAApC,EAAA,EAAWoC,IAAA,CACpC,IAAAhD,EAAoByc,EAAUnJ,EAAA9O,GAC9B,IAAAxE,MAAAke,OAAAG,WACA,IAAAG,EAAAlL,EAAAtT,EACAye,EAAAja,EAAAxE,EAQA,GAPAgD,IAAAwH,IACApF,EAAApC,EAAA,GAAAhD,GAEAsT,EAAAkL,EAAA3d,EAAAmC,GAAAyb,EAAArZ,EAAApC,GACAoC,EAAApC,GAAAwb,EAAApZ,EAAApC,GAAAyb,EAAA5d,EAAAmC,GACAwB,EAAAia,EAAA5d,EAAAmC,EAAA,GACAnC,EAAAmC,EAAA,GAAAwb,EAAA3d,EAAAmC,EAAA,GACAka,EACA,QAAAxe,EAAA,EAA6BA,EAAA6B,EAAO7B,IACpCsB,EAAAwe,EAAAd,EAAAhf,GAAAsE,GAAAyb,EAAAf,EAAAhf,GAAAsE,EAAA,GACA0a,EAAAhf,GAAAsE,EAAA,IAAAyb,EAAAf,EAAAhf,GAAAsE,GAAAwb,EAAAd,EAAAhf,GAAAsE,EAAA,GACA0a,EAAAhf,GAAAsE,GAAAhD,EAYA,GARA,KADAA,EAAgByc,EAAUnJ,EAAA9O,MAC1BxE,EAAAke,OAAAG,WACAG,EAAAlL,EAAAtT,EACAye,EAAAja,EAAAxE,EACAa,EAAAmC,GAAAhD,EACAsT,EAAAkL,EAAApZ,EAAApC,GAAAyb,EAAA5d,EAAAmC,EAAA,GACAnC,EAAAmC,EAAA,IAAAyb,EAAArZ,EAAApC,GAAAwb,EAAA3d,EAAAmC,EAAA,GACAwB,EAAAia,EAAArZ,EAAApC,EAAA,GACAoC,EAAApC,EAAA,GAAAwb,EAAApZ,EAAApC,EAAA,GACAga,GAAAha,EAAA9D,EAAA,EACA,QAAAR,EAAA,EAA6BA,EAAAQ,EAAOR,IACpCsB,EAAAwe,EAAAf,EAAA/e,GAAAsE,GAAAyb,EAAAhB,EAAA/e,GAAAsE,EAAA,GACAya,EAAA/e,GAAAsE,EAAA,IAAAyb,EAAAhB,EAAA/e,GAAAsE,GAAAwb,EAAAf,EAAA/e,GAAAsE,EAAA,GACAya,EAAA/e,GAAAsE,GAAAhD,EAIAoF,EAAAxE,EAAA,GAAA0S,EACA,EACA,MAEA,OACA,GAAAzS,EAAA2J,IAAA,IACA3J,EAAA2J,GAAA3J,EAAA2J,GAAA,GAAA3J,EAAA2J,GAAA,EACA0S,GACA,QAAAxe,EAAA,EAA6BA,GAAAsf,EAAStf,IACtCgf,EAAAhf,GAAA8L,IAAAkT,EAAAhf,GAAA8L,GAIA,KAAAA,EAAAwT,KACAnd,EAAA2J,IAAA3J,EAAA2J,EAAA,KADA,CAIA,IAAAxK,EAAAa,EAAA2J,GAGA,GAFA3J,EAAA2J,GAAA3J,EAAA2J,EAAA,GACA3J,EAAA2J,EAAA,GAAAxK,EACAkd,GAAA1S,EAAAjK,EAAA,EACA,QAAA7B,EAAA,EAA6BA,EAAA6B,EAAO7B,IACpCsB,EAAA0d,EAAAhf,GAAA8L,EAAA,GACAkT,EAAAhf,GAAA8L,EAAA,GAAAkT,EAAAhf,GAAA8L,GACAkT,EAAAhf,GAAA8L,GAAAxK,EAGA,GAAAgd,GAAAxS,EAAAtL,EAAA,EACA,QAAAR,EAAA,EAA6BA,EAAAQ,EAAOR,IACpCsB,EAAAyd,EAAA/e,GAAA8L,EAAA,GACAiT,EAAA/e,GAAA8L,EAAA,GAAAiT,EAAA/e,GAAA8L,GACAiT,EAAA/e,GAAA8L,GAAAxK,EAGAwK,IAEA,EACA5J,KAOA,GAAAuc,EAAA,CACA,IAAA8B,EAAAvB,EACAA,EAAAD,EACAA,EAAAwB,EAGA7d,KAAAlC,IACAkC,KAAAb,IACAa,KAAAP,IACAO,KAAAqc,IACArc,KAAAsc,IAWAxC,MAAAnb,GACA,IAAAmf,EAAAnf,EACAqF,EAAAhE,KAAA+d,UACAC,EAAAhe,KAAAP,EAAA2B,OACA6c,EAAavD,GAAMwD,MAAAF,KAEnB,QAAA1gB,EAAA,EAAmBA,EAAA0gB,EAAW1gB,IAC9BwE,KAAA2U,IAAAzW,KAAAP,EAAAnC,KAAA0G,EACAia,EAAA3gB,MAAA,EAEA2gB,EAAA3gB,MAAA,EAAA0C,KAAAP,EAAAnC,GAIA,IAAA+e,EAAArc,KAAAqc,EACAC,EAAAtc,KAAAme,qBAEAC,EAAA9B,EAAA+B,KAAAJ,GACAK,EAAAhC,EAAA7G,KACA8I,EAAAlC,EAAAjb,OACAod,EAAc9D,GAAMwD,MAAAI,EAAAC,GAEpB,QAAAjhB,EAAA,EAAmBA,EAAAghB,EAAWhhB,IAC9B,QAAAsE,EAAA,EAAqBA,EAAA2c,EAAW3c,IAAA,CAChC,IAAA6c,EAAA,EACA,QAAArV,EAAA,EAAuBA,EAAA4U,EAAW5U,IAClCqV,GAAAL,EAAA9gB,GAAA8L,GAAAiT,EAAAza,GAAAwH,GAEAoV,EAAAlhB,GAAAsE,GAAA6c,EAIA,OAAAD,EAAAH,KAAAP,GAQAhE,iBAAAnb,GACA,OAAAqB,KAAA0e,MAAsBhE,GAAMiE,KAAAhgB,IAS5Bmb,UACA,IAAAwC,EAAAtc,KAAAsc,EACAtY,EAAAhE,KAAA+d,UACAO,EAAAhC,EAAAlb,OACAwd,EAAAtC,EAAA,GAAAlb,OACAyZ,EAAA,IAAgBH,GAAM4D,EAAAte,KAAAP,EAAA2B,QAEtB,QAAA9D,EAAA,EAAmBA,EAAAghB,EAAWhhB,IAC9B,QAAAsE,EAAA,EAAqBA,EAAAgd,EAAWhd,IAChCE,KAAA2U,IAAAzW,KAAAP,EAAAmC,IAAAoC,EACA6W,EAAAvd,GAAAsE,GAAA0a,EAAAhf,GAAAsE,GAAA5B,KAAAP,EAAAmC,GAEAiZ,EAAAvd,GAAAsE,GAAA,EAKA,IAAAya,EAAArc,KAAAqc,EAEAkC,EAAAlC,EAAAjb,OACAyd,EAAAxC,EAAA,GAAAjb,OACA0c,EAAA,IAAgBpD,GAAM4D,EAAAC,GAEtB,QAAAjhB,EAAA,EAAmBA,EAAAghB,EAAWhhB,IAC9B,QAAAsE,EAAA,EAAqBA,EAAA2c,EAAW3c,IAAA,CAChC,IAAA6c,EAAA,EACA,QAAArV,EAAA,EAAuBA,EAAAyV,EAAWzV,IAClCqV,GAAA5D,EAAAvd,GAAA8L,GAAAiT,EAAAza,GAAAwH,GAEA0U,EAAAxgB,GAAAsE,GAAA6c,EAIA,OAAAX,EAOAgB,gBACA,OAAA9e,KAAAP,EAAA,GAAAO,KAAAP,EAAAqC,KAAA8K,IAAA5M,KAAAlC,EAAAkC,KAAAb,GAAA,GAOA4f,YACA,OAAA/e,KAAAP,EAAA,GAOAuf,WAIA,IAHA,IAAAC,EAAAnd,KAAAC,IAAA/B,KAAAlC,EAAAkC,KAAAb,GAAAa,KAAAP,EAAA,GAAAqd,OAAAC,QACAve,EAAA,EACAiB,EAAAO,KAAAP,EACAnC,EAAA,EAAA4hB,EAAAzf,EAAA2B,OAAkC9D,EAAA4hB,EAAQ5hB,IAC1CmC,EAAAnC,GAAA2hB,GACAzgB,IAGA,OAAAA,EAOA2gB,eACA,OAAAnf,KAAAP,EAOAse,gBACA,OAAAjB,OAAAC,QAAA,EAAAjb,KAAAC,IAAA/B,KAAAlC,EAAAkC,KAAAb,GAAAa,KAAAP,EAAA,GAOA2f,0BAIA,OAHS1E,GAAM2E,SAAArf,KAAAqc,KACfrc,KAAAqc,EAAA,IAAmB3B,GAAM1a,KAAAqc,IAEzBrc,KAAAqc,EAOA8B,2BAIA,OAHSzD,GAAM2E,SAAArf,KAAAsc,KACftc,KAAAsc,EAAA,IAAmB5B,GAAM1a,KAAAsc,IAEzBtc,KAAAsc,EAOAgD,qBACA,OAAW5E,GAAMiE,KAAA3e,KAAAP,IClkBV,SAAA8f,EAAAxF,EAAAnX,EAAA4c,GACP,IAAAzd,EAAAyd,EAAAzF,EAAAtE,KAAAsE,EAAAtE,KAAA,EACA,GAAA7S,EAAA,GAAAA,EAAAb,EACA,UAAAuX,WAAA,0BAWO,SAAAmG,EAAA1F,EAAAnX,EAAA4c,GACP,IAAAzd,EAAAyd,EAAAzF,EAAArE,QAAAqE,EAAArE,QAAA,EACA,GAAA9S,EAAA,GAAAA,EAAAb,EACA,UAAAuX,WAAA,6BAYO,SAAAoG,EAAA3F,EAAA4F,GAIP,GAHAA,EAAAC,YACAD,IAAAC,aAEAD,EAAAve,SAAA2Y,EAAArE,QACA,UAAA4D,WACA,yDAGA,OAAAqG,EAWO,SAAAE,EAAA9F,EAAA4F,GAIP,GAHAA,EAAAC,YACAD,IAAAC,aAEAD,EAAAve,SAAA2Y,EAAAtE,KACA,UAAA6D,WAAA,sDAEA,OAAAqG,EAGO,SAAAG,EAAA/F,EAAAgG,EAAAC,GACP,OACAC,IAAAC,EAAAnG,EAAAgG,GACAI,OAAAC,EAAArG,EAAAiG,IAIO,SAAAE,EAAAnG,EAAAgG,GACP,oBAAAA,EACA,UAAA/G,UAAA,mCAOA,GAJA+G,EAAAM,KAAA7hB,GACAA,EAAA,GAAAA,GAAAub,EAAAtE,MAIA,UAAA6D,WAAA,gCAKA,OAFA/N,MAAAC,QAAAuU,OAAAxU,MAAApC,KAAA4W,IAEAA,EAGO,SAAAK,EAAArG,EAAAiG,GACP,oBAAAA,EACA,UAAAhH,UAAA,sCAOA,GAJAgH,EAAAK,KAAAtiB,GACAA,EAAA,GAAAA,GAAAgc,EAAArE,SAIA,UAAA4D,WAAA,mCAIA,OAFA/N,MAAAC,QAAAwU,OAAAzU,MAAApC,KAAA6W,IAEAA,EAGO,SAAAM,EAAAvG,EAAAwG,EAAAC,EAAAC,EAAAC,GACP,OAAApd,UAAAlC,OACA,UAAAkY,WAAA,wBAMA,GAJAqH,EAAA,WAAAJ,GACAI,EAAA,SAAAH,GACAG,EAAA,cAAAF,GACAE,EAAA,YAAAD,GAEAH,EAAAC,GACAC,EAAAC,GACAH,EAAA,GACAA,GAAAxG,EAAAtE,MACA+K,EAAA,GACAA,GAAAzG,EAAAtE,MACAgL,EAAA,GACAA,GAAA1G,EAAArE,SACAgL,EAAA,GACAA,GAAA3G,EAAArE,QAEA,UAAA4D,WAAA,sCA0CA,SAAAqH,EAAA1iB,EAAAU,GACA,oBAAAA,EACA,UAAAqa,aAA2B/a,sBC3KZ,MAAM2iB,UAAiBC,MACtC/G,YAAAC,EAAAtE,EAAAC,GACAoL,QACA9gB,KAAA+Z,SACA/Z,KAAAyV,OACAzV,KAAA0V,UAGAqL,WAAAtiB,OAAAuiB,WACA,OAAWtG,ICVI,MAAMuG,UAA4BL,EACjD9G,YAAAC,GACA+G,MAAA/G,IAAArE,QAAAqE,EAAAtE,MAGAqE,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAA6T,EAAAD,EAAAviB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAA4iB,EAAAD,ICXe,MAAME,UAAsBR,EAC3C9G,YAAAC,EAAAkG,GACAa,MAAA/G,EAAA,EAAAA,EAAArE,SACA1V,KAAAigB,MAGAnG,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAAtN,KAAAigB,IAAAkB,EAAAxiB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAAyB,KAAAigB,IAAAkB,ICVe,MAAME,UAAsBT,EAC3C9G,YAAAC,EAAAwG,EAAAC,EAAAC,EAAAC,GACIJ,EAAUvG,EAAAwG,EAAAC,EAAAC,EAAAC,GACdI,MAAA/G,EAAAyG,EAAAD,EAAA,EAAAG,EAAAD,EAAA,GACAzgB,KAAAugB,WACAvgB,KAAAygB,cAGA3G,IAAAoH,EAAAC,EAAAxiB,GAMA,OALAqB,KAAA+Z,OAAAzM,IACAtN,KAAAugB,SAAAW,EACAlhB,KAAAygB,YAAAU,EACAxiB,GAEAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IACAyB,KAAAugB,SAAAW,EACAlhB,KAAAygB,YAAAU,ICpBe,MAAMG,WAA4BV,EACjD9G,YAAAC,EAAAgG,EAAAC,GACA,IAAAjT,EAAkB+S,EAAY/F,EAAAgG,EAAAC,GAC9Bc,MAAA/G,EAAAhN,EAAAkT,IAAA7e,OAAA2L,EAAAoT,OAAA/e,QACApB,KAAA+f,WAAAhT,EAAAkT,IACAjgB,KAAAggB,cAAAjT,EAAAoT,OAGArG,IAAAoH,EAAAC,EAAAxiB,GAMA,OALAqB,KAAA+Z,OAAAzM,IACAtN,KAAA+f,WAAAmB,GACAlhB,KAAAggB,cAAAmB,GACAxiB,GAEAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IACAyB,KAAA+f,WAAAmB,GACAlhB,KAAAggB,cAAAmB,KCpBe,MAAMI,WAA+BX,EACpD9G,YAAAC,EAAAgG,GAEAe,MAAA/G,GADAgG,EAAiBG,EAAenG,EAAAgG,IAChC3e,OAAA2Y,EAAArE,SACA1V,KAAA+f,aAGAjG,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAAtN,KAAA+f,WAAAmB,GAAAC,EAAAxiB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAAyB,KAAA+f,WAAAmB,GAAAC,ICbe,MAAMK,WAAkCZ,EACvD9G,YAAAC,EAAAiG,GACAA,EAAoBI,EAAkBrG,EAAAiG,GACtCc,MAAA/G,IAAAtE,KAAAuK,EAAA5e,QACApB,KAAAggB,gBAGAlG,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAA4T,EAAAlhB,KAAAggB,cAAAmB,GAAAxiB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAA2iB,EAAAlhB,KAAAggB,cAAAmB,KCfe,MAAMM,WAAyBb,EAC9C9G,YAAAC,EAAAoG,GACAW,MAAA/G,IAAAtE,KAAA,GACAzV,KAAAmgB,SAGArG,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAA4T,EAAAlhB,KAAAmgB,OAAAxhB,GACAqB,KAGA8Z,IAAAoH,GACA,OAAAlhB,KAAA+Z,OAAAxb,IAAA2iB,EAAAlhB,KAAAmgB,SCZe,MAAMuB,WAA0Bd,EAC/C9G,YAAAC,GACA+G,MAAA/G,IAAAtE,KAAAsE,EAAArE,SAGAoE,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAAtN,KAAAyV,KAAAyL,EAAA,EAAAC,EAAAxiB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAAyB,KAAAyV,KAAAyL,EAAA,EAAAC,ICXe,MAAMQ,WAA6Bf,EAClD9G,YAAAC,GACA+G,MAAA/G,IAAAtE,KAAAsE,EAAArE,SAGAoE,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAA+Z,OAAAzM,IAAA4T,EAAAlhB,KAAA0V,QAAAyL,EAAA,EAAAxiB,GACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAA+Z,OAAAxb,IAAA2iB,EAAAlhB,KAAA0V,QAAAyL,EAAA,ICMe,SAAAN,GAAAe,QACfjX,IAAAiX,MAAAxjB,QASA,MAAAyjB,UAAAD,EACAb,WAAAtiB,OAAAuiB,WACA,OAAAhhB,KAUA8Z,mBAAAgI,EAAAC,EAAAC,GAEA,GADAF,EAAAC,IACAC,EAAA5gB,OACA,UAAAkY,WAAA,+CAGA,IADA,IAAA2I,EAAA,IAAAjiB,KAAA8hB,EAAAC,GACA9B,EAAA,EAAuBA,EAAA6B,EAAe7B,IACtC,QAAAE,EAAA,EAA4BA,EAAA4B,EAAqB5B,IACjD8B,EAAA3U,IAAA2S,EAAAE,EAAA6B,EAAA/B,EAAA8B,EAAA5B,IAGA,OAAA8B,EAQAnI,iBAAAkI,GAEA,IADA,IAAArC,EAAA,IAAA3f,KAAA,EAAAgiB,EAAA5gB,QACA9D,EAAA,EAAqBA,EAAA0kB,EAAA5gB,OAAoB9D,IACzCqiB,EAAArS,IAAA,EAAAhQ,EAAA0kB,EAAA1kB,IAEA,OAAAqiB,EAQA7F,oBAAAkI,GAEA,IADA,IAAArC,EAAA,IAAA3f,KAAAgiB,EAAA5gB,OAAA,GACA9D,EAAA,EAAqBA,EAAA0kB,EAAA5gB,OAAoB9D,IACzCqiB,EAAArS,IAAAhQ,EAAA,EAAA0kB,EAAA1kB,IAEA,OAAAqiB,EASA7F,aAAArE,EAAAC,GACA,WAAA1V,KAAAyV,EAAAC,GASAoE,aAAArE,EAAAC,GACA,OAAA1V,KAAAkiB,MAAAzM,EAAAC,GAAAI,KAAA,GASAgE,YAAArE,EAAAC,GACA,OAAA1V,KAAAkiB,MAAAzM,EAAAC,GAAAI,KAAA,GAUAgE,YAAArE,EAAAC,EAAAyM,QACAxX,IAAAwX,MAAArgB,KAAA8S,QAEA,IADA,IAAAmF,EAAA/Z,KAAAkiB,MAAAzM,EAAAC,GACApY,EAAA,EAAqBA,EAAAmY,EAAUnY,IAC/B,QAAAsE,EAAA,EAAuBA,EAAA8T,EAAa9T,IACpCmY,EAAAzM,IAAAhQ,EAAAsE,EAAAugB,KAGA,OAAApI,EAWAD,eAAArE,EAAAC,EAAAiE,EAAAwI,QACAxX,IAAAgP,MAAA,UACAhP,IAAAwX,MAAArgB,KAAA8S,QAEA,IADA,IAAAmF,EAAA/Z,KAAAkiB,MAAAzM,EAAAC,GACApY,EAAA,EAAqBA,EAAAmY,EAAUnY,IAC/B,QAAAsE,EAAA,EAAuBA,EAAA8T,EAAa9T,IAAA,CACpC,IAAAjD,EAAAmD,KAAA0K,MAAA2V,IAAAxI,GACAI,EAAAzM,IAAAhQ,EAAAsE,EAAAjD,GAGA,OAAAob,EAUAD,WAAArE,EAAAC,EAAA/W,QACAgM,IAAA+K,MAAAD,QACA9K,IAAAhM,MAAA,GAGA,IAFA,IAAAiO,EAAA9K,KAAA8K,IAAA6I,EAAAC,GACAqE,EAAA/Z,KAAAke,MAAAzI,EAAAC,GACApY,EAAA,EAAqBA,EAAAsP,EAAStP,IAC9Byc,EAAAzM,IAAAhQ,IAAAqB,GAEA,OAAAob,EAUAD,YAAAzP,EAAAoL,EAAAC,GACA,IAAA/X,EAAA0M,EAAAjJ,YACAuJ,IAAA8K,MAAA9X,QACAgN,IAAA+K,MAAAD,GAGA,IAFA,IAAA7I,EAAA9K,KAAA8K,IAAAjP,EAAA8X,EAAAC,GACAqE,EAAA/Z,KAAAke,MAAAzI,EAAAC,GACApY,EAAA,EAAqBA,EAAAsP,EAAStP,IAC9Byc,EAAAzM,IAAAhQ,IAAA+M,EAAA/M,IAEA,OAAAyc,EASAD,WAAAsI,EAAAC,GACAD,EAAApiB,KAAAoa,YAAAgI,GACAC,EAAAriB,KAAAoa,YAAAiI,GAIA,IAHA,IAAA5M,EAAA2M,EAAA3M,KACAC,EAAA0M,EAAA1M,QACA3R,EAAA,IAAA/D,KAAAyV,EAAAC,GACApY,EAAA,EAAqBA,EAAAmY,EAAUnY,IAC/B,QAAAsE,EAAA,EAAuBA,EAAA8T,EAAa9T,IACpCmC,EAAAuJ,IAAAhQ,EAAAsE,EAAAE,KAAA8K,IAAAwV,EAAA7jB,IAAAjB,EAAAsE,GAAAygB,EAAA9jB,IAAAjB,EAAAsE,KAGA,OAAAmC,EASA+V,WAAAsI,EAAAC,GACAD,EAAApiB,KAAAoa,YAAAgI,GACAC,EAAAriB,KAAAoa,YAAAiI,GAIA,IAHA,IAAA5M,EAAA2M,EAAA3M,KACAC,EAAA0M,EAAA1M,QACA3R,EAAA,IAAA/D,KAAAyV,EAAAC,GACApY,EAAA,EAAqBA,EAAAmY,EAAUnY,IAC/B,QAAAsE,EAAA,EAAuBA,EAAA8T,EAAa9T,IACpCmC,EAAAuJ,IAAAhQ,EAAAsE,EAAAE,KAAAC,IAAAqgB,EAAA7jB,IAAAjB,EAAAsE,GAAAygB,EAAA9jB,IAAAjB,EAAAsE,KAGA,OAAAmC,EAQA+V,mBAAAnb,GACA,OAAAkjB,EAAAxC,SAAA1gB,KAAA,IAAAqB,KAAArB,GAQAmb,gBAAAnb,GACA,aAAAA,GAAA,WAAAA,EAAA2jB,MAMAxZ,WACA,OAAA9I,KAAAyV,KAAAzV,KAAA0V,QAQAoE,MAAAtQ,GACA,sBAAAA,EACA,UAAAwP,UAAA,+BAIA,IAFA,IAAAkG,EAAAlf,KAAAyV,KACA8M,EAAAviB,KAAA0V,QACApY,EAAA,EAAqBA,EAAA4hB,EAAQ5hB,IAC7B,QAAAsE,EAAA,EAAuBA,EAAA2gB,EAAQ3gB,IAC/B4H,EAAA3L,KAAAmC,KAAA1C,EAAAsE,GAGA,OAAA5B,KAOA8Z,YAEA,IADA,IAAAyB,EAAA,IAAAhQ,MAAAvL,KAAA8I,MACAxL,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC2Z,EAAAje,EAAA0C,KAAA0V,QAAA9T,GAAA5B,KAAAzB,IAAAjB,EAAAsE,GAGA,OAAA2Z,EAOAzB,YAEA,IADA,IAAA7O,EAAA,IAAAM,MAAAvL,KAAAyV,MACAnY,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IAAA,CACpC2N,EAAA3N,GAAA,IAAAiO,MAAAvL,KAAA0V,SACA,QAAA9T,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzCqJ,EAAA3N,GAAAsE,GAAA5B,KAAAzB,IAAAjB,EAAAsE,GAGA,OAAAqJ,EAMA6O,cACA,WAAA9Z,KAAAyV,KAMAqE,iBACA,WAAA9Z,KAAA0V,QAMAoE,WACA,WAAA9Z,KAAAyV,MAAA,IAAAzV,KAAA0V,QAMAoE,WACA,OAAA9Z,KAAAyV,OAAAzV,KAAA0V,QAMAoE,cACA,GAAA9Z,KAAAgb,WAAA,CACA,QAAA1d,EAAA,EAAuBA,EAAA0C,KAAAyV,KAAenY,IACtC,QAAAsE,EAAA,EAAyBA,GAAAtE,EAAQsE,IACjC,GAAA5B,KAAAzB,IAAAjB,EAAAsE,KAAA5B,KAAAzB,IAAAqD,EAAAtE,GACA,SAIA,SAEA,SAMAwc,gBACA,IAAAxc,EAAA,EACAsE,EAAA,EACA4gB,GAAA,EACAC,GAAA,EACAC,GAAA,EACA,KAAAplB,EAAA0C,KAAAyV,MAAA,IAGA,IAFA7T,EAAA,EACA8gB,GAAA,EACA9gB,EAAA5B,KAAA0V,UAAA,IAAAgN,GACA,IAAA1iB,KAAAzB,IAAAjB,EAAAsE,GACAA,IACW,IAAA5B,KAAAzB,IAAAjB,EAAAsE,MAAA4gB,GACXE,GAAA,EACAF,EAAA5gB,IAEA6gB,GAAA,EACAC,GAAA,GAGAplB,IAEA,OAAAmlB,EAMA3I,uBACA,IAAAxc,EAAA,EACAsE,EAAA,EACA4gB,GAAA,EACAG,GAAA,EACAD,GAAA,EACA,KAAAplB,EAAA0C,KAAAyV,MAAA,IAGA,IAFA7T,EAAA,EACA8gB,GAAA,EACA9gB,EAAA5B,KAAA0V,UAAA,IAAAgN,GACA,IAAA1iB,KAAAzB,IAAAjB,EAAAsE,GACAA,IACW,IAAA5B,KAAAzB,IAAAjB,EAAAsE,MAAA4gB,GACXE,GAAA,EACAF,EAAA5gB,IAEA+gB,GAAA,EACAD,GAAA,GAGA,QAAAtZ,EAAAxH,EAAA,EAA2BwH,EAAApJ,KAAAyV,KAAerM,IAC1C,IAAApJ,KAAAzB,IAAAjB,EAAA8L,KACAuZ,GAAA,GAGArlB,IAEA,OAAAqlB,EAWA7I,IAAAoH,EAAAC,EAAAxiB,GACA,UAAA2X,MAAA,+BAUAwD,IAAAoH,EAAAC,GACA,UAAA7K,MAAA,+BAaAwD,OAAA8I,EAAAC,GACAD,KAAA,EACAC,KAAA,EAEA,IADA,IAAA9I,EAAA,IAAA/Z,KAAA8iB,YAAArkB,OAAAuiB,SAAAhhB,KAAAyV,KAAAmN,EAAA5iB,KAAA0V,QAAAmN,GACAvlB,EAAA,EAAqBA,EAAAslB,EAAYtlB,IACjC,QAAAsE,EAAA,EAAuBA,EAAAihB,EAAYjhB,IACnCmY,EAAAgJ,aAAA/iB,UAAAyV,KAAAnY,EAAA0C,KAAA0V,QAAA9T,GAGA,OAAAmY,EAQAD,KAAAnb,GACA,QAAArB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAAjD,GAGA,OAAAqB,KAOA8Z,MACA,OAAA9Z,KAAAgjB,MAAA,GAQAlJ,OAAAlX,GACM2c,EAAavf,KAAA4C,GAEnB,IADA,IAAAqd,EAAA,IAAA1U,MAAAvL,KAAA0V,SACApY,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC2iB,EAAA3iB,GAAA0C,KAAAzB,IAAAqE,EAAAtF,GAEA,OAAA2iB,EAQAnG,aAAAlX,GACA,OAAA5C,KAAA8iB,YAAAG,UAAAjjB,KAAAkjB,OAAAtgB,IASAkX,OAAAlX,EAAA2Y,GACMgE,EAAavf,KAAA4C,GACnB2Y,EAAcmE,EAAc1f,KAAAub,GAC5B,QAAAje,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAsN,IAAA1K,EAAAtF,EAAAie,EAAAje,IAEA,OAAA0C,KASA8Z,SAAAqJ,EAAAC,GACM7D,EAAavf,KAAAmjB,GACb5D,EAAavf,KAAAojB,GACnB,QAAA9lB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IAAA,CACvC,IAAA+lB,EAAArjB,KAAAzB,IAAA4kB,EAAA7lB,GACA0C,KAAAsN,IAAA6V,EAAA7lB,EAAA0C,KAAAzB,IAAA6kB,EAAA9lB,IACA0C,KAAAsN,IAAA8V,EAAA9lB,EAAA+lB,GAEA,OAAArjB,KAQA8Z,UAAAlX,GACM6c,EAAgBzf,KAAA4C,GAEtB,IADA,IAAAud,EAAA,IAAA5U,MAAAvL,KAAAyV,MACAnY,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC6iB,EAAA7iB,GAAA0C,KAAAzB,IAAAjB,EAAAsF,GAEA,OAAAud,EAQArG,gBAAAlX,GACA,OAAA5C,KAAA8iB,YAAAQ,aAAAtjB,KAAAujB,UAAA3gB,IASAkX,UAAAlX,EAAA2Y,GACMkE,EAAgBzf,KAAA4C,GACtB2Y,EAAcsE,EAAiB7f,KAAAub,GAC/B,QAAAje,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAsN,IAAAhQ,EAAAsF,EAAA2Y,EAAAje,IAEA,OAAA0C,KASA8Z,YAAA0J,EAAAC,GACMhE,EAAgBzf,KAAAwjB,GAChB/D,EAAgBzf,KAAAyjB,GACtB,QAAAnmB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IAAA,CACpC,IAAA+lB,EAAArjB,KAAAzB,IAAAjB,EAAAkmB,GACAxjB,KAAAsN,IAAAhQ,EAAAkmB,EAAAxjB,KAAAzB,IAAAjB,EAAAmmB,IACAzjB,KAAAsN,IAAAhQ,EAAAmmB,EAAAJ,GAEA,OAAArjB,KAQA8Z,aAAA6F,GACAA,EAAeD,EAAc1f,KAAA2f,GAC7B,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAA/d,IAGA,OAAA5B,KAQA8Z,aAAA6F,GACAA,EAAeD,EAAc1f,KAAA2f,GAC7B,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAA/d,IAGA,OAAA5B,KAQA8Z,aAAA6F,GACAA,EAAeD,EAAc1f,KAAA2f,GAC7B,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAA/d,IAGA,OAAA5B,KAQA8Z,aAAA6F,GACAA,EAAeD,EAAc1f,KAAA2f,GAC7B,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAA/d,IAGA,OAAA5B,KAQA8Z,gBAAA6F,GACAA,EAAeE,EAAiB7f,KAAA2f,GAChC,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAAriB,IAGA,OAAA0C,KAQA8Z,gBAAA6F,GACAA,EAAeE,EAAiB7f,KAAA2f,GAChC,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAAriB,IAGA,OAAA0C,KAQA8Z,gBAAA6F,GACAA,EAAeE,EAAiB7f,KAAA2f,GAChC,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAAriB,IAGA,OAAA0C,KAQA8Z,gBAAA6F,GACAA,EAAeE,EAAiB7f,KAAA2f,GAChC,QAAAriB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAsN,IAAAhQ,EAAAsE,EAAA5B,KAAAzB,IAAAjB,EAAAsE,GAAA+d,EAAAriB,IAGA,OAAA0C,KASA8Z,OAAAlX,EAAAjE,GACM4gB,EAAavf,KAAA4C,GACnB,QAAAtF,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAsN,IAAA1K,EAAAtF,EAAA0C,KAAAzB,IAAAqE,EAAAtF,GAAAqB,GAEA,OAAAqB,KASA8Z,UAAAlX,EAAAjE,GACM8gB,EAAgBzf,KAAA4C,GACtB,QAAAtF,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAsN,IAAAhQ,EAAAsF,EAAA5C,KAAAzB,IAAAjB,EAAAsF,GAAAjE,GAEA,OAAAqB,KAOA8Z,MAEA,IADA,IAAArW,EAAAzD,KAAAzB,IAAA,KACAjB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAzB,IAAAjB,EAAAsE,GAAA6B,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAAsE,IAIA,OAAA6B,EAOAqW,WAGA,IAFA,IAAArW,EAAAzD,KAAAzB,IAAA,KACAqM,EAAA,MACAtN,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAzB,IAAAjB,EAAAsE,GAAA6B,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAAsE,GACAgJ,EAAA,GAAAtN,EACAsN,EAAA,GAAAhJ,GAIA,OAAAgJ,EAOAkP,MAEA,IADA,IAAArW,EAAAzD,KAAAzB,IAAA,KACAjB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAzB,IAAAjB,EAAAsE,GAAA6B,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAAsE,IAIA,OAAA6B,EAOAqW,WAGA,IAFA,IAAArW,EAAAzD,KAAAzB,IAAA,KACAqM,EAAA,MACAtN,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC5B,KAAAzB,IAAAjB,EAAAsE,GAAA6B,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAAsE,GACAgJ,EAAA,GAAAtN,EACAsN,EAAA,GAAAhJ,GAIA,OAAAgJ,EAQAkP,OAAAmG,GACMV,EAAavf,KAAAigB,GAEnB,IADA,IAAAxc,EAAAzD,KAAAzB,IAAA0hB,EAAA,GACA3iB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAzB,IAAA0hB,EAAA3iB,GAAAmG,IACAA,EAAAzD,KAAAzB,IAAA0hB,EAAA3iB,IAGA,OAAAmG,EAQAqW,YAAAmG,GACMV,EAAavf,KAAAigB,GAGnB,IAFA,IAAAxc,EAAAzD,KAAAzB,IAAA0hB,EAAA,GACArV,EAAA,CAAAqV,EAAA,GACA3iB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAzB,IAAA0hB,EAAA3iB,GAAAmG,IACAA,EAAAzD,KAAAzB,IAAA0hB,EAAA3iB,GACAsN,EAAA,GAAAtN,GAGA,OAAAsN,EAQAkP,OAAAmG,GACMV,EAAavf,KAAAigB,GAEnB,IADA,IAAAxc,EAAAzD,KAAAzB,IAAA0hB,EAAA,GACA3iB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAzB,IAAA0hB,EAAA3iB,GAAAmG,IACAA,EAAAzD,KAAAzB,IAAA0hB,EAAA3iB,IAGA,OAAAmG,EAQAqW,YAAAmG,GACMV,EAAavf,KAAAigB,GAGnB,IAFA,IAAAxc,EAAAzD,KAAAzB,IAAA0hB,EAAA,GACArV,EAAA,CAAAqV,EAAA,GACA3iB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAAzB,IAAA0hB,EAAA3iB,GAAAmG,IACAA,EAAAzD,KAAAzB,IAAA0hB,EAAA3iB,GACAsN,EAAA,GAAAtN,GAGA,OAAAsN,EAQAkP,UAAAqG,GACMV,EAAgBzf,KAAAmgB,GAEtB,IADA,IAAA1c,EAAAzD,KAAAzB,IAAA,EAAA4hB,GACA7iB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAzB,IAAAjB,EAAA6iB,GAAA1c,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAA6iB,IAGA,OAAA1c,EAQAqW,eAAAqG,GACMV,EAAgBzf,KAAAmgB,GAGtB,IAFA,IAAA1c,EAAAzD,KAAAzB,IAAA,EAAA4hB,GACAvV,EAAA,GAAAuV,GACA7iB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAzB,IAAAjB,EAAA6iB,GAAA1c,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAA6iB,GACAvV,EAAA,GAAAtN,GAGA,OAAAsN,EAQAkP,UAAAqG,GACMV,EAAgBzf,KAAAmgB,GAEtB,IADA,IAAA1c,EAAAzD,KAAAzB,IAAA,EAAA4hB,GACA7iB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAzB,IAAAjB,EAAA6iB,GAAA1c,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAA6iB,IAGA,OAAA1c,EAQAqW,eAAAqG,GACMV,EAAgBzf,KAAAmgB,GAGtB,IAFA,IAAA1c,EAAAzD,KAAAzB,IAAA,EAAA4hB,GACAvV,EAAA,GAAAuV,GACA7iB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAAzB,IAAAjB,EAAA6iB,GAAA1c,IACAA,EAAAzD,KAAAzB,IAAAjB,EAAA6iB,GACAvV,EAAA,GAAAtN,GAGA,OAAAsN,EAOAkP,OAGA,IAFA,IAAAlN,EAAA9K,KAAA8K,IAAA5M,KAAAyV,KAAAzV,KAAA0V,SACAiJ,EAAA,IAAApT,MAAAqB,GACAtP,EAAA,EAAqBA,EAAAsP,EAAStP,IAC9BqhB,EAAArhB,GAAA0C,KAAAzB,IAAAjB,KAEA,OAAAqhB,EASA7E,IAAA4J,GACA,OAAAA,GACA,UACA,OXjzBO,SAAA3J,GAEP,IADA,IAAA0E,EAAY/D,GAAMwD,MAAAnE,EAAAtE,KAAA,GAClBnY,EAAA,EAAiBA,EAAAyc,EAAAtE,OAAiBnY,EAClC,QAAAsE,EAAA,EAAmBA,EAAAmY,EAAArE,UAAoB9T,EACvC6c,EAAAnR,IAAAhQ,EAAA,EAAAmhB,EAAAlgB,IAAAjB,EAAA,GAAAyc,EAAAxb,IAAAjB,EAAAsE,IAGA,OAAA6c,EW0yBiBkF,CAAQ3jB,MACzB,aACA,OXzyBO,SAAA+Z,GAEP,IADA,IAAA0E,EAAY/D,GAAMwD,MAAA,EAAAnE,EAAArE,SAClBpY,EAAA,EAAiBA,EAAAyc,EAAAtE,OAAiBnY,EAClC,QAAAsE,EAAA,EAAmBA,EAAAmY,EAAArE,UAAoB9T,EACvC6c,EAAAnR,IAAA,EAAA1L,EAAA6c,EAAAlgB,IAAA,EAAAqD,GAAAmY,EAAAxb,IAAAjB,EAAAsE,IAGA,OAAA6c,EWkyBiBmF,CAAW5jB,MAC5B,QACA,OXjyBO,SAAA+Z,GAEP,IADA,IAAAtW,EAAA,EACAnG,EAAA,EAAiBA,EAAAyc,EAAAtE,KAAiBnY,IAClC,QAAAsE,EAAA,EAAmBA,EAAAmY,EAAArE,QAAoB9T,IACvC6B,GAAAsW,EAAAxb,IAAAjB,EAAAsE,GAGA,OAAA6B,EW0xBiBogB,CAAM7jB,OAQvB8Z,OACA,OAAA9Z,KAAAye,MAAAze,KAAA8I,KAOAgR,OAEA,IADA,IAAAgK,EAAA,EACAxmB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzCkiB,GAAA9jB,KAAAzB,IAAAjB,EAAAsE,GAGA,OAAAkiB,EAQAhK,KAAA3V,EAAA,aACA,IAAAJ,EAAA,EACA,WAAAI,EACA,OAAAnE,KAAA+B,MACO,iBAAAoC,EAAA,CACP,QAAA7G,EAAA,EAAuBA,EAAA0C,KAAAyV,KAAenY,IACtC,QAAAsE,EAAA,EAAyBA,EAAA5B,KAAA0V,QAAkB9T,IAC3CmC,GAAA/D,KAAAzB,IAAAjB,EAAAsE,GAAA5B,KAAAzB,IAAAjB,EAAAsE,GAGA,OAAAE,KAAAkR,KAAAjP,GAEA,UAAAuV,iCAAmDnV,KAQnD2V,gBAEA,IADA,IAAA2E,EAAA,EACAnhB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzC6c,GAAAze,KAAAzB,IAAAjB,EAAAsE,GACA5B,KAAAsN,IAAAhQ,EAAAsE,EAAA6c,GAGA,OAAAze,KAQA8Z,IAAAiK,GACAlC,EAAAxC,SAAA0E,SAAAnE,aACA,IAAAoE,EAAAhkB,KAAA4f,YACA,GAAAoE,EAAA5iB,SAAA2iB,EAAA3iB,OACA,UAAAkY,WAAA,qCAGA,IADA,IAAA2K,EAAA,EACA3mB,EAAA,EAAqBA,EAAA0mB,EAAA5iB,OAAoB9D,IACzC2mB,GAAAD,EAAA1mB,GAAAymB,EAAAzmB,GAEA,OAAA2mB,EAQAnK,KAAAoK,GACAA,EAAAlkB,KAAA8iB,YAAA1I,YAAA8J,GACAlkB,KAAA0V,UAAAwO,EAAAzO,MAEA/Q,QAAAwX,KAAA,qFAUA,IAPA,IAAApe,EAAAkC,KAAAyV,KACAtW,EAAAa,KAAA0V,QACAlW,EAAA0kB,EAAAxO,QAEA3R,EAAA,IAAA/D,KAAA8iB,YAAArkB,OAAAuiB,SAAAljB,EAAA0B,GAEA2kB,EAAA,IAAA5Y,MAAApM,GACAyC,EAAA,EAAqBA,EAAApC,EAAOoC,IAAA,CAC5B,QAAAwH,EAAA,EAAuBA,EAAAjK,EAAOiK,IAC9B+a,EAAA/a,GAAA8a,EAAA3lB,IAAA6K,EAAAxH,GAGA,QAAAtE,EAAA,EAAuBA,EAAAQ,EAAOR,IAAA,CAC9B,IAAAmC,EAAA,EACA,IAAA2J,EAAA,EAAqBA,EAAAjK,EAAOiK,IAC5B3J,GAAAO,KAAAzB,IAAAjB,EAAA8L,GAAA+a,EAAA/a,GAGArF,EAAAuJ,IAAAhQ,EAAAsE,EAAAnC,IAGA,OAAAsE,EAGA+V,YAAAoK,GACA,IAAAngB,EAAA,IAAA/D,KAAA8iB,YAAArkB,OAAAuiB,SAAA,KACA,MAAAoD,EAAApkB,KAAAzB,IAAA,KACA8lB,EAAAH,EAAA3lB,IAAA,KACA+lB,EAAAtkB,KAAAzB,IAAA,KACAgmB,EAAAL,EAAA3lB,IAAA,KACAimB,EAAAxkB,KAAAzB,IAAA,KACAkmB,EAAAP,EAAA3lB,IAAA,KACAmmB,EAAA1kB,KAAAzB,IAAA,KACAomB,EAAAT,EAAA3lB,IAAA,KAGAqmB,GAAAR,EAAAM,IAAAL,EAAAM,GACAE,GAAAL,EAAAE,GAAAL,EACAS,EAAAV,GAAAG,EAAAI,GACAI,EAAAL,GAAAD,EAAAJ,GACAW,GAAAZ,EAAAE,GAAAK,EAKAM,EAAAL,EAAAG,EAAAC,GAHAV,EAAAI,IAAAD,EAAAE,GAIAO,EAAAJ,EAAAE,EACAG,EAAAN,EAAAE,EACAK,EAAAR,EAAAC,EAAAC,GAPAN,EAAAJ,IAAAC,EAAAE,GAaA,OAJAxgB,EAAAuJ,IAAA,IAAA2X,GACAlhB,EAAAuJ,IAAA,IAAA4X,GACAnhB,EAAAuJ,IAAA,IAAA6X,GACAphB,EAAAuJ,IAAA,IAAA8X,GACArhB,EAGA+V,YAAAoK,GACA,IAAAngB,EAAA,IAAA/D,KAAA8iB,YAAArkB,OAAAuiB,SAAA,KAEA,MAAAqE,EAAArlB,KAAAzB,IAAA,KACA+mB,EAAAtlB,KAAAzB,IAAA,KACAgnB,EAAAvlB,KAAAzB,IAAA,KACAinB,EAAAxlB,KAAAzB,IAAA,KACA6lB,EAAApkB,KAAAzB,IAAA,KACA+lB,EAAAtkB,KAAAzB,IAAA,KACAknB,EAAAzlB,KAAAzB,IAAA,KACAimB,EAAAxkB,KAAAzB,IAAA,KACAmmB,EAAA1kB,KAAAzB,IAAA,KAEAmnB,EAAAxB,EAAA3lB,IAAA,KACAonB,EAAAzB,EAAA3lB,IAAA,KACAqnB,EAAA1B,EAAA3lB,IAAA,KACAsnB,EAAA3B,EAAA3lB,IAAA,KACA8lB,EAAAH,EAAA3lB,IAAA,KACAgmB,EAAAL,EAAA3lB,IAAA,KACAunB,EAAA5B,EAAA3lB,IAAA,KACAkmB,EAAAP,EAAA3lB,IAAA,KACAomB,EAAAT,EAAA3lB,IAAA,KAGAsmB,GAAAQ,EAAAG,KAAAG,EAAAtB,GAEAU,IAAAM,EAAAG,EAAApB,IAAAsB,EAAAC,EAAAtB,GACAW,GAAAQ,EAAApB,KAAAsB,EAAAC,GACAI,EAAAV,EAAAK,EACAM,IAAAX,EAAAI,EAAAjB,IAAAkB,EAAAE,EAAArB,GACA0B,IAAAZ,EAAAI,IAAAG,EAAArB,GACA2B,GAAAT,EAAAjB,KAAAkB,EAAAE,GAGAO,IAAAZ,EAAAf,EAAAE,IAAAL,EAAAyB,EAAArB,GACA2B,GAAAb,EAAAb,IAAAL,EAAAI,GACA4B,EAAAd,EAAAO,EACAQ,GAAA9B,EAAAE,KAAAoB,EAAArB,GACA8B,IAAAhB,EAAAnB,EAAAE,IAAAC,EAAAuB,EAAAnB,GACA6B,GAAAjB,EAAAjB,IAAAC,EAAAI,GACA8B,GAAArC,EAAAE,KAAAwB,EAAAnB,GAOAM,EAAAc,EAAAM,EANAf,EAAAO,EAOAX,GAzBAG,EAAAC,EAAAC,EAAAC,EAAApB,EAAAI,EAAAE,GAAAL,EAyBAU,EAAAC,EAAAe,EAAAI,EAAAE,EAAAC,EACAI,EAAAX,EAAAC,EAAAE,GAjBAb,EAAAC,EAAAC,EAAAnB,EAAAE,EAAAmB,EAAAjB,GAAAD,EAiBA8B,EAAAE,EAAAE,EACAtB,EAAAN,EAzBAT,IAAAsB,EAAAC,EAAAE,EAAAxB,EAAAE,EAAAuB,EAAAnB,GAyBAI,EAAAgB,EAAAM,EAAAE,EAAAC,EACApB,EAAAP,EAAAE,EAAAC,EAAAe,EATAzB,EAAAG,EAUAkC,EAAAN,EAAAE,EAAAC,EAAAC,EATAjB,EAAAI,EAUAgB,EAAAb,EAAAC,EAAAC,EApBAzB,IAAAkB,EAAAE,EAAAC,EAAAxB,EAAAE,EAAAuB,EAAArB,GAoBA0B,EAAAC,EAAAC,EACAQ,EAAAV,EAAAC,EAAAC,EAAAC,EAVAb,EAAAE,EAWAmB,EAAAf,EAAAC,EAAAC,EAAAC,EAVAxB,EAAAC,EAqBA,OATA5gB,EAAAuJ,IAAA,IAAA2X,GACAlhB,EAAAuJ,IAAA,IAAA4X,GACAnhB,EAAAuJ,IAAA,IAAAoZ,GACA3iB,EAAAuJ,IAAA,IAAA6X,GACAphB,EAAAuJ,IAAA,IAAA8X,GACArhB,EAAAuJ,IAAA,IAAAqZ,GACA5iB,EAAAuJ,IAAA,IAAAsZ,GACA7iB,EAAAuJ,IAAA,IAAAuZ,GACA9iB,EAAAuJ,IAAA,IAAAwZ,GACA/iB,EAQA+V,aAAAtZ,GACA,IAAAC,EAAAT,KAAAqa,QACA0M,EAAAtmB,EAAAgV,KACAuR,EAAAvmB,EAAAiV,QACAuR,EAAAzmB,EAAAiV,KACAyR,EAAA1mB,EAAAkV,QAQA,SAAAyR,EAAAC,EAAA3R,EAAA4R,GACA,IAAA7oB,EAAA4oB,EAAA3R,KACA1X,EAAAqpB,EAAA1R,QACA,GAAAlX,IAAAiX,GAAA1X,IAAAspB,EACA,OAAAD,EAEA,IAAAE,EAAAzF,EAAA3D,MAAAzI,EAAA4R,GAEA,OADAC,IAAAvE,aAAAqE,EAAA,KAdAJ,IAAAC,GAEAviB,QAAAwX,oBAAoC6K,OAAQC,SAAUC,OAAQC,sCAsB9D,IAAA1oB,EAAAsD,KAAAC,IAAAglB,EAAAE,GACAlpB,EAAA+D,KAAAC,IAAAilB,EAAAE,GAiEA,OA5DA,SAAAK,EAAAlqB,EAAAgG,EAAAoS,EAAA4R,GAEA,GAAA5R,GAAA,KAAA4R,GAAA,IACA,OAAAhqB,EAAAghB,KAAAhb,GAIAoS,EAAA,MAAA4R,EAAA,MACAhqB,EAAA8pB,EAAA9pB,EAAAoY,EAAA,EAAA4R,EAAA,GACAhkB,EAAA8jB,EAAA9jB,EAAAoS,EAAA,EAAA4R,EAAA,IACS5R,EAAA,MACTpY,EAAA8pB,EAAA9pB,EAAAoY,EAAA,EAAA4R,GACAhkB,EAAA8jB,EAAA9jB,EAAAoS,EAAA,EAAA4R,IACSA,EAAA,OACThqB,EAAA8pB,EAAA9pB,EAAAoY,EAAA4R,EAAA,GACAhkB,EAAA8jB,EAAA9jB,EAAAoS,EAAA4R,EAAA,IAGA,IAAAG,EAAA9jB,SAAArG,EAAAoY,KAAA,MACAgS,EAAA/jB,SAAArG,EAAAqY,QAAA,MAEA0O,EAAA/mB,EAAAqqB,UAAA,EAAAF,EAAA,IAAAC,EAAA,GACApD,EAAAhhB,EAAAqkB,UAAA,EAAAF,EAAA,IAAAC,EAAA,GAEAnD,EAAAjnB,EAAAqqB,UAAA,EAAAF,EAAA,EAAAC,EAAApqB,EAAAqY,QAAA,GACA6O,EAAAlhB,EAAAqkB,UAAA,EAAAF,EAAA,EAAAC,EAAApkB,EAAAqS,QAAA,GAEA8O,EAAAnnB,EAAAqqB,UAAAF,EAAAnqB,EAAAoY,KAAA,IAAAgS,EAAA,GACAhD,EAAAphB,EAAAqkB,UAAAF,EAAAnkB,EAAAoS,KAAA,IAAAgS,EAAA,GAEA/C,EAAArnB,EAAAqqB,UAAAF,EAAAnqB,EAAAoY,KAAA,EAAAgS,EAAApqB,EAAAqY,QAAA,GACAiP,EAAAthB,EAAAqkB,UAAAF,EAAAnkB,EAAAoS,KAAA,EAAAgS,EAAApkB,EAAAqS,QAAA,GAGAkP,EAAA2C,EAAA1F,EAAA8F,IAAAvD,EAAAM,GAAA7C,EAAA8F,IAAAtD,EAAAM,GAAA6C,EAAAC,GACA5C,EAAA0C,EAAA1F,EAAA8F,IAAAnD,EAAAE,GAAAL,EAAAmD,EAAAC,GACA3C,EAAAyC,EAAAnD,EAAAvC,EAAA+F,IAAArD,EAAAI,GAAA6C,EAAAC,GACA1C,EAAAwC,EAAA7C,EAAA7C,EAAA+F,IAAAnD,EAAAJ,GAAAmD,EAAAC,GACAzC,EAAAuC,EAAA1F,EAAA8F,IAAAvD,EAAAE,GAAAK,EAAA6C,EAAAC,GACA1B,EAAAwB,EAAA1F,EAAA+F,IAAApD,EAAAJ,GAAAvC,EAAA8F,IAAAtD,EAAAE,GAAAiD,EAAAC,GACAzB,EAAAuB,EAAA1F,EAAA+F,IAAAtD,EAAAI,GAAA7C,EAAA8F,IAAAlD,EAAAE,GAAA6C,EAAAC,GAGArC,EAAAvD,EAAA8F,IAAA/C,EAAAG,GACAK,EAAAwC,IAAA5C,GACAI,EAAAuC,IAAA3B,GACA,IAAAW,EAAA9E,EAAA8F,IAAA7C,EAAAE,GACA6B,EAAAhF,EAAA8F,IAAA9C,EAAAE,GACA+B,EAAAjF,EAAA+F,IAAAhD,EAAAC,GACAiC,EAAAa,IAAA7C,GACAgC,EAAAa,IAAA5B,GAGA,IAAAuB,EAAAzF,EAAA3D,MAAA,EAAAkH,EAAA3P,KAAA,EAAA2P,EAAA1P,SAKA,OADA4R,GADAA,GADAA,GADAA,IAAAvE,aAAAqC,EAAA,MACArC,aAAA4D,EAAAvB,EAAA3P,KAAA,IACAsN,aAAA8D,EAAA,EAAAzB,EAAA1P,UACAqN,aAAA+D,EAAA1B,EAAA3P,KAAA2P,EAAA1P,UACAgS,UAAA,EAAAjS,EAAA,IAAA4R,EAAA,GAEAE,CAhEA9mB,EAAA0mB,EAAA1mB,EAAAjC,EAAAT,GACAyC,EAAA2mB,EAAA3mB,EAAAhC,EAAAT,GA+DAS,EAAAT,GASA+b,UAAAlN,EAAA7K,GAGA,IAFA6K,OAAAjC,IAAAiC,EAAA,EAAAA,KACA7K,OAAA4I,IAAA5I,EAAA,EAAAA,GAEA,UAAAuX,WAAA,2CAGA,IADA,IAAA2I,EAAAjiB,KAAA8iB,YAAAZ,MAAAliB,KAAAyV,KAAAzV,KAAA0V,SACApY,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IAAA,CACpC,IAAAuqB,EAAqB3O,EAAOlZ,KAAAkjB,OAAA5lB,GAAA,CAAkBsP,MAAA7K,QAC9CkgB,EAAA6F,OAAAxqB,EAAAuqB,GAEA,OAAA5F,EAYAnI,aAAAlN,EAAA7K,GAGA,IAFA6K,OAAAjC,IAAAiC,EAAA,EAAAA,KACA7K,OAAA4I,IAAA5I,EAAA,EAAAA,GAEA,UAAAuX,WAAA,2CAGA,IADA,IAAA2I,EAAAjiB,KAAA8iB,YAAAZ,MAAAliB,KAAAyV,KAAAzV,KAAA0V,SACApY,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IAAA,CACvC,IAAAuqB,EAAqB3O,EAAOlZ,KAAAujB,UAAAjmB,GAAA,CAC5BsP,MACA7K,QAEAkgB,EAAA8F,UAAAzqB,EAAAuqB,GAEA,OAAA5F,EAUAnI,iBAAAoK,GACAA,EAAAlkB,KAAA8iB,YAAA1I,YAAA8J,GAQA,IANA,IAAApmB,EAAAkC,KAAAyV,KACAtW,EAAAa,KAAA0V,QACAlW,EAAA0kB,EAAAzO,KACAjB,EAAA0P,EAAAxO,QAEA3R,EAAA,IAAA/D,KAAA8iB,YAAArkB,OAAAuiB,SAAAljB,EAAA0B,EAAAL,EAAAqV,GACAlX,EAAA,EAAqBA,EAAAQ,EAAOR,IAC5B,QAAAsE,EAAA,EAAuBA,EAAAzC,EAAOyC,IAC9B,QAAAwH,EAAA,EAAyBA,EAAA5J,EAAO4J,IAChC,QAAAzL,EAAA,EAA2BA,EAAA6W,EAAO7W,IAClCoG,EAAAvE,EAAAlC,EAAA8L,GAAAoL,EAAA5S,EAAAjE,GAAAqC,KAAAzB,IAAAjB,EAAAsE,GAAAsiB,EAAA3lB,IAAA6K,EAAAzL,GAKA,OAAAoG,EAOA+V,YAEA,IADA,IAAA/V,EAAA,IAAA/D,KAAA8iB,YAAArkB,OAAAuiB,SAAAhhB,KAAA0V,QAAA1V,KAAAyV,MACAnY,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC,QAAAsE,EAAA,EAAuBA,EAAA5B,KAAA0V,QAAkB9T,IACzCmC,EAAAuJ,IAAA1L,EAAAtE,EAAA0C,KAAAzB,IAAAjB,EAAAsE,IAGA,OAAAmC,EAQA+V,SAAAkO,QACArd,IAAAqd,MAAAC,GACA,QAAA3qB,EAAA,EAAqBA,EAAA0C,KAAAyV,KAAenY,IACpC0C,KAAA8nB,OAAAxqB,EAAA0C,KAAAkjB,OAAA5lB,GAAA2Y,KAAA+R,IAEA,OAAAhoB,KAQA8Z,YAAAkO,QACArd,IAAAqd,MAAAC,GACA,QAAA3qB,EAAA,EAAqBA,EAAA0C,KAAA0V,QAAkBpY,IACvC0C,KAAA+nB,UAAAzqB,EAAA0C,KAAAujB,UAAAjmB,GAAA2Y,KAAA+R,IAEA,OAAAhoB,KAWA8Z,UAAAyG,EAAAC,EAAAC,EAAAC,GACMJ,EAAUtgB,KAAAugB,EAAAC,EAAAC,EAAAC,GAEhB,IADA,IAAAuB,EAAA,IAAAjiB,KAAA8iB,YAAArkB,OAAAuiB,SAAAR,EAAAD,EAAA,EAAAG,EAAAD,EAAA,GACAnjB,EAAAijB,EAA4BjjB,GAAAkjB,EAAaljB,IACzC,QAAAsE,EAAA6e,EAAiC7e,GAAA8e,EAAgB9e,IACjDqgB,EAAA3kB,EAAAijB,GAAA3e,EAAA6e,GAAAzgB,KAAAzB,IAAAjB,EAAAsE,GAGA,OAAAqgB,EAUAnI,aAAA/M,EAAA0T,EAAAC,GAGA,QAFA/V,IAAA8V,MAAA,QACA9V,IAAA+V,MAAA1gB,KAAA0V,QAAA,GACA+K,EAAAC,GAAAD,EAAA,GAAAA,GAAAzgB,KAAA0V,SAAAgL,EAAA,GAAAA,GAAA1gB,KAAA0V,QACA,UAAA4D,WAAA,yBAIA,IADA,IAAA2I,EAAA,IAAAjiB,KAAA8iB,YAAArkB,OAAAuiB,SAAAjU,EAAA3L,OAAAsf,EAAAD,EAAA,GACAnjB,EAAA,EAAqBA,EAAAyP,EAAA3L,OAAoB9D,IACzC,QAAAsE,EAAA6e,EAAiC7e,GAAA8e,EAAgB9e,IAAA,CACjD,GAAAmL,EAAAzP,GAAA,GAAAyP,EAAAzP,IAAA0C,KAAAyV,KACA,UAAA6D,sCAA4DvM,EAAAzP,MAE5D2kB,EAAA3U,IAAAhQ,EAAAsE,EAAA6e,EAAAzgB,KAAAzB,IAAAwO,EAAAzP,GAAAsE,IAGA,OAAAqgB,EAUAnI,gBAAA/M,EAAAwT,EAAAC,GAGA,QAFA7V,IAAA4V,MAAA,QACA5V,IAAA6V,MAAAxgB,KAAAyV,KAAA,GACA8K,EAAAC,GAAAD,EAAA,GAAAA,GAAAvgB,KAAAyV,MAAA+K,EAAA,GAAAA,GAAAxgB,KAAAyV,KACA,UAAA6D,WAAA,yBAIA,IADA,IAAA2I,EAAA,IAAAjiB,KAAA8iB,YAAArkB,OAAAuiB,SAAAR,EAAAD,EAAA,EAAAxT,EAAA3L,QACA9D,EAAA,EAAqBA,EAAAyP,EAAA3L,OAAoB9D,IACzC,QAAAsE,EAAA2e,EAA8B3e,GAAA4e,EAAa5e,IAAA,CAC3C,GAAAmL,EAAAzP,GAAA,GAAAyP,EAAAzP,IAAA0C,KAAA0V,QACA,UAAA4D,yCAA+DvM,EAAAzP,MAE/D2kB,EAAA3U,IAAA1L,EAAA2e,EAAAjjB,EAAA0C,KAAAzB,IAAAqD,EAAAmL,EAAAzP,KAGA,OAAA2kB,EAUAnI,aAAAC,EAAAwG,EAAAE,GAIMH,EAAUtgB,KAAAugB,EAFhBA,GADAxG,EAAA/Z,KAAA8iB,YAAA1I,YAAAL,IACAtE,KAAA,EAEgBgL,EADhBA,EAAA1G,EAAArE,QAAA,GAEA,QAAApY,EAAA,EAAqBA,EAAAyc,EAAAtE,KAAiBnY,IACtC,QAAAsE,EAAA,EAAuBA,EAAAmY,EAAArE,QAAoB9T,IAC3C5B,KAAAugB,EAAAjjB,GAAAmjB,EAAA7e,GAAAmY,EAAAxb,IAAAjB,EAAAsE,GAGA,OAAA5B,KASA8Z,UAAAiG,EAAAC,GAGA,IAFA,IAAAjT,EAAoB+S,EAAY9f,KAAA+f,EAAAC,GAChCiC,EAAA,IAAAjiB,KAAA8iB,YAAArkB,OAAAuiB,SAAAjB,EAAA3e,OAAA4e,EAAA5e,QACA9D,EAAA,EAAqBA,EAAAyP,EAAAkT,IAAA7e,OAAwB9D,IAE7C,IADA,IAAA4jB,EAAAnU,EAAAkT,IAAA3iB,GACAsE,EAAA,EAAuBA,EAAAmL,EAAAoT,OAAA/e,OAA2BQ,IAAA,CAClD,IAAAuf,EAAApU,EAAAoT,OAAAve,GACAqgB,EAAA3kB,GAAAsE,GAAA5B,KAAAzB,IAAA2iB,EAAAC,GAGA,OAAAc,EAOAnI,QAGA,IAFA,IAAAlN,EAAA9K,KAAA8K,IAAA5M,KAAAyV,KAAAzV,KAAA0V,SACAwS,EAAA,EACA5qB,EAAA,EAAqBA,EAAAsP,EAAStP,IAC9B4qB,GAAAloB,KAAAzB,IAAAjB,KAEA,OAAA4qB,EAWApO,gBACA,WAAiBmH,EAAmBjhB,MAQpC8Z,QAAAmG,GAEA,OADMV,EAAavf,KAAAigB,GACnB,IAAiBmB,EAAaphB,KAAAigB,GAQ9BnG,WAAAqG,GAEA,OADMV,EAAgBzf,KAAAmgB,GACtB,IAAiBsB,GAAgBzhB,KAAAmgB,GAOjCrG,cACA,WAAiB4H,GAAiB1hB,MAOlC8Z,iBACA,WAAiB6H,GAAoB3hB,MAWrC8Z,cAAAyG,EAAAC,EAAAC,EAAAC,GACA,WAAiBW,EAAarhB,KAAAugB,EAAAC,EAAAC,EAAAC,GAY9B5G,cAAAiG,EAAAC,GACA,WAAiBsB,GAAmBthB,KAAA+f,EAAAC,GAWpClG,iBAAAiG,GACA,WAAiBwB,GAAsBvhB,KAAA+f,GAWvCjG,oBAAAkG,GACA,WAAiBwB,GAAyBxhB,KAAAggB,GAU1ClG,MAEA,IAAAzc,EAAAgG,EAAAtF,EAWAoqB,EAAAC,EAAAC,EAZA,GAAAroB,KAAAgb,WAEA,WAAAhb,KAAA0V,SAEArY,EAAA2C,KAAAzB,IAAA,KACA8E,EAAArD,KAAAzB,IAAA,KACAR,EAAAiC,KAAAzB,IAAA,KAGAlB,EAFA2C,KAAAzB,IAAA,KAEA8E,EAAAtF,GACS,IAAAiC,KAAA0V,SAGTyS,EAAAnoB,KAAAsoB,cAAA,aACAF,EAAApoB,KAAAsoB,cAAA,aACAD,EAAAroB,KAAAsoB,cAAA,aACAjrB,EAAA2C,KAAAzB,IAAA,KACA8E,EAAArD,KAAAzB,IAAA,KACAR,EAAAiC,KAAAzB,IAAA,KAEAlB,EAAA8qB,EAAAI,MAAAllB,EAAA+kB,EAAAG,MAAAxqB,EAAAsqB,EAAAE,OAGA,IAAqB1O,EAAe7Z,MAAA+a,YAGpC,MAAAzE,MAAA,2DASAwD,cAAAiE,QACApT,IAAAoT,MAAAjB,OAAAC,SAOA,IANA,IAAAyL,EAAA,IAA4BhN,EAAexb,KAAA,CAAQ2b,eAAA,IAEnDU,EAAAmM,EAAApJ,oBACA9C,EAAAkM,EAAArK,qBACA1e,EAAA+oB,EAAArJ,SAEA7hB,EAAA,EAAqBA,EAAAmC,EAAA2B,OAAc9D,IACnCwE,KAAA2U,IAAAhX,EAAAnC,IAAAygB,EACAte,EAAAnC,GAAA,EAAAmC,EAAAnC,GAEAmC,EAAAnC,GAAA,EAMA,OADAmC,EAAAO,KAAA8iB,YAAArkB,OAAAuiB,SAAArC,KAAAlf,GACA6c,EAAA+B,KAAA5e,EAAA4e,KAAAhC,EAAAoM,kBAOA3O,QAEA,IADA,IAAAmI,EAAA,IAAAjiB,KAAA8iB,YAAArkB,OAAAuiB,SAAAhhB,KAAAyV,KAAAzV,KAAA0V,SACAuK,EAAA,EAAuBA,EAAAjgB,KAAAyV,KAAiBwK,IACxC,QAAAE,EAAA,EAA4BA,EAAAngB,KAAA0V,QAAuByK,IACnD8B,EAAA3U,IAAA2S,EAAAE,EAAAngB,KAAAzB,IAAA0hB,EAAAE,IAGA,OAAA8B,GAMA,SAAAgG,EAAA5qB,EAAAgG,GACA,OAAAhG,EAAAgG,EAHAwe,EAAAviB,UAAAgjB,MAAA,SAUAT,EAAAjN,OAAAiN,EAAA6G,KACA7G,EAAA1C,SAAA0C,EAAAlD,KACAkD,EAAAviB,UAAA6f,SAAA0C,EAAAviB,UAAAqf,KACAkD,EAAA8G,SAAA9G,EAAA+G,IACA/G,EAAAviB,UAAAupB,OAAAhH,EAAAviB,UAAAwpB,IACAjH,EAAAviB,UAAAypB,cAAAlH,EAAAviB,UAAA0pB,iBACAnH,EAAAviB,UAAAyb,YAAA8G,EAAAviB,UAAAipB,IAMA,IAiIAjrB,EA3DA2rB,EAAA,0IA4DAC,EAAAC,KACA,QAAAC,IAlBA,CAEA,YACA,uBACA,uBACA,qBACA,sBAEA,YACA,WACA,YACA,mBACA,mCACA,2CAKA,CACA,IAAAC,EAAAH,EAAAI,EApIA,qIAoIA,CAAiErrB,KAAAmrB,EAAA,GAAAG,GAAAH,EAAA,MACjEI,EAAAN,EAAAI,EA9HA,8NA8HA,CAAwErrB,QAAUmrB,EAAA,MAAYG,GAAAH,EAAA,MAC9FK,EAAAP,EAAAI,EApHA,2bAoHA,CAAwErrB,QAAUmrB,EAAA,MAAYG,GAAAH,EAAA,MAC9FM,EAAAR,EAAAI,EArGA,wIAqGA,CAA+DrrB,KAAAmrB,EAAA,MAC/D,IAAA9rB,EAAA,EAAeA,EAAA8rB,EAAAhoB,OAAqB9D,IACpCukB,EAAAviB,UAAA8pB,EAAA9rB,IAAA+rB,EACAxH,EAAAviB,aAA0B8pB,EAAA9rB,OAAYksB,EACtC3H,EAAAviB,aAA0B8pB,EAAA9rB,OAAYmsB,EACtC5H,EAAAuH,EAAA9rB,IAAAosB,EAIA,IAAAC,EAAA,cAUA,QAAAC,KARA,CACA,iEACA,kEACA,wEACAtd,QAAA,SAAAud,GACAF,EAAAloB,KAAA,SAA0BooB,IAAWA,MAGrCF,GAAA,CACA,IAAAG,EAAAZ,EAAAI,EAlHA,uNAkHA,CAAiErrB,KAAA2rB,EAAA,GAAAA,SAAA,MACjEG,EAAAb,EAAAI,EAxGA,4HAwGA,CAA+DrrB,KAAA2rB,EAAA,MAC/D,IAAAtsB,EAAA,EAAeA,EAAAssB,EAAAxoB,OAAmB9D,IAClCukB,EAAAviB,UAAAsqB,EAAAtsB,IAAAwsB,EACAjI,EAAA+H,EAAAtsB,IAAAysB,EAMA,QAAAC,IAFA,uBAEA,CACA,IAAAC,EAAA,OACA,IAAA3sB,EAAA,EAAeA,EAAA0sB,EAAA,GAAsB1sB,IACrC2sB,WAAsB3sB,IAEtB,OAAA0sB,EAAA,IACA,IAAAE,EAAAhB,EAAAI,EAhHA,qOAgHA,CACArrB,KAAA+rB,EAAA,GACAJ,OAAAI,EAAA,GACAC,UAEAE,EAAAjB,EAAAI,EAAAL,EAAA,CAAiFhrB,KAAA+rB,EAAA,GAAAC,UACjF,IAAA3sB,EAAA,EAAiBA,EAAA0sB,EAAA5oB,OAA0B9D,IAC3CukB,EAAAviB,UAAA0qB,EAAA1sB,IAAA4sB,EACArI,EAAAmI,EAAA1sB,IAAA6sB,MAEK,CACL,IAAAC,EAAA,CACAnsB,KAAA+rB,EAAA,GACAC,OACAL,OAAAI,EAAA,IAEAK,EAAAnB,EAAAI,EAnFA,qIAmFAc,IACAE,EAAApB,EAAAI,EA9GA,oOA8GAc,IACAG,EAAArB,EAAAI,EArGA,icAqGAc,IACAI,EAAAtB,EAAAI,EA/EAL,0IA+EAmB,IACA,IAAA9sB,EAAA,EAAiBA,EAAA0sB,EAAA5oB,OAA0B9D,IAC3CukB,EAAAviB,UAAA0qB,EAAA1sB,IAAA+sB,EACAxI,EAAAviB,aAA4B0qB,EAAA1sB,OAAiBitB,EAC7C1I,EAAAviB,aAA4B0qB,EAAA1sB,OAAiBgtB,EAC7CzI,EAAAmI,EAAA1sB,IAAAktB,GAKA,SAAAlB,EAAAmB,EAAAC,GACA,QAAA/rB,KAAA+rB,EACAD,IAAAE,QAAA,IAAAC,WAAiDjsB,KAAM,KAAA+rB,EAAA/rB,IAEvD,OAAA8rB,EAGA,OAAA5I,EC/3De,MAAMnH,WAAemG,GAActV,QAClDuO,YAAA+Q,EAAAC,GACA,IAAAxtB,EACA,OAAAgG,UAAAlC,QAAA,iBAAAypB,EACA,WAAAtf,MAAAsf,GAEA,GAAQnQ,GAAM2E,SAAAwL,GACd,OAAAA,EAAAxQ,QACK,GAAAyC,OAAAiO,UAAAF,MAAA,GAGL,GADA/J,MAAA+J,KACA/N,OAAAiO,UAAAD,MAAA,GAKA,UAAA9R,UAAA,uCAJA,IAAA1b,EAAA,EAAmBA,EAAAutB,EAAWvtB,IAC9B0C,KAAA1C,GAAA,IAAAiO,MAAAuf,OAKK,KAAAvf,MAAAC,QAAAqf,GAkBL,UAAA7R,UACA,wDAnBK,CAEL,MAAAe,EAAA8Q,EAGA,GAFAA,EAAA9Q,EAAA3Y,OAEA,iBADA0pB,EAAA/Q,EAAA,GAAA3Y,SACA,IAAA0pB,EACA,UAAA9R,UACA,qDAIA,IADA8H,MAAA+J,GACAvtB,EAAA,EAAiBA,EAAAutB,EAAWvtB,IAAA,CAC5B,GAAAyc,EAAAzc,GAAA8D,SAAA0pB,EACA,UAAAxR,WAAA,iCAEAtZ,KAAA1C,GAAA,GAAA2D,OAAA8Y,EAAAzc,MASA,OAFA0C,KAAAyV,KAAAoV,EACA7qB,KAAA0V,QAAAoV,EACA9qB,KAGA8Z,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAAkhB,GAAAC,GAAAxiB,EACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAAkhB,GAAAC,GAQArH,UAAAlX,GAEA,GADI2c,EAAavf,KAAA4C,GACjB,IAAA5C,KAAAyV,KACA,UAAA6D,WAAA,0CAIA,OAFAtZ,KAAA6C,OAAAD,EAAA,GACA5C,KAAAyV,MAAA,EACAzV,KASA8Z,OAAAlX,EAAA2Y,GASA,YARA5Q,IAAA4Q,IACAA,EAAA3Y,EACAA,EAAA5C,KAAAyV,MAEI8J,EAAavf,KAAA4C,GAAA,GACjB2Y,EAAYmE,EAAc1f,KAAAub,GAC1Bvb,KAAA6C,OAAAD,EAAA,EAAA2Y,GACAvb,KAAAyV,MAAA,EACAzV,KAQA8Z,aAAAlX,GAEA,GADI6c,EAAgBzf,KAAA4C,GACpB,IAAA5C,KAAA0V,QACA,UAAA4D,WAAA,6CAEA,QAAAhc,EAAA,EAAmBA,EAAA0C,KAAAyV,KAAenY,IAClC0C,KAAA1C,GAAAuF,OAAAD,EAAA,GAGA,OADA5C,KAAA0V,SAAA,EACA1V,KASA8Z,UAAAlX,EAAA2Y,QACA,IAAAA,IACAA,EAAA3Y,EACAA,EAAA5C,KAAA0V,SAEI+J,EAAgBzf,KAAA4C,GAAA,GACpB2Y,EAAYsE,EAAiB7f,KAAAub,GAC7B,QAAAje,EAAA,EAAmBA,EAAA0C,KAAAyV,KAAenY,IAClC0C,KAAA1C,GAAAuF,OAAAD,EAAA,EAAA2Y,EAAAje,IAGA,OADA0C,KAAA0V,SAAA,EACA1V,MC9He,MAAMma,WAAwB0G,MAK7C/G,YAAAzP,GACAyW,QACA9gB,KAAAqK,OACArK,KAAAyV,KAAApL,EAAAjJ,OACApB,KAAA0V,QAAArL,EAAA,GAAAjJ,OAGA0Y,IAAAoH,EAAAC,EAAAxiB,GAEA,OADAqB,KAAAqK,KAAA6W,GAAAC,GAAAxiB,EACAqB,KAGA8Z,IAAAoH,EAAAC,GACA,OAAAnhB,KAAAqK,KAAA6W,GAAAC,GAGAJ,WAAAtiB,OAAAuiB,WACA,OAAWtG,ICdI,MAAMsQ,GACrBlR,YAAAC,EAAAha,EAAA,IACA,MAAAkrB,gBAAWA,GAAA,GAA0BlrB,EAGrC,KADAga,EAAaI,GAAeC,YAAAL,IAC5BiB,WACA,UAAA1E,MAAA,iCAGA,IAKAhZ,EAAAsE,EALAzC,EAAA4a,EAAArE,QACA4G,EAAYhB,EAAgBnc,IAAA,GAC5BnB,EAAA,IAAAuN,MAAApM,GACA6E,EAAA,IAAAuH,MAAApM,GACAR,EAAAob,EAUA,KANAkR,GAGAlR,EAAAmR,cAGA,CACA,IAAA5tB,EAAA,EAAiBA,EAAA6B,EAAO7B,IACxB,IAAAsE,EAAA,EAAmBA,EAAAzC,EAAOyC,IAC1B0a,EAAAhf,GAAAsE,GAAAjD,EAAAJ,IAAAjB,EAAAsE,IA2EA,SAAAzC,EAAA6E,EAAAhG,EAAAse,GACA,IAAApK,EAAA9O,EAAAtD,EAAAxC,EAAAsE,EAAAwH,EAAA+hB,EAAA7N,EAEA,IAAA1b,EAAA,EAAaA,EAAAzC,EAAOyC,IACpB5D,EAAA4D,GAAA0a,EAAAnd,EAAA,GAAAyC,GAGA,IAAAtE,EAAA6B,EAAA,EAAiB7B,EAAA,EAAOA,IAAA,CAGxB,IAFAggB,EAAA,EACAxd,EAAA,EACAsJ,EAAA,EAAeA,EAAA9L,EAAO8L,IACtBkU,GAAAxb,KAAA2U,IAAAzY,EAAAoL,IAGA,OAAAkU,EAEA,IADAtZ,EAAA1G,GAAAU,EAAAV,EAAA,GACAsE,EAAA,EAAiBA,EAAAtE,EAAOsE,IACxB5D,EAAA4D,GAAA0a,EAAAhf,EAAA,GAAAsE,GACA0a,EAAAhf,GAAAsE,GAAA,EACA0a,EAAA1a,GAAAtE,GAAA,MAEK,CACL,IAAA8L,EAAA,EAAiBA,EAAA9L,EAAO8L,IACxBpL,EAAAoL,IAAAkU,EACAxd,GAAA9B,EAAAoL,GAAApL,EAAAoL,GAYA,IATA8I,EAAAlU,EAAAV,EAAA,GACA8F,EAAAtB,KAAAkR,KAAAlT,GACAoS,EAAA,IACA9O,MAGAY,EAAA1G,GAAAggB,EAAAla,EACAtD,GAAAoS,EAAA9O,EACApF,EAAAV,EAAA,GAAA4U,EAAA9O,EACAxB,EAAA,EAAiBA,EAAAtE,EAAOsE,IACxBoC,EAAApC,GAAA,EAGA,IAAAA,EAAA,EAAiBA,EAAAtE,EAAOsE,IAAA,CAIxB,IAHAsQ,EAAAlU,EAAA4D,GACA0a,EAAA1a,GAAAtE,GAAA4U,EACA9O,EAAAY,EAAApC,GAAA0a,EAAA1a,MAAAsQ,EACA9I,EAAAxH,EAAA,EAAuBwH,GAAA9L,EAAA,EAAY8L,IACnChG,GAAAkZ,EAAAlT,GAAAxH,GAAA5D,EAAAoL,GACApF,EAAAoF,IAAAkT,EAAAlT,GAAAxH,GAAAsQ,EAEAlO,EAAApC,GAAAwB,EAIA,IADA8O,EAAA,EACAtQ,EAAA,EAAiBA,EAAAtE,EAAOsE,IACxBoC,EAAApC,IAAA9B,EACAoS,GAAAlO,EAAApC,GAAA5D,EAAA4D,GAIA,IADAupB,EAAAjZ,GAAApS,KACA8B,EAAA,EAAiBA,EAAAtE,EAAOsE,IACxBoC,EAAApC,IAAAupB,EAAAntB,EAAA4D,GAGA,IAAAA,EAAA,EAAiBA,EAAAtE,EAAOsE,IAAA,CAGxB,IAFAsQ,EAAAlU,EAAA4D,GACAwB,EAAAY,EAAApC,GACAwH,EAAAxH,EAAmBwH,GAAA9L,EAAA,EAAY8L,IAC/BkT,EAAAlT,GAAAxH,IAAAsQ,EAAAlO,EAAAoF,GAAAhG,EAAApF,EAAAoL,GAEApL,EAAA4D,GAAA0a,EAAAhf,EAAA,GAAAsE,GACA0a,EAAAhf,GAAAsE,GAAA,GAGA5D,EAAAV,GAAAwC,EAGA,IAAAxC,EAAA,EAAaA,EAAA6B,EAAA,EAAW7B,IAAA,CAIxB,GAHAgf,EAAAnd,EAAA,GAAA7B,GAAAgf,EAAAhf,MACAgf,EAAAhf,MAAA,EAEA,KADAwC,EAAA9B,EAAAV,EAAA,IACA,CACA,IAAA8L,EAAA,EAAiBA,GAAA9L,EAAQ8L,IACzBpL,EAAAoL,GAAAkT,EAAAlT,GAAA9L,EAAA,GAAAwC,EAGA,IAAA8B,EAAA,EAAiBA,GAAAtE,EAAQsE,IAAA,CAEzB,IADAwB,EAAA,EACAgG,EAAA,EAAmBA,GAAA9L,EAAQ8L,IAC3BhG,GAAAkZ,EAAAlT,GAAA9L,EAAA,GAAAgf,EAAAlT,GAAAxH,GAEA,IAAAwH,EAAA,EAAmBA,GAAA9L,EAAQ8L,IAC3BkT,EAAAlT,GAAAxH,IAAAwB,EAAApF,EAAAoL,IAKA,IAAAA,EAAA,EAAeA,GAAA9L,EAAQ8L,IACvBkT,EAAAlT,GAAA9L,EAAA,KAIA,IAAAsE,EAAA,EAAaA,EAAAzC,EAAOyC,IACpB5D,EAAA4D,GAAA0a,EAAAnd,EAAA,GAAAyC,GACA0a,EAAAnd,EAAA,GAAAyC,GAAA,EAGA0a,EAAAnd,EAAA,GAAAA,EAAA,KACA6E,EAAA,KAlLAonB,CAAAjsB,EAAA6E,EAAAhG,EAAAse,GAqLA,SAAAnd,EAAA6E,EAAAhG,EAAAse,GACA,IAAAlZ,EAAAtD,EAAAxC,EAAAsE,EAAAwH,EAAAzL,EAAAG,EAAA0B,EAAAhB,EAAA6sB,EAAAttB,EAAAmpB,EAAAoE,EAAAC,EAAA9rB,EAAA+rB,EAEA,IAAAluB,EAAA,EAAaA,EAAA6B,EAAO7B,IACpB0G,EAAA1G,EAAA,GAAA0G,EAAA1G,GAGA0G,EAAA7E,EAAA,KAEA,IAAA+S,EAAA,EACAuZ,EAAA,EACA5O,EAAAC,OAAAC,QAEA,IAAApf,EAAA,EAAaA,EAAAwB,EAAOxB,IAAA,CAGpB,IAFA8tB,EAAA3pB,KAAAC,IAAA0pB,EAAA3pB,KAAA2U,IAAAzY,EAAAL,IAAAmE,KAAA2U,IAAAzS,EAAArG,KACAG,EAAAH,EACAG,EAAAqB,KACA2C,KAAA2U,IAAAzS,EAAAlG,KAAA+e,EAAA4O,IAGA3tB,IAGA,GAAAA,EAAAH,EAAA,CACA,EACA,GAcA,IAbA,EAEAyF,EAAApF,EAAAL,GACA6B,GAAAxB,EAAAL,EAAA,GAAAyF,IAAA,EAAAY,EAAArG,IACAa,EAAY6c,EAAU7b,EAAA,GACtBA,EAAA,IACAhB,MAGAR,EAAAL,GAAAqG,EAAArG,IAAA6B,EAAAhB,GACAR,EAAAL,EAAA,GAAAqG,EAAArG,IAAA6B,EAAAhB,GACA6sB,EAAArtB,EAAAL,EAAA,GACAmC,EAAAsD,EAAApF,EAAAL,GACAL,EAAAK,EAAA,EAAuBL,EAAA6B,EAAO7B,IAC9BU,EAAAV,IAAAwC,EAYA,IATAoS,GAAApS,EAEAN,EAAAxB,EAAAF,GAEAopB,EADAnpB,EAAA,EAEAutB,EAAAvtB,EACAwtB,EAAAvnB,EAAArG,EAAA,GACA8B,EAAA,EACA+rB,EAAA,EACAluB,EAAAQ,EAAA,EAAuBR,GAAAK,EAAQL,IAa/B,IAZAguB,EAAApE,EACAA,EAAAnpB,EACAytB,EAAA/rB,EACA2D,EAAArF,EAAAiG,EAAA1G,GACAwC,EAAA/B,EAAAyB,EACAhB,EAAc6c,EAAU7b,EAAAwE,EAAA1G,IACxB0G,EAAA1G,EAAA,GAAAmC,EAAAjB,EACAiB,EAAAuE,EAAA1G,GAAAkB,EAEAgB,GADAzB,EAAAyB,EAAAhB,GACAR,EAAAV,GAAAmC,EAAA2D,EACApF,EAAAV,EAAA,GAAAwC,EAAAL,GAAA1B,EAAAqF,EAAA3D,EAAAzB,EAAAV,IAEA8L,EAAA,EAAqBA,EAAAjK,EAAOiK,IAC5BtJ,EAAAwc,EAAAlT,GAAA9L,EAAA,GACAgf,EAAAlT,GAAA9L,EAAA,GAAAmC,EAAA6c,EAAAlT,GAAA9L,GAAAS,EAAA+B,EACAwc,EAAAlT,GAAA9L,GAAAS,EAAAue,EAAAlT,GAAA9L,GAAAmC,EAAAK,EAIAN,GAAAC,EAAA+rB,EAAAF,EAAAC,EAAAvnB,EAAArG,GAAA0tB,EACArnB,EAAArG,GAAA8B,EAAAD,EACAxB,EAAAL,GAAAI,EAAAyB,QACOsC,KAAA2U,IAAAzS,EAAArG,IAAAkf,EAAA4O,GAEPztB,EAAAL,GAAAK,EAAAL,GAAAuU,EACAlO,EAAArG,GAAA,EAGA,IAAAL,EAAA,EAAaA,EAAA6B,EAAA,EAAW7B,IAAA,CAGxB,IAFA8L,EAAA9L,EACAkC,EAAAxB,EAAAV,GACAsE,EAAAtE,EAAA,EAAmBsE,EAAAzC,EAAOyC,IAC1B5D,EAAA4D,GAAApC,IACA4J,EAAAxH,EACApC,EAAAxB,EAAA4D,IAIA,GAAAwH,IAAA9L,EAGA,IAFAU,EAAAoL,GAAApL,EAAAV,GACAU,EAAAV,GAAAkC,EACAoC,EAAA,EAAiBA,EAAAzC,EAAOyC,IACxBpC,EAAA8c,EAAA1a,GAAAtE,GACAgf,EAAA1a,GAAAtE,GAAAgf,EAAA1a,GAAAwH,GACAkT,EAAA1a,GAAAwH,GAAA5J,GArRAksB,CAAAvsB,EAAA6E,EAAAhG,EAAAse,OACK,CACL,IAAAqP,EAAcrQ,EAAgBnc,IAAA,GAC9BysB,EAAA,IAAArgB,MAAApM,GACA,IAAAyC,EAAA,EAAiBA,EAAAzC,EAAOyC,IACxB,IAAAtE,EAAA,EAAmBA,EAAA6B,EAAO7B,IAC1BquB,EAAAruB,GAAAsE,GAAAjD,EAAAJ,IAAAjB,EAAAsE,IAqRA,SAAAzC,EAAAwsB,EAAAC,EAAAtP,GACA,IAEApK,EAAA9O,EAAAtD,EAAAxC,EAAAsE,EAAA9D,EACAwf,EAFAuO,EAAA1sB,EAAA,EAIA,IAAArB,EAAAguB,EAAmBhuB,GAAA+tB,EAAA,EAAe/tB,IAAA,CAElC,IADAwf,EAAA,EACAhgB,EAAAQ,EAAeR,GAAAuuB,EAAWvuB,IAC1BggB,GAAAxb,KAAA2U,IAAAkV,EAAAruB,GAAAQ,EAAA,IAGA,OAAAwf,EAAA,CAEA,IADAxd,EAAA,EACAxC,EAAAuuB,EAAoBvuB,GAAAQ,EAAQR,IAC5BsuB,EAAAtuB,GAAAquB,EAAAruB,GAAAQ,EAAA,GAAAwf,EACAxd,GAAA8rB,EAAAtuB,GAAAsuB,EAAAtuB,GAWA,IARA8F,EAAAtB,KAAAkR,KAAAlT,GACA8rB,EAAA9tB,GAAA,IACAsF,MAGAtD,GAAA8rB,EAAA9tB,GAAAsF,EACAwoB,EAAA9tB,GAAA8tB,EAAA9tB,GAAAsF,EAEAxB,EAAA9D,EAAiB8D,EAAAzC,EAAOyC,IAAA,CAExB,IADAsQ,EAAA,EACA5U,EAAAuuB,EAAsBvuB,GAAAQ,EAAQR,IAC9B4U,GAAA0Z,EAAAtuB,GAAAquB,EAAAruB,GAAAsE,GAIA,IADAsQ,GAAApS,EACAxC,EAAAQ,EAAmBR,GAAAuuB,EAAWvuB,IAC9BquB,EAAAruB,GAAAsE,IAAAsQ,EAAA0Z,EAAAtuB,GAIA,IAAAA,EAAA,EAAiBA,GAAAuuB,EAAWvuB,IAAA,CAE5B,IADA4U,EAAA,EACAtQ,EAAAiqB,EAAsBjqB,GAAA9D,EAAQ8D,IAC9BsQ,GAAA0Z,EAAAhqB,GAAA+pB,EAAAruB,GAAAsE,GAIA,IADAsQ,GAAApS,EACA8B,EAAA9D,EAAmB8D,GAAAiqB,EAAWjqB,IAC9B+pB,EAAAruB,GAAAsE,IAAAsQ,EAAA0Z,EAAAhqB,GAIAgqB,EAAA9tB,GAAAwf,EAAAsO,EAAA9tB,GACA6tB,EAAA7tB,KAAA,GAAAwf,EAAAla,GAIA,IAAA9F,EAAA,EAAaA,EAAA6B,EAAO7B,IACpB,IAAAsE,EAAA,EAAeA,EAAAzC,EAAOyC,IACtB0a,EAAAhf,GAAAsE,GAAAtE,IAAAsE,EAAA,IAIA,IAAA9D,EAAA+tB,EAAA,EAAoB/tB,GAAAguB,EAAchuB,IAClC,OAAA6tB,EAAA7tB,KAAA,IACA,IAAAR,EAAAQ,EAAA,EAAqBR,GAAAuuB,EAAWvuB,IAChCsuB,EAAAtuB,GAAAquB,EAAAruB,GAAAQ,EAAA,GAGA,IAAA8D,EAAA9D,EAAiB8D,GAAAiqB,EAAWjqB,IAAA,CAE5B,IADAwB,EAAA,EACA9F,EAAAQ,EAAmBR,GAAAuuB,EAAWvuB,IAC9B8F,GAAAwoB,EAAAtuB,GAAAgf,EAAAhf,GAAAsE,GAIA,IADAwB,IAAAwoB,EAAA9tB,GAAA6tB,EAAA7tB,KAAA,GACAR,EAAAQ,EAAmBR,GAAAuuB,EAAWvuB,IAC9Bgf,EAAAhf,GAAAsE,IAAAwB,EAAAwoB,EAAAtuB,KA9VAyuB,CAAA5sB,EAAAwsB,EAAAC,EAAAtP,GAqWA,SAAA0P,EAAAhoB,EAAAhG,EAAAse,EAAAqP,GACA,IAYAruB,EAAAsE,EAAAwH,EAAAzL,EAAAG,EAAAc,EAAAiB,EAAAY,EAAAD,EACAyrB,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAdAntB,EAAA6sB,EAAA,EAEAH,EAAAG,EAAA,EACAnP,EAAAC,OAAAC,QACAwP,EAAA,EACAC,EAAA,EACAhtB,EAAA,EACAgV,EAAA,EACAhW,EAAA,EACAiB,EAAA,EACAgtB,EAAA,EACAC,EAAA,EAKA,IAAApvB,EAAA,EAAaA,EAAA0uB,EAAQ1uB,IAMrB,KALAA,EAhBA,GAgBAA,EAAAuuB,KACA7tB,EAAAV,GAAAquB,EAAAruB,MACA0G,EAAA1G,GAAA,GAGAsE,EAAAE,KAAAC,IAAAzE,EAAA,KAAgCsE,EAAAoqB,EAAQpqB,IACxC4qB,GAAA1qB,KAAA2U,IAAAkV,EAAAruB,GAAAsE,IAIA,KAAAzC,GA1BA,GA0BA,CAEA,IADAxB,EAAAwB,EACAxB,EA5BA,IA8BA,KADA8B,EAAAqC,KAAA2U,IAAAkV,EAAAhuB,EAAA,GAAAA,EAAA,IAAAmE,KAAA2U,IAAAkV,EAAAhuB,UAEA8B,EAAA+sB,KAEA1qB,KAAA2U,IAAAkV,EAAAhuB,KAAA,IAAAkf,EAAApd,KAGA9B,IAGA,GAAAA,IAAAwB,EACAwsB,EAAAxsB,MAAAwsB,EAAAxsB,MAAAotB,EACAvuB,EAAAmB,GAAAwsB,EAAAxsB,MACA6E,EAAA7E,GAAA,EACAA,IACAutB,EAAA,OACK,GAAA/uB,IAAAwB,EAAA,GASL,GARAU,EAAA8rB,EAAAxsB,KAAA,GAAAwsB,EAAAxsB,EAAA,GAAAA,GACAK,GAAAmsB,EAAAxsB,EAAA,GAAAA,EAAA,GAAAwsB,EAAAxsB,OAAA,EACAqV,EAAAhV,IAAAK,EACA4sB,EAAA3qB,KAAAkR,KAAAlR,KAAA2U,IAAAjC,IACAmX,EAAAxsB,MAAAwsB,EAAAxsB,MAAAotB,EACAZ,EAAAxsB,EAAA,GAAAA,EAAA,GAAAwsB,EAAAxsB,EAAA,GAAAA,EAAA,GAAAotB,EACA9rB,EAAAkrB,EAAAxsB,MAEAqV,GAAA,GAiBA,IAhBAiY,EAAAjtB,GAAA,EAAAA,EAAAitB,EAAAjtB,EAAAitB,EACAzuB,EAAAmB,EAAA,GAAAsB,EAAAgsB,EACAzuB,EAAAmB,GAAAnB,EAAAmB,EAAA,GACA,IAAAstB,IACAzuB,EAAAmB,GAAAsB,EAAAZ,EAAA4sB,GAEAzoB,EAAA7E,EAAA,KACA6E,EAAA7E,GAAA,EACAsB,EAAAkrB,EAAAxsB,KAAA,GACAM,EAAAqC,KAAA2U,IAAAhW,GAAAqB,KAAA2U,IAAAgW,GACAjtB,EAAAiB,EAAAhB,EACA+U,EAAAiY,EAAAhtB,EACAjB,EAAAsD,KAAAkR,KAAAxT,IAAAgV,KACAhV,GAAAhB,EACAgW,GAAAhW,EAEAoD,EAAAzC,EAAA,EAAuByC,EAAAoqB,EAAQpqB,IAC/B6qB,EAAAd,EAAAxsB,EAAA,GAAAyC,GACA+pB,EAAAxsB,EAAA,GAAAyC,GAAA4S,EAAAiY,EAAAjtB,EAAAmsB,EAAAxsB,GAAAyC,GACA+pB,EAAAxsB,GAAAyC,GAAA4S,EAAAmX,EAAAxsB,GAAAyC,GAAApC,EAAAitB,EAGA,IAAAnvB,EAAA,EAAmBA,GAAA6B,EAAQ7B,IAC3BmvB,EAAAd,EAAAruB,GAAA6B,EAAA,GACAwsB,EAAAruB,GAAA6B,EAAA,GAAAqV,EAAAiY,EAAAjtB,EAAAmsB,EAAAruB,GAAA6B,GACAwsB,EAAAruB,GAAA6B,GAAAqV,EAAAmX,EAAAruB,GAAA6B,GAAAK,EAAAitB,EAGA,IAAAnvB,EAnFA,EAmFqBA,GAAAuuB,EAAWvuB,IAChCmvB,EAAAnQ,EAAAhf,GAAA6B,EAAA,GACAmd,EAAAhf,GAAA6B,EAAA,GAAAqV,EAAAiY,EAAAjtB,EAAA8c,EAAAhf,GAAA6B,GACAmd,EAAAhf,GAAA6B,GAAAqV,EAAA8H,EAAAhf,GAAA6B,GAAAK,EAAAitB,OAGAzuB,EAAAmB,EAAA,GAAAsB,EAAAjB,EACAxB,EAAAmB,GAAAsB,EAAAjB,EACAwE,EAAA7E,EAAA,GAAAstB,EACAzoB,EAAA7E,IAAAstB,EAGAttB,GAAA,EACAutB,EAAA,MACK,CASL,GARAjsB,EAAAkrB,EAAAxsB,MACAqB,EAAA,EACAX,EAAA,EACAlC,EAAAwB,IACAqB,EAAAmrB,EAAAxsB,EAAA,GAAAA,EAAA,GACAU,EAAA8rB,EAAAxsB,KAAA,GAAAwsB,EAAAxsB,EAAA,GAAAA,IAGA,KAAAutB,EAAA,CAEA,IADAH,GAAA9rB,EACAnD,EA5GA,EA4GqBA,GAAA6B,EAAQ7B,IAC7BquB,EAAAruB,OAAAmD,EAEAhB,EAAAqC,KAAA2U,IAAAkV,EAAAxsB,KAAA,IAAA2C,KAAA2U,IAAAkV,EAAAxsB,EAAA,GAAAA,EAAA,IACAsB,EAAAD,EAAA,IAAAf,EACAI,GAAA,MAAAJ,IAGA,QAAAitB,IAEAjtB,GADAA,GAAAe,EAAAC,GAAA,GACAhB,EAAAI,GACA,GAMA,IALAJ,EAAAqC,KAAAkR,KAAAvT,GACAe,EAAAC,IACAhB,MAEAA,EAAAgB,EAAAZ,IAAAW,EAAAC,GAAA,EAAAhB,GACAnC,EA7HA,EA6HuBA,GAAA6B,EAAQ7B,IAC/BquB,EAAAruB,OAAAmC,EAEA8sB,GAAA9sB,EACAgB,EAAAD,EAAAX,EAAA,KAOA,IAHA6sB,GAAA,EAEA5uB,EAAAqB,EAAA,EACArB,GAAAH,IACA8uB,EAAAd,EAAA7tB,MAGA0B,IAFAhB,EAAAiC,EAAAgsB,IACAhtB,EAAAe,EAAAisB,GACA5sB,GAAA8rB,EAAA7tB,EAAA,GAAAA,GAAA6tB,EAAA7tB,KAAA,GACA0W,EAAAmX,EAAA7tB,EAAA,GAAAA,EAAA,GAAA2uB,EAAAjuB,EAAAiB,EACAjB,EAAAmtB,EAAA7tB,EAAA,GAAAA,EAAA,GACA2B,EAAAqC,KAAA2U,IAAAjX,GAAAsC,KAAA2U,IAAAjC,GAAA1S,KAAA2U,IAAAjY,GACAgB,GAAAC,EACA+U,GAAA/U,EACAjB,GAAAiB,EACA3B,IAAAH,MAIAmE,KAAA2U,IAAAkV,EAAA7tB,KAAA,KAAAgE,KAAA2U,IAAAjC,GAAA1S,KAAA2U,IAAAjY,IACAqe,GACA/a,KAAA2U,IAAAjX,IACAsC,KAAA2U,IAAAkV,EAAA7tB,EAAA,GAAAA,EAAA,IACAgE,KAAA2U,IAAAgW,GACA3qB,KAAA2U,IAAAkV,EAAA7tB,EAAA,GAAAA,EAAA,QAIAA,IAGA,IAAAR,EAAAQ,EAAA,EAAqBR,GAAA6B,EAAQ7B,IAC7BquB,EAAAruB,KAAA,KACAA,EAAAQ,EAAA,IACA6tB,EAAAruB,KAAA,MAIA,IAAA8L,EAAAtL,EAAiBsL,GAAAjK,EAAA,IACjBktB,EAAAjjB,IAAAjK,EAAA,EACAiK,IAAAtL,IACA0B,EAAAmsB,EAAAviB,KAAA,GACAoL,EAAAmX,EAAAviB,EAAA,GAAAA,EAAA,GACA5K,EAAA6tB,EAAAV,EAAAviB,EAAA,GAAAA,EAAA,KAEA,KADA3I,EAAAqB,KAAA2U,IAAAjX,GAAAsC,KAAA2U,IAAAjC,GAAA1S,KAAA2U,IAAAjY,MAEAgB,GAAAiB,EACA+T,GAAA/T,EACAjC,GAAAiC,IAIA,IAAAA,GAd6B2I,IAuB7B,GALA3J,EAAAqC,KAAAkR,KAAAxT,IAAAgV,IAAAhW,KACAgB,EAAA,IACAC,MAGA,IAAAA,EAAA,CAcA,IAbA2J,IAAAtL,EACA6tB,EAAAviB,KAAA,IAAA3J,EAAAgB,EACW9C,IAAAG,IACX6tB,EAAAviB,KAAA,IAAAuiB,EAAAviB,KAAA,IAIA3I,GADAjB,GAAAC,GACAA,EACAe,EAAAgU,EAAA/U,EACAgtB,EAAAjuB,EAAAiB,EACA+U,GAAAhV,EACAhB,GAAAgB,EAEAoC,EAAAwH,EAAqBxH,EAAAoqB,EAAQpqB,IAC7BpC,EAAAmsB,EAAAviB,GAAAxH,GAAA4S,EAAAmX,EAAAviB,EAAA,GAAAxH,GACAyqB,IACA7sB,GAAAhB,EAAAmtB,EAAAviB,EAAA,GAAAxH,GACA+pB,EAAAviB,EAAA,GAAAxH,GAAA+pB,EAAAviB,EAAA,GAAAxH,GAAApC,EAAAitB,GAGAd,EAAAviB,GAAAxH,GAAA+pB,EAAAviB,GAAAxH,GAAApC,EAAAiB,EACAkrB,EAAAviB,EAAA,GAAAxH,GAAA+pB,EAAAviB,EAAA,GAAAxH,GAAApC,EAAAgB,EAGA,IAAAlD,EAAA,EAAqBA,GAAAwE,KAAA8K,IAAAzN,EAAAiK,EAAA,GAAyB9L,IAC9CkC,EAAAiB,EAAAkrB,EAAAruB,GAAA8L,GAAA5I,EAAAmrB,EAAAruB,GAAA8L,EAAA,GACAijB,IACA7sB,GAAAitB,EAAAd,EAAAruB,GAAA8L,EAAA,GACAuiB,EAAAruB,GAAA8L,EAAA,GAAAuiB,EAAAruB,GAAA8L,EAAA,GAAA5J,EAAAhB,GAGAmtB,EAAAruB,GAAA8L,GAAAuiB,EAAAruB,GAAA8L,GAAA5J,EACAmsB,EAAAruB,GAAA8L,EAAA,GAAAuiB,EAAAruB,GAAA8L,EAAA,GAAA5J,EAAAgV,EAGA,IAAAlX,EArOA,EAqOuBA,GAAAuuB,EAAWvuB,IAClCkC,EAAAiB,EAAA6b,EAAAhf,GAAA8L,GAAA5I,EAAA8b,EAAAhf,GAAA8L,EAAA,GACAijB,IACA7sB,GAAAitB,EAAAnQ,EAAAhf,GAAA8L,EAAA,GACAkT,EAAAhf,GAAA8L,EAAA,GAAAkT,EAAAhf,GAAA8L,EAAA,GAAA5J,EAAAhB,GAGA8d,EAAAhf,GAAA8L,GAAAkT,EAAAhf,GAAA8L,GAAA5J,EACA8c,EAAAhf,GAAA8L,EAAA,GAAAkT,EAAAhf,GAAA8L,EAAA,GAAA5J,EAAAgV,IAOA,OAAAgY,EACA,OAGA,IAAArtB,EAAA6sB,EAAA,EAAkB7sB,GAAA,EAAQA,IAI1B,GAHAK,EAAAxB,EAAAmB,GAGA,KAFAqV,EAAAxQ,EAAA7E,IAKA,IAFAxB,EAAAwB,EACAwsB,EAAAxsB,MAAA,EACA7B,EAAA6B,EAAA,EAAqB7B,GAAA,EAAQA,IAAA,CAG7B,IAFAuC,EAAA8rB,EAAAruB,MAAAkC,EACAhB,EAAA,EACAoD,EAAAjE,EAAmBiE,GAAAzC,EAAQyC,IAC3BpD,GAAAmtB,EAAAruB,GAAAsE,GAAA+pB,EAAA/pB,GAAAzC,GAGA,GAAA6E,EAAA1G,GAAA,EACAmvB,EAAA5sB,EACAJ,EAAAjB,OAgBA,GAdAb,EAAAL,EACA,IAAA0G,EAAA1G,GACAquB,EAAAruB,GAAA6B,GAAA,IAAAU,GAAArB,EAAAqB,GAAArB,GAAAqe,EAAA2P,IAEA/rB,EAAAkrB,EAAAruB,KAAA,GACAkD,EAAAmrB,EAAAruB,EAAA,GAAAA,GACAkX,GAAAxW,EAAAV,GAAAkC,IAAAxB,EAAAV,GAAAkC,GAAAwE,EAAA1G,GAAA0G,EAAA1G,GACAsB,GAAA6B,EAAAhB,EAAAgtB,EAAAjuB,GAAAgW,EACAmX,EAAAruB,GAAA6B,GAAAP,EACA+sB,EAAAruB,EAAA,GAAA6B,GACA2C,KAAA2U,IAAAhW,GAAAqB,KAAA2U,IAAAgW,KAAAjuB,EAAAqB,EAAAjB,GAAA6B,IAAAhB,EAAAe,EAAA5B,GAAA6tB,GAGA7tB,EAAAkD,KAAA2U,IAAAkV,EAAAruB,GAAA6B,IACA0d,EAAAje,IAAA,EACA,IAAAgD,EAAAtE,EAAuBsE,GAAAzC,EAAQyC,IAC/B+pB,EAAA/pB,GAAAzC,GAAAwsB,EAAA/pB,GAAAzC,GAAAP,OAKK,GAAA4V,EAAA,EAcL,IAbA7W,EAAAwB,EAAA,EAEA2C,KAAA2U,IAAAkV,EAAAxsB,KAAA,IAAA2C,KAAA2U,IAAAkV,EAAAxsB,EAAA,GAAAA,KACAwsB,EAAAxsB,EAAA,GAAAA,EAAA,GAAAqV,EAAAmX,EAAAxsB,KAAA,GACAwsB,EAAAxsB,EAAA,GAAAA,KAAAwsB,EAAAxsB,MAAAK,GAAAmsB,EAAAxsB,KAAA,KAEAmtB,EAAAK,GAAA,GAAAhB,EAAAxsB,EAAA,GAAAA,GAAAwsB,EAAAxsB,EAAA,GAAAA,EAAA,GAAAK,EAAAgV,GACAmX,EAAAxsB,EAAA,GAAAA,EAAA,GAAAmtB,EAAA,GACAX,EAAAxsB,EAAA,GAAAA,GAAAmtB,EAAA,IAGAX,EAAAxsB,KAAA,KACAwsB,EAAAxsB,MAAA,EACA7B,EAAA6B,EAAA,EAAqB7B,GAAA,EAAQA,IAAA,CAG7B,IAFA2uB,EAAA,EACAC,EAAA,EACAtqB,EAAAjE,EAAmBiE,GAAAzC,EAAQyC,IAC3BqqB,GAAAN,EAAAruB,GAAAsE,GAAA+pB,EAAA/pB,GAAAzC,EAAA,GACA+sB,GAAAP,EAAAruB,GAAAsE,GAAA+pB,EAAA/pB,GAAAzC,GAKA,GAFAU,EAAA8rB,EAAAruB,MAAAkC,EAEAwE,EAAA1G,GAAA,EACAmvB,EAAA5sB,EACArB,EAAAytB,EACAxsB,EAAAysB,OAyCA,GAvCAvuB,EAAAL,EACA,IAAA0G,EAAA1G,IACAgvB,EAAAK,IAAAV,GAAAC,EAAArsB,EAAA2U,GACAmX,EAAAruB,GAAA6B,EAAA,GAAAmtB,EAAA,GACAX,EAAAruB,GAAA6B,GAAAmtB,EAAA,KAEA7rB,EAAAkrB,EAAAruB,KAAA,GACAkD,EAAAmrB,EAAAruB,EAAA,GAAAA,GACA6uB,GAAAnuB,EAAAV,GAAAkC,IAAAxB,EAAAV,GAAAkC,GAAAwE,EAAA1G,GAAA0G,EAAA1G,GAAAkX,IACA4X,EAAA,GAAApuB,EAAAV,GAAAkC,GAAAgV,EACA,IAAA2X,GAAA,IAAAC,IACAD,EACAtP,EACA2P,GACA1qB,KAAA2U,IAAA5W,GACAiC,KAAA2U,IAAAjC,GACA1S,KAAA2U,IAAAhW,GACAqB,KAAA2U,IAAAjW,GACAsB,KAAA2U,IAAAgW,KAEAH,EAAAK,GACAlsB,EAAAjC,EAAAiuB,EAAAR,EAAAzX,EAAA0X,EACAzrB,EAAAhB,EAAAgtB,EAAAP,EAAA1X,EAAAyX,EACAE,EACAC,GAEAT,EAAAruB,GAAA6B,EAAA,GAAAmtB,EAAA,GACAX,EAAAruB,GAAA6B,GAAAmtB,EAAA,GACAxqB,KAAA2U,IAAAhW,GAAAqB,KAAA2U,IAAAgW,GAAA3qB,KAAA2U,IAAAjC,IACAmX,EAAAruB,EAAA,GAAA6B,EAAA,KAAA8sB,EAAApsB,EAAA8rB,EAAAruB,GAAA6B,EAAA,GAAAqV,EAAAmX,EAAAruB,GAAA6B,IAAAsB,EACAkrB,EAAAruB,EAAA,GAAA6B,KAAA+sB,EAAArsB,EAAA8rB,EAAAruB,GAAA6B,GAAAqV,EAAAmX,EAAAruB,GAAA6B,EAAA,IAAAsB,IAEA6rB,EAAAK,IAAAnuB,EAAAgC,EAAAmrB,EAAAruB,GAAA6B,EAAA,IAAAM,EAAAe,EAAAmrB,EAAAruB,GAAA6B,GAAAstB,EAAAjY,GACAmX,EAAAruB,EAAA,GAAA6B,EAAA,GAAAmtB,EAAA,GACAX,EAAAruB,EAAA,GAAA6B,GAAAmtB,EAAA,KAIA1tB,EAAAkD,KAAAC,IAAAD,KAAA2U,IAAAkV,EAAAruB,GAAA6B,EAAA,IAAA2C,KAAA2U,IAAAkV,EAAAruB,GAAA6B,KACA0d,EAAAje,IAAA,EACA,IAAAgD,EAAAtE,EAAuBsE,GAAAzC,EAAQyC,IAC/B+pB,EAAA/pB,GAAAzC,EAAA,GAAAwsB,EAAA/pB,GAAAzC,EAAA,GAAAP,EACA+sB,EAAA/pB,GAAAzC,GAAAwsB,EAAA/pB,GAAAzC,GAAAP,EAQA,IAAAtB,EAAA,EAAaA,EAAA0uB,EAAQ1uB,IACrB,GAAAA,EA/WA,GA+WAA,EAAAuuB,EACA,IAAAjqB,EAAAtE,EAAiBsE,EAAAoqB,EAAQpqB,IACzB0a,EAAAhf,GAAAsE,GAAA+pB,EAAAruB,GAAAsE,GAKA,IAAAA,EAAAoqB,EAAA,EAAkBpqB,GAtXlB,EAsX4BA,IAC5B,IAAAtE,EAvXA,EAuXiBA,GAAAuuB,EAAWvuB,IAAA,CAE5B,IADAmvB,EAAA,EACArjB,EAzXA,EAyXmBA,GAAAtH,KAAA8K,IAAAhL,EAAAiqB,GAAwBziB,IAC3CqjB,GAAAnQ,EAAAhf,GAAA8L,GAAAuiB,EAAAviB,GAAAxH,GAEA0a,EAAAhf,GAAAsE,GAAA6qB,GAluBAG,CAAAztB,EAAA6E,EAAAhG,EAAAse,EAAAqP,GAGA3rB,KAAAb,IACAa,KAAAgE,IACAhE,KAAAhC,IACAgC,KAAAsc,IAOAuQ,sBACA,OAAA7sB,KAAAhC,EAOA8uB,2BACA,OAAA9sB,KAAAgE,EAOA+oB,wBAIA,OAHSrS,GAAM2E,SAAArf,KAAAsc,KACftc,KAAAsc,EAAA,IAAmB5B,GAAM1a,KAAAsc,IAEzBtc,KAAAsc,EAOAgD,qBACA,IAIAhiB,EAAAsE,EAJAzC,EAAAa,KAAAb,EACA6E,EAAAhE,KAAAgE,EACAhG,EAAAgC,KAAAhC,EACA6c,EAAA,IAAgBH,GAAMvb,KAEtB,IAAA7B,EAAA,EAAeA,EAAA6B,EAAO7B,IAAA,CACtB,IAAAsE,EAAA,EAAiBA,EAAAzC,EAAOyC,IACxBiZ,EAAAvd,GAAAsE,GAAA,EAEAiZ,EAAAvd,MAAAU,EAAAV,GACA0G,EAAA1G,GAAA,EACAud,EAAAvd,KAAA,GAAA0G,EAAA1G,GACO0G,EAAA1G,GAAA,IACPud,EAAAvd,KAAA,GAAA0G,EAAA1G,IAGA,OAAAud,GA8qBA,SAAA8R,GAAAK,EAAAC,EAAAC,EAAAC,GACA,IAAA3uB,EAAAR,EACA,OAAA8D,KAAA2U,IAAAyW,GAAAprB,KAAA2U,IAAA0W,GAGA,EAAAH,GAFAxuB,EAAA2uB,EAAAD,GAEAD,IADAjvB,EAAAkvB,EAAA1uB,EAAA2uB,IACAF,EAAAzuB,EAAAwuB,GAAAhvB,GAIA,GAFAQ,EAAA0uB,EAAAC,GAEAH,EAAAC,IADAjvB,EAAAmvB,EAAA3uB,EAAA0uB,IACA1uB,EAAAyuB,EAAAD,GAAAhvB,4LCrvBE,SAAAqX,EAAYrD,EAAOmB,gGAAOia,CAAAptB,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,yDAMZ,IAFA,IAAIka,EAAI7X,EAAcxV,KAAKuV,OAAOnU,OAAQpB,KAAKuV,OAAOnU,QAE7C9D,EAAE,EAAGA,EAAE0C,KAAK6W,OAAOzV,SAAU9D,EAAE,CACpC,IAAI4hB,EAAKlf,KAAK6W,OAAOvZ,GAAG8G,OAAOxB,MAC3BhB,EAAI5B,KAAK6W,OAAOvZ,GAAGmX,OAAO7R,MAC9ByqB,EAAEnO,GAAItd,IAAM,EACZyrB,EAAEzrB,GAAGsd,IAAO,EAKhB,IAAK,IAAI5hB,EAAE,EAAGA,EAAE0C,KAAKuV,OAAOnU,SAAU9D,EAClC+vB,EAAE/vB,GAAGA,IAAM+vB,EAAE/vB,GAAGgwB,OAAO,SAACjwB,EAAGgG,GAAJ,OAAUhG,EAAEgG,GAAG,GAE1C,IAAIkqB,EAAM,IAAIC,GAAwBH,GAChCI,EAxDZ,SAAsBC,GAClB,IAAM9gB,EAAM9K,KAAK8K,IAAIQ,MAAM,KAAMsgB,GAC7BC,EAAOD,EAAIzpB,QAAQ2I,GACvB8gB,EAAIC,GAAQprB,IACZ,IAAMqrB,EAAa9rB,KAAK8K,IAAIQ,MAAM,KAAMsgB,GACpCG,EAAcH,EAAIzpB,QAAQ2pB,GAC9BF,EAAIG,GAAetrB,IACnB,IAAMurB,EAAYhsB,KAAK8K,IAAIQ,MAAM,KAAMsgB,GAEvC,MAAO,CAACG,EADSH,EAAIzpB,QAAQ6pB,IAgDfC,CAAYR,EAAIV,iBACtBmB,EAAOT,EAAIR,kBAAkB/Q,YAG7BiS,EAhDZ,SAAoBxtB,EAAGD,GAKnB,IAJA,IAAI0tB,EAAOpsB,KAAKC,IAAIqL,MAAM,KAAM3M,EAAEoV,IAAI/T,KAAK2U,MACvC0X,EAAOrsB,KAAKC,IAAIqL,MAAM,KAAM5M,EAAEqV,IAAI/T,KAAK2U,MACvC2X,EAAOtsB,KAAK8K,IAAIQ,MAAM,KAAM3M,GAC5B4tB,EAAOvsB,KAAK8K,IAAIQ,MAAM,KAAM5M,GACxBlD,EAAE,EAAGA,EAAEmD,EAAEW,SAAU9D,EACvBmD,EAAEnD,GAAK,IAAKmD,EAAEnD,GAAG8wB,IAAmB,MAAXF,EAAKE,IAC9B5tB,EAAElD,GAAK,IAAKkD,EAAElD,GAAG+wB,IAAmB,MAAXF,EAAKE,IAElC,MAAO,CAAC5tB,EAAGD,GAuCE8tB,CAFDN,EAAKP,EAAI,IACTO,EAAKP,EAAI,KAMnBztB,KAAKuV,OAAOjJ,QAAQ,SAAS6F,EAAM7U,GAC/B6U,EAAK1R,EAAIwtB,EAAG,GAAG3wB,GACf6U,EAAK3R,EAAIytB,EAAG,GAAG3wB,qOC/DvB,SAAA+X,EAAYrD,EAAOmB,gGAAOob,CAAAvuB,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAKwuB,SAAW,KAChBxuB,KAAKyuB,iBAAmB,IACxBzuB,KAAK0uB,cAAgB1c,EAAM5Q,OAC3BpB,KAAK2uB,MAAQ,yDAKX,IAFA,IAAItB,EAAI7X,EAAcxV,KAAKuV,OAAOnU,OAAQpB,KAAKuV,OAAOnU,QAE7C9D,EAAE,EAAGA,EAAE0C,KAAK6W,OAAOzV,SAAU9D,EAAE,CACpC,IAAI4hB,EAAKlf,KAAK6W,OAAOvZ,GAAG8G,OAAOxB,MAC3BhB,EAAI5B,KAAK6W,OAAOvZ,GAAGmX,OAAO7R,MAC9ByqB,EAAEnO,GAAItd,GAAK,EAEf,IAAMgtB,EAiEZ,SAAaC,GAKT,IAHA,IAAI7wB,EAAIkgB,GAAM2Q,EAAMztB,QAGX9D,EAAI,EAAGA,EAAIuxB,EAAMztB,OAAQ9D,IAAK,CAEnC,IADA,IAAIwxB,EAAc,EACTltB,EAAI,EAAGA,EAAIitB,EAAMvxB,GAAG8D,OAAQQ,IACjCktB,GAAeD,EAAMvxB,GAAGsE,GAE5B5D,EAAEV,GAAKwxB,EAAY,EAGvB,OAAO9wB,EA9EK+wB,CAAI1B,GAER2B,EAAOhvB,KAAK2uB,MAAQ,EACtBM,EAAI,IAAI1jB,MAAMyjB,GAClBC,EAAE,GAAKX,GAkJb,SAAcnvB,GAGV,IADA,IAAIuuB,EAAM,IAAIniB,MAAMpM,GACX7B,EAAI,EAAGA,EAAI6B,EAAG7B,IAAKowB,EAAIpwB,GAAK,EACrC,OAAOowB,EAtJYwB,CAAKlvB,KAAK0uB,gBAC3B,IAAK,IAAIpxB,EAAI,EAAGA,EAAI0xB,EAAM1xB,IAAK2xB,EAAE3xB,GAAK4gB,GAAMle,KAAK0uB,eAGjD,IAAK,IAAItlB,EAAE,EAAGA,EAAI4lB,EAAM5lB,IAAK,CAMzB,IAJA,IAAI+lB,EAAMb,GAAU5F,GAAK1oB,KAAK0uB,gBAE1BU,EAAY,EACZC,GAAO,GACHA,GAAM,CAIV,IADA,IAAIC,EAAKH,EAAI/T,QACJzd,EAAI,EAAGA,EAAIyL,EAAGzL,IAAK,CAMxB,IALA,IAAI4xB,EAAKN,EAAEtxB,GAGP6xB,EAAO,EACP7oB,EAAS,EACJ8oB,EAAM,EAAGA,EAAMH,EAAGluB,OAAQquB,IAC/BD,GAASF,EAAGG,GAAOb,EAAEa,GAAOF,EAAGE,GAC/B9oB,GAAW4oB,EAAGE,GAAOb,EAAEa,GAAOF,EAAGE,GAKrC,IAHA,IAAMC,EAAQF,EAAO7oB,EAGZgpB,EAAM,EAAGA,EAAML,EAAGluB,OAAQuuB,IAC/BL,EAAGK,GAAOL,EAAGK,GAAQD,EAAQH,EAAGI,GAKxC,IAAK,IAAIryB,EAAI,EAAGA,EAAI6xB,EAAI/tB,OAAQ9D,IAC5B6xB,EAAI7xB,GAAK,IAAOgyB,EAAGhyB,GAAK2mB,GAAIoJ,EAAE/vB,GAAIgyB,GAAMV,EAAEtxB,IAO9C+xB,GADAD,GAAwB,GACJ,MAASnL,GAH7BkL,EAAMb,GAAUa,GAGsBG,GAAO,EAAEtvB,KAAKwuB,UAExDS,EAAE7lB,GAAK+lB,EAAI/T,QASf,IAAM3a,EAAImvB,GAAWX,EAAE,IACjBzuB,EAAIovB,GAAWX,EAAE,IACvBjvB,KAAKuV,OAAOjJ,QAAQ,SAAS6F,EAAM7U,GAC/B6U,EAAK1R,EAAIA,EAAEnD,GACX6U,EAAK3R,EAAIA,EAAElD,4CAqBrB,SAAS2mB,GAAI5mB,EAAEgG,GAGX,IADA,IAAIrF,EAAI,EACCV,EAAI,EAAGA,EAAID,EAAE+D,OAAQ9D,IAC1BU,GAAKX,EAAEC,GAAK+F,EAAE/F,GAElB,OAAOU,EAcX,SAASswB,GAAUZ,GAIf,IAFA,IAAM1vB,EAbV,SAA2B6xB,GAKvB,IAFA,IAAI7xB,EAAI,EAECV,EAAI,EAAGA,EAAIuyB,EAAYzuB,OAAQ9D,IACpCU,GAAK8D,KAAKguB,IAAID,EAAYvyB,GAAI,GAElC,OAAOwE,KAAKkR,KAAKhV,GAKP+xB,CAAkBrC,GACxBsC,EAAO,IAAIzkB,MAAMmiB,EAAItsB,QAChB9D,EAAI,EAAGA,EAAIowB,EAAItsB,OAAQ9D,IAC5B0yB,EAAK1yB,GAAKowB,EAAIpwB,GAAKU,EAGvB,OAAOgyB,EAGX,SAAStH,GAAKvpB,GAGV,IADA,IAAIuuB,EAAM,IAAIniB,MAAMpM,GACX7B,EAAI,EAAGA,EAAI6B,EAAG7B,IAAKowB,EAAIpwB,GAAKwE,KAAK8S,SAC1C,OAAO8Y,EA2BX,SAASxP,GAAM/e,GAGX,IADA,IAAIuuB,EAAM,IAAIniB,MAAMpM,GACX7B,EAAI,EAAGA,EAAI6B,EAAG7B,IAAKowB,EAAIpwB,GAAK,EACrC,OAAOowB,EAUX,SAASkC,GAAYnvB,GAGjB,IAFA,IAAIytB,EAAOpsB,KAAKC,IAAIqL,MAAM,KAAM3M,EAAEoV,IAAI/T,KAAK2U,MACvC2X,EAAOtsB,KAAK8K,IAAIQ,MAAM,KAAM3M,GACxBnD,EAAE,EAAGA,EAAEmD,EAAEW,SAAU9D,EACvBmD,EAAEnD,GAAK,IAAKmD,EAAEnD,GAAG8wB,IAAqB,MAAbF,EAAOE,IAEpC,OAAO3tB,2LCtLT,SAAA4U,EAAYrD,EAAOmB,gGAAO8c,CAAAjwB,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAKkwB,QAAU,IACflwB,KAAKmwB,QAAU,IACfnwB,KAAKowB,QAAU,yDASb,IANA,IAAIlZ,EAAKnB,EAAQ/V,KAAKuV,OAAQvV,KAAK6W,QAC7BwZ,EAAgBrwB,KAAKuV,OAAOnU,OAASpB,KAAKowB,QAE1C7b,GADU,IAAOvU,KAAKkwB,QAAUlwB,KAAKmwB,UACpBE,EACjBC,EAAQ,EAAExuB,KAAKiV,GAAG/W,KAAKowB,QACzBxuB,EAAI,EACAtE,EAAE,EAAGA,EAAE0C,KAAKuV,OAAOnU,SAAU9D,EAAE,CACnC,IAAI4hB,EAAKhI,EAAGlF,MAAM1U,GAAGsF,MACrB5C,KAAKuV,OAAO2J,GAAIze,EAAI,IAAKT,KAAKmwB,QAAU5b,GAAMjX,EAAEsE,EAAEyuB,IAAgBvuB,KAAKqV,IAAImZ,EAAM1uB,EAAEE,KAAKiV,GAAG,GAC3F/W,KAAKuV,OAAO2J,GAAI1e,EAAI,IAAKR,KAAKmwB,QAAU5b,GAAMjX,EAAEsE,EAAEyuB,IAAgBvuB,KAAKsV,IAAIkZ,EAAM1uB,EAAEE,KAAKiV,GAAG,GAC3FnV,EAAIE,KAAK0K,MAAMlP,EAAE+yB,oOC3BzB,SAAAhb,EAAYrD,EAAOmB,gGAAOod,CAAAvwB,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAKkwB,QAAU,2DAGb,IAAIhZ,EAAKnB,EAAQ/V,KAAKuV,OAAQvV,KAAK6W,QAC7B2Z,EAAK1uB,KAAKkR,KAAKhT,KAAKuV,OAAOnU,QAEjC,GADiBovB,EAAK1uB,KAAK0K,MAAMgkB,GAClB,EAClB,IAAIC,EAAS3uB,KAAK0K,MAAMgkB,GAAI,OAExBC,EAASD,EACV,IAAMjc,GAAQ,EAAiB,EAAbvU,KAAKkwB,SAAWO,EAE5BC,EAAS1wB,KAAKuV,OAAOnU,OAAOqvB,EAElC,GADkBC,EAAS5uB,KAAK0K,MAAMkkB,GACtB,EACnB,IAAIC,EAAU7uB,KAAK0K,MAAMkkB,GAAQ,OAE7BC,EAAUD,EAEX,IADA,IAAM9Y,GAAS,EAAE,EAAE5X,KAAKkwB,UAAUS,EAAQ,GACjCrzB,EAAE,EAAGA,EAAE0C,KAAKuV,OAAOnU,SAAU9D,EAAE,CAC3C,IAAIsE,EAAIE,KAAK0K,MAAMlP,GAAGmzB,EAAO,IACtBzwB,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOnC,EAAIT,KAAKkwB,QAAQ3b,GAAMjX,EAAEsE,GAAG6uB,EAAO,IAClEzwB,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOpC,EAAIR,KAAKkwB,QAAQtY,EAAMhW,EACtD5B,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAO8R,OAASwC,EAAGnB,QAAQzY,oOCnB3D,SAAA+X,EAAYrD,EAAOmB,gGAAOyd,CAAA5wB,KAAAqV,GACxBrV,KAAKuV,OAASvD,EACdhS,KAAK6W,OAAS1D,EACdnT,KAAKkwB,QAAU,IACflwB,KAAK6wB,MAAQ,GACb7wB,KAAK8wB,cAAgB,0DASnB,IANA,IAAI5Z,EAAKnB,EAAQ/V,KAAKuV,OAAQvV,KAAK6W,QAC7Bka,EAAqBjvB,KAAK0K,MAAMxM,KAAKuV,OAAOnU,QAAQpB,KAAK6wB,MAAQ7wB,KAAK8wB,gBACtEE,EAAQlvB,KAAK0K,MAAMxM,KAAKuV,OAAOnU,OAAOpB,KAAK6wB,OAC3CI,GAAW,EAAI,EAAEjxB,KAAKkwB,SAAS,GAAIc,EAAQ,GAC3CE,EAAUpvB,KAAKiV,IAAIia,EAAQ,GAC7B1zB,EAAI,EACDA,EAAI0zB,GACThxB,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOnC,EAAIT,KAAKkwB,QAAUe,EAAO3zB,EACzD0C,KAAKuV,OAAO2B,EAAGlF,MAAM1U,GAAGsF,OAAOpC,EAAIR,KAAKkwB,QAAU,GAAM,GAAIpuB,KAAKsV,IAAI9Z,EAAE4zB,KAC5E5zB,EAEG,IAAM6zB,EAAgBJ,EAAqBC,EACrCI,EAAWtvB,KAAKiV,GAAGoa,EACnBE,GAAW,EAAI,EAAErxB,KAAKkwB,SAAS,EAAGiB,EAExC,IADA7zB,EAAI,EACGA,EAAI6zB,GACTnxB,KAAKuV,OAAO2B,EAAGlF,MAAM1U,EAAE0zB,GAAOpuB,OAAOnC,EAAI,GAAM4wB,GAAQ/zB,EAAE,GACzD0C,KAAKuV,OAAO2B,EAAGlF,MAAM1U,EAAE0zB,GAAOpuB,OAAOpC,EAAIR,KAAKkwB,QAAU,GAAM,GAAIpuB,KAAKsV,IAAItV,KAAKiV,IAAIzZ,EAAE,GAAG8zB,KAC9F9zB,EAEG,IAAMg0B,EAAK,CAAC,IAAM,KACZC,EAAK,CAAC,GAAK,EAAEvxB,KAAKkwB,SAClBsB,EAAcxxB,KAAKuV,OAAOnU,OAAS2vB,EACnCU,GAAUF,EAAG,GAAGD,EAAG,KAAKE,EAAc,GACtC5Z,GAAS2Z,EAAG,GAAGD,EAAG,KAAKE,EAAc,GAE3C,IADAl0B,EAAI,EACGA,EAAIk0B,GACTxxB,KAAKuV,OAAO2B,EAAGlF,MAAM1U,EAAEyzB,GAAoBnuB,OAAOnC,EAAI6wB,EAAG,GAAKG,EAAOn0B,EACrE0C,KAAKuV,OAAO2B,EAAGlF,MAAM1U,EAAEyzB,GAAoBnuB,OAAOpC,EAAI8wB,EAAG,GAAK1Z,EAAMta,IACzEA,6YCWiB0U,EAAO0f,GACvB,IAAIzc,EAAME,EAAMhW,EAAI6S,EAAM5Q,OAE1B,GAAIswB,EACAzc,EAAOyc,EAAIzc,KACXE,EAAOuc,EAAIvc,SAEV,CACD,IAAID,GAAQ3S,IACR6S,GAAQ7S,IACZ0S,EAAOE,EAAO5S,IAEd,IAAK,IAAIjF,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIa,EAAI6T,EAAM1U,GACd4X,EAAOpT,KAAKC,IAAImT,EAAM/W,EAAEsC,GACxB2U,EAAOtT,KAAKC,IAAIqT,EAAMjX,EAAEqC,GACxByU,EAAOnT,KAAK8K,IAAIqI,EAAM9W,EAAEsC,GACxB0U,EAAOrT,KAAK8K,IAAIuI,EAAMhX,EAAEqC,GAG5BkxB,EAAM,CACFxc,KAAMA,EACNE,KAAMA,EACNH,KAAMA,EACNE,KAAMA,GAOd,IAHA,IAAIwc,EAAM1c,IAASyc,EAAIxc,KAAO,GAAKwc,EAAIxc,KAAOD,IAAUA,GAAQ,GAAM,GAClE2c,EAAMzc,IAASuc,EAAItc,KAAO,GAAKsc,EAAItc,KAAOD,IAAUA,GAAQ,GAAM,GAE7D7X,EAAI,EAAGA,EAAI6B,EAAG7B,IAAK,CACxB,IAAIa,EAAI6T,EAAM1U,GACda,EAAEsC,EAAIkxB,GAAOxzB,EAAEsC,EAAIwU,GACnB9W,EAAEqC,EAAIoxB,GAAOzzB,EAAEqC,EAAI2U,GAGvB,OAAOuc,gCAxEP,OAAOG,iCAGP,OAAOC,mCAGP,OAAOC,+BAGP,OAAOC,gCAGP,OAAOC,uCAGP,OAAOC,mCAMP,OAAOC,qCAGP,OAAOC,gCAGP,OAAOC,gCAGP,OAAOC,oCAEP,OAAOC,uZCxCSvuB,GAChB,GAAGA,EAAEI,OAAOA,OAAO,CACjB,IAAI3E,EAAIO,KAAKwyB,WAAWxuB,EAAEI,QACtBxF,EAAIoB,KAAKyyB,WAAWzuB,EAAEI,QAC1B,MAAO,CACC3D,GAAIhB,EAAEgB,EAAE7B,EAAE6B,GAAG,EACbD,GAAIf,EAAEe,EAAE5B,EAAE4B,GAAG,EACbkyB,OAAQ1uB,EAAE0uB,OACV9vB,MAAOoB,EAAEpB,MACT+vB,SAAS,EACT3uB,EAAGA,EAAEI,QAIf,OAAOJ,EAAEI,0CAGQJ,GACjB,GAAGA,EAAEyQ,OAAOrQ,OAAO,CAEjB,IAAI3E,EAAIO,KAAKwyB,WAAWxuB,EAAEyQ,QACtB7V,EAAIoB,KAAKyyB,WAAWzuB,EAAEyQ,QAE1B,MAAO,CACChU,GAAIhB,EAAEgB,EAAE7B,EAAE6B,GAAG,EACbD,GAAIf,EAAEe,EAAE5B,EAAE4B,GAAG,EACbkyB,OAAQ1uB,EAAE0uB,OACV9vB,MAAOoB,EAAEpB,MACT+vB,SAAS,EACT3uB,EAAGA,EAAEyQ,QAIf,OAAOzQ,EAAEyQ,6CAGWzQ,EAAGxF,GAGrB,IAFAA,EAAIA,GAAK,IACPiC,EAAIjC,EAAEgC,EAAIhC,EAAEwV,GAAKxV,EAAEyV,GAAK,GACtBjQ,EACF,OAAOxF,EACT,GAAGwF,EAAEpF,GAAKoF,EAAEpF,GAAK,EACf,GAAGoF,EAAEpF,GAAK,EAAE,CACV,IACIZ,EADIgC,KAAKwyB,WAAWxuB,GACdxD,EAAI,GAAM,GAAK,EAEzBhC,EAAEwV,GAAS,KAAJhW,EACPQ,EAAEyV,GAAK,MACJ,CACH,IAAI2e,EAAK5yB,KAAKwyB,WAAWxuB,GACrB6uB,EAAK7yB,KAAKyyB,WAAWzuB,GAEzBxF,EAAEiC,EAAImyB,EAAGnyB,EAAIoyB,EAAGpyB,EAChBjC,EAAEgC,EAAIoyB,EAAGpyB,EAAIqyB,EAAGryB,EAGpB,OAAOhC,iDChEb,SAASs0B,GAAMC,EAAYC,GACvB,KAAMhzB,gBAAgB8yB,IAAQ,OAAO,IAAIA,GAAMC,EAAYC,GAG3DhzB,KAAKizB,YAAcnxB,KAAKC,IAAI,EAAGgxB,GAAc,GAC7C/yB,KAAKkzB,YAAcpxB,KAAKC,IAAI,EAAGD,KAAKqxB,KAAwB,GAAnBnzB,KAAKizB,cAE1CD,GACAhzB,KAAKozB,YAAYJ,GAGrBhzB,KAAKgD,QA2cT,SAASqwB,GAASlhB,EAAMmhB,GACpBnhB,EAAKohB,KAAOC,GAASrhB,EAAM,EAAGA,EAAKG,SAASlR,OAAQkyB,GAIxD,SAASE,GAASrhB,EAAM/I,EAAG5J,EAAG8zB,GAG1B,IAFA,IAEgB5b,EAFZ6b,EAAOrR,KAEF5kB,EAAI8L,EAAU9L,EAAIkC,EAAGlC,IAC1Boa,EAAQvF,EAAKG,SAAShV,GACtBm2B,GAAOF,EAAMphB,EAAKZ,KAAO+hB,EAAO5b,GAASA,EAAM6b,MAGnD,OAAOA,EAGX,SAASrR,KAAU,MAAO,CAAC3f,IAAUA,KAAWA,KAAWA,KAE3D,SAASkxB,GAAOp2B,EAAGgG,GAKf,OAJAhG,EAAE,GAAKyE,KAAK8K,IAAIvP,EAAE,GAAIgG,EAAE,IACxBhG,EAAE,GAAKyE,KAAK8K,IAAIvP,EAAE,GAAIgG,EAAE,IACxBhG,EAAE,GAAKyE,KAAKC,IAAI1E,EAAE,GAAIgG,EAAE,IACxBhG,EAAE,GAAKyE,KAAKC,IAAI1E,EAAE,GAAIgG,EAAE,IACjBhG,EAGX,SAASq2B,GAAgBr2B,EAAGgG,GAAK,OAAOhG,EAAEk2B,KAAK,GAAKlwB,EAAEkwB,KAAK,GAC3D,SAASI,GAAgBt2B,EAAGgG,GAAK,OAAOhG,EAAEk2B,KAAK,GAAKlwB,EAAEkwB,KAAK,GAE3D,SAASK,GAASv2B,GAAO,OAAQA,EAAE,GAAKA,EAAE,KAAOA,EAAE,GAAKA,EAAE,IAC1D,SAASw2B,GAAWx2B,GAAK,OAAQA,EAAE,GAAKA,EAAE,IAAOA,EAAE,GAAKA,EAAE,IAiB1D,SAASy2B,GAASz2B,EAAGgG,GACjB,OAAOhG,EAAE,IAAMgG,EAAE,IACVhG,EAAE,IAAMgG,EAAE,IACVA,EAAE,IAAMhG,EAAE,IACVgG,EAAE,IAAMhG,EAAE,GAGrB,SAAS02B,GAAW12B,EAAGgG,GACnB,OAAOA,EAAE,IAAMhG,EAAE,IACVgG,EAAE,IAAMhG,EAAE,IACVgG,EAAE,IAAMhG,EAAE,IACVgG,EAAE,IAAMhG,EAAE,GAMrB,SAAS22B,GAAYtG,EAAKjnB,EAAMC,EAAOvH,EAAG80B,GAItC,IAHA,IACIC,EADAC,EAAQ,CAAC1tB,EAAMC,GAGZytB,EAAM/yB,SACTsF,EAAQytB,EAAMC,QACd3tB,EAAO0tB,EAAMC,QAEOj1B,IAGpBk1B,GAAO3G,EAAKjnB,EAAMC,EADlBwtB,EAAMztB,EAAO3E,KAAKqxB,MAAMzsB,EAAQD,GAAQtH,EAAI,GAAKA,EACnB80B,GAE9BE,EAAM1yB,KAAKgF,EAAMytB,EAAKA,EAAKxtB,IAMnC,SAAS2tB,GAAO3G,EAAKjnB,EAAMC,EAAO0C,EAAG6qB,GAGjC,IAFA,IAAI90B,EAAG7B,EAAGmvB,EAAGhtB,EAAG60B,EAAuB11B,EAAGgD,EAEnC8E,EAAQD,GAAM,CAmBjB,IAlBIC,EAAQD,EAAO,MACftH,EAAIuH,EAAQD,EAAO,EACnBnJ,EAAI8L,EAAI3C,EAAO,EACfgmB,EAAI3qB,KAAK6C,IAAIxF,GACbM,EAAI,GAAMqC,KAAKyyB,IAAI,EAAI9H,EAAI,GAC3B6H,EAAK,GAAMxyB,KAAKkR,KAAKyZ,EAAIhtB,GAAKN,EAAIM,GAAKN,IAAM7B,EAAI6B,EAAI,EAAI,GAAK,EAAI,GAGlEk1B,GAAO3G,EAFG5rB,KAAKC,IAAI0E,EAAM3E,KAAK0K,MAAMpD,EAAI9L,EAAImC,EAAIN,EAAIm1B,IACzCxyB,KAAK8K,IAAIlG,EAAO5E,KAAK0K,MAAMpD,GAAKjK,EAAI7B,GAAKmC,EAAIN,EAAIm1B,IAC7BlrB,EAAG6qB,IAGtCr1B,EAAI8uB,EAAItkB,GACR9L,EAAImJ,EACJ7E,EAAI8E,EAEJ8tB,GAAK9G,EAAKjnB,EAAM2C,GACZ6qB,EAAQvG,EAAIhnB,GAAQ9H,GAAK,GAAG41B,GAAK9G,EAAKjnB,EAAMC,GAEzCpJ,EAAIsE,GAAG,CAIV,IAHA4yB,GAAK9G,EAAKpwB,EAAGsE,GACbtE,IACAsE,IACOqyB,EAAQvG,EAAIpwB,GAAIsB,GAAK,GAAGtB,IAC/B,KAAO22B,EAAQvG,EAAI9rB,GAAIhD,GAAK,GAAGgD,IAGL,IAA1BqyB,EAAQvG,EAAIjnB,GAAO7H,GAAU41B,GAAK9G,EAAKjnB,EAAM7E,GAG7C4yB,GAAK9G,IADL9rB,EACa8E,GAGb9E,GAAKwH,IAAG3C,EAAO7E,EAAI,GACnBwH,GAAKxH,IAAG8E,EAAQ9E,EAAI,IAIhC,SAAS4yB,GAAK9G,EAAKpwB,EAAGsE,GAClB,IAAIic,EAAM6P,EAAIpwB,GACdowB,EAAIpwB,GAAKowB,EAAI9rB,GACb8rB,EAAI9rB,GAAKic,EAvkBbiV,GAAMxzB,UAAY,CAEdm1B,IAAK,WACD,OAAOz0B,KAAK00B,KAAK10B,KAAKqK,KAAM,KAGhCsqB,OAAQ,SAAUpB,GAEd,IAAIphB,EAAOnS,KAAKqK,KACZtG,EAAS,GACTuvB,EAAStzB,KAAKszB,OAElB,IAAKS,GAAWR,EAAMphB,EAAKohB,MAAO,OAAOxvB,EAKzC,IAHA,IACIzG,EAAGs3B,EAAKld,EAAOmd,EADfC,EAAgB,GAGb3iB,GAAM,CACT,IAAK7U,EAAI,EAAGs3B,EAAMziB,EAAKG,SAASlR,OAAQ9D,EAAIs3B,EAAKt3B,IAE7Coa,EAAQvF,EAAKG,SAAShV,GAGlBy2B,GAAWR,EAFfsB,EAAY1iB,EAAKZ,KAAO+hB,EAAO5b,GAASA,EAAM6b,QAGtCphB,EAAKZ,KAAMxN,EAAOtC,KAAKiW,GAClBoc,GAASP,EAAMsB,GAAY70B,KAAK00B,KAAKhd,EAAO3T,GAChD+wB,EAAcrzB,KAAKiW,IAGhCvF,EAAO2iB,EAAcV,MAGzB,OAAOrwB,GAGXgxB,SAAU,SAAUxB,GAEhB,IAAIphB,EAAOnS,KAAKqK,KACZipB,EAAStzB,KAAKszB,OAElB,IAAKS,GAAWR,EAAMphB,EAAKohB,MAAO,OAAO,EAKzC,IAHA,IACIj2B,EAAGs3B,EAAKld,EAAOmd,EADfC,EAAgB,GAGb3iB,GAAM,CACT,IAAK7U,EAAI,EAAGs3B,EAAMziB,EAAKG,SAASlR,OAAQ9D,EAAIs3B,EAAKt3B,IAK7C,GAHAoa,EAAQvF,EAAKG,SAAShV,GAGlBy2B,GAAWR,EAFfsB,EAAY1iB,EAAKZ,KAAO+hB,EAAO5b,GAASA,EAAM6b,MAEb,CAC7B,GAAIphB,EAAKZ,MAAQuiB,GAASP,EAAMsB,GAAY,OAAO,EACnDC,EAAcrzB,KAAKiW,GAG3BvF,EAAO2iB,EAAcV,MAGzB,OAAO,GAGXlvB,KAAM,SAAUmF,GACZ,IAAMA,IAAQA,EAAKjJ,OAAS,OAAOpB,KAEnC,GAAIqK,EAAKjJ,OAASpB,KAAKkzB,YAAa,CAChC,IAAK,IAAI51B,EAAI,EAAGs3B,EAAMvqB,EAAKjJ,OAAQ9D,EAAIs3B,EAAKt3B,IACxC0C,KAAKkR,OAAO7G,EAAK/M,IAErB,OAAO0C,KAIX,IAAImS,EAAOnS,KAAKg1B,OAAO3qB,EAAK+Q,QAAS,EAAG/Q,EAAKjJ,OAAS,EAAG,GAEzD,GAAKpB,KAAKqK,KAAKiI,SAASlR,OAIjB,GAAIpB,KAAKqK,KAAK/I,SAAW6Q,EAAK7Q,OAEjCtB,KAAKi1B,WAAWj1B,KAAKqK,KAAM8H,OAExB,CACH,GAAInS,KAAKqK,KAAK/I,OAAS6Q,EAAK7Q,OAAQ,CAEhC,IAAI4zB,EAAUl1B,KAAKqK,KACnBrK,KAAKqK,KAAO8H,EACZA,EAAO+iB,EAIXl1B,KAAKm1B,QAAQhjB,EAAMnS,KAAKqK,KAAK/I,OAAS6Q,EAAK7Q,OAAS,GAAG,QAfvDtB,KAAKqK,KAAO8H,EAkBhB,OAAOnS,MAGXkR,OAAQ,SAAUkkB,GAEd,OADIA,GAAMp1B,KAAKm1B,QAAQC,EAAMp1B,KAAKqK,KAAK/I,OAAS,GACzCtB,MAGXgD,MAAO,WAOH,OANAhD,KAAKqK,KAAO,CACRiI,SAAU,GACVhR,OAAQ,EACRiyB,KAAMrR,KACN3Q,MAAM,GAEHvR,MAGXq1B,OAAQ,SAAUD,GACd,IAAKA,EAAM,OAAOp1B,KASlB,IAPA,IAII1C,EAAGg4B,EAAQ1yB,EAAO2yB,EAJlBpjB,EAAOnS,KAAKqK,KACZkpB,EAAOvzB,KAAKszB,OAAO8B,GACnBI,EAAO,GACPC,EAAU,GAIPtjB,GAAQqjB,EAAKp0B,QAAQ,CASxB,GAPK+Q,IACDA,EAAOqjB,EAAKpB,MACZkB,EAASE,EAAKA,EAAKp0B,OAAS,GAC5B9D,EAAIm4B,EAAQrB,MACZmB,GAAU,GAGVpjB,EAAKZ,OAGU,KAFf3O,EAAQuP,EAAKG,SAASrO,QAAQmxB,IAO1B,OAHAjjB,EAAKG,SAASzP,OAAOD,EAAO,GAC5B4yB,EAAK/zB,KAAK0Q,GACVnS,KAAK01B,UAAUF,GACRx1B,KAIVu1B,GAAYpjB,EAAKZ,OAAQuiB,GAAS3hB,EAAKohB,KAAMA,GAOvC+B,GACPh4B,IACA6U,EAAOmjB,EAAOhjB,SAAShV,GACvBi4B,GAAU,GAEPpjB,EAAO,MAXVqjB,EAAK/zB,KAAK0Q,GACVsjB,EAAQh0B,KAAKnE,GACbA,EAAI,EACJg4B,EAASnjB,EACTA,EAAOA,EAAKG,SAAS,IAU7B,OAAOtS,MAGXszB,OAAQ,SAAU8B,GAAQ,OAAOA,GAEjCO,YAAa,SAAUt4B,EAAGgG,GAAK,OAAOhG,EAAE,GAAKgG,EAAE,IAC/CuyB,YAAa,SAAUv4B,EAAGgG,GAAK,OAAOhG,EAAE,GAAKgG,EAAE,IAE/CwyB,OAAQ,WAAc,OAAO71B,KAAKqK,MAElCyrB,SAAU,SAAUzrB,GAEhB,OADArK,KAAKqK,KAAOA,EACLrK,MAGX00B,KAAM,SAAUviB,EAAMpO,GAElB,IADA,IAAI+wB,EAAgB,GACb3iB,GACCA,EAAKZ,KAAMxN,EAAOtC,KAAK2L,MAAMrJ,EAAQoO,EAAKG,UACzCwiB,EAAcrzB,KAAK2L,MAAM0nB,EAAe3iB,EAAKG,UAElDH,EAAO2iB,EAAcV,MAEzB,OAAOrwB,GAGXixB,OAAQ,SAAUe,EAAOtvB,EAAMC,EAAOpF,GAElC,IAEI6Q,EAFA6jB,EAAItvB,EAAQD,EAAO,EACnBwvB,EAAIj2B,KAAKizB,YAGb,GAAI+C,GAAKC,EASL,OADA5C,GANAlhB,EAAO,CACHG,SAAUyjB,EAAM3a,MAAM3U,EAAMC,EAAQ,GACpCpF,OAAQ,EACRiyB,KAAM,KACNhiB,MAAM,GAEKvR,KAAKszB,QACbnhB,EAGN7Q,IAEDA,EAASQ,KAAKqxB,KAAKrxB,KAAK6C,IAAIqxB,GAAKl0B,KAAK6C,IAAIsxB,IAG1CA,EAAIn0B,KAAKqxB,KAAK6C,EAAIl0B,KAAKguB,IAAImG,EAAG30B,EAAS,KAG3C6Q,EAAO,CACHG,SAAU,GACVhR,OAAQA,EACRiyB,KAAM,KACNhiB,MAAM,GAKV,IAEIjU,EAAGsE,EAAGs0B,EAAQC,EAFdC,EAAKt0B,KAAKqxB,KAAK6C,EAAIC,GACnBI,EAAKD,EAAKt0B,KAAKqxB,KAAKrxB,KAAKkR,KAAKijB,IAKlC,IAFAjC,GAAY+B,EAAOtvB,EAAMC,EAAO2vB,EAAIr2B,KAAK21B,aAEpCr4B,EAAImJ,EAAMnJ,GAAKoJ,EAAOpJ,GAAK+4B,EAM5B,IAFArC,GAAY+B,EAAOz4B,EAFnB44B,EAASp0B,KAAK8K,IAAItP,EAAI+4B,EAAK,EAAG3vB,GAEA0vB,EAAIp2B,KAAK41B,aAElCh0B,EAAItE,EAAGsE,GAAKs0B,EAAQt0B,GAAKw0B,EAE1BD,EAASr0B,KAAK8K,IAAIhL,EAAIw0B,EAAK,EAAGF,GAG9B/jB,EAAKG,SAAS7Q,KAAKzB,KAAKg1B,OAAOe,EAAOn0B,EAAGu0B,EAAQ70B,EAAS,IAMlE,OAFA+xB,GAASlhB,EAAMnS,KAAKszB,QAEbnhB,GAGXmkB,eAAgB,SAAU/C,EAAMphB,EAAMokB,EAAOf,GAIzC,IAFA,IAAIl4B,EAAGs3B,EAAKld,EAAO8e,EAAYC,EAAMC,EAAaC,EAASC,EAgP7Cv5B,EAAGgG,EA7ObmyB,EAAK/zB,KAAK0Q,IAENA,EAAKZ,MAAQikB,EAAKp0B,OAAS,IAAMm1B,GAH5B,CAOT,IAFAI,EAAUC,EAAiBr0B,IAEtBjF,EAAI,EAAGs3B,EAAMziB,EAAKG,SAASlR,OAAQ9D,EAAIs3B,EAAKt3B,IAE7Cm5B,EAAO7C,IADPlc,EAAQvF,EAAKG,SAAShV,IACAi2B,MAqOhBl2B,EApOqBk2B,EAoOlBlwB,EApOwBqU,EAAM6b,MAAvCmD,GAqOJ50B,KAAKC,IAAIsB,EAAE,GAAIhG,EAAE,IAAMyE,KAAK8K,IAAIvJ,EAAE,GAAIhG,EAAE,MACxCyE,KAAKC,IAAIsB,EAAE,GAAIhG,EAAE,IAAMyE,KAAK8K,IAAIvJ,EAAE,GAAIhG,EAAE,KAtOWo5B,GAG7BG,GACdA,EAAiBF,EACjBC,EAAUF,EAAOE,EAAUF,EAAOE,EAClCH,EAAa9e,GAENgf,IAAgBE,GAEnBH,EAAOE,IACPA,EAAUF,EACVD,EAAa9e,GAKzBvF,EAAOqkB,GAAcrkB,EAAKG,SAAS,GAGvC,OAAOH,GAGXgjB,QAAS,SAAUC,EAAMmB,EAAOM,GAE5B,IAAIvD,EAAStzB,KAAKszB,OACdC,EAAOsD,EAASzB,EAAK7B,KAAOD,EAAO8B,GACnC0B,EAAa,GAGb3kB,EAAOnS,KAAKs2B,eAAe/C,EAAMvzB,KAAKqK,KAAMksB,EAAOO,GAOvD,IAJA3kB,EAAKG,SAAS7Q,KAAK2zB,GACnB3B,GAAOthB,EAAKohB,KAAMA,GAGXgD,GAAS,GACRO,EAAWP,GAAOjkB,SAASlR,OAASpB,KAAKizB,aACzCjzB,KAAK+2B,OAAOD,EAAYP,GACxBA,IAKRv2B,KAAKg3B,oBAAoBzD,EAAMuD,EAAYP,IAI/CQ,OAAQ,SAAUD,EAAYP,GAE1B,IAAIpkB,EAAO2kB,EAAWP,GAClBN,EAAI9jB,EAAKG,SAASlR,OAClBtD,EAAIkC,KAAKkzB,YAEblzB,KAAKi3B,iBAAiB9kB,EAAMrU,EAAGm4B,GAE/B,IAAIiB,EAAal3B,KAAKm3B,kBAAkBhlB,EAAMrU,EAAGm4B,GAE7CmB,EAAU,CACV9kB,SAAUH,EAAKG,SAASzP,OAAOq0B,EAAY/kB,EAAKG,SAASlR,OAAS81B,GAClE51B,OAAQ6Q,EAAK7Q,OACbiyB,KAAM,KACNhiB,MAAM,GAGNY,EAAKZ,OAAM6lB,EAAQ7lB,MAAO,GAE9B8hB,GAASlhB,EAAMnS,KAAKszB,QACpBD,GAAS+D,EAASp3B,KAAKszB,QAEnBiD,EAAOO,EAAWP,EAAQ,GAAGjkB,SAAS7Q,KAAK21B,GAC1Cp3B,KAAKi1B,WAAW9iB,EAAMilB,IAG/BnC,WAAY,SAAU9iB,EAAMilB,GAExBp3B,KAAKqK,KAAO,CACRiI,SAAU,CAACH,EAAMilB,GACjB91B,OAAQ6Q,EAAK7Q,OAAS,EACtBiyB,KAAM,KACNhiB,MAAM,GAEV8hB,GAASrzB,KAAKqK,KAAMrK,KAAKszB,SAG7B6D,kBAAmB,SAAUhlB,EAAMrU,EAAGm4B,GAElC,IAAI34B,EAAG+5B,EAAOC,EAAOC,EAASd,EAAMe,EAAYb,EAAS/zB,EAiJvCvF,EAAGgG,EACrB4R,EACAE,EACAD,EACAE,EAjJA,IAFAoiB,EAAab,EAAUp0B,IAElBjF,EAAIQ,EAAGR,GAAK24B,EAAIn4B,EAAGR,IACpB+5B,EAAQ7D,GAASrhB,EAAM,EAAG7U,EAAG0C,KAAKszB,QAClCgE,EAAQ9D,GAASrhB,EAAM7U,EAAG24B,EAAGj2B,KAAKszB,QA2IpBj2B,EAzIag6B,EAyIVh0B,EAzIiBi0B,EA0ItCriB,SACAE,SACAD,SACAE,SAHAH,EAAOnT,KAAKC,IAAI1E,EAAE,GAAIgG,EAAE,IACxB8R,EAAOrT,KAAKC,IAAI1E,EAAE,GAAIgG,EAAE,IACxB6R,EAAOpT,KAAK8K,IAAIvP,EAAE,GAAIgG,EAAE,IACxB+R,EAAOtT,KAAK8K,IAAIvP,EAAE,GAAIgG,EAAE,IA7IpBk0B,EA+IDz1B,KAAKC,IAAI,EAAGmT,EAAOD,GACnBnT,KAAKC,IAAI,EAAGqT,EAAOD,GA/IlBshB,EAAO7C,GAASyD,GAASzD,GAAS0D,GAG9BC,EAAUC,GACVA,EAAaD,EACb30B,EAAQtF,EAERq5B,EAAUF,EAAOE,EAAUF,EAAOE,GAE3BY,IAAYC,GAEff,EAAOE,IACPA,EAAUF,EACV7zB,EAAQtF,GAKpB,OAAOsF,GAIXq0B,iBAAkB,SAAU9kB,EAAMrU,EAAGm4B,GAEjC,IAAIN,EAAcxjB,EAAKZ,KAAOvR,KAAK21B,YAAcjC,GAC7CkC,EAAczjB,EAAKZ,KAAOvR,KAAK41B,YAAcjC,GACnC3zB,KAAKy3B,eAAetlB,EAAMrU,EAAGm4B,EAAGN,GAChC31B,KAAKy3B,eAAetlB,EAAMrU,EAAGm4B,EAAGL,IAIvBzjB,EAAKG,SAAS2D,KAAK0f,IAI9C8B,eAAgB,SAAUtlB,EAAMrU,EAAGm4B,EAAGhC,GAElC9hB,EAAKG,SAAS2D,KAAKge,GAEnB,IAII32B,EAAGoa,EAJH4b,EAAStzB,KAAKszB,OACdoE,EAAWlE,GAASrhB,EAAM,EAAGrU,EAAGw1B,GAChCqE,EAAYnE,GAASrhB,EAAM8jB,EAAIn4B,EAAGm4B,EAAG3C,GACrCsE,EAAS/D,GAAW6D,GAAY7D,GAAW8D,GAG/C,IAAKr6B,EAAIQ,EAAGR,EAAI24B,EAAIn4B,EAAGR,IACnBoa,EAAQvF,EAAKG,SAAShV,GACtBm2B,GAAOiE,EAAUvlB,EAAKZ,KAAO+hB,EAAO5b,GAASA,EAAM6b,MACnDqE,GAAU/D,GAAW6D,GAGzB,IAAKp6B,EAAI24B,EAAIn4B,EAAI,EAAGR,GAAKQ,EAAGR,IACxBoa,EAAQvF,EAAKG,SAAShV,GACtBm2B,GAAOkE,EAAWxlB,EAAKZ,KAAO+hB,EAAO5b,GAASA,EAAM6b,MACpDqE,GAAU/D,GAAW8D,GAGzB,OAAOC,GAGXZ,oBAAqB,SAAUzD,EAAMiC,EAAMe,GAEvC,IAAK,IAAIj5B,EAAIi5B,EAAOj5B,GAAK,EAAGA,IACxBm2B,GAAO+B,EAAKl4B,GAAGi2B,KAAMA,IAI7BmC,UAAW,SAAUF,GAEjB,IAAK,IAAyBqC,EAArBv6B,EAAIk4B,EAAKp0B,OAAS,EAAa9D,GAAK,EAAGA,IACZ,IAA5Bk4B,EAAKl4B,GAAGgV,SAASlR,OACb9D,EAAI,GACJu6B,EAAWrC,EAAKl4B,EAAI,GAAGgV,UACdzP,OAAOg1B,EAAS5zB,QAAQuxB,EAAKl4B,IAAK,GAExC0C,KAAKgD,QAETqwB,GAASmC,EAAKl4B,GAAI0C,KAAKszB,SAItCF,YAAa,SAAUJ,GAOnB,IAAI8E,EAAa,CAAC,WAAY,OAAQ,KAEtC93B,KAAK21B,YAAc,IAAIoC,SAAS,IAAK,IAAKD,EAAWrsB,KAAKunB,EAAO,KACjEhzB,KAAK41B,YAAc,IAAImC,SAAS,IAAK,IAAKD,EAAWrsB,KAAKunB,EAAO,KAEjEhzB,KAAKszB,OAAS,IAAIyE,SAAS,IAAK,YAAc/E,EAAOvnB,KAAK,OAAS,QAwI5DqnB,UCjlBTkF,GAAMlb,OAAOC,SAAW,MAM9B,SAASkb,GAASx3B,GACd,IAAMD,EAAIsB,KAAKguB,IAAIhuB,KAAK2U,IAAIhW,GAAI,EAAE,GAClC,OAAOA,EAAI,GAAKD,EAAIA,EAqDxB,SAAS03B,GAAkBz3B,EAAED,EAAEnD,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,GAavC,IAVA,IAKMimB,EA1DR,SAAoB96B,EAAGgG,EAAGtF,EAAGC,GACzB,GAAI8D,KAAK2U,IAAIpZ,GAAK,KAAM,CAEpB,GADAA,EAAIgG,EAAGA,EAAItF,EAAGA,EAAIC,EACd8D,KAAK2U,IAAIpZ,GAAK,KAEd,OADAA,EAAIgG,EAAGA,EAAItF,EACP+D,KAAK2U,IAAIpZ,GAAK,KACP,GACJ,EAAEgG,EAAEhG,GAGf,IAAMuxB,EAAIvrB,EAAEA,EAAI,EAAEhG,EAAEU,EACpB,OAAI+D,KAAK2U,IAAImY,GAAK,KACP,EAAEvrB,GAAG,EAAEhG,IACTuxB,EAAI,EACF,GAAGvrB,EAAEvB,KAAKkR,KAAK4b,KAAK,EAAEvxB,KAAMgG,EAAEvB,KAAKkR,KAAK4b,KAAK,EAAEvxB,IACnD,GAIX,IAEIqb,EAFElZ,GAAK,EAAEnC,EAAEU,EAAIsF,EAAEA,IAAI,EAAEhG,EAAEA,GACvBmX,GAAK,EAAEnR,EAAEA,EAAEA,EAAI,EAAEhG,EAAEgG,EAAEtF,EAAI,GAAGV,EAAEA,EAAEW,IAAI,GAAGX,EAAEA,EAAEA,GAGjD,GAAIyE,KAAK2U,IAAIjX,GAAK,KACdkZ,EAAQ,CAACuf,IAAUzjB,SAChB,GAAI1S,KAAK2U,IAAIjC,GAAK,KACrBkE,EAAQ,CAAC,GAAGzX,OAAOzB,EAAI,EAAI,CAACsC,KAAKkR,MAAMxT,IAAKsC,KAAKkR,MAAMxT,IAAM,QAC1D,CACH,IAAMovB,EAAIpa,EAAEA,EAAE,EAAIhV,EAAEA,EAAEA,EAAE,GACxB,GAAIsC,KAAK2U,IAAImY,GAAK,KACdlW,EAAQ,EAAE,IAAIlE,EAAEhV,EAAG,EAAEgV,EAAEhV,QACpB,GAAIovB,EAAI,EAAG,CACd,IAAMK,EAAIgJ,IAAUzjB,EAAE,EAAI1S,KAAKkR,KAAK4b,IACpClW,EAAQ,CAACuW,EAAIzvB,GAAG,EAAEyvB,QACf,CACH,IAAMA,EAAI,EAAEntB,KAAKkR,MAAMxT,EAAE,GACnBZ,EAAIkD,KAAKs2B,KAAK,EAAE5jB,EAAEhV,EAAEyvB,GAAG,EACvB7lB,EAAI,EAAEtH,KAAKiV,GAAG,EACpB2B,EAAQ,CAACuW,EAAEntB,KAAKqV,IAAIvY,GAAIqwB,EAAEntB,KAAKqV,IAAIvY,EAAEwK,GAAI6lB,EAAEntB,KAAKqV,IAAIvY,EAAE,EAAEwK,KAKhE,IAAK,IAAI9L,EAAI,EAAGA,EAAIob,EAAMtX,OAAQ9D,IAC9Bob,EAAMpb,IAAM+F,GAAG,EAAEhG,GAErB,OAAOqb,EAYQ2f,CALL,EAAEh7B,EAAEA,EAAK,GAAGA,EAAEgG,EAAI,EAAEhG,EAAEU,EAAK,GAAGsF,EAAEA,EAAI,GAAGA,EAAEtF,EAAI,EAAEA,EAAEA,EAAK,EAAEC,EAAEA,EAAK,GAAGA,EAAEgG,EAAI,EAAEhG,EAAEkU,EAAK,GAAGlO,EAAEA,EAAI,GAAGA,EAAEkO,EAAI,EAAEA,EAAEA,GACvG,GAAG7U,EAAEA,EAAI,GAAGA,EAAEgG,EAAI,GAAGhG,EAAEU,EAAI,GAAGsF,EAAEA,EAAI,GAAGA,EAAEtF,EAAI,GAAGC,EAAEA,EAAI,GAAGA,EAAEgG,EAAI,GAAGhG,EAAEkU,EAAI,GAAGlO,EAAEA,EAAI,GAAGA,EAAEkO,EACtF,GAAG7U,EAAEA,EAAI,GAAGA,EAAEgG,EAAI,EAAEhG,EAAEU,EAAK,EAAEV,EAAEoD,EAAK,EAAE4C,EAAEA,EAAK,EAAEA,EAAE5C,EAAK,EAAE1C,EAAE0C,EAAK,GAAGzC,EAAEA,EAAI,GAAGA,EAAEgG,EAAI,EAAEhG,EAAEkU,EAAK,EAAElU,EAAEwC,EAAK,EAAEwD,EAAEA,EAAI,EAAEA,EAAExD,EAAI,EAAE0R,EAAE1R,GACvH,EAAEnD,EAAEA,EAAK,EAAEA,EAAEgG,EAAK,EAAEhG,EAAEoD,EAAK,EAAE4C,EAAE5C,EAAK,EAAEzC,EAAEA,EAAK,EAAEA,EAAEgG,EAAK,EAAEhG,EAAEwC,EAAK,EAAEwD,EAAExD,GAM3E83B,EAAU/1B,IACNjF,EAAI,EAAGA,EAAI66B,EAAS/2B,OAAQ9D,IAAI,CACtC,IAAMsB,EAAIu5B,EAAS76B,GAEnB,KAAGsB,EAAI,GAAKA,EAAI,GAAhB,CAIA,IAGM25B,EAAOzlB,GAAUrS,EAAED,EAHdnD,GAAG,EAAEuB,IAAI,EAAEA,GAAG,EAAEyE,EAAEzE,GAAG,EAAEA,GAAGb,EAAEa,EAAEA,EAC9BZ,GAAG,EAAEY,IAAI,EAAEA,GAAG,EAAEoF,EAAEpF,GAAG,EAAEA,GAAGsT,EAAEtT,EAAEA,GAGtC25B,EAAOD,IACRA,EAAUC,IAId,OAAOD,EAOT,SAASE,GAAgB/0B,GAOvB,IANA,IAAIg1B,EAAOl2B,IACPm2B,GAAQD,EACRE,EAAOp2B,IACPq2B,GAAQD,EAGJr7B,EAAI,EAAGA,EAAImG,EAAErC,OAAQ9D,GAAG,EAAE,CAChC,IAAMu7B,EAAMp1B,EAAEnG,GACXu7B,EAAMJ,IAAMA,EAAOI,GACnBA,EAAMH,IAAMA,EAAOG,GAIxB,IAAI,IAAIv7B,EAAI,EAAGA,EAAImG,EAAErC,OAAQ9D,GAAG,EAAE,CAChC,IAAMu7B,EAAMp1B,EAAEnG,GACXu7B,EAAMF,IAAMA,EAAOE,GACnBA,EAAMD,IAAMA,EAAOC,GAGxB,MAAO,CAACJ,EAAME,EAAMD,EAAME,GAI5B,SAAS9lB,GAAU3B,EAAGC,EAAGC,EAAGC,GAC1B,IAAMN,EAAKG,EAAKE,EACVJ,EAAKG,EAAKE,EAChB,OAAON,EAAKA,EAAKC,EAAKA,EAIxB,SAAS6nB,GAAWr4B,EAAGD,EAAG2Q,EAAIC,EAAIC,EAAIC,GACpC,IAWIynB,EAAIC,EATFC,EAAI5nB,EAAKF,EACTyd,EAAItd,EAAKF,EAGT8nB,EAASD,EAAIA,EAAIrK,EAAIA,EACvBuK,GAAS,EAmBb,OAlBc,GAAVD,IACAC,IATM14B,EAAI0Q,GAKE8nB,GAJNz4B,EAAI4Q,GAIUwd,GAINsK,GAIdC,EAAQ,GACVJ,EAAK5nB,EACL6nB,EAAK5nB,GAEE+nB,EAAQ,GACfJ,EAAK1nB,EACL2nB,EAAK1nB,IAGLynB,EAAK5nB,EAAKgoB,EAAQF,EAClBD,EAAK5nB,EAAK+nB,EAAQvK,GAGb9b,GAAUrS,EAAED,EAAEu4B,EAAGC,GAG1B,SAASI,GAAmBC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,GAEzE,IAAIplB,GAAK8kB,EAAQI,IAAUC,EAAQF,IAAUJ,EAAQI,IAAUG,EAAQF,GACnE17B,GAAKu7B,EAAQF,IAAUO,EAAQF,IAAUF,EAAQF,IAAUK,EAAQF,GAEvE,GAAS,GAALz7B,EAEA,OAAO,EAGX,IAAIQ,EAAIgW,EAAIxW,EAGRyB,GADJ+U,GAAK8kB,EAAQI,IAAUH,EAAQF,IAAUA,EAAQI,IAAUD,EAAQF,IACvDt7B,EAEZ,QAAIQ,EAAI,GAAKA,EAAI,GAAKiB,EAAI,GAAKA,EAAI,GAQvC,SAASo6B,GAAYzlB,EAAGC,EAAIlD,EAAIC,EAAIC,EAAIC,GACtC,OAAO8C,GAAMjD,EAAK6mB,IAAO5jB,GAAM/C,EAAK2mB,IAAO3jB,GAAMjD,EAAK4mB,IAAO3jB,GAAM/C,EAAK0mB,GAqB1E,SAAS8B,GAAGz8B,EAAEgG,GACZ,OAAOhG,GAAKgG,EAAE20B,IAAO36B,GAAKgG,EAAE20B,GAG9B,SAAS+B,GAAI18B,EAAEgG,GACb,OAAQy2B,GAAGz8B,EAAEgG,GAIf,SAAS22B,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAEtT,EAAE4V,EAAE/U,EAAEjB,EAAEiF,GAC5C,GAAG7E,EAAI,GAAKA,EAAI,EACd,OAAO,EAET,GAAGm7B,GAAIt2B,EAAEhE,EAAE,GAAG,CACZ,IAAMgB,GAAKzC,GAAG,EAAEY,IAAI,EAAEA,GAAG,EAAEoF,EAAEpF,GAAG,EAAEA,GAAGsT,EAAEtT,EAAEA,IAAI6E,EAAEhE,GAC/C,GAAGgB,EAAI,GAAKA,EAAI,EACd,OAAO,EAGX,OAAO,EAGT,SAASw5B,GAAqB58B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,GAG7C,IAAI7E,EAEAs7B,GAAQ78B,EAAEoC,EAAEpC,EAAEoG,EAAE,EAAEJ,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAEzF,EAAEwW,EAAExW,EAAEQ,EAAE,EAAEwF,EAAEwQ,EAAE,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,EAClE,GAAGu7B,GAAIG,EAAM,IACRH,GAAIvlB,EAAEhW,EAAG,GAAG,CACb,IAAI27B,EAAM,EAAE98B,EAAEoC,EAAE,EAAEpC,EAAEoG,EAAE,EAAEJ,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE,EAAEzF,EAAEQ,EAAE,EAAEwF,EAAEwQ,EAAE,EAAExQ,EAAExF,EAC9CgyB,EAAK2J,EAAIA,EAAM,IAAI98B,EAAEoC,EAAEpC,EAAEoG,EAAEzF,EAAEwW,EAAExW,EAAEQ,EAAEgW,EAAE/Q,EAAEjF,EAAEiB,KAAKpC,EAAEoC,EAAEpC,EAAEoG,EAAE,EAAEJ,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAEzF,EAAEwW,EAAExW,EAAEQ,EAAE,EAAEwF,EAAEwQ,EAAE,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,GACxG,GAAGgyB,GAAM,EAAE,CACT,IAAM4J,EAAK/8B,EAAEoC,EAAEpC,EAAEoG,EAAEJ,EAAE5D,EAAE4D,EAAEI,EAAEzF,EAAEwW,EAAExW,EAAEQ,EAAEwF,EAAEwQ,EAAExQ,EAAExF,EAGzC,GAAGw7B,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,EADvC7E,GAAKw7B,EAAG,GAAIt4B,KAAKkR,KAAKwd,IAAK0J,GAEzB,OAAO,EAGT,GAAGF,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,EADvC7E,GAAKw7B,EAAG,GAAIt4B,KAAKkR,KAAKwd,IAAK0J,GAEzB,OAAO,GAMf,GADAA,GAAQ72B,EAAE5D,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAEO,EAAEwQ,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,EACnCs7B,GAAG97B,EAAG,EAAEgG,EAAEkO,IAAM4nB,GAAGz8B,EAAE,EAAEgG,EAAEtF,IAAMg8B,GAAIG,EAAM,IAAMH,GAAIvlB,EAAE/U,EAAE+U,EAAE/Q,EAAEjF,EAAEiB,EAAEjB,EAAEiF,EAAE,KACpE7E,GAAK,EAAEyE,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAE,EAAEO,EAAEwQ,EAAE,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,EAAEgW,EAAE/Q,EAAEjF,EAAEiB,EAEhDu6B,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,EADvC7E,GAAO,EAAEs7B,IAEP,OAAO,EAGX,GAAGJ,GAAGr6B,EAAEgE,IAAMq2B,GAAG97B,EAAE,EAAEgG,EAAEkO,IAAM6nB,GAAI/1B,EAAEkO,EAAE,IAAM6nB,GAAIvlB,EAAEhW,EAAE,IAE9Cw7B,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,EADvC7E,GAAK,EAAEoF,EAAEkO,EAAEzO,IAAI,GAAGO,EAAEkO,KAElB,OAAO,EAGX,IACI2mB,EAAMx1B,EAAErF,EAAEyB,EAAE4D,EAAErF,EAAEyF,EAAE,EAAEJ,EAAEW,EAAEvE,EAAE,EAAE4D,EAAEW,EAAEP,EAAEJ,EAAE6O,EAAEzS,EAAE4D,EAAE6O,EAAEzO,EAAE1F,EAAEC,EAAEyB,EAAE1B,EAAEC,EAAEyF,EAAE,EAAE1F,EAAEiG,EAAEvE,EAAE,EAAE1B,EAAEiG,EAAEP,EAAE1F,EAAEmU,EAAEzS,EAAE1B,EAAEmU,EAAEzO,EAAEzF,EAAEgG,EAAEwQ,EAAExW,EAAEgG,EAAExF,EAAER,EAAEkU,EAAEsC,EAAExW,EAAEkU,EAAE1T,EAAE,EAAEwF,EAAEA,EAAEwQ,EAAE,EAAExQ,EAAEA,EAAExF,EAAE,EAAEwF,EAAEkO,EAAEsC,EAAE,EAAExQ,EAAEkO,EAAE1T,EAAE0T,EAAEA,EAAEsC,EAAEtC,EAAEA,EAAE1T,EAC5J,SAAGs7B,GAAGz8B,GAFK,EAAEgG,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAEzF,EAAEwW,EAAExW,EAAEQ,EAAE,EAAEwF,EAAEwQ,EAAE,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,IAAIiB,EAAEgE,KAE9Cs2B,GAAIlB,EAAI,IAAMkB,GAAIvlB,EAAEhW,EAAG,IAEnCw7B,GAAiB38B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsC,EAAE/U,EAAEjB,EAAEiF,EADvC7E,GAAK,EAAEyE,EAAE5D,EAAE,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAE,EAAEO,EAAEwQ,EAAE,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,EAAEgW,EAAE/Q,EAAEjF,EAAEiB,IAAI,GAAG4D,EAAE5D,EAAE4D,EAAEI,EAAE1F,EAAE0B,EAAE1B,EAAE0F,EAAEO,EAAEwQ,EAAExQ,EAAExF,EAAE0T,EAAEsC,EAAEtC,EAAE1T,MAQ9F,SAAS67B,GAAqBh9B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGooB,EAAKC,EAAKC,EAAKC,GAEtD,GAAGZ,GAAYx8B,EAAGW,EAAGs8B,EAAKC,EAAKC,EAAKC,IAAQZ,GAAY97B,EAAGmU,EAAGooB,EAAKC,EAAKC,EAAKC,GAC3E,OAAO,EAET,IAGMC,EAAQJ,EAAIE,EACZG,EAAQJ,EAAIE,EAGdG,EAAUF,EAAMA,EAAQC,EAAMA,EAC9BE,EAAQ3C,IARKoC,EAAIE,GAAK,GACTD,EAAIE,GAAK,EAOsBp9B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,GAC1D,QAAS,EAAN2oB,EAAUD,KAEJ,EAANC,GAAW/4B,KAAK8K,IAAI8tB,EAAMA,EAAOC,EAAMA,KAGnCV,GAAqB58B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGqoB,EAAKC,EAAKD,EAAKA,IACpDN,GAAqB58B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsoB,EAAKD,EAAKC,EAAKC,IACjDR,GAAqB58B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGsoB,EAAKC,EAAKH,EAAKG,IACjDR,GAAqB58B,EAAEW,EAAEqF,EAAEW,EAAEjG,EAAEmU,EAAGooB,EAAKG,EAAKH,EAAKC,uUCzRzD,IAAIO,GAAK,GACT,SAASC,GAAavrB,EAASwrB,EAAYh3B,EAAG82B,GAK5C,IAAIG,EAAIC,EAAIC,EAAKC,EAJjBC,GAAmBC,cAAct3B,EAAE82B,GAMnCG,GAAOH,EAAGt6B,EACV06B,EAAMJ,EAAGr6B,EAAI+O,EAAQ+rB,QAErB,IAAIC,EAAOP,EAAIzrB,EAAQnO,MAAM45B,EAAIzrB,EAAQnO,MAAQ65B,EAAI1rB,EAAQlO,OAAO45B,EAAI1rB,EAAQlO,OAEhF,GAAGw4B,GAAG0B,EAAM,GACVP,EAAM,EACNC,EAAM,MACH,CACH,IAAItG,EAAM9yB,KAAKkR,KAAKwoB,GACpBP,GAA0B,IAAnBzrB,EAAQisB,SAAkBT,EAAapG,EAC9CsG,GAA0B,IAAnB1rB,EAAQisB,SAAkBT,EAAapG,EAGhD,IAAI8G,EAAQ,IAAMlsB,EAAQmsB,SAAWX,EAAaxrB,EAAQnO,MACtDu6B,EAAQ,IAAMpsB,EAAQmsB,SAAWX,EAAaxrB,EAAQlO,OAC1D65B,EAAgB,IAARL,EAAG7mB,GAAWynB,EACtBN,EAAe,GAARN,EAAG9mB,GAAW4nB,EAErBd,EAAGr6B,EAAIw6B,EAAME,EACbL,EAAGt6B,EAAI06B,EAAME,MAGTS,cACJ,SAAAA,EAAY18B,GAAE28B,GAAA97B,KAAA67B,GACZ77B,KAAKgE,EAAI7E,+CAMT,MAAO,CAACa,KAAKgE,EAAEvD,EAAEu3B,GAAKh4B,KAAKgE,EAAExD,EAAIw3B,GAAKh4B,KAAKgE,EAAEvD,EAAIu3B,GAAKh4B,KAAKgE,EAAExD,EAAIw3B,2CAEpD7mB,EAAGC,EAAGC,EAAGC,GACtB,OAAOuoB,GAAY75B,KAAKgE,EAAEvD,EAAGT,KAAKgE,EAAExD,EAAG2Q,EAAGC,EAAGC,EAAGC,iCAE5C7Q,EAAED,EAAGgP,GACT,OAAOsD,GAAUrS,EAAED,EAAER,KAAKgE,EAAEvD,EAAET,KAAKgE,EAAExD,kCATrC,OAAO,WAaLu7B,cACJ,SAAAA,EAAY58B,EAAG68B,EAAStxB,EAAOuxB,EAAUC,EAAOC,GAAaL,GAAA97B,KAAA+7B,GAC3D/7B,KAAKgE,EAAI7E,EACTa,KAAKgP,IAAMgtB,EACXh8B,KAAK0K,MAAQA,EACb1K,KAAKi8B,SAAWA,EAChBj8B,KAAKk8B,MAAQA,EACbl8B,KAAKm8B,aAAeA,gDAKX3sB,EAAQ1G,GACjB,IAGIqI,EAAGC,EAAGC,EAAGC,EAHT7Q,EAAIT,KAAKgE,EAAEvD,EACXD,EAAIR,KAAKgE,EAAExD,EAGf2Q,EAAKE,EAAK5Q,EACV2Q,EAAKE,EAAK9Q,EAEV,IAAI47B,EAAep8B,KAAKk8B,MAAQl8B,KAAKm8B,aAAa3sB,EAASxP,KAAK0K,MAAM2xB,OAAS,IAAMr8B,KAAKi8B,SAEtFK,EAAYF,EAAap8B,KAAKi8B,SAChB,IAAfG,IAAmBE,EAAY,GAElC,IAGMC,EAAS,GAAM/sB,EAAQmsB,SAGzBpI,EAAO,CAFE,OACD,QAiBZ,OAbAvzB,KAAKgP,IAAI1C,QAAQ,SAACvO,GAChB,IAAMy+B,GAAW,EAVR,SAACC,EAAMh8B,GAAP,OAAcA,EAAIg8B,EAAO,EAAI,EAUfloB,CAAK/T,EAAG,IAAO,GAAO+7B,EAC7CprB,EAAK1Q,EAAIqI,GAAS/K,EAAEiT,GAAKsrB,GAAc9sB,EAAQnO,MAAQ,EACvD+P,EAAK5Q,EAAIsI,GAAW/K,EAAEkT,GAAKqrB,EAAcE,GAAYhtB,EAAQlO,OAAS,EACtE+P,EAAK5Q,EAAIqI,IAAa/K,EAAEiT,GAAKjT,EAAEsD,OAAUi7B,GAAgB9sB,EAAQnO,MAAQ,EACzEiQ,EAAK9Q,EAAIsI,IAAa/K,EAAEkT,GAAKlT,EAAEuD,QAAWg7B,EAAcE,GAAYhtB,EAAQlO,OAAS,EAErFiyB,EAAK,GAAKzxB,KAAK8K,IAAIuE,EAAGoiB,EAAK,IAC3BA,EAAK,GAAKzxB,KAAK8K,IAAIwE,EAAGmiB,EAAK,IAC3BA,EAAK,GAAKzxB,KAAKC,IAAIsP,EAAGkiB,EAAK,IAC3BA,EAAK,GAAKzxB,KAAKC,IAAIuP,EAAGiiB,EAAK,MAGtBA,kCAED/jB,GACN,IAAIktB,EAAK18B,KAAK28B,WAAWntB,EAAQ,GAKjC,OAJAktB,EAAG,GAAK56B,KAAK8K,IAAI8vB,EAAG,GAAG18B,KAAKgE,EAAEvD,GAC9Bi8B,EAAG,GAAK56B,KAAK8K,IAAI8vB,EAAG,GAAG18B,KAAKgE,EAAExD,GAC9Bk8B,EAAG,GAAK56B,KAAKC,IAAI26B,EAAG,GAAG18B,KAAKgE,EAAEvD,GAC9Bi8B,EAAG,GAAK56B,KAAKC,IAAI26B,EAAG,GAAG18B,KAAKgE,EAAExD,GACvBk8B,yCAEMvrB,EAAGC,EAAGC,EAAGC,EAAG9B,EAAQ1G,GACjC,ID+DwB8zB,EAAKC,EAAKC,EAAKC,EAAKzC,EAAKC,EAAKC,EAAKC,EC/DvD77B,EAAIoB,KAAK28B,WAAWntB,EAAQ1G,GAChC,OD8DwB8zB,EC9DEzrB,ED8DG0rB,EC9DAzrB,ED8DK0rB,EC9DFzrB,ED8DO0rB,EC9DJzrB,ED8DSgpB,EC9DN17B,EAAE,GD8DS27B,EC9DN37B,EAAE,GD8DS47B,EC9DN57B,EAAE,GD8DS67B,EC9DN77B,EAAE,GD+DlDg+B,GAAOpC,GACNqC,GAAOpC,GACPqC,GAAOxC,GACPyC,GAAOxC,gCChET95B,EAAED,EAAGgP,EAAS1G,GAClB,IAAIlK,EAAIoB,KAAK28B,WAAWntB,EAAS1G,GAEjC,OAAG+wB,GAAYp5B,EAAED,EAAE5B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAC3B,EAGFkD,KAAK8K,IACVkG,GAAUlU,EAAE,GAAGA,EAAE,IACjBkU,GAAUlU,EAAE,GAAGA,EAAE,IACjBkU,GAAUlU,EAAE,GAAGA,EAAE,IACjBkU,GAAUlU,EAAE,GAAGA,EAAE,IACjBk6B,GAAWr4B,EAAED,EAAE5B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAChCk6B,GAAWr4B,EAAED,EAAE5B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAChCk6B,GAAWr4B,EAAED,EAAE5B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAChCk6B,GAAWr4B,EAAED,EAAE5B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,qCAlElC,OAAO,WAuELo+B,cACJ,SAAAA,EAAYr/B,GAAEm+B,GAAA97B,KAAAg9B,GACZh9B,KAAKgE,EAAIrG,+CAKD6R,EAAS1G,GACjB,IAAIqI,EAAGC,EAAGC,EAAGC,EAET7R,EAAI47B,GAAmB7I,WAAWxyB,KAAKgE,GACvCpF,EAAIy8B,GAAmB5I,WAAWzyB,KAAKgE,GAc3C,OAZAmN,EAAK1R,EAAEgB,EACP2Q,EAAK3R,EAAEe,EACP6Q,EAAKzS,EAAE6B,EACP6Q,EAAK1S,EAAE4B,EAEPu6B,GAAavrB,EAAS1G,EAAMrJ,EAAEuE,EAAG82B,IACjC3pB,GAAM2pB,GAAGr6B,EACT2Q,GAAM0pB,GAAGt6B,EACTu6B,GAAavrB,EAAS1G,EAAMlK,EAAEoF,EAAG82B,IAI1B,CAAC3pB,EAAGC,EAHXC,GAAMypB,GAAGr6B,EACT6Q,GAAMwpB,GAAGt6B,mCAIHgP,EAAS1G,GACf,IAAItJ,EAAIQ,KAAKi9B,UAAUztB,EAAS1G,GAEhC,MAAO,CAAChH,KAAK8K,IAAIpN,EAAE,GAAGA,EAAE,IAAKsC,KAAK8K,IAAIpN,EAAE,GAAGA,EAAE,IAAKsC,KAAKC,IAAIvC,EAAE,GAAGA,EAAE,IAAKsC,KAAKC,IAAIvC,EAAE,GAAGA,EAAE,4CAE1E2R,EAAGC,EAAGC,EAAGC,EAAI9B,EAAS1G,GACnC,IDcwB8zB,EAAKC,EAAKC,EAAKC,EAAKzC,EAAKC,EAAKC,EAAKC,ECdvDj7B,EAAIQ,KAAKi9B,UAAUztB,EAAS1G,GAEhC,ODYwB8zB,ECZEp9B,EAAE,GDYCq9B,ECZGr9B,EAAE,GDYAs9B,ECZIt9B,EAAE,GDYDu9B,ECZKv9B,EAAE,MDc3Cq6B,GAAY+C,EAAKC,EAFwBvC,ECZMnpB,EDYDopB,ECZInpB,EDYCopB,ECZEnpB,EDYGopB,ECZAnpB,KDcXuoB,GAAYiD,EAAKC,EAAKzC,EAAKC,EAAKC,EAAKC,KAG9ErB,GAAmBwD,EAAKC,EAAKC,EAAKC,EAAKzC,EAAKC,EAAKC,EAAKD,IACzDnB,GAAmBwD,EAAKC,EAAKC,EAAKC,EAAKvC,EAAKD,EAAKC,EAAKC,IACtDrB,GAAmBwD,EAAKC,EAAKC,EAAKC,EAAKvC,EAAKC,EAAKH,EAAKG,IACtDrB,GAAmBwD,EAAKC,EAAKC,EAAKC,EAAKzC,EAAKG,EAAKH,EAAKC,iCClBtD95B,EAAED,EAAGgP,EAAS1G,GAClB,IAAItJ,EAAIQ,KAAKi9B,UAAUztB,EAAS1G,GAEhC,OAAOgwB,GAAWr4B,EAAED,EAAEhB,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,mCAnCvC,OAAO,WAuCL09B,cACJ,SAAAA,EAAYn/B,GAAE+9B,GAAA97B,KAAAk9B,GACZl9B,KAAKgE,EAAIjG,qDAKKyR,EAASwrB,GACvB,IAAI7pB,EAAGC,EAAG3R,EAEV0R,GADA1R,EAAI47B,GAAmB7I,WAAWxyB,KAAKgE,IAChCvD,EACP2Q,EAAK3R,EAAEe,EAEP,IAAIsI,EAAO,IAAM0G,EAAQmsB,SAAWX,EAChCmC,EAAQr0B,EAAO0G,EAAQnO,MAAQ,EAC/B+7B,EAAQt0B,EAAO0G,EAAQlO,OAAS,EAEhCtD,EAAIyB,EAAEe,EAAI,GAAM,GAAK,EAMzB,OAJAu6B,GAAavrB,EAASwrB,EAAYv7B,EAAEuE,EAAG82B,IAIhC,CAHP3pB,GAAM2pB,GAAGr6B,EACT2Q,GAAM0pB,GAAGt6B,EAKP2Q,EAAW,EAANgsB,EACL/rB,EAAKgsB,EAAMp/B,EACXmT,EACAC,EAAW,KAANgsB,EAAWp/B,EAChBmT,EAAW,EAANgsB,EACL/rB,EAAKgsB,EAAMp/B,mCAGPwR,EAAS1G,GAGf,OAAO0vB,GAFCx4B,KAAKq9B,gBAAgB7tB,EAAS1G,2CAIzBqI,EAAGC,EAAGC,EAAGC,EAAI9B,EAAS1G,EAAMwlB,GACzC,IAAI7qB,EAAIzD,KAAKq9B,gBAAgB7tB,EAAQ1G,GACrC,OAAOuxB,GAAqB52B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAG0N,EAAGC,EAAGC,EAAGC,IAAO+oB,GAAqB52B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAG0N,EAAGC,EAAGC,EAAGC,iCAElI7Q,EAAED,EAAEgP,EAAQ1G,GAChB,IAAIrF,EAAIzD,KAAKq9B,gBAAgB7tB,EAAQ1G,GAGjCw0B,EAAKpF,GAAkBz3B,EAAED,EAAEiD,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtD85B,EAAKrF,GAAkBz3B,EAAED,EAAEiD,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAE1D,OAAO3B,KAAK8K,IAAI0wB,EAAGC,kCA7CnB,OAAO,WAiDLC,cACJ,SAAAA,EAAYz/B,GAAE+9B,GAAA97B,KAAAw9B,GACZx9B,KAAKgE,EAAIjG,qDAKKyR,EAAS1G,EAAMwlB,GAC7B,IAAInd,EAAGE,EAAGD,EAAGE,EACT7R,EAAI47B,GAAmB7I,WAAWxyB,KAAKgE,GACvCpF,EAAIy8B,GAAmB5I,WAAWzyB,KAAKgE,GAE3CmN,EAAK1R,EAAEgB,EACP2Q,EAAK3R,EAAEe,EACP6Q,EAAKzS,EAAE6B,EACP6Q,EAAK1S,EAAE4B,EAEP,IAAIxC,EAAIswB,EAAU7uB,EAAGb,GAEjB6+B,EAAKz/B,EAAEwC,EACPk9B,EAAKluB,EAAQ+rB,SAASv9B,EAAEyC,EAExBA,EAAI+O,EAAQnO,MAAQo8B,EACpBj9B,EAAIgP,EAAQlO,OAAQo8B,EACpB//B,EAAuB,EAAnBmE,KAAKkR,KAAKvS,EAAEA,EAAED,EAAEA,GAoBxB,OAlBAi9B,GAAMjuB,EAAQisB,SAAS3yB,EAAKnL,EAC5B+/B,GAAMluB,EAAQisB,SAAS3yB,EAAKnL,EAE5Bo9B,GAAavrB,EAAS1G,EAAMrJ,EAAEuE,EAAG82B,IACjC3pB,GAAM2pB,GAAGr6B,EACT2Q,GAAM0pB,GAAGt6B,EACTu6B,GAAavrB,EAAS1G,EAAMlK,EAAEoF,EAAG82B,IAIvB,CACR3pB,EACAC,GACCD,GANHE,GAAMypB,GAAGr6B,IAMC,EAAIg9B,GACXrsB,GANHE,GAAMwpB,GAAGt6B,IAMC,EAAIk9B,EACZrsB,EACAC,0CAIWH,EAAGC,EAAGC,EAAGC,EAAI9B,EAAS1G,EAAMwlB,GACzC,IAAI7qB,EAAIzD,KAAKq9B,gBAAgB7tB,EAAS1G,EAAMwlB,GAC5C,OAAO+L,GAAqB52B,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAG0N,EAAGC,EAAGC,EAAGC,mCAE7D9B,EAAS1G,EAAMwlB,GAErB,OAAOkK,GADCx4B,KAAKq9B,gBAAgB7tB,EAAS1G,EAAMwlB,kCAGxC7tB,EAAED,EAAGgP,EAAS1G,EAAMwlB,GACxB,IAAI7qB,EAAIzD,KAAKq9B,gBAAgB7tB,EAAS1G,EAAMwlB,GAC5C,OAAO4J,GAAkBz3B,EAAED,EAAEiD,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,mCAnDxD,OAAO,WAwDX,SAASk6B,GAAgBC,EAAIC,GAC3B,OAAOD,EAAG/C,MAAQgD,EAAGhD,MAIvB,IAAIiD,GAAS,CAAC9rB,MAAO6pB,GAAMkC,MAAOf,GAAMgB,QAASd,GAAQe,OAAQT,GAAOU,OAAQnC,IAE3DoC,cACnB,SAAAA,EAAYpgC,EAAGqgC,EAAOr+B,EAASiS,EAAOqsB,EAAYN,EAAOO,EAAYL,EAAQM,EAAaP,EAASQ,EAAclQ,EAAWmQ,EAAWtC,EAAcuC,GAAmB5C,GAAA97B,KAAAm+B,GAEtK,IAAsBQ,EAAU5gC,EAAE+K,MAAQ,EAAG/K,EAAE+K,KAAO,EAEtD9I,KAAKo+B,MAAQA,EACbp+B,KAAKsuB,UAAYA,EACjB,IAAI1vB,EAAIoB,KAAK4+B,MAAQ,CAAC5sB,MAAO,GAAI+rB,MAAO,GAAIC,QAAS,GAAIC,OAAQ,GAAIC,OAAQ,IACzE5gC,EAAI,EAAGU,EAAI,GAEX6gC,EAAY,SAAC76B,EAAGhG,EAAGV,GAGrB,OAFAU,EAAEV,GAAK0G,EAAE86B,QAAQ/gC,EARN,EAQeuwB,GAC1BtwB,EAAEV,GAAGmE,KAAKuC,GACHA,GAGTgO,EAAM1F,QAAQ,SAACnN,GACbP,EAAEoT,MAAMvQ,KAAKo9B,EAAU,IAAIhD,GAAK18B,GAAInB,EAAGV,QAGzCygC,EAAMzxB,QAAQ,SAAC3O,GACbiB,EAAEm/B,MAAMt8B,KAAKo9B,EAAU,IAAI7B,GAAKr/B,GAAIK,EAAGV,QAGzC0gC,EAAQ1xB,QAAQ,SAACvO,GACfa,EAAEo/B,QAAQv8B,KAAKo9B,EAAU,IAAI3B,GAAOn/B,GAAIC,EAAGV,QAG7C2gC,EAAO3xB,QAAQ,SAACvO,GACda,EAAEq/B,OAAOx8B,KAAKo9B,EAAU,IAAIrB,GAAMz/B,GAAIC,EAAGV,QAI3C,IAAIg3B,EAAK,GACLyK,EAAM,GAjC4JC,EAAA,SAqC9Jt0B,GACN,IAAIsH,EAAQqsB,EAAW3zB,GAGnB3L,EAAK+L,EAAkB/K,EAAQwN,OAAO7C,GAAO+zB,EAAU,SACvDQ,EAAab,EAAMc,UAAUngC,EAAGogC,MACpCF,EAAWG,QAAQrgC,EAAGogC,MACtB,IAAMlD,EAAWgD,EAAWhD,SACtBC,EAAQ+C,EAAW/C,MAErBmD,EAAQ/K,EAAG5pB,KAAW4pB,EAAG5pB,GAAS,IAClC40B,EAASP,EAAIr0B,KAAWq0B,EAAIr0B,GAAS,GAGzC3M,EAAE+K,KAAO41B,EAAmB3gC,EAAGgB,EAAGs9B,OAAS,IAC3CrqB,EAAM1F,QAAQ,SAACnN,GACb,IAAI68B,EAAUiD,EAAW1gC,IAAIY,EAAEk9B,MAAOl9B,EAAEsB,EAAGtB,EAAEqB,GAC7C5B,EAAEs/B,OAAOz8B,KAAKo9B,EAAU,IAAI9C,GAAM58B,EAAE68B,EAASj9B,EAAIk9B,EAAUC,EAAOC,GAAekD,EAAMC,QAGzFP,EAAIr0B,GAAS40B,GApBf,IAAI,IAAI50B,KAAS2zB,EAAWW,EAApBt0B,GAwBR,IAAI,IAAIA,KADR1K,KAAKu/B,YAAc,GACFjL,EAAG,EACPt0B,KAAKu/B,YAAY70B,GAASooB,MAChC5tB,KAAKovB,EAAG5pB,IAIf1K,KAAKw/B,UAAY1M,KACjB9yB,KAAKw/B,UAAUt6B,KAAKlH,GAIpBD,EAAE+K,KAAO61B,+CAEDc,EAAKz7B,EAAG62B,EAAO7oB,EAAOmB,EAAO+qB,GAClClsB,GAAShO,EAAE6yB,QACZ4I,EAAIztB,MAAMvQ,KAAK,CAAC0Q,KAAKnO,EAAEA,EAAGu0B,KAAMz2B,KAAKkR,KAAK6nB,GAAQA,MAAOA,IAExD1nB,GAASnP,EAAE07B,QACZD,EAAItsB,MAAM1R,KAAK,CAACg7B,KAAKz4B,EAAEA,EAAGu0B,KAAMz2B,KAAKkR,KAAK6nB,GAAQA,MAAOA,IAExDqD,GAAUl6B,EAAE27B,SACbF,EAAIvB,OAAOz8B,KAAK,CAAC46B,MAAMr4B,EAAEA,EAAGu0B,KAAMz2B,KAAKkR,KAAK6nB,GAAQA,MAAOA,qCAGtDrrB,EAAQ2B,EAAGC,EAAGC,EAAGC,EAAGxI,EAAKkJ,EAAMmB,EAAM+qB,GAC5C,GAAG/sB,EAAKE,EAAG,CACT,IAAI7R,EAAI2R,EACRA,EAAKE,EACLA,EAAK7R,EAEP,GAAG4R,EAAKE,EAAG,CACT,IAAI9R,EAAI4R,EACRA,EAAKE,EACLA,EAAK9R,EAIP,IAAIigC,EAAM,GACPtsB,IAAOssB,EAAItsB,MAAQ,IACnBnB,IAAOytB,EAAIztB,MAAQ,IACnBksB,IAAQuB,EAAIvB,OAAS,IAExB,IAAIz9B,GAAK0Q,EAAGE,GAAI,EACZ7Q,GAAK4Q,EAAGE,GAAI,EAEZjH,EAAOrK,KAAKw/B,UAAU7K,OAAO,CAACxjB,EAAG6mB,GAAK5mB,EAAG4mB,GAAK3mB,EAAG2mB,GAAM1mB,EAAG0mB,KAC9D,GAAGkG,EACC,IAAI,IAAIz+B,KAAKO,KAAKu/B,YACdl1B,EAAOA,EAAKpJ,OAAOjB,KAAKu/B,YAAY9/B,GAAGk1B,OAAO,CAACxjB,EAAG6mB,GAAK5mB,EAAG4mB,GAAK3mB,EAAG2mB,GAAM1mB,EAAG0mB,MAInF,IAAI,IAAI16B,EAAI,EAAGA,EAAI+M,EAAKjJ,OAAQ9D,IAAI,CAClC,IAAI0G,EAAIqG,EAAK/M,GAAG,GACZu9B,EAAQ72B,EAAE62B,MAAMp6B,EAAED,EAAGgP,EAAS1G,EAAM9I,KAAKsuB,UAAWtuB,KAAKo+B,OACzDp6B,EAAE47B,eAAezuB,EAAGC,EAAGC,EAAGC,EAAG9B,EAAS1G,EAAM9I,KAAKsuB,UAAWtuB,KAAKo+B,QAGrEp+B,KAAK6/B,UAAUJ,EAAKz7B,EAAG62B,EAAO7oB,EAAOmB,EAAO+qB,GAG9C,IAAI,IAAI90B,KAAKq2B,EACXA,EAAIr2B,GAAG6M,KAAK0nB,IAGd,OAAO8B,+BAEJjwB,EAAS/O,EAAED,EAAGs/B,EAAQh3B,EAAMkJ,EAAOmB,EAAO+qB,GAC7C,IAAIuB,EAAM,GACPtsB,IAAOssB,EAAItsB,MAAQ,IACnBnB,IAAOytB,EAAIztB,MAAQ,IACnBksB,IAAQuB,EAAIvB,OAAS,IAExB,IAAI6B,EAAUD,EACVE,EAAUF,EAEVG,EAAUH,EAAOA,EAEjBz1B,EAAOrK,KAAKw/B,UAAU7K,OAAO,CAACl0B,EAAIs/B,EAASv/B,EAAIw/B,EAASv/B,EAAIs/B,EAAUv/B,EAAIw/B,IAC9E,GAAG9B,EACC,IAAI,IAAIz+B,KAAKO,KAAKu/B,YACdl1B,EAAOA,EAAKpJ,OAAOjB,KAAKu/B,YAAY9/B,GAAGk1B,OAAO,CAACl0B,EAAIs/B,EAASv/B,EAAIw/B,EAASv/B,EAAIs/B,EAAUv/B,EAAIw/B,KAInG,IAAI,IAAI1iC,EAAI,EAAGA,EAAI+M,EAAKjJ,OAAQ9D,IAAI,CAClC,IAAI0G,EAAIqG,EAAK/M,GAAG,GACZu9B,EAAQ72B,EAAE62B,MAAMp6B,EAAED,EAAGgP,EAAS1G,EAAM9I,KAAKsuB,UAAWtuB,KAAKo+B,OAC1DvD,EAAQoF,GAGXjgC,KAAK6/B,UAAUJ,EAAKz7B,EAAG62B,EAAO7oB,EAAOmB,EAAO+qB,GAG9C,IAAI,IAAI90B,KAAKq2B,EACXA,EAAIr2B,GAAG6M,KAAK0nB,IAGd,OAAO8B,iCAEFjwB,EAAS5Q,EAAGtB,EAAGmG,GAIpBzD,KAAKw/B,UAAUnK,OAAOr1B,KAAK4+B,MAAMhgC,GAAGtB,IAEpC,IAAI0G,EAAI,IAAI85B,GAAOl/B,GAAG6E,GAClBiqB,EAAM1pB,EAAE86B,QAAQtvB,EALT,EAKwBxP,KAAKsuB,UAAWtuB,KAAKo+B,OACxD1Q,EAAIjsB,KAAKuC,GAEThE,KAAKw/B,UAAUtuB,OAAOlR,KAAK4+B,MAAMhgC,GAAGtB,GAAKowB,YCvdvCwS,GAAgB,CAClBC,OC3BW,gDD4BXC,SE5BW,oJF6BXC,UG7BW,kIH8BXC,YI9BW,iIJ+BXC,SK/BW,oFLgCXC,UMhCW,uFNiCXC,YOjCW,6LPkCXC,YQlCW,qmBRmCXC,aSnCW,whBToCXC,eUpCW,8qBVqCXC,cWrCW,kEXsCXC,eYtCW,8DZuCXC,iBavCW,gKbwCXC,UcxCW,gDdyCXC,WezCW,yDf0CXC,agB1CW,sHhB2CXC,WiB3CW,oDjB4CXC,YkB5CW,kFlB6CXC,cmB7CW,wHnB8CXC,WoB9CW,sDpB+CXC,YqB/CW,8ErBgDXC,csBhDW,sHtBiDXC,WuBjDW,sDvBkDXC,YwBlDW,yGxBmDXC,cyBnDW,mKCAAC,GAAA,uWCAAC,GAAA,8VCAAC,GAAA,+gBCAAC,GAAA,8nBCAAC,GAAA,64BCAAC,GAAA,wlCCkCTC,GAAS,CClCA,qgBDkCaN,GElCb,kYFkCwCn2B,KAAK,MACtD02B,GAAU,CGnCD,2UHmCeP,GInCf,8ZJmC2Cn2B,KAAK,MACzD22B,GAAW,CKpCF,2ULoCiBR,GMpCjB,+RNoC8Cn2B,KAAK,MAE5D42B,GAAc,COtCL,uTPsCuBT,GQtCvB,0bRsCuDn2B,KACpE,MAEI62B,GAAe,CSzCN,8UTyCyBV,GUzCzB,wiBVyC0Dn2B,KACvE,MAEI82B,GAAgB,CW5CP,uTX8CbX,GY9Ca,4ZZgDbn2B,KAAK,MAED+2B,GAAmB,SAAAC,GACvB,SAAAxhC,OAAUi/B,GAAcuC,GAAc,YAalCC,GAAiB,CACrBR,UACAS,cAZoB,SAAAF,GACpB,MAAO,CACLZ,GACAW,GAAiBC,GACjBX,GACAC,GACAC,IACAv2B,KAAK,OAMPm3B,YanEa,ksBboEbC,ecpEa,iMdqEbC,kBerEa,yLfsEbC,egBtEa,8ZhBuEbC,eiBvEa,mlBjBwEbf,WACAE,WACAc,SAAUhB,GACVG,YACAc,OkB5Ea,+SlB6EbC,cmB7Ea,2WnB8Ebd,eACAC,gBACAC,kBoBhFIjU,GAAY,SAACjxB,EAAGgG,GACpB,IAAI5C,EAAI4C,EAAE5C,EAAIpD,EAAEoD,EACZD,EAAI6C,EAAE7C,EAAInD,EAAEmD,EACZ4iC,EAAK,EAAIthC,KAAKkR,KAAKvS,EAAIA,EAAID,EAAIA,GACnC,MAAO,CAAEC,EAAG2iC,EAAK3iC,EAAGD,EAAG4iC,EAAK5i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","file":"ccNetViz.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n/**\r\n * @class\r\n * @classdesc Describes color properties that could be given to the shader.\r\n * @member {number} r\r\n * @member {number} g\r\n * @member {number} b\r\n * @member {number} a\r\n */\r\n\r\n\r\nexport default class Color {\r\n    constructor(color) {\r\n\r\n        // Default value for red, blue and green.\r\n        // Black color is rendered.\r\n        this.r = this.g = this.b = 0;\r\n        this.a = 1;\r\n\r\n        if (color instanceof Color) {\r\n            this.r = color.r;\r\n            this.g = color.g;\r\n            this.b = color.b;\r\n            this.a = color.a;\r\n        } else if (arguments.length >= 3) {\r\n\r\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\r\n            // Aplha value is optional.\r\n            this.r = arguments[0];\r\n            this.g = arguments[1];\r\n            this.b = arguments[2];\r\n            arguments.length > 3 && (this.a = arguments[3]);\r\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\r\n            // Aplha value is optional.\r\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n            this.a = get(color[4]);\r\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\r\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\r\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 100;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\r\n\r\n            // color is of the form '#23ff74'.\r\n            color = parseInt(color.substring(1), 16);\r\n\r\n            // Converts to range [0,1] by using bitwise operator.\r\n            this.r = (color >> 16 & 255) / 255;\r\n            this.g = (color >> 8 & 255) / 255;\r\n            this.b = (color & 255) / 255;\r\n        }\r\n    }\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n // initialises webGL\r\n\r\nexport default class {\r\n  static initExtensions(gl) {\r\n      let extensions = gl.getSupportedExtensions();\r\n      let result = {};\r\n      for (let i = 1; i < arguments.length; i++) {\r\n          let e = arguments[i];\r\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\r\n      }\r\n      return result;\r\n  }\r\n  // compiles shader \r\n  \r\n  static createShader(gl, type, source) {\r\n      let result = gl.createShader(type);\r\n      gl.shaderSource(result, source);\r\n      gl.compileShader(result);\r\n\r\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\r\n          console.log(gl.getShaderInfoLog(result));\r\n          return null;\r\n      }\r\n      return result;\r\n  }\r\n\r\n// texture binding\r\n\r\n  static createTexture(gl, img, onLoad, options) {\r\n      let result = gl.createTexture();\r\n\r\n      let image = new Image();\r\n      \r\n      let load = () => {\r\n            image.onload = null;\r\n            gl.bindTexture(gl.TEXTURE_2D, result);\r\n\r\n            //refer article https://open.gl/textures\r\n\r\n            if((options || {}).sdf){\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }else{\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            onLoad && onLoad();\r\n      }\r\n\r\n      image.onload = load;\r\n      image.src = img;\r\n      image.naturalWidth && image.naturalHeight && load();\r\n      \r\n      result.image = image;\r\n      return result;\r\n  }\r\n\r\n  static uniformColor(gl, location, color) {\r\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\r\n  }\r\n\r\n  static ortho(left, right, bottom, top, near, far) {\r\n      let lr = 1 / (left - right),\r\n          bt = 1 / (bottom - top),\r\n          nf = 1 / (near - far);\r\n\r\n      let result = new Float32Array(16);\r\n      result[0] = -2 * lr;\r\n      result[1] = 0;\r\n      result[2] = 0;\r\n      result[3] = 0;\r\n      result[4] = 0;\r\n      result[5] = -2 * bt;\r\n      result[6] = 0;\r\n      result[7] = 0;\r\n      result[8] = 0;\r\n      result[9] = 0;\r\n      result[10] = 2 * nf;\r\n      result[11] = 0;\r\n      result[12] = (left + right) * lr;\r\n      result[13] = (top + bottom) * bt;\r\n      result[14] = (far + near) * nf;\r\n      result[15] = 1;\r\n      return result;\r\n  }\r\n};\r\n","import ccNetViz_gl from './gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nvar defaultAttr = {color: 4};\r\n\r\nexport default class Shader {\r\n  constructor(gl, vs, fs, shaderParams) {\r\n    this._gl = gl;\r\n    this._vs = vs;\r\n    this._fs = fs;\r\n    \r\n    let program = this._program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\r\n    gl.linkProgram(program);\r\n    \r\n    this.uniforms = {};\r\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveUniform(program, i).name;\r\n        this.uniforms[name] = gl.getUniformLocation(program, name);\r\n    }\r\n    \r\n    let attrParams = (shaderParams || {}).attribute || {};\r\n\r\n    this.attributes = {};\r\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveAttrib(program, i).name;\r\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\r\n    }\r\n    \r\n  }\r\n  \r\n  static get attribute(){\r\n    return defaultAttr;\r\n  }\r\n  \r\n  bind () {\r\n    this._gl.useProgram(this._program);\r\n\r\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\r\n  }\r\n\r\n  unbind () {\r\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\r\n  }\r\n  \r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class Utils {\r\n  static extend(from){\r\n    for(var i = 1; i < arguments.length; i++){\r\n      for(var k in arguments[i]){\r\n        from[k] = arguments[i][k];\r\n      }\r\n    }\r\n    return from;\r\n  }\r\n  \r\n  static isObject (obj) {\r\n    return obj === Object(obj);\r\n  }\r\n  \r\n  static emptyObject(obj) {\r\n    if(!Utils.isObject(obj))\r\n      return false;\r\n\r\n    for(var k in obj)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  static ajax(url, callback, type){\r\n    var xmlhttp;\r\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\r\n    xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = (function(cbk){\r\n      return function(){\r\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\r\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\r\n        }\r\n      }\r\n    })(callback);\r\n    if(type) xmlhttp.responseType=type;\r\n    xmlhttp.open(\"GET\", url, true);\r\n    xmlhttp.send();\r\n  }\r\n\r\n};","import ccNetViz_color  from './color' ;\r\n\r\nfunction partitionByStyle(data){\r\n    let parts = {};\r\n    \r\n    let pN = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let el = data[i];\r\n        let part = parts[el.style] = parts[el.style] || [];\r\n        if(part.idx === undefined)\r\n          part.idx = [];\r\n        part.idx.push(i); \r\n\r\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\r\n        \r\n        part.push(el);\r\n    }\r\n    \r\n    return parts;\r\n}\r\n\r\nfunction getPartitionStyle(style, baseStyle, styleProperty){\r\n    let result = {};\r\n\r\n    let copy = s => {\r\n        if (s) for (let p in s) result[p] = s[p];\r\n    };\r\n\r\n    copy(baseStyle);\r\n    copy(style);\r\n\r\n    if (styleProperty) {\r\n        copy(baseStyle[styleProperty]);\r\n        style && copy(style[styleProperty]);\r\n    }\r\n    result.color = result.color && new ccNetViz_color(result.color);\r\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\r\n    return result;\r\n};\r\n\r\n\r\nexport {partitionByStyle, getPartitionStyle};","import ccNetViz_shader from './shader';\r\nimport ccNetViz_utils from './utils';\r\nimport { getPartitionStyle } from './primitiveTools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class primitive {\r\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\r\n    if (Array.isArray(vs)) {\r\n      vs = vs.join('\\n');\r\n    }\r\n    if (Array.isArray(fs)) {\r\n      fs = fs.join('\\n');\r\n    }\r\n    let shader = new ccNetViz_shader(gl, vs, fs, shaderParams);\r\n    let buffers = [];\r\n    let sections = [];\r\n\r\n    let sectionsByStyle = {};\r\n\r\n    let e = {};\r\n    let iV,\r\n      iI,\r\n      iS = 0,\r\n      iB = 0;\r\n\r\n    let partLength = (filler, part) => {\r\n      if (filler.size) {\r\n        let n = 0;\r\n        part.forEach(p => {\r\n          n += filler.size(e, p);\r\n        });\r\n        return n;\r\n      } else {\r\n        return part.length;\r\n      }\r\n      return;\r\n    };\r\n\r\n    let init = (filler, n) => {\r\n      iV = iI = 0;\r\n      let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\r\n      let nV = Math.min(max, n - (iB - iS) * max);\r\n      let nI = nV * filler.numIndices;\r\n\r\n      if (!e.indices || e.indices.length !== nI) {\r\n        e.indices = new Uint16Array(nI);\r\n        nV *= filler.numVertices;\r\n        for (let a in shader.attributes)\r\n          e[a] = new Float32Array(shader.attributes[a].size * nV);\r\n      }\r\n    };\r\n\r\n    let zerofiller = {\r\n      set: (v, iV, iI, numVertices, numIndices) => {\r\n        let indicesarr = [v.indices, iV, iI];\r\n        for (let i = 0; i < numIndices; i++) indicesarr.push(0);\r\n\r\n        let verticesarr = [undefined, iV, iI];\r\n        for (let i = 0; i < numVertices; i++) verticesarr.push(0);\r\n\r\n        for (var k in v) {\r\n          if (k === 'indices') {\r\n            primitive.indices.apply(this, indicesarr);\r\n          } else {\r\n            verticesarr[0] = v[k];\r\n            primitive.vertices.apply(this, verticesarr);\r\n          }\r\n        }\r\n      },\r\n    };\r\n\r\n    this.set = (gl, styles, adder, data, parts, get) => {\r\n      var isDirty = false;\r\n\r\n      iS = 0;\r\n      iB = 0;\r\n\r\n      this._iIs = new Uint32Array(data.length);\r\n      this._iVs = new Uint32Array(data.length);\r\n      this._iBs = new Uint8Array(data.length);\r\n      this._sizes = new Uint8Array(data.length);\r\n\r\n      let store = section => {\r\n        let b = buffers[iB];\r\n        if (!b) {\r\n          buffers[iB] = b = {};\r\n          for (let a in e) b[a] = gl.createBuffer();\r\n        }\r\n        for (let a in shader.attributes) {\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n          gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\r\n        b.numIndices = iI;\r\n        b.numVertices = iV;\r\n        section.buffers.push(b);\r\n        iB++;\r\n      };\r\n\r\n      sections = [];\r\n      for (let p in parts) {\r\n        iS = iB;\r\n\r\n        let section = {\r\n          style: getPartitionStyle(styles[p], baseStyle, styleProperty),\r\n          buffers: [],\r\n          styleName: p,\r\n        };\r\n\r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n        filler.numIndices = filler.numIndices || 6;\r\n\r\n        let part = parts[p];\r\n\r\n        let pL = partLength(filler, part);\r\n        init(filler, pL);\r\n        let max = primitive.maxBufferSize;\r\n        for (let i = 0; i < part.length; i++) {\r\n          let s = filler.size ? filler.size(e, part[i]) : 1;\r\n          let niV = iV + s * filler.numVertices;\r\n          let niI = iI + s * filler.numIndices;\r\n\r\n          if (niV >= max) {\r\n            store(section);\r\n            init(filler, pL);\r\n            niV = iV;\r\n            niI = iI;\r\n          }\r\n\r\n          if (filler.set(e, part[i], iV, iI)) isDirty = true;\r\n\r\n          let idx = part.idx[i];\r\n          this._iIs[idx] = iI;\r\n          this._iVs[idx] = iV;\r\n          this._iBs[idx] = iB;\r\n          this._sizes[idx] = s;\r\n\r\n          iI = niI;\r\n          iV = niV;\r\n        }\r\n        store(section);\r\n\r\n        function add() {\r\n          sections.push(this);\r\n          sectionsByStyle[this.styleName] = this;\r\n        }\r\n        let addSection = add.bind(section);\r\n\r\n        adder ? adder(section, addSection) : addSection();\r\n      }\r\n\r\n      return isDirty;\r\n    };\r\n\r\n    let fb;\r\n    this.update = function(gl, attribute, data, get) {\r\n      let i = 0,\r\n        size = shader.attributes[attribute].size;\r\n      sections.forEach(function(section) {\r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n\r\n        section.buffers.forEach(function(e) {\r\n          (!fb || fb.length !== size * e.numVertices) &&\r\n            (fb = new Float32Array(size * e.numVertices));\r\n          for (\r\n            let iV = 0;\r\n            iV < e.numVertices;\r\n            iV +=\r\n              (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices\r\n          )\r\n            filler.set(fb, data[i++], iV);\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\r\n          gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\r\n        });\r\n      });\r\n    };\r\n\r\n    this.updateEl = (gl, el, pos, get) => {\r\n      let storeToPos = (b, iV, iI) => {\r\n        for (let a in shader.attributes) {\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n          gl.bufferSubData(\r\n            gl.ARRAY_BUFFER,\r\n            shader.attributes[a].size * iV * e[a].BYTES_PER_ELEMENT,\r\n            e[a]\r\n          );\r\n        }\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n        gl.bufferSubData(\r\n          gl.ELEMENT_ARRAY_BUFFER,\r\n          iI * e.indices.BYTES_PER_ELEMENT,\r\n          e.indices\r\n        );\r\n      };\r\n\r\n      let section = sectionsByStyle[el.style];\r\n\r\n      let filler = get(section.style);\r\n      filler.numVertices = filler.numVertices || 4;\r\n      filler.numIndices = filler.numIndices || 6;\r\n\r\n      iB = iS = 0;\r\n\r\n      let buffer = section.buffers[this._iBs[pos]];\r\n      let s = filler.size ? filler.size(buffer, el) : 1;\r\n      let olds = this._sizes[pos];\r\n      if (s > olds) {\r\n        console.error(\r\n          'Cannot set primitive to new value which has greater size (' +\r\n            s +\r\n            ' > ' +\r\n            olds +\r\n            ') - no enough empty space to fill in GL buffer'\r\n        );\r\n        return;\r\n      }\r\n\r\n      init(filler, olds);\r\n      filler.set(e, el, 0, 0);\r\n\r\n      for (; s < olds; s++) {\r\n        //zero fill empty spaces\r\n        zerofiller.set(\r\n          e,\r\n          s * filler.numVertices,\r\n          s * filler.numIndices,\r\n          filler.numVertices,\r\n          filler.numIndices\r\n        );\r\n      }\r\n\r\n      let iV = this._iVs[pos];\r\n      let iI = this._iIs[pos];\r\n      storeToPos(buffer, iV, iI);\r\n    };\r\n\r\n    this.draw = context => {\r\n      context.shader = shader;\r\n      shader.bind();\r\n\r\n      gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\r\n      gl.uniform1f(shader.uniforms.time, context.renderTime);\r\n\r\n      sections.forEach(section => {\r\n        if (section.style.texture) {\r\n          section.style.texture.update && section.style.texture.update();\r\n          gl.activeTexture(gl.TEXTURE0);\r\n          gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\r\n          gl.uniform1i(shader.uniforms.texture, 0);\r\n        }\r\n\r\n        context.style = section.style;\r\n        if (bind(context)) return;\r\n\r\n        section.buffers.forEach(e => {\r\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\r\n\r\n          for (var a in shader.attributes) {\r\n            var attribute = shader.attributes[a];\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\r\n            gl.vertexAttribPointer(\r\n              attribute.index,\r\n              attribute.size,\r\n              gl.FLOAT,\r\n              false,\r\n              0,\r\n              0\r\n            );\r\n          }\r\n\r\n          gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\r\n        });\r\n      });\r\n\r\n      shader.unbind();\r\n    };\r\n  }\r\n\r\n  static vertices(buffer, iV) {\r\n    for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = arguments[i];\r\n  }\r\n\r\n  static singles(buffer, iV) {\r\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = arguments[i];\r\n  }\r\n\r\n  static colors(buffer, iV) {\r\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\r\n      let c = arguments[i];\r\n      buffer[j++] = c.r;\r\n      buffer[j++] = c.g;\r\n      buffer[j++] = c.b;\r\n      buffer[j++] = c.a;\r\n    }\r\n  }\r\n\r\n  static indices(buffer, iV, iI) {\r\n    for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = iV + arguments[i];\r\n  }\r\n\r\n  static quad(buffer, iV, iI) {\r\n    primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\r\n  }\r\n\r\n  static get maxBufferSize() {\r\n    return 65536;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(points) {\r\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n\r\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n    xs = [], ys = [];\r\n    n = points.length;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n        d = points[i];\r\n        if (d.x < x1_) x1_ = d.x;\r\n        if (d.y < y1_) y1_ = d.y;\r\n        if (d.x > x2_) x2_ = d.x;\r\n        if (d.y > y2_) y2_ = d.y;\r\n        xs.push(d.x);\r\n        ys.push(d.y);\r\n    }\r\n\r\n    let dx = x2_ - x1_;\r\n    let dy = y2_ - y1_;\r\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\r\n\r\n    function create() {\r\n        return {\r\n            leaf: true,\r\n            nodes: [],\r\n            point: null,\r\n            x: null,\r\n            y: null\r\n        };\r\n    }\r\n\r\n    function visit(f, node, x1, y1, x2, y2) {\r\n        if (!f(node, x1, y1, x2, y2)) {\r\n            let sx = (x1 + x2) * 0.5;\r\n            let sy = (y1 + y2) * 0.5;\r\n            let children = node.nodes;\r\n\r\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\r\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\r\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\r\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (n.leaf) {\r\n            let nx = n.x;\r\n            let ny = n.y;\r\n\r\n            if (nx !== null) {\r\n                if (nx === x && ny === y) {\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n                else {\r\n                    let nPoint = n.point;\r\n                    n.x = n.y = n.point = null;\r\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n            } else {\r\n                n.x = x, n.y = y, n.point = d;\r\n            }\r\n        } else {\r\n            insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        let xm = (x1 + x2) * 0.5;\r\n        let ym = (y1 + y2) * 0.5;\r\n        let right = x >= xm;\r\n        let below = y >= ym;\r\n        let i = below << 1 | right;\r\n\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = create());\r\n\r\n        right ? x1 = xm : x2 = xm;\r\n        below ? y1 = ym : y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n    }\r\n\r\n    function findNode(root, x, y, x0, y0, x3, y3) {\r\n        let minDistance2 = Infinity;\r\n        let closestPoint;\r\n\r\n        (function find(node, x1, y1, x2, y2) {\r\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n\r\n            let point;\r\n            if (point = node.point) {\r\n                let dx = x - node.x;\r\n                let dy = y - node.y;\r\n                let distance2 = dx * dx + dy * dy;\r\n\r\n                if (distance2 < minDistance2) {\r\n                    let distance = Math.sqrt(minDistance2 = distance2);\r\n                    x0 = x - distance, y0 = y - distance;\r\n                    x3 = x + distance, y3 = y + distance;\r\n                    closestPoint = point;\r\n                }\r\n            }\r\n\r\n            let children = node.nodes;\r\n            let xm = (x1 + x2) * .5;\r\n            let ym = (y1 + y2) * .5;\r\n            let right = x >= xm;\r\n            let below = y >= ym;\r\n\r\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n                if (node = children[i & 3]) switch (i & 3) {\r\n                    case 0: find(node, x1, y1, xm, ym); break;\r\n                    case 1: find(node, xm, y1, x2, ym); break;\r\n                    case 2: find(node, x1, ym, xm, y2); break;\r\n                    case 3: find(node, xm, ym, x2, y2); break;\r\n                }\r\n            }\r\n        })(root, x0, y0, x3, y3);\r\n\r\n        return closestPoint;\r\n    }\r\n\r\n    let root = create();\r\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\r\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\r\n\r\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n    --i;\r\n\r\n    xs = ys = points = d = null;\r\n\r\n    return root;\r\n};","import ccNetViz_quadtree from '../quadTree' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(nodes, edges, options = {}) {\r\n    const edgeDistance = 15,\r\n          edgeStrength = 1,\r\n          friction = 0.9,\r\n          charge = -30,\r\n          gravity = 0.4,\r\n          theta2 = .64,\r\n          size = [1,1],\r\n          chargeDistance2 = Infinity;\r\n\r\n    let   alpha,\r\n          distances = [],\r\n          strengths = [],\r\n          charges = [];\r\n\r\n\r\n    function accumulate(quad, alpha, charges) {\r\n        let cx = 0, cy = 0;\r\n        quad.charge = 0;\r\n        if (!quad.leaf) {\r\n            let nodes = quad.nodes;\r\n            let c, n = nodes.length;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                c = nodes[i];\r\n                if (c == null) continue;\r\n                accumulate(c, alpha, charges);\r\n                quad.charge += c.charge;\r\n                cx += c.charge * c.cx;\r\n                cy += c.charge * c.cy;\r\n            }\r\n        }\r\n        if (quad.point) {\r\n            if (!quad.leaf) {\r\n                quad.point.x += Math.random() - 0.5;\r\n                quad.point.y += Math.random() - 0.5;\r\n            }\r\n            let k = alpha * charges[quad.point.index];\r\n            quad.charge += quad.pointCharge = k;\r\n            cx += k * quad.point.x;\r\n            cy += k * quad.point.y;\r\n        }\r\n        quad.cx = cx / quad.charge;\r\n        quad.cy = cy / quad.charge;\r\n    }\r\n\r\n    function repulse(node) {\r\n        return function(quad, x1, _, x2) {\r\n            if (quad.point !== node) {\r\n                let dx = quad.cx - node.x;\r\n                let dy = quad.cy - node.y;\r\n                let dw = x2 - x1;\r\n                let dn = dx * dx + dy * dy;\r\n\r\n                if (dw * dw / theta2 < dn) {\r\n                    if (dn < chargeDistance2) {\r\n                        let k = quad.charge / dn;\r\n                        node.px -= dx * k;\r\n                        node.py -= dy * k;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if (quad.point && dn && dn < chargeDistance2) {\r\n                    let k = quad.pointCharge / dn;\r\n                    node.px -= dx * k;\r\n                    node.py -= dy * k;\r\n                }\r\n            }\r\n            return !quad.charge;\r\n        };\r\n    }\r\n\r\n    function step() {\r\n        if ((alpha *= .99) < .05) {\r\n            alpha = 0;\r\n            return true;\r\n        }\r\n\r\n        let q, o, s, t, l, k, x, y;\r\n        let n = nodes.length;\r\n        let m = edges.length;\r\n\r\n        for (let i = 0; i < m; i++) {\r\n            o = edges[i];\r\n            s = o.source;\r\n            t = o.target;\r\n            x = t.x - s.x;\r\n            y = t.y - s.y;\r\n            if (l = (x * x + y * y)) {\r\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\r\n                x *= l;\r\n                y *= l;\r\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\r\n                t.y -= y * k;\r\n                s.x += x * (k = 1 - k);\r\n                s.y += y * k;\r\n            }\r\n        }\r\n\r\n        if (k = alpha * gravity) {\r\n            x = size[0] / 2;\r\n            y = size[1] / 2;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                o = nodes[i];\r\n                o.x += (x - o.x) * k;\r\n                o.y += (y - o.y) * k;\r\n            }\r\n        }\r\n\r\n        if (charge) {\r\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                let o = nodes[i];\r\n                !o.fixed && q.visit(repulse(o));\r\n            }\r\n        }\r\n\r\n        const rnd = (min,max) => Math.random() * (max-min) + min;\r\n        for (let i = 0; i < n; i++) {\r\n            o = nodes[i];\r\n            if (o.fixed || o.fixed2) {\r\n                o.x = o.px;\r\n                o.y = o.py;\r\n            }\r\n            else {\r\n                o.x -= (o.px - (o.px = o.x)) * friction;\r\n                o.y -= (o.py - (o.py = o.y)) * friction;\r\n\r\n                if(options && options.minX !== undefined){\r\n                    if(o.x < options.minX || o.x > options.maxX){\r\n                        o.x = rnd(options.minX, options.maxX);\r\n                    }\r\n                    if(o.y < options.minY || o.y > options.maxY){\r\n                        o.y = rnd(options.minY, options.maxY);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.apply = function() {\r\n        let n = nodes.length;\r\n        let d = Math.sqrt(n);\r\n        let s = 0.3 / d;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            o.weight = 0;\r\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\r\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\r\n            o.px = o.x;\r\n            o.py = o.y;\r\n            charges[i] = charge;\r\n        }\r\n\r\n        for (let i = 0; i < edges.length; i++) {\r\n            let o = edges[i];\r\n            o.source.weight++;\r\n            o.target.weight++;\r\n            distances[i] = edgeDistance;\r\n            strengths[i] = edgeStrength;\r\n        }\r\n\r\n        alpha = 0.1;\r\n        while (!step());\r\n\r\n        return true;\r\n    };\r\n};\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  constructor(nodes){\r\n    this._nodes = nodes;\r\n  }\r\n  \r\n  apply () {\r\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\r\n      let o = this._nodes[i];\r\n      o.x = Math.random();\r\n      o.y = Math.random();\r\n    }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport function create2dArray (rows, columns) {\r\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\r\n}\r\n\r\nexport function degrees(nodes, edges) {\r\n  // should return ordered nodes and their degrees - high to low\r\n  let degrees = Array(nodes.length).fill(0);\r\n  edges.forEach(function(e) {\r\n      degrees[e.source.index] += 1;\r\n      degrees[e.target.index] += 1;\r\n  }); // check to see if not getting double of the degree in undirected graphs\r\n  //getting the order of nodes from highest to lowest degrees\r\n  let ordered_nodes = degrees.map(function(el, i) {\r\n      return { index: i, value: el };\r\n  });\r\n  ordered_nodes.sort(function(a, b) {\r\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\r\n  });\r\n  let ordered_degrees = ordered_nodes.map(function(el){\r\n      return degrees[el.index];\r\n  });\r\n  return { nodes: ordered_nodes,\r\n           degrees: ordered_degrees } ;\r\n}\r\n\r\nexport function getDepth(obj) {\r\n    let depth = 0;\r\n    if (obj.children) {\r\n        obj.children.forEach(function (d) {\r\n\t    if (d.depth_visited == true){\r\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\r\n\t    }\r\n\t    d.depth_visited = true;\r\n            let tmpDepth = getDepth(d);\r\n            if (tmpDepth > depth) {\r\n                depth = tmpDepth;\r\n            }\r\n        })\r\n    }\r\n    return 1 + depth;\r\n}\r\n\r\nexport function getRanges(n) {\r\n  n = Math.abs(n);\r\n  if(n <= 1){\r\n      return {\r\n        start: 0.5,\r\n        step: 1\r\n      };\r\n  }\r\n  let start = .05;\r\n  return {\r\n      start,\r\n      step: (1-2*start)/(n-1)\r\n  }\r\n}\r\n\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges, layout_options = {}) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._angle_step = 2*Math.PI/nodes.length;\r\n    if (layout_options.starting_angle == null)\r\n\tthis._starting_angle = 0;\r\n    else\r\n\tthis._starting_angle = layout_options.starting_angle;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\r\n      root.centered = true;\r\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n      // branch order is for now stable but unpredictable, see layouts.cri\r\n      let visited_leafs = 0;\r\n      for (let i=0; i < root.children.length; i++){\r\n          let child = root.children[i];\r\n          if (child.centered != true){\r\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\r\n          }\r\n      }\r\n      if (root.children == 0){\r\n          visited_leafs++;\r\n      }\r\n      // moving to parent, position node\r\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\r\n      root.x = (layer-1)*this.stepx + this.alphax;\r\n      return visited_leafs;\r\n  }\r\n\r\n  apply () {\r\n      // only one root node supported for now\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for non-trees (cyclical graphs) should be\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      r = getRanges(leafs);\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      this.alphay = r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      this.drawTreeCentered(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\r\n    // each node is in vertically on the top of the stack of its leafs\r\n    root.visited = true;\r\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n    root.x = this.alphax+this.stepx*(layer-1);\r\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\r\n    // visit children until leafs\r\n    let visited_leafs = 0;\r\n    for (let i=0; i < root.children.length; i++){\r\n       let child = root.children[i];\r\n       if (child.centered != true){\r\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\r\n       }\r\n    }\r\n    if(root.children.length == 0){\r\n        visited_leafs++;\r\n    }\r\n    return visited_leafs;\r\n}\r\n  apply () {\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      // this layout can be run on any graph actually\r\n      // for which the children might be selected e.g. for their degree\r\n      // draw can be decided on other measures, such as closeness centrality or clustering\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      r = getRanges(leafs);\r\n      this.alphay =  r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      // give nodes their positions\r\n      // plot each branch in depth first,\r\n      // increment y position for each leaf\r\n      // backtracking to go from leaf to parents\r\n      // and decide if parent is visited (always in tree layout)\r\n\r\n      this.drawTreeTop(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport default class {\r\n  // this layout should handle any digraph\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this.alphay = 0.05; // y margin\r\n    this.alphax = 0.05; // x margin\r\n  }\r\n\r\n  makeLayers(nodes, layer){\r\n      if (nodes.length > 1){\r\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\r\n          for (let i=0; i<nodes.length; ++i){\r\n              nodes[i].visited = true;\r\n              nodes[i].layer = layer; // makes x afterwards\r\n              nodes[i].y = this.alphay + i*stepy;\r\n          }\r\n      }\r\n      else {\r\n          nodes[0].visited = true;\r\n          nodes[0].layer = layer; // makes x afterwards\r\n          nodes[0].y = 0.5;\r\n      }\r\n      let next_layer = [];\r\n      for (let i=0; i<nodes.length; i++){\r\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\r\n          for (let j=0; j < neighbors.length; j++){\r\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\r\n                  next_layer.push(neighbors[j]);\r\n              }\r\n          }\r\n      }\r\n      if (next_layer.length == 0){\r\n          return layer;\r\n      }\r\n      else {\r\n          return this.makeLayers(next_layer, layer+1);\r\n      }\r\n  }\r\n\r\n  apply () {\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for trees (acyclic graphs) are\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.visited = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the roots:\r\n      // nodes defined by the user as roots OR\r\n      // nodes with in-degree == 0 OR\r\n      // nodes with greatest in-degree (or degree if undirected graph)\r\n      let roots = [];\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\r\n              roots.push(nodes[i]);\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          for (let i = 0; i < nodes.length; i++){\r\n              if (nodes[i].parents.length == 0){\r\n                  roots.push(nodes[i]);\r\n              }\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          // calculate max out-degree\r\n          let max_outdegree = 0;\r\n          nodes.forEach(function(node){\r\n              if (node.children.length > max_outdegree){\r\n                  max_outdegree = node.children.length;\r\n              }\r\n          });\r\n          // choose vertices with greatest out-degree\r\n          nodes.forEach(function(node){\r\n              if (node.children.length == max_outdegree){\r\n                  roots.push(node);\r\n              }\r\n          });\r\n      }\r\n      // number of layers and max number of nodes in each layer\r\n      // has to be found by making the layout\r\n      // there are two approaches to finding the nodes in each layer:\r\n      // 1) each layer has all the neighbors of the nodes in the previous layer\r\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\r\n      // this layout implements the first of these approaches.\r\n      const depth = this.makeLayers(roots, 1);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      const stepx = (1-2*this.alphax)/(depth-1);\r\n      // posx = alphax + stepx*(depth-1)\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\r\n      }\r\n  }\r\n};\r\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {EigenvalueDecomposition} from 'ml-matrix';\r\nimport {create2dArray} from './utils';\r\n\r\nfunction twoSmallest (arr) {\r\n    const min = Math.min.apply(null, arr), // get the max of the array\r\n        mini = arr.indexOf(min);\r\n    arr[mini] = Infinity; // replace max in the array with -infinity\r\n    const second_min = Math.min.apply(null, arr), // get the new max \r\n        second_mini = arr.indexOf(second_min);\r\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\r\n    const third_min = Math.min.apply(null, arr), // get the new max \r\n        third_mini = arr.indexOf(third_min);\r\n    return [second_mini, third_mini];\r\n}\r\n\r\nfunction normalize (x, y) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\r\n        maxy = Math.max.apply(null, y.map(Math.abs));\r\n    let minx = Math.min.apply(null, x),\r\n        miny = Math.min.apply(null, y);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\r\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\r\n    }\r\n    return [x, y];\r\n}\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      // build the diagonal of degrees\r\n      // NOT subtract adjacency from degrees but:\r\n      // substitute diagonal by degrees\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\r\n      }\r\n      let foo = new EigenvalueDecomposition(A);\r\n      const iii = twoSmallest(foo.realEigenvalues);\r\n      const foo_ = foo.eigenvectorMatrix.transpose();\r\n      const x = foo_[iii[0]];\r\n      const y = foo_[iii[1]];\r\n      const xy = normalize(x, y);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\r\n      // and implemented in networkx/drawing/layout.py\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = xy[0][i];\r\n          node.y = xy[1][i];\r\n      }); \r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\n// inspired in Matlab implementation\r\n// and JS transcription in\r\n// https://github.com/alanmeeson/spectral-graph-layout\r\n\r\nimport {create2dArray} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._epsilon = 1e-8; // tolerance\r\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\r\n    this._num_elements = nodes.length; //number of nodes in graph\r\n    this._dims = 2;\r\n  }\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      const D = deg(A); //degree of each node in graph (number of connections).\r\n\r\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\r\n      let u = new Array(dims);//declare the eigen vector matrix\r\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\r\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\r\n\r\n      //Power iteration to determine the remaining eigen vectors.\r\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \r\n          //initialize eigen vector with random values\r\n          let uhk = normalize(rand(this._num_elements));\r\n\r\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\r\n          let stop = false; //stopping criterion flag.\r\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\r\n\r\n              //D-orthogonalize against previous eigenvectors\r\n              let uk = uhk.slice();\r\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\r\n                  let ul = u[l]; //extract the l-th eigen vector\r\n\r\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\r\n                  let top_ = 0;\r\n                  let bottom = 0;\r\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\r\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\r\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\r\n                  }\r\n                  const ratio = top_ / bottom;\r\n\r\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\r\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\r\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\r\n                  }\r\n              }\r\n\r\n              //multiply with .5(I+D^-1 A)\r\n              for (let i = 0; i < uhk.length; i++) {\r\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\r\n              }\r\n\r\n\r\n              uhk = normalize(uhk);\r\n\r\n              itt_count = itt_count + 1;\r\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\r\n          }\r\n          u[k] = uhk.slice();\t\r\n      }\r\n\r\n      //discard the first eigenvector which should be [ones].\r\n      // var v = new Array(u.length);\r\n      // for (var i=0; i < u.length; i++) {\r\n      //     v[i] = new Array(u[i].length);\r\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\r\n      // }\r\n      const x = normalize2(u[1]);\r\n      const y = normalize2(u[2]);\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = x[i];\r\n          node.y = y[i];\r\n      }); \r\n  }\r\n};\r\n\r\nfunction deg(graph) {\r\n    //Calculate the degree of each node from the graph matrix.\r\n    let d = zeros(graph.length);\r\n\r\n    //degree of node i is the sum of the weights of all edges connected to it.\r\n    for (let i = 0; i < graph.length; i++) {\r\n        let node_degree = 0;\r\n        for (let j = 0; j < graph[i].length; j++) {\r\n            node_degree += graph[i][j];\r\n        }\r\n        d[i] = node_degree+1;\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\nfunction dot(a,b) {\r\n    //inner product of two vectors\r\n    let d = 0;\r\n    for (let i = 0; i < a.length; i++) {\r\n        d += a[i] * b[i];\r\n    }\r\n    return d;\r\n}\r\n\r\nfunction euclideanDistance(coordinates) {\r\n    //calculate the euclidean distance between two points/vectors.\r\n    // used for normalization.\r\n    let d = 0;\r\n\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n        d += Math.pow(coordinates[i], 2);\r\n    }\r\n    return Math.sqrt(d);\r\n}\r\n\r\nfunction normalize(arr) {\r\n    //normalizes a vector = arr/||arr||\r\n    const d = euclideanDistance(arr);\r\n    let narr = new Array(arr.length);\r\n    for (let i = 0; i < arr.length; i++) {\r\n        narr[i] = arr[i] / d;\r\n    }\r\n\r\n    return narr;\r\n}\r\n\r\nfunction rand(n) {\r\n    //create a vector of length n and fill with random numbers.\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\r\n    return arr;\r\n}\r\n\r\nfunction add(a, b) {\r\n    let c = new Array(a.length);\r\n    for (let i = 0; i < a.length; i++) {\r\n        c[i] = new Array(a[i].length);\r\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction symmetricRandMatrix(n, ulim) {\r\n    let mat = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n        mat[i] = new Array(n);\r\n        mat[i][i] = 0;\r\n    }\r\n    for (let i = 0; i < n; i++) {\r\n        for (let j = i + 1; j < n; j++) {\r\n            mat[i][j] = ulim * Math.random();\r\n            mat[j][i] = mat[i][j];\r\n        }\r\n    }\r\n    return mat;\r\n}\r\n\r\nfunction zeros(n) {\r\n    //create a vector filled with zeros\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 0;\r\n    return arr;\r\n}\r\n\r\nfunction ones(n) {\r\n    //create a vector filled with ones\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 1;\r\n    return arr;\r\n}\r\n\r\nfunction normalize2 (x) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs));\r\n    let minx = Math.min.apply(null, x);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\r\n    }\r\n    return x;\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05; // from [0,1] borders\r\n    this._radius = 0.05; // of the empty circle on the center\r\n    this._nlines = 5;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nodes_segment = this._nodes.length / this._nlines;\r\n      const segment = 0.5 - (this._margin + this._radius);\r\n      const step = segment / nodes_segment;\r\n      const angle = 2*Math.PI/this._nlines;\r\n      let j = 0;\r\n      for(let i=0; i<this._nodes.length; ++i){\r\n          let ii = nd.nodes[i].index;\r\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\r\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\r\n          j = Math.floor(i/nodes_segment);\r\n      }\r\n  }\r\n};\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const sq = Math.sqrt(this._nodes.length);\r\n      const reminder = sq - Math.floor(sq);\r\n      if (reminder > 0)\r\n\t  var nnodes = Math.floor(sq)+1;\r\n      else\r\n\t  var nnodes = sq;\r\n      const step = (1 - this._margin*2)/nnodes;\r\n\r\n      const nlines = this._nodes.length/nnodes;\r\n      const reminder2 = nlines - Math.floor(nlines);\r\n      if (reminder2 > 0)\r\n\t  var nlines2 = Math.floor(nlines)+1;\r\n      else\r\n\t  var nlines2 = nlines;\r\n      const stepy = (1-2*this._margin)/(nlines2-2);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n\t  let j = Math.floor(i/(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  // the hubs are on the first half of the sinusoid period\r\n  // the intermediary are on the second half\r\n  // and the periphery are on the upper straight line\r\n  // further versions should enable the choice of other\r\n  // fractions of hubs, intermediary and peripheral vertices\r\n  // or the Erdös sectioning.\r\n  // maybe also let the user set the endpoints of the periphery segment\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n    this._hubs = 0.1; // 10%\r\n    this._intermediary = 0.2;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\r\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\r\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\r\n      const steprad = Math.PI/(nhubs - 1); \r\n      let i = 0;\r\n      while (i < nhubs ){\r\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\r\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\r\n\t++i;\r\n      }\r\n      const nintermediary = nhubs_intermediary - nhubs;\r\n      const steprad2 = Math.PI/nintermediary; \r\n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\r\n      i = 0;\r\n      while (i < nintermediary ){\r\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\r\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\r\n\t++i;\r\n      }\r\n      const p0 = [0.85, 0.75];\r\n      const p1 = [0.4, 1-this._margin];\r\n      const nperipheral = this._nodes.length - nhubs_intermediary;\r\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\r\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\r\n      i = 0;\r\n      while (i < nperipheral ){\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\r\n\t++i;\r\n      }\r\n  }\r\n};\r\n","import layoutForce from './force' ;\r\nimport layoutRandom from './random' ;\r\nimport layoutCircular from './circular' ;\r\nimport layoutTree from './tree' ;\r\nimport layoutTreeT from './treeT' ;\r\nimport layoutHierarchical from './hierarchical' ;\r\n//import layoutHierarchical2 from './hierarchical2' ;\r\nimport layoutSpectral from './spectral' ;\r\nimport layoutSpectral2 from './spectral2' ;\r\nimport layoutHive from './hive' ;\r\nimport layoutGrid from './grid' ;\r\nimport layoutVersinus from './versinus' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  static get force(){\r\n    return layoutForce;\r\n  }\r\n  static get random(){\r\n    return layoutRandom;\r\n  }\r\n  static get circular(){\r\n    return layoutCircular;\r\n  }\r\n  static get tree(){\r\n    return layoutTree;\r\n  }\r\n  static get tree2(){\r\n    return layoutTreeT;\r\n  }\r\n  static get hierarchical(){\r\n    return layoutHierarchical;\r\n  }\r\n/*  static get hierarchical2(){\r\n    return layoutHierarchical2;\r\n  }*/\r\n  static get spectral(){\r\n    return layoutSpectral;\r\n  }\r\n  static get spectral2(){\r\n    return layoutSpectral2;\r\n  }\r\n  static get hive(){\r\n    return layoutHive;\r\n  }\r\n  static get grid(){\r\n    return layoutGrid;\r\n  }static get versinus(){\r\n    return layoutVersinus;\r\n  }\r\n  \r\n  static normalize (nodes, dim) {\r\n    let minX, minY, n = nodes.length;\r\n    \r\n    if (dim) {\r\n        minX = dim.minX;\r\n        minY = dim.minY;\r\n    }\r\n    else {\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n        minX = minY = Infinity;\r\n        \r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            maxX = Math.max(maxX, o.x);\r\n            maxY = Math.max(maxY, o.y);\r\n            minX = Math.min(minX, o.x);\r\n            minY = Math.min(minY, o.y);\r\n        };\r\n        \r\n        dim = {\r\n            maxX: maxX,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            minY: minY\r\n        }\r\n    }\r\n\r\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\r\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        let o = nodes[i];\r\n        o.x = scX * (o.x - minX);\r\n        o.y = scY * (o.y - minY);\r\n    }\r\n    \r\n    return dim;\r\n  }\r\n  \r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// refer edge to edge example\r\n//  each edge if\r\n//  i) from node to node, has source and edge both node\r\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\r\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\r\n\r\n export default class {\r\n  static edgeSource(e) {\r\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\r\n      let s = this.edgeSource(e.source);\r\n      let t = this.edgeTarget(e.source);\r\n      return {\r\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\r\n              y: (s.y+t.y)/2, //middle of y-coordinate\r\n              uniqid: e.uniqid, \r\n              index: e.index, \r\n              is_edge: true, \r\n              e: e.source\r\n      };\r\n    }\r\n    \r\n    return e.source;\r\n  }\r\n\r\n  static edgeTarget (e) {\r\n    if(e.target.source){\r\n      //target is edge\r\n      let s = this.edgeSource(e.target);\r\n      let t = this.edgeTarget(e.target);\r\n      \r\n      return {\r\n              x: (s.x+t.x)/2,\r\n              y: (s.y+t.y)/2,\r\n              uniqid: e.uniqid,\r\n              index: e.index,\r\n              is_edge: true,\r\n              e: e.target\r\n      };\r\n    }\r\n\r\n    return e.target;\r\n  }\r\n\r\n  static getCurveShift (e, r){\r\n      r = r || {};\r\n      r.x = r.y = r.cx = r.cy = 0;\r\n      if(!e)\r\n        return r;\r\n      if(e.t && e.t >= 1){\t//curve or circle\r\n        if(e.t >= 2){ //circle\r\n          let s = this.edgeSource(e);\r\n          let d = s.y < 0.5 ? 1 : -1;\r\n\r\n          r.cx = d * 1.25;\r\n          r.cy = 0;\r\n        }else{\r\n          let se = this.edgeSource(e);\r\n          let te = this.edgeTarget(e);\r\n\r\n          r.x = se.x - te.x;\r\n          r.y = se.y - te.y;\r\n        }\r\n      }\r\n      return r;\r\n  }\r\n};","/*\r\n (c) 2015, Vladimir Agafonkin\r\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\r\n https://github.com/mourner/rbush\r\n*/\r\n\r\n\r\nfunction rbush(maxEntries, format) {\r\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\r\n\r\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n    this._maxEntries = Math.max(4, maxEntries || 9);\r\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n\r\n    if (format) {\r\n        this._initFormat(format);\r\n    }\r\n\r\n    this.clear();\r\n}\r\n\r\nrbush.prototype = {\r\n\r\n    all: function () {\r\n        return this._all(this.data, []);\r\n    },\r\n\r\n    search: function (bbox) {\r\n\r\n        var node = this.data,\r\n            result = [],\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return result;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf) result.push(child);\r\n                    else if (contains(bbox, childBBox)) this._all(child, result);\r\n                    else nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    collides: function (bbox) {\r\n\r\n        var node = this.data,\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return false;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf || contains(bbox, childBBox)) return true;\r\n                    nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    load: function (data) {\r\n        if (!(data && data.length)) return this;\r\n\r\n        if (data.length < this._minEntries) {\r\n            for (var i = 0, len = data.length; i < len; i++) {\r\n                this.insert(data[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // recursively build the tree with the given data from stratch using OMT algorithm\r\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n        if (!this.data.children.length) {\r\n            // save as is if tree is empty\r\n            this.data = node;\r\n\r\n        } else if (this.data.height === node.height) {\r\n            // split root if trees have the same height\r\n            this._splitRoot(this.data, node);\r\n\r\n        } else {\r\n            if (this.data.height < node.height) {\r\n                // swap trees if inserted one is bigger\r\n                var tmpNode = this.data;\r\n                this.data = node;\r\n                node = tmpNode;\r\n            }\r\n\r\n            // insert the small tree into the large tree at appropriate level\r\n            this._insert(node, this.data.height - node.height - 1, true);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    insert: function (item) {\r\n        if (item) this._insert(item, this.data.height - 1);\r\n        return this;\r\n    },\r\n\r\n    clear: function () {\r\n        this.data = {\r\n            children: [],\r\n            height: 1,\r\n            bbox: empty(),\r\n            leaf: true\r\n        };\r\n        return this;\r\n    },\r\n\r\n    remove: function (item) {\r\n        if (!item) return this;\r\n\r\n        var node = this.data,\r\n            bbox = this.toBBox(item),\r\n            path = [],\r\n            indexes = [],\r\n            i, parent, index, goingUp;\r\n\r\n        // depth-first iterative tree traversal\r\n        while (node || path.length) {\r\n\r\n            if (!node) { // go up\r\n                node = path.pop();\r\n                parent = path[path.length - 1];\r\n                i = indexes.pop();\r\n                goingUp = true;\r\n            }\r\n\r\n            if (node.leaf) { // check current node\r\n                index = node.children.indexOf(item);\r\n\r\n                if (index !== -1) {\r\n                    // item found, remove the item and condense tree upwards\r\n                    node.children.splice(index, 1);\r\n                    path.push(node);\r\n                    this._condense(path);\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\r\n                path.push(node);\r\n                indexes.push(i);\r\n                i = 0;\r\n                parent = node;\r\n                node = node.children[0];\r\n\r\n            } else if (parent) { // go right\r\n                i++;\r\n                node = parent.children[i];\r\n                goingUp = false;\r\n\r\n            } else node = null; // nothing found\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    toBBox: function (item) { return item; },\r\n\r\n    compareMinX: function (a, b) { return a[0] - b[0]; },\r\n    compareMinY: function (a, b) { return a[1] - b[1]; },\r\n\r\n    toJSON: function () { return this.data; },\r\n\r\n    fromJSON: function (data) {\r\n        this.data = data;\r\n        return this;\r\n    },\r\n\r\n    _all: function (node, result) {\r\n        var nodesToSearch = [];\r\n        while (node) {\r\n            if (node.leaf) result.push.apply(result, node.children);\r\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\r\n\r\n            node = nodesToSearch.pop();\r\n        }\r\n        return result;\r\n    },\r\n\r\n    _build: function (items, left, right, height) {\r\n\r\n        var N = right - left + 1,\r\n            M = this._maxEntries,\r\n            node;\r\n\r\n        if (N <= M) {\r\n            // reached leaf level; return leaf\r\n            node = {\r\n                children: items.slice(left, right + 1),\r\n                height: 1,\r\n                bbox: null,\r\n                leaf: true\r\n            };\r\n            calcBBox(node, this.toBBox);\r\n            return node;\r\n        }\r\n\r\n        if (!height) {\r\n            // target height of the bulk-loaded tree\r\n            height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n            // target number of root entries to maximize storage utilization\r\n            M = Math.ceil(N / Math.pow(M, height - 1));\r\n        }\r\n\r\n        node = {\r\n            children: [],\r\n            height: height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        // split the items into M mostly square tiles\r\n\r\n        var N2 = Math.ceil(N / M),\r\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\r\n            i, j, right2, right3;\r\n\r\n        multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n        for (i = left; i <= right; i += N1) {\r\n\r\n            right2 = Math.min(i + N1 - 1, right);\r\n\r\n            multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n            for (j = i; j <= right2; j += N2) {\r\n\r\n                right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                // pack each entry recursively\r\n                node.children.push(this._build(items, j, right3, height - 1));\r\n            }\r\n        }\r\n\r\n        calcBBox(node, this.toBBox);\r\n\r\n        return node;\r\n    },\r\n\r\n    _chooseSubtree: function (bbox, node, level, path) {\r\n\r\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\r\n\r\n        while (true) {\r\n            path.push(node);\r\n\r\n            if (node.leaf || path.length - 1 === level) break;\r\n\r\n            minArea = minEnlargement = Infinity;\r\n\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n                child = node.children[i];\r\n                area = bboxArea(child.bbox);\r\n                enlargement = enlargedArea(bbox, child.bbox) - area;\r\n\r\n                // choose entry with the least area enlargement\r\n                if (enlargement < minEnlargement) {\r\n                    minEnlargement = enlargement;\r\n                    minArea = area < minArea ? area : minArea;\r\n                    targetNode = child;\r\n\r\n                } else if (enlargement === minEnlargement) {\r\n                    // otherwise choose one with the smallest area\r\n                    if (area < minArea) {\r\n                        minArea = area;\r\n                        targetNode = child;\r\n                    }\r\n                }\r\n            }\r\n\r\n            node = targetNode || node.children[0];\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    _insert: function (item, level, isNode) {\r\n\r\n        var toBBox = this.toBBox,\r\n            bbox = isNode ? item.bbox : toBBox(item),\r\n            insertPath = [];\r\n\r\n        // find the best node for accommodating the item, saving all nodes along the path too\r\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n        // put the item into the node\r\n        node.children.push(item);\r\n        extend(node.bbox, bbox);\r\n\r\n        // split on node overflow; propagate upwards if necessary\r\n        while (level >= 0) {\r\n            if (insertPath[level].children.length > this._maxEntries) {\r\n                this._split(insertPath, level);\r\n                level--;\r\n            } else break;\r\n        }\r\n\r\n        // adjust bboxes along the insertion path\r\n        this._adjustParentBBoxes(bbox, insertPath, level);\r\n    },\r\n\r\n    // split overflowed node into two\r\n    _split: function (insertPath, level) {\r\n\r\n        var node = insertPath[level],\r\n            M = node.children.length,\r\n            m = this._minEntries;\r\n\r\n        this._chooseSplitAxis(node, m, M);\r\n\r\n        var splitIndex = this._chooseSplitIndex(node, m, M);\r\n\r\n        var newNode = {\r\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\r\n            height: node.height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        if (node.leaf) newNode.leaf = true;\r\n\r\n        calcBBox(node, this.toBBox);\r\n        calcBBox(newNode, this.toBBox);\r\n\r\n        if (level) insertPath[level - 1].children.push(newNode);\r\n        else this._splitRoot(node, newNode);\r\n    },\r\n\r\n    _splitRoot: function (node, newNode) {\r\n        // split root node\r\n        this.data = {\r\n            children: [node, newNode],\r\n            height: node.height + 1,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n        calcBBox(this.data, this.toBBox);\r\n    },\r\n\r\n    _chooseSplitIndex: function (node, m, M) {\r\n\r\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\r\n\r\n        minOverlap = minArea = Infinity;\r\n\r\n        for (i = m; i <= M - m; i++) {\r\n            bbox1 = distBBox(node, 0, i, this.toBBox);\r\n            bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n            overlap = intersectionArea(bbox1, bbox2);\r\n            area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n            // choose distribution with minimum overlap\r\n            if (overlap < minOverlap) {\r\n                minOverlap = overlap;\r\n                index = i;\r\n\r\n                minArea = area < minArea ? area : minArea;\r\n\r\n            } else if (overlap === minOverlap) {\r\n                // otherwise choose distribution with minimum area\r\n                if (area < minArea) {\r\n                    minArea = area;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    },\r\n\r\n    // sorts node children by the best axis for split\r\n    _chooseSplitAxis: function (node, m, M) {\r\n\r\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\r\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\r\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\r\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n        // if total distributions margin value is minimal for x, sort by minX,\r\n        // otherwise it's already sorted by minY\r\n        if (xMargin < yMargin) node.children.sort(compareMinX);\r\n    },\r\n\r\n    // total margin of all possible split distributions where each node is at least m full\r\n    _allDistMargin: function (node, m, M, compare) {\r\n\r\n        node.children.sort(compare);\r\n\r\n        var toBBox = this.toBBox,\r\n            leftBBox = distBBox(node, 0, m, toBBox),\r\n            rightBBox = distBBox(node, M - m, M, toBBox),\r\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\r\n            i, child;\r\n\r\n        for (i = m; i < M - m; i++) {\r\n            child = node.children[i];\r\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(leftBBox);\r\n        }\r\n\r\n        for (i = M - m - 1; i >= m; i--) {\r\n            child = node.children[i];\r\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(rightBBox);\r\n        }\r\n\r\n        return margin;\r\n    },\r\n\r\n    _adjustParentBBoxes: function (bbox, path, level) {\r\n        // adjust bboxes along the given tree path\r\n        for (var i = level; i >= 0; i--) {\r\n            extend(path[i].bbox, bbox);\r\n        }\r\n    },\r\n\r\n    _condense: function (path) {\r\n        // go through the path, removing empty nodes and updating bboxes\r\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\r\n            if (path[i].children.length === 0) {\r\n                if (i > 0) {\r\n                    siblings = path[i - 1].children;\r\n                    siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                } else this.clear();\r\n\r\n            } else calcBBox(path[i], this.toBBox);\r\n        }\r\n    },\r\n\r\n    _initFormat: function (format) {\r\n        // data format (minX, minY, maxX, maxY accessors)\r\n\r\n        // uses eval-type function compilation instead of just accepting a toBBox function\r\n        // because the algorithms are very sensitive to sorting functions performance,\r\n        // so they should be dead simple and without inner calls\r\n\r\n        var compareArr = ['return a', ' - b', ';'];\r\n\r\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\r\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\r\n\r\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\r\n    }\r\n};\r\n\r\n\r\n// calculate node's bbox from bboxes of its children\r\nfunction calcBBox(node, toBBox) {\r\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\r\n}\r\n\r\n// min bounding rectangle of node children from k to p-1\r\nfunction distBBox(node, k, p, toBBox) {\r\n    var bbox = empty();\r\n\r\n    for (var i = k, child; i < p; i++) {\r\n        child = node.children[i];\r\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\r\n    }\r\n\r\n    return bbox;\r\n}\r\n\r\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\r\n\r\nfunction extend(a, b) {\r\n    a[0] = Math.min(a[0], b[0]);\r\n    a[1] = Math.min(a[1], b[1]);\r\n    a[2] = Math.max(a[2], b[2]);\r\n    a[3] = Math.max(a[3], b[3]);\r\n    return a;\r\n}\r\n\r\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\r\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\r\n\r\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\r\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\r\n\r\nfunction enlargedArea(a, b) {\r\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\r\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\r\n}\r\n\r\nfunction intersectionArea(a, b) {\r\n    var minX = Math.max(a[0], b[0]),\r\n        minY = Math.max(a[1], b[1]),\r\n        maxX = Math.min(a[2], b[2]),\r\n        maxY = Math.min(a[3], b[3]);\r\n\r\n    return Math.max(0, maxX - minX) *\r\n           Math.max(0, maxY - minY);\r\n}\r\n\r\nfunction contains(a, b) {\r\n    return a[0] <= b[0] &&\r\n           a[1] <= b[1] &&\r\n           b[2] <= a[2] &&\r\n           b[3] <= a[3];\r\n}\r\n\r\nfunction intersects(a, b) {\r\n    return b[0] <= a[2] &&\r\n           b[1] <= a[3] &&\r\n           b[2] >= a[0] &&\r\n           b[3] >= a[1];\r\n}\r\n\r\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n// combines selection algorithm with binary divide & conquer approach\r\n\r\nfunction multiSelect(arr, left, right, n, compare) {\r\n    var stack = [left, right],\r\n        mid;\r\n\r\n    while (stack.length) {\r\n        right = stack.pop();\r\n        left = stack.pop();\r\n\r\n        if (right - left <= n) continue;\r\n\r\n        mid = left + Math.ceil((right - left) / n / 2) * n;\r\n        select(arr, left, right, mid, compare);\r\n\r\n        stack.push(left, mid, mid, right);\r\n    }\r\n}\r\n\r\n// Floyd-Rivest selection algorithm:\r\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\r\nfunction select(arr, left, right, k, compare) {\r\n    var n, i, z, s, sd, newLeft, newRight, t, j;\r\n\r\n    while (right > left) {\r\n        if (right - left > 600) {\r\n            n = right - left + 1;\r\n            i = k - left + 1;\r\n            z = Math.log(n);\r\n            s = 0.5 * Math.exp(2 * z / 3);\r\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\r\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\r\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\r\n            select(arr, newLeft, newRight, k, compare);\r\n        }\r\n\r\n        t = arr[k];\r\n        i = left;\r\n        j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (compare(arr[i], t) < 0) i++;\r\n            while (compare(arr[j], t) > 0) j--;\r\n        }\r\n\r\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nexport default rbush;","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nconst EPS = Number.EPSILON || 1e-14;\r\n\r\n\r\n\r\n\r\n//solving cube analyticaly for bezier curves\r\nfunction cuberoot(x) {\r\n    const y = Math.pow(Math.abs(x), 1/3);\r\n    return x < 0 ? -y : y;\r\n}\r\n\r\nfunction solveCubic(a, b, c, d) {\r\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\r\n        a = b; b = c; c = d;\r\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\r\n            a = b; b = c;\r\n            if (Math.abs(a) < 1e-8) // Degenerate case\r\n                return [];\r\n            return [-b/a];\r\n        }\r\n\r\n        const D = b*b - 4*a*c;\r\n        if (Math.abs(D) < 1e-8)\r\n            return [-b/(2*a)];\r\n        else if (D > 0)\r\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\r\n        return [];\r\n    }\r\n\r\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\r\n    const p = (3*a*c - b*b)/(3*a*a);\r\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\r\n    let roots;\r\n\r\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\r\n        roots = [cuberoot(-q)];\r\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\r\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\r\n    } else {\r\n        const D = q*q/4 + p*p*p/27;\r\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\r\n            roots = [-1.5*q/p, 3*q/p];\r\n        } else if (D > 0) {             // Only one real root\r\n            const u = cuberoot(-q/2 - Math.sqrt(D));\r\n            roots = [u - p/(3*u)];\r\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\r\n            const u = 2*Math.sqrt(-p/3);\r\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\r\n            const k = 2*Math.PI/3;\r\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\r\n        }\r\n    }\r\n\r\n    // Convert back from depressed cubic\r\n    for (let i = 0; i < roots.length; i++)\r\n        roots[i] -= b/(3*a);\r\n\r\n    return roots;\r\n}\r\n\r\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\r\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\r\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\r\n  \r\n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\r\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\r\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\r\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\r\n    \r\n  const eqresult = solveCubic(A,B,C,D);\r\n  \r\n  \r\n  //loop through all possible solitions to find out which point is the nearest\r\n  let mindist = Infinity;\r\n  for(let i = 0; i < eqresult.length; i++){\r\n    const t = eqresult[i];\r\n    \r\n    if(t < 0 || t > 1)\r\n      continue;\r\n    \r\n    //point at bezier curve\r\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\r\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\r\n    \r\n    const dist = distance2(x,y,px,py);\r\n    if(dist < mindist)\r\n      mindist = dist;\r\n    \r\n  }\r\n  \r\n  return mindist;\r\n}\r\n\r\n/*\r\n * @param v - array of with points [x1,y1,x2,y2 .... ]\r\n * @return array representing bounding box [x1,y1,x2,y2]\r\n */\r\nfunction getBBFromPoints(v){\r\n  let xmin = Infinity;\r\n  let xmax = -xmin;\r\n  let ymin = Infinity;\r\n  let ymax = -ymin;\r\n  \r\n  //x of points - even indexes in array \r\n  for(let i = 0; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < xmin) xmin = val;\r\n    if(val > xmax) xmax = val;\r\n  }\r\n  \r\n  //y of points - odd indexes in array \r\n  for(let i = 1; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < ymin) ymin = val;\r\n    if(val > ymax) ymax = val;\r\n  }\r\n\r\n  return [xmin, ymin, xmax, ymax];\r\n}\r\n\r\n//distance from point to point\r\nfunction distance2(x1,y1,x2,y2){\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n//distance from point to line\r\nfunction pDistance2(x, y, x1, y1, x2, y2) {\r\n  const A = x - x1;\r\n  const B = y - y1;\r\n  const C = x2 - x1;\r\n  const D = y2 - y1;\r\n\r\n  const dot = A * C + B * D;\r\n  const len_sq = C * C + D * D;\r\n  let param = -1;\r\n  if (len_sq != 0) //in case of 0 length line\r\n      param = dot / len_sq;\r\n\r\n  let xx, yy;\r\n\r\n  if (param < 0) {\r\n    xx = x1;\r\n    yy = y1;\r\n  }\r\n  else if (param > 1) {\r\n    xx = x2;\r\n    yy = y2;\r\n  }\r\n  else {\r\n    xx = x1 + param * C;\r\n    yy = y1 + param * D;\r\n  }\r\n\r\n  return distance2(x,y,xx,yy);\r\n}\r\n\r\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\r\n{\r\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\r\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\r\n\r\n    if( d == 0 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let r = q / d;\r\n\r\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\r\n    let s = q / d;\r\n\r\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction pointInRect(px,py, x1, y1, x2, y2){\r\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\r\n}\r\n\r\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\r\n  return p1x <= r2x &&\r\n          p1y <= r2y &&\r\n          p2x >= r1x &&\r\n          p2y >= r1y;\r\n}\r\n\r\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nfunction eq(a,b){\r\n  return a >= b-EPS && a <= b+EPS;\r\n}\r\n\r\nfunction neq(a,b){\r\n  return !eq(a,b);\r\n}\r\n\r\n\r\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\r\n  if(t < 0 || t > 1)\r\n    return false;\r\n  \r\n  if(neq(v-s,0)){\r\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\r\n    if(x < 0 || x > 1)\r\n      return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\r\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\r\n\r\n    let t;\r\n    \r\n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\r\n    if(neq(tden, 0)){\r\n      if(neq(q-r, 0)){\r\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\r\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\r\n        if(sq >= 0){\r\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\r\n  \r\n          t = (t1-0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n  \r\n          t = (t1+0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\r\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\r\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\r\n      t = t/(2*tden);\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\r\n      t = (2*e-f-v)/(2*(e-f));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\r\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\r\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\r\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    const centerx = (r1x+r2x)/2;\r\n    const centery = (r1y+r2y)/2;\r\n    \r\n    const diffx = r1x-r2x;\r\n    const diffy = r1y-r2y;\r\n    \r\n    //performance optimalization based on distance\r\n    let diff2xy = diffx*diffx + diffy*diffy;\r\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\r\n    if(dist2*4 > diff2xy)\r\n      return false;\r\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\r\n      return true;\r\n\r\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nexport {\r\n        EPS, \r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      };\r\n","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport ccNetViz_utils from '../utils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\nimport {\r\n        EPS,\r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      } from './geomtools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nlet ct = {};\r\nfunction getEdgeShift(context, screensize, e, ct){\r\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\r\n  \r\n  \r\n  //compute all transformations made in the vertex shader\r\n  let ctx,cty,citx,city;\r\n  \r\n  ctx = -ct.y;\r\n  cty = ct.x * context.aspect2;\r\n  \r\n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\r\n  \r\n  if(eq(len2, 0)){\r\n    ctx = 0;\r\n    cty = 0;\r\n  }else{\r\n    let len = Math.sqrt(len2);\r\n    ctx *= context.curveExc * 0.25 * screensize / len;\r\n    cty *= context.curveExc * 0.25 * screensize / len;\r\n  }\r\n\r\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\r\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\r\n  citx = -ct.cy * 0.5 * sizex;\r\n  city = ct.cx * 0.5 * sizey;\r\n  \r\n  ct.x = ctx + citx;\r\n  ct.y = cty + city;\r\n}\r\n\r\nclass Node{\r\n  constructor(n){\r\n    this.e = n;\r\n  };\r\n  get isNode(){\r\n    return true;\r\n  };\r\n  getBBox(){\r\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2){\r\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context){\r\n    return distance2(x,y,this.e.x,this.e.y);\r\n  };\r\n}\r\n\r\nclass Label{\r\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\r\n    this.e = n;\r\n    this.pos = textpos;\r\n    this.style = style;\r\n    this.fontSize = fontSize;\r\n    this.isSDF = isSDF;\r\n    this.getLabelSize = getLabelSize;\r\n  };\r\n  get isLabel(){\r\n    return true;\r\n  };\r\n  getTextPos(context,size){\r\n    let x = this.e.x;\r\n    let y = this.e.y;\r\n    \r\n    let x1,y1,x2,y2;\r\n    x1 = x2 = x;\r\n    y1 = y2 = y;\r\n    \r\n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\r\n\r\n    let fontScale = wantedSize / this.fontSize;\r\n    if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    let step = (edge, x) => (x < edge ? 0 : 1);\r\n\r\n\r\n    const offset = 0.5 * context.nodeSize;    \r\n    const MAX =  10.;\r\n    const MIN = -10.;\r\n    let bbox = [MAX, MAX, MIN, MIN];\r\n    \r\n    \r\n    this.pos.forEach((c) => {\r\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\r\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\r\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\r\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\r\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\r\n      \r\n      bbox[0] = Math.min(x1,bbox[0]);\r\n      bbox[1] = Math.min(y1,bbox[1]);\r\n      bbox[2] = Math.max(x2,bbox[2]);\r\n      bbox[3] = Math.max(y2,bbox[3]);\r\n    });\r\n    \r\n    return bbox;\r\n  };\r\n  getBBox(context){\r\n    let bb = this.getTextPos(context,1);\r\n    bb[0] = Math.min(bb[0],this.e.x);\r\n    bb[1] = Math.min(bb[1],this.e.y);\r\n    bb[2] = Math.max(bb[2],this.e.x);\r\n    bb[3] = Math.max(bb[3],this.e.y);\r\n    return bb;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2,context,size){\r\n    let t = this.getTextPos(context,size);\r\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let t = this.getTextPos(context, size);\r\n\r\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\r\n      return 0;\r\n    \r\n    //minimum from distance from corners or distance from borders\r\n    return Math.min(\r\n      distance2(t[0],t[1]),\r\n      distance2(t[2],t[3]),\r\n      distance2(t[0],t[3]),\r\n      distance2(t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\r\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\r\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \r\n    );\r\n  };\r\n}\r\n\r\nclass Line{\r\n  constructor(l){\r\n    this.e = l;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getPoints(context, size){\r\n    let x1,y1,x2,y2;\r\n    \r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n    \r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y;\r\n    \r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    return [x1,y1,x2,y2];\r\n  };\r\n  getBBox(context, size){\r\n    let p = this.getPoints(context, size);\r\n    \r\n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\r\n  };\r\n}\r\n\r\nclass Circle{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, screensize){\r\n    let x1,y1,s;\r\n    s = ccNetViz_geomutils.edgeSource(this.e);\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n\r\n    let size = 2.5 * context.nodeSize * screensize;\r\n    let xsize = size / context.width / 2;\r\n    let ysize = size / context.height / 2;\r\n\r\n    let d = s.y < 0.5 ? 1 : -1;\r\n\r\n    getEdgeShift(context, screensize, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    \r\n    return [\r\n      x1,\r\n      y1,\r\n      x1 + xsize*1,\r\n      y1 + ysize*d,\r\n      x1,\r\n      y1 + ysize*1.25*d,\r\n      x1 - xsize*1,\r\n      y1 + ysize*d\r\n    ];\r\n  };\r\n  getBBox(context, size){\r\n    let v = this.getBezierPoints(context, size);\r\n    \r\n    return getBBFromPoints(v);\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context,size);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y,context,size){\r\n    let v = this.getBezierPoints(context,size);\r\n\r\n    //circle is just 2 bezier curves :)\r\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\r\n\r\n    return Math.min(d1,d2);\r\n  };\r\n}\r\n\r\nclass Curve{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, size, normalize){\r\n    let x1,x2,y1,y2;\r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y; \r\n    \r\n    let d = normalize(s, t);\r\n    \r\n    let n2 = d.y;\r\n    let n3 = context.aspect2*-d.x;\r\n\r\n    let x = context.width * n2;\r\n    let y = context.height* n3;\r\n    let l = Math.sqrt(x*x+y*y)*2;\r\n\r\n    n2 *= context.curveExc*size/l;\r\n    n3 *= context.curveExc*size/l;\r\n\r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    let ret = [\r\n      x1,\r\n      y1,\r\n      (x1+x2)/2 + n2,\r\n      (y1+y2)/2 + n3,\r\n      x2,\r\n      y2\r\n    ];\r\n    return ret;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\r\n  };\r\n  getBBox(context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return getBBFromPoints(v);\r\n  };\r\n  dist2(x,y, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n  };\r\n}\r\n\r\n\r\nfunction sortByDistances(e1, e2){\r\n  return e1.dist2 - e2.dist2;\r\n}\r\n\r\n\r\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\r\n\r\nexport default class spatialIndex{\r\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\r\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\r\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\r\n    \r\n    this.texts = texts;\r\n    this.normalize = normalize;\r\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\r\n    let i = 0, d = [];\r\n\r\n    let addEntity = (e, d, i) => {\r\n      d[i] = e.getBBox(c, size, normalize);\r\n      d[i].push(e);\r\n      return e;\r\n    };\r\n    \r\n    nodes.forEach((n) => {\r\n      t.nodes.push(addEntity(new Node(n), d, i++));\r\n    });\r\n\r\n    lines.forEach((l) => {\r\n      t.lines.push(addEntity(new Line(l), d, i++));\r\n    });\r\n\r\n    circles.forEach((c) => {\r\n      t.circles.push(addEntity(new Circle(c), d, i++));\r\n    });\r\n    \r\n    curves.forEach((c) => {\r\n      t.curves.push(addEntity(new Curve(c), d, i++));\r\n    });\r\n\r\n\r\n    let sd = {};\r\n    let sdi = {};\r\n\r\n\r\n    //labels position could differ by style >> must partition by it\r\n    for(let style in nodesParts){\r\n      let nodes = nodesParts[style];\r\n\r\n\r\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\r\n      let textEngine = texts.getEngine(ns.font);\r\n      textEngine.setFont(ns.font);\r\n      const fontSize = textEngine.fontSize;\r\n      const isSDF = textEngine.isSDF;\r\n\r\n      let sd_n = (sd[style] || (sd[style] = []));\r\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\r\n\r\n      //biggest size in which the text is shown\r\n      c.size = getLabelHideScreen(c, ns.label || {});\r\n      nodes.forEach((n) => {\r\n        let textpos = textEngine.get(n.label, n.x, n.y);\r\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\r\n      });\r\n\r\n      sdi[style] = sdi_n;\r\n    }\r\n\r\n    this.rbushtree_s = {};\r\n    for(let style in sd){\r\n        let rb = this.rbushtree_s[style] = rbush();\r\n        rb.load(sd[style]);\r\n    }\r\n\r\n    //tree initialization\r\n    this.rbushtree = rbush();\r\n    this.rbushtree.load(d);\r\n    \r\n    \r\n    //restore the size of scale (loosen outer the upper bound)\r\n    c.size = oldsize;\r\n  }\r\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\r\n    if(nodes && e.isNode){\r\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(edges && e.isEdge){\r\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(labels && e.isLabel){\r\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n  }\r\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\r\n    if(x1 > x2){\r\n      let p = x1;\r\n      x1 = x2;\r\n      x2 = p;\r\n    }\r\n    if(y1 > y2){\r\n      let p = y1;\r\n      y1 = y2;\r\n      y2 = p;\r\n    }\r\n\r\n    \r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let x = (x1+x2)/2;\r\n    let y = (y1+y2)/2;\r\n\r\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n    \r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;    \r\n  }\r\n  find(context, x,y, radius, size, nodes, edges, labels){\r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let xradius = radius;\r\n    let yradius = radius;\r\n\r\n    let radius2 = radius*radius;\r\n\r\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(dist2 > radius2)\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n\r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  update(context, t, i, v){\r\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\r\n    let size = 1;\r\n\r\n    this.rbushtree.remove(this.types[t][i]);\r\n\r\n    let e = new tConst[t](v);\r\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\r\n    arr.push(e);\r\n\r\n    this.rbushtree.insert(this.types[t][i] = arr);\r\n  }\r\n}","import linear from './linear.glsl';\r\nimport sinIn from './sin-in.glsl';\r\nimport sinOut from './sin-out.glsl';\r\nimport sinInOut from './sin-inout.glsl';\r\nimport expIn from './exp-in.glsl';\r\nimport expOut from './exp-out.glsl';\r\nimport expInOut from './exp-inout.glsl';\r\nimport bounceIn from './bounce-in.glsl';\r\nimport bounceOut from './bounce-out.glsl';\r\nimport bounceInOut from './bounce-inout.glsl';\r\nimport circularIn from './circular-in.glsl';\r\nimport circularOut from './circular-out.glsl';\r\nimport circularInOut from './circular-inout.glsl';\r\nimport quadIn from './quad-in.glsl';\r\nimport quadOut from './quad-out.glsl';\r\nimport quadInOut from './quad-inout.glsl';\r\nimport cubicIn from './cubic-in.glsl';\r\nimport cubicOut from './cubic-out.glsl';\r\nimport cubicInOut from './cubic-inout.glsl';\r\nimport quartIn from './quart-in.glsl';\r\nimport quartOut from './quart-out.glsl';\r\nimport quartInOut from './quart-inout.glsl';\r\nimport quintIn from './quint-in.glsl';\r\nimport quintOut from './quint-out.glsl';\r\nimport quintInOut from './quint-inout.glsl';\r\n\r\nconst easeFunctions = {\r\n    'linear': linear,\r\n    'sin-in': sinIn,\r\n    'sin-out': sinOut,\r\n    'sin-inout': sinInOut,\r\n    'exp-in': expIn,\r\n    'exp-out': expOut,\r\n    'exp-inout': expInOut,\r\n    'bounce-in': bounceIn,\r\n    'bounce-out': bounceOut,\r\n    'bounce-inout': bounceInOut,\r\n    'circular-in': circularIn,\r\n    'circular-out': circularOut,\r\n    'circular-inout': circularInOut,\r\n    'quad-in': quadIn,\r\n    'quad-out': quadOut,\r\n    'quad-inout': quadInOut,\r\n    'cubic-in': cubicIn,\r\n    'cubic-out': cubicOut,\r\n    'cubic-inout': cubicInOut,\r\n    'quart-in': quartIn,\r\n    'quart-out': quartOut,\r\n    'quart-inout': quartInOut,\r\n    'quint-in': quintIn,\r\n    'quint-out': quintOut,\r\n    'quint-inout': quintInOut,\r\n}\r\n\r\nexport {\r\n    easeFunctions,\r\n}","export default \"float ease(float t) {\\r\\n  return t;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin(t * HALF_PI);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return -0.5 * (cos(PI * t) - 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 || t == 1.0\\r\\n    ? t\\r\\n    : t < 0.5\\r\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\r\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return 1.0 - bounceOut(1.0 - t);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\r\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 - sqrt(1.0 - t * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return sqrt((2.0 - t) * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\r\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return -t * (t - 2.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  float f = t - 1.0;\\r\\n  return f * f * f + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 4.0 * t * t * t\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 4.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 5.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 + (pow(t - 1.0, 5.0)); // NOTE: fix original bug '-' -> '+'\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +16.0 * pow(t, 5.0)\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0; // NOTE: fix original bug, no '-'\\r\\n}\\r\\n\"","export default \"attribute vec2 curveShift;\\r\\nvec4 getShiftCurve(void) {\\r\\n  vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\\r\\n  float length = length(screen * shiftN);\\r\\n  return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\\r\\n}\\r\\nattribute vec2 circleShift;\\r\\nvec4 getShiftCircle(void) { return vec4(size * circleShift, 0, 0); }\"","export default \"precision mediump float;\\r\\nuniform float type;\\r\\nuniform float animateType;\\r\\nuniform vec4 color;\\r\\nuniform vec4 animateColor;\\r\\nuniform float animateSpeed;\\r\\nvarying vec2 n;\\r\\nvarying float v_time;\\r\\nvarying vec2 v_startPos;\\r\\nvarying vec2 v_endPos;\\r\\nvarying vec2 v_screen;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nuniform float lineSize;\\r\\n\"","export default \"float isAnimateCovered() {\\r\\n  vec2 pos = gl_FragCoord.xy;\\r\\n  vec2 viewport = 2. * v_screen;\\r\\n  float maxLen = length(viewport);\\r\\n  vec2 startPos = viewport * v_startPos;\\r\\n  vec2 endPos = viewport * v_endPos;\\r\\n  float totalLen = distance(startPos, endPos);\\r\\n  float len = distance(pos, startPos);\\r\\n  // float r = 300.;\\r\\n  float r =\\r\\n      ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * totalLen;\\r\\n  // float r = 0.5 * totalLen;\\r\\n  float draw = 1. - step(r, len);\\r\\n  return draw;\\r\\n}\"","export default \"float isAnimateCoveredGradient() {\\r\\n  vec2 pos = gl_FragCoord.xy;\\r\\n  vec2 viewport = 2. * v_screen;\\r\\n  float maxLen = length(viewport);\\r\\n  vec2 startPos = viewport * v_startPos;\\r\\n  vec2 endPos = viewport * v_endPos;\\r\\n  float totalLen = distance(startPos, endPos);\\r\\n  float len = distance(pos, startPos);\\r\\n  float gradLen = 180.; // TODO: can config\\r\\n  float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) *\\r\\n            (totalLen + gradLen / 2.); // NOTE: use 0.2 as a proper factor\\r\\n  // float r = 0.5 * totalLen;\\r\\n  float draw = fract(smoothstep(r - gradLen, r, len));\\r\\n  return draw;\\r\\n}\"","export default \"void main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineSize * 5.0));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  // line animate types\\r\\n  if (animateType >= 1.5) {\\r\\n    gl_FragColor = isAnimateCoveredGradient() * animateColor +\\r\\n                   (1. - isAnimateCoveredGradient()) * color;\\r\\n  } else if (animateType >= 0.5) {\\r\\n    gl_FragColor =\\r\\n        isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\\r\\n  } else {\\r\\n    gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\\r\\n  }\\r\\n}\"","export default \"#extension GL_OES_standard_derivatives : enable\\r\\n#ifdef GL_ES\\r\\nprecision highp float;\\r\\n#endif\\r\\nuniform float width;\\r\\nuniform vec4 color;\\r\\nuniform float type;\\r\\nuniform float lineStepSize;\\r\\nuniform float lineSize;\\r\\nvarying vec2 c;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nvoid main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineStepSize * lineSize));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  vec2 px = dFdx(c);\\r\\n  vec2 py = dFdy(c);\\r\\n  float fx = 2.0 * c.x * px.x - px.y;\\r\\n  float fy = 2.0 * c.y * py.x - py.y;\\r\\n  float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\\r\\n  float alpha = 1.0 - abs(sd) / width;\\r\\n  if (alpha < 0.0)\\r\\n    discard;\\r\\n  gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\\r\\n}\"","import vsLabelsShader from './vsLabelsShader.glsl';\r\n\r\nimport vsLineHead from './vsLineHead.glsl';\r\nimport vsLineMain from './vsLineMain.glsl';\r\nimport getShiftFuncs from './getShiftFuncs.glsl';\r\n\r\nimport { easeFunctions } from '../easeFunctions';\r\nimport fsLineHead from './fsLineHead.glsl';\r\nimport fsLineAnimateBasic from './fsLineAnimateBasic.glsl';\r\nimport fsLineAnimateGradient from './fsLineAnimateGradient.glsl';\r\nimport fsLineMain from './fsLineMain.glsl';\r\nimport fsLineBasic from './fsLineBasic.glsl';\r\n\r\nimport fsColorTexture from './fsColorTexture.glsl';\r\nimport fsVarColorTexture from './fsVarColorTexture.glsl';\r\nimport fsLabelTexture from './fsLabelTexture.glsl';\r\n\r\nimport fsCurve from './fsCurve.glsl';\r\n\r\nimport vsCurveHead from './vsCurveHead.glsl';\r\nimport vsCurveMain from './vsCurveMain.glsl';\r\nimport vsCircleHead from './vsCircleHead.glsl';\r\nimport vsCircleMain from './vsCircleMain.glsl';\r\n\r\nimport vsNode from './vsNode.glsl';\r\nimport vsNodeColored from './vsNodeColored.glsl';\r\n\r\nimport vsLineArrowHead from './vsLineArrowHead.glsl';\r\nimport vsLineArrowMain from './vsLineArrowMain.glsl';\r\nimport vsCurveArrowHead from './vsCurveArrowHead.glsl';\r\nimport vsCurveArrowMain from './vsCurveArrowMain.glsl';\r\nimport vsCircleArrowHead from './vsCircleArrowHead.glsl';\r\nimport vsCircleArrowMain from './vsCircleArrowMain.glsl';\r\n\r\nconst vsLine = [vsLineHead, getShiftFuncs, vsLineMain].join('\\n');\r\nconst vsCurve = [vsCurveHead, getShiftFuncs, vsCurveMain].join('\\n');\r\nconst vsCircle = [vsCircleHead, getShiftFuncs, vsCircleMain].join('\\n');\r\n\r\nconst vsLineArrow = [vsLineArrowHead, getShiftFuncs, vsLineArrowMain].join(\r\n  '\\n'\r\n);\r\nconst vsCurveArrow = [vsCurveArrowHead, getShiftFuncs, vsCurveArrowMain].join(\r\n  '\\n'\r\n);\r\nconst vsCircleArrow = [\r\n  vsCircleArrowHead,\r\n  getShiftFuncs,\r\n  vsCircleArrowMain,\r\n].join('\\n');\r\n\r\nconst easeFunctionPart = ease => {\r\n  return `${easeFunctions[ease ? ease : 'linear']}`;\r\n};\r\n\r\nconst fsLineAnimate = ease => {\r\n  return [\r\n    fsLineHead,\r\n    easeFunctionPart(ease),\r\n    fsLineAnimateBasic,\r\n    fsLineAnimateGradient,\r\n    fsLineMain,\r\n  ].join('\\n');\r\n};\r\n\r\nconst elementShaders = {\r\n  vsLine,\r\n  fsLineAnimate,\r\n  fsLineBasic,\r\n  fsColorTexture,\r\n  fsVarColorTexture,\r\n  vsLabelsShader,\r\n  fsLabelTexture,\r\n  fsCurve,\r\n  vsCurve,\r\n  fsCircle: fsCurve,\r\n  vsCircle,\r\n  vsNode,\r\n  vsNodeColored,\r\n  vsLineArrow,\r\n  vsCurveArrow,\r\n  vsCircleArrow,\r\n};\r\n\r\nexport { elementShaders };\r\n","export default \"precision mediump float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 lengthSoFar;\\r\\nattribute vec2 startPos;\\r\\nattribute vec2 endPos;\\r\\nuniform float time;\\r\\nuniform float exc;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform vec2 width;\\r\\nuniform mat4 transform;\\r\\nvarying float v_time;\\r\\nvarying vec2 v_startPos;\\r\\nvarying vec2 v_endPos;\\r\\nvarying vec2 v_screen;\\r\\nvarying vec2 n;\\r\\nvarying vec2 v_lengthSoFar;\\r\\n\"","export default \"void main(void) {\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() +\\r\\n                vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\\r\\n\\r\\n  vec4 p = transform * vec4(lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n  v_time = time;\\r\\n  v_startPos = startPos;\\r\\n  v_endPos = endPos;\\r\\n  v_screen = screen;\\r\\n\\r\\n  n = normal;\\r\\n}\\r\\n\"","export default \"precision highp float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 curve;\\r\\nattribute vec2 lengthSoFar;\\r\\nuniform vec2 size;\\r\\nuniform float exc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nvarying vec2 c;\"","export default \"void main(void) {\\r\\n  vec2 n = vec2(normal.x, aspect2 * normal.y);\\r\\n  float length = length(screen * n);\\r\\n  n = length == 0.0 ? vec2(0, 0) : n / length;\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  c = curve;\\r\\n\\r\\n  vec4 p = transform * vec4(lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n}\"","export default \"precision highp float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 curve;\\r\\nattribute vec2 lengthSoFar;\\r\\nuniform float exc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 c;\\r\\nvarying vec2 v_lengthSoFar;\"","export default \"void main(void) {\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  c = curve;\\r\\n\\r\\n  vec4 p = transform * vec4(size * lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float exc;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = direction / length(screen * direction);\\r\\n  vec2 v = vec2(u.y, -aspect2 * u.x);\\r\\n  v = v / length(screen * v);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4(arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n               arrowsize.y * textureCoord.y * u - offset * offsetMul * u,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform float exc;\\r\\nuniform float cexc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\\r\\n  u = normalize(direction - cexc * u / length(screen * u));\\r\\n  u = u / length(screen * u);\\r\\n  vec2 v = vec2(u.y, -aspect2 * u.x);\\r\\n  v = v / length(screen * v);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4(arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n               arrowsize.y * textureCoord.y * u - offset * offsetMul * u,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float exc;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = direction;\\r\\n  vec2 v = vec2(direction.y, -direction.x);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4((arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n            arrowsize.y * textureCoord.y * u - offset * offsetMul * u) /\\r\\n               screen,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform float type;\\r\\nuniform vec4 color;\\r\\nvarying vec2 n;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nuniform float lineSize;\\r\\nvoid main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineSize * 5.0));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform vec4 color;\\r\\nuniform sampler2D texture;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform sampler2D texture;\\r\\nvarying vec2 tc;\\r\\nvarying vec4 c;\\r\\nvoid main(void) {\\r\\n   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 relative;\\r\\nattribute vec2 textureCoord;\\r\\nuniform float offset;\\r\\nuniform vec2 scale;\\r\\nuniform float fontScale;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\\r\\n   tc = textureCoord;\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform lowp sampler2D texture;\\r\\nuniform mediump vec4 color;\\r\\nuniform mediump float height_font;\\r\\nuniform float type;\\r\\nuniform float buffer;\\r\\nuniform float boldness;\\r\\nfloat gamma = 4.0 * 1.4142 * boldness / height_font;\\r\\nvarying mediump vec2 tc;\\r\\nvoid main() {\\r\\n  if(type > 0.5){  //SDF\\r\\n    float tx=texture2D(texture, tc).a;\\r\\n    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\\r\\n    gl_FragColor=vec4(color.rgb, a*color.a);\\r\\n  }else{ //NORMAL FONT\\r\\n    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\\r\\n  }\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 textureCoord;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n  gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 textureCoord;\\r\\nattribute vec4 color;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvarying vec4 c;\\r\\nvoid main(void) {\\r\\n  gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n  c = color;\\r\\n}\"","const normalize = (a, b) => {\r\n  let x = b.x - a.x;\r\n  let y = b.y - a.y;\r\n  let sc = 1 / Math.sqrt(x * x + y * y);\r\n  return { x: sc * x, y: sc * y };\r\n};\r\n\r\nexport { normalize };\r\n","class BaseShape {\r\n  constructor() {\r\n    this._primitive = null;\r\n  }\r\n  getPrimitive() {\r\n    return this._primitive;\r\n  }\r\n}\r\n\r\nclass BaseShapeManager {\r\n  constructor() {\r\n    this._filler = null;\r\n  }\r\n\r\n  getFiller() {\r\n    return this._filler;\r\n  }\r\n}\r\n\r\nexport { BaseShape, BaseShapeManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_geomutils from '../../geomutils';\r\nimport { normalize } from '../util';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape } from './baseShape';\r\n\r\nconst getEdgeStyleSize = c => {\r\n  return c.width / 120;\r\n  /*      let avsize = (c.width + c.height)/2;\r\n    let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\r\n    //koef 1 for 150 size and 1.4 for 300 size\r\n    return c.width/(130*koef);\r\n*/\r\n};\r\n\r\nconst stylesTransl = {\r\n  line: 0,\r\n  dashed: 1,\r\n  'chain-dotted': 2,\r\n  dotted: 3,\r\n};\r\nconst getEdgeType = t => {\r\n  if (t !== undefined) {\r\n    t = stylesTransl[t];\r\n  }\r\n\r\n  if (t === undefined || typeof t !== 'number') {\r\n    t = 0;\r\n  }\r\n\r\n  return t;\r\n};\r\n\r\nconst animateStylesTransl = {\r\n  none: 0,\r\n  basic: 1,\r\n  gradient: 2,\r\n};\r\nconst getEdgeAnimateType = t => {\r\n  if (t !== undefined) {\r\n    t = animateStylesTransl[t];\r\n  }\r\n\r\n  if (t === undefined || typeof t !== 'number') {\r\n    t = 0;\r\n  }\r\n\r\n  return t;\r\n};\r\n\r\nclass Line extends BaseShape {\r\n  constructor(gl, edgeStyle, hasAnimation) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsLine,\r\n      elementShaders.fsLineAnimate(edgeStyle.animateEase),\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        gl.uniform2f(\r\n          uniforms.width,\r\n          c.style.width / c.width,\r\n          c.style.width / c.height\r\n        );\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n\r\n        if (hasAnimation) {\r\n          gl.uniform1f(\r\n            uniforms.animateType,\r\n            getEdgeAnimateType(c.style.animateType)\r\n          );\r\n          gl.uniform1f(uniforms.animateSpeed, c.style.animateSpeed);\r\n          ccNetViz_gl.uniformColor(\r\n            gl,\r\n            uniforms.animateColor,\r\n            c.style.animateColor\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass Curve extends BaseShape {\r\n  constructor(gl, edgeStyle) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsCurve,\r\n      elementShaders.fsCurve,\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform1f(uniforms.width, c.style.width);\r\n        gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(gl, edgeStyle) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsCircle,\r\n      elementShaders.fsCircle,\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform1f(uniforms.width, c.style.width);\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5 / 3);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst setVerticeCurveShift = (v, iV, s, t) => {\r\n  let ct1 = {},\r\n    ct2 = {};\r\n  let csx, csy, ctx, cty, cisx, cisy, sisy, citx, city;\r\n  ccNetViz_geomutils.getCurveShift(t.e, ct1);\r\n  ctx = ct1.x;\r\n  cty = ct1.y;\r\n  citx = ct1.cx;\r\n  city = ct1.cy;\r\n\r\n  ccNetViz_geomutils.getCurveShift(s.e, ct2);\r\n  csx = ct2.x;\r\n  csy = ct2.y;\r\n  cisx = ct2.cx;\r\n  cisy = ct2.cy;\r\n\r\n  v.curveShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.curveShift,\r\n      iV,\r\n      -csy,\r\n      csx,\r\n      -csy,\r\n      csx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx\r\n    );\r\n  v.circleShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.circleShift,\r\n      iV,\r\n      -cisy,\r\n      cisx,\r\n      -cisy,\r\n      cisx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx\r\n    );\r\n};\r\n\r\nconst edgesFiller = {\r\n  lines: style => ({\r\n    set: (v, e, iV, iI) => {\r\n      let s = ccNetViz_geomutils.edgeSource(e);\r\n      let t = ccNetViz_geomutils.edgeTarget(e);\r\n      let dx = s.x - t.x;\r\n      let dy = s.y - t.y;\r\n      let d = normalize(s, t);\r\n\r\n      setVerticeCurveShift(v, iV, s, t);\r\n\r\n      ccNetViz_primitive.vertices(\r\n        v.position,\r\n        iV,\r\n        s.x,\r\n        s.y,\r\n        s.x,\r\n        s.y,\r\n        t.x,\r\n        t.y,\r\n        t.x,\r\n        t.y\r\n      );\r\n      ccNetViz_primitive.vertices(\r\n        v.lengthSoFar,\r\n        iV,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        dx,\r\n        dy,\r\n        dx,\r\n        dy\r\n      );\r\n      ccNetViz_primitive.vertices(\r\n        v.normal,\r\n        iV,\r\n        -d.y,\r\n        d.x,\r\n        d.y,\r\n        -d.x,\r\n        d.y,\r\n        -d.x,\r\n        -d.y,\r\n        d.x\r\n      );\r\n\r\n      // NOTE: edge animation set from style\r\n      const hasEdgeAnimation =\r\n        !!style.animateType && style.animateType !== 'none';\r\n      if (hasEdgeAnimation) {\r\n        // when do edge animation, shader need to know the startPos and endPos\r\n        ccNetViz_primitive.vertices(\r\n          v.startPos,\r\n          iV,\r\n          s.x,\r\n          s.y,\r\n          s.x,\r\n          s.y,\r\n          s.x,\r\n          s.y,\r\n          s.x,\r\n          s.y\r\n        );\r\n        ccNetViz_primitive.vertices(\r\n          v.endPos,\r\n          iV,\r\n          t.x,\r\n          t.y,\r\n          t.x,\r\n          t.y,\r\n          t.x,\r\n          t.y,\r\n          t.x,\r\n          t.y\r\n        );\r\n      }\r\n\r\n      ccNetViz_primitive.quad(v.indices, iV, iI);\r\n    },\r\n  }),\r\n  curves: style => ({\r\n    numVertices: 3,\r\n    numIndices: 3,\r\n    set: (v, e, iV, iI) => {\r\n      let s = ccNetViz_geomutils.edgeSource(e);\r\n      let t = ccNetViz_geomutils.edgeTarget(e);\r\n      let dx = s.x - t.x;\r\n      let dy = s.y - t.y;\r\n      let d = normalize(s, t);\r\n\r\n      setVerticeCurveShift(v, iV, s, t);\r\n\r\n      ccNetViz_primitive.vertices(\r\n        v.position,\r\n        iV,\r\n        s.x,\r\n        s.y,\r\n        0.5 * (t.x + s.x),\r\n        0.5 * (t.y + s.y),\r\n        t.x,\r\n        t.y\r\n      );\r\n      ccNetViz_primitive.vertices(\r\n        v.lengthSoFar,\r\n        iV,\r\n        0,\r\n        0,\r\n        dx / 2,\r\n        dy / 2,\r\n        dx,\r\n        dy\r\n      );\r\n      ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\r\n      ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\r\n      ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\r\n    },\r\n  }),\r\n  circles: style => ({\r\n    set: (v, e, iV, iI) => {\r\n      let s = ccNetViz_geomutils.edgeSource(e);\r\n      let d = s.y < 0.5 ? 1 : -1;\r\n\r\n      let xdiff1 = 0;\r\n      let ydiff1 = 0;\r\n      let xdiff2 = 1;\r\n      let ydiff2 = d;\r\n      let xdiff3 = 2;\r\n      let ydiff3 = 1.25 * d;\r\n      let xdiff4 = 3;\r\n      let ydiff4 = 1.5 * d;\r\n\r\n      setVerticeCurveShift(v, iV, s, s);\r\n\r\n      ccNetViz_primitive.vertices(\r\n        v.position,\r\n        iV,\r\n        s.x,\r\n        s.y,\r\n        s.x,\r\n        s.y,\r\n        s.x,\r\n        s.y,\r\n        s.x,\r\n        s.y\r\n      );\r\n      ccNetViz_primitive.vertices(\r\n        v.lengthSoFar,\r\n        iV,\r\n        xdiff1,\r\n        ydiff1,\r\n        xdiff2,\r\n        ydiff2,\r\n        xdiff3,\r\n        ydiff3,\r\n        xdiff4,\r\n        ydiff4\r\n      );\r\n      ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\r\n      ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\r\n      ccNetViz_primitive.quad(v.indices, iV, iI);\r\n    },\r\n  }),\r\n};\r\n\r\nexport { Line, Curve, Circle, edgesFiller };\r\n","import { BaseShape } from './baseShape';\r\nimport ccNetViz_primitive from '../../primitive';\r\nimport { elementShaders } from '../../shaders';\r\nimport ccNetViz_gl from '../../gl';\r\n\r\nclass Node extends BaseShape {\r\n  constructor(gl, nodeStyle, getNodeSize) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      null,\r\n      elementShaders.vsNode,\r\n      elementShaders.fsColorTexture,\r\n      c => {\r\n        let size = getNodeSize(c);\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass NodeColored extends BaseShape {\r\n  constructor(gl, nodeStyle, getNodeSize) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      null,\r\n      elementShaders.vsNodeColored,\r\n      elementShaders.fsVarColorTexture,\r\n      c => {\r\n        let size = getNodeSize(c);\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst nodesFiller = style => ({\r\n  set: (v, e, iV, iI) => {\r\n    let x = e.x;\r\n    let y = e.y;\r\n    ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n    ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n    if (v.color) {\r\n      let c = e.color;\r\n      ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\r\n    }\r\n    ccNetViz_primitive.quad(v.indices, iV, iI);\r\n  },\r\n});\r\n\r\nexport { Node, NodeColored, nodesFiller };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_geomutils from '../../geomutils';\r\nimport { normalize } from '../util';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\n\r\nconst shaderparams = { attribute: { offsetMul: 1 } };\r\n\r\nconst bindEdgeArrows = (gl, view, getSize, getEdgesCnt) => {\r\n  return c => {\r\n    let size = getSize(c, c.style, getEdgesCnt(), 0.2);\r\n    if (!size) return true;\r\n\r\n    let uniforms = c.shader.uniforms;\r\n    gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n    gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\r\n    gl.uniform1f(uniforms.exc, c.curveExc);\r\n    uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\r\n    if (uniforms.size) {\r\n      size = 2.5 * c.nodeSize;\r\n      uniforms.size &&\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n    }\r\n    gl.uniform2f(uniforms.screen, c.width, c.height);\r\n    gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n    ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n  };\r\n};\r\n\r\nlet dx = Math.cos(0.9);\r\nlet dy = Math.sin(0.9);\r\nlet ct = {};\r\n\r\nconst set = (v, e, s, t, iV, iI, dx, dy) => {\r\n  let tx = t.x;\r\n  let ty = t.y;\r\n\r\n  let offsetMul;\r\n  let ctx, cty, citx, city;\r\n\r\n  ccNetViz_geomutils.getCurveShift(t.e, ct);\r\n  ctx = ct.x;\r\n  cty = ct.y;\r\n  citx = ct.cx;\r\n  city = ct.cy;\r\n\r\n  if (t.is_edge) {\r\n    //if target is edge, disable node offset for arrow\r\n    //normal of that edge\r\n    offsetMul = 0;\r\n  } else {\r\n    offsetMul = 1;\r\n  }\r\n  v.curveShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.curveShift,\r\n      iV,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx\r\n    );\r\n  v.circleShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.circleShift,\r\n      iV,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx\r\n    );\r\n\r\n  ccNetViz_primitive.singles(\r\n    v.offsetMul,\r\n    iV,\r\n    offsetMul,\r\n    offsetMul,\r\n    offsetMul,\r\n    offsetMul\r\n  );\r\n  ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\r\n  ccNetViz_primitive.vertices(\r\n    v.direction,\r\n    iV,\r\n    dx,\r\n    dy,\r\n    dx,\r\n    dy,\r\n    dx,\r\n    dy,\r\n    dx,\r\n    dy\r\n  );\r\n  ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n  ccNetViz_primitive.quad(v.indices, iV, iI);\r\n};\r\n\r\nclass LineArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsLineArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass CurveArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsCurveArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass CircleArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsCircleArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass EdgeArrowManager extends BaseShapeManager {\r\n  constructor() {\r\n    super();\r\n    this._filler = {\r\n      lineArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let d = normalize(s, t);\r\n          set(v, e, s, t, iV, iI, d.x, d.y);\r\n        },\r\n      }),\r\n      curveArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\r\n        },\r\n      }),\r\n      circleArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let s = t;\r\n          return set(\r\n            v,\r\n            e,\r\n            s,\r\n            t,\r\n            iV,\r\n            iI,\r\n            t.x < 0.5 ? dx : -dx,\r\n            t.y < 0.5 ? -dy : dy\r\n          );\r\n        },\r\n      }),\r\n    };\r\n  }\r\n}\r\n\r\nexport { LineArrow, CurveArrow, CircleArrow, EdgeArrowManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_color from '../../color';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\n\r\nlet getLabelType = (f, texts) => {\r\n  if (texts.isSDF(f)) return 1;\r\n  return 0;\r\n};\r\n\r\nlet bindLabels = (\r\n  is_outline,\r\n  gl,\r\n  getNodeSize,\r\n  getLabelSize,\r\n  texts,\r\n  backgroundColor\r\n) => {\r\n  return c => {\r\n    if (!getNodeSize(c)) return true;\r\n\r\n    let l = c.style.label;\r\n    let f = l.font;\r\n    let uniforms = c.shader.uniforms;\r\n\r\n    gl.uniform1f(uniforms.type, getLabelType(f, texts));\r\n    //            gl.uniform1f(uniforms.type, 0);\r\n\r\n    let textEngine = texts.getEngine(f);\r\n    textEngine.setFont(f);\r\n\r\n    let fontScale = 1.0;\r\n    let sdfSize = textEngine.fontSize;\r\n    let wantedSize = textEngine.isSDF\r\n      ? getLabelSize(context, l || {})\r\n      : sdfSize;\r\n    if (wantedSize === 0) {\r\n      fontScale = 0;\r\n    }\r\n\r\n    let opts = {};\r\n    if (wantedSize && sdfSize) {\r\n      fontScale *= wantedSize / sdfSize;\r\n    }\r\n\r\n    if (is_outline && !textEngine.isSDF)\r\n      //discardAll\r\n      fontScale = 0;\r\n\r\n    gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\r\n    gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1);\r\n    gl.uniform1f(uniforms.fontScale, fontScale);\r\n    gl.uniform1f(uniforms.height_font, sdfSize);\r\n    gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n    gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n\r\n    let color;\r\n    if (is_outline && f)\r\n      color = new ccNetViz_color(f.outlineColor || backgroundColor);\r\n    else color = c.style.color;\r\n    ccNetViz_gl.uniformColor(gl, uniforms.color, color);\r\n  };\r\n};\r\n\r\nclass Label extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsShader,\r\n      elementShaders.fsLabelTexture,\r\n      bindLabels(false, gl, getNodeSize, getLabelSize, texts, backgroundColor)\r\n    );\r\n  }\r\n}\r\n\r\nclass LabelOutline extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsShader,\r\n      elementShaders.fsLabelTexture,\r\n      bindLabels(true, gl, getNodeSize, getLabelSize, texts, backgroundColor)\r\n    );\r\n  }\r\n}\r\n\r\nclass LabelManager extends BaseShapeManager {\r\n  constructor(texts) {\r\n    super();\r\n    this._filler = style => {\r\n      return (function (style) {\r\n        let textEngine = texts.getEngine(style.font);\r\n\r\n        textEngine.setFont(style.font);\r\n\r\n        return {\r\n          set: (v, e, iV, iI) => {\r\n            var x = e.x;\r\n            var y = e.y;\r\n\r\n            var ret = false;\r\n            var parts = textEngine.get(e.label || '', x, y, () => {\r\n              ret = true;\r\n            });\r\n            for (var i = 0; i < parts.length; i++ , iV += 4, iI += 6) {\r\n              let c = parts[i];\r\n\r\n              ccNetViz_primitive.vertices(\r\n                v.position,\r\n                iV,\r\n                x,\r\n                y,\r\n                x,\r\n                y,\r\n                x,\r\n                y,\r\n                x,\r\n                y\r\n              );\r\n              ccNetViz_primitive.vertices(\r\n                v.relative,\r\n                iV,\r\n                c.dx,\r\n                c.dy,\r\n                c.width + c.dx,\r\n                c.dy,\r\n                c.width + c.dx,\r\n                c.height + c.dy,\r\n                c.dx,\r\n                c.height + c.dy\r\n              );\r\n              ccNetViz_primitive.vertices(\r\n                v.textureCoord,\r\n                iV,\r\n                c.left,\r\n                c.bottom,\r\n                c.right,\r\n                c.bottom,\r\n                c.right,\r\n                c.top,\r\n                c.left,\r\n                c.top\r\n              );\r\n              ccNetViz_primitive.quad(v.indices, iV, iI);\r\n            }\r\n\r\n            return ret;\r\n          },\r\n          size: (v, e) => {\r\n            return textEngine.steps(e.label || '');\r\n          },\r\n        };\r\n      })(style);\r\n    };\r\n  }\r\n}\r\n\r\nexport { Label, LabelOutline, LabelManager };\r\n","import ccNetViz_color from '../color';\r\nimport ccNetViz_gl from '../gl';\r\nimport ccNetViz_primitive from '../primitive';\r\nimport ccNetViz_layout from '../layout/layout';\r\nimport ccNetViz_geomutils from '../geomutils';\r\nimport ccNetViz_utils from '../utils';\r\nimport { partitionByStyle } from '../primitiveTools';\r\nimport ccNetViz_spatialSearch from '../spatialSearch/spatialSearch';\r\nimport { elementShaders } from '../shaders';\r\nimport { Line, Curve, Circle, edgesFiller } from './shapes/edge';\r\nimport { Node, NodeColored, nodesFiller } from './shapes/node';\r\nimport { LineArrow, CurveArrow, CircleArrow, EdgeArrowManager } from './shapes/edgeArrow';\r\nimport { Label, LabelOutline, LabelManager } from './shapes/labels';\r\nimport { normalize } from './util';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n * \tDavid Tichy\r\n * \tAleš Saska - http://alessaska.cz/\r\n */\r\n\r\nexport default function (\r\n  canvas,\r\n  context,\r\n  view,\r\n  gl,\r\n  textures,\r\n  files,\r\n  texts,\r\n  events,\r\n  options,\r\n  backgroundColor,\r\n  nodeStyle,\r\n  edgeStyle,\r\n  getSize,\r\n  getNodeSize,\r\n  getLabelSize,\r\n  getLabelHideSize,\r\n  getNodesCnt,\r\n  getEdgesCnt,\r\n  onRedraw,\r\n  onLoad\r\n) {\r\n  getNodesCnt =\r\n    getNodesCnt ||\r\n    (() => {\r\n      return this.nodes.length;\r\n    });\r\n  getEdgesCnt =\r\n    getEdgesCnt ||\r\n    (() => {\r\n      return this.edges.length;\r\n    });\r\n\r\n  this.redraw = onRedraw || (() => { });\r\n\r\n  options = options || {};\r\n  options.styles = options.styles || {};\r\n\r\n  // set animation flag\r\n  this.hasEdgeAnimation =\r\n    !!edgeStyle.animateType && edgeStyle.animateType !== 'none';\r\n\r\n  const labelManager = new LabelManager(texts);\r\n  const labelsFiller = labelManager.getFiller();\r\n\r\n  const edgeArrowManager = new EdgeArrowManager();\r\n  const arrowFiller = edgeArrowManager.getFiller();\r\n\r\n  this.getCurrentSpatialSearch = context => {\r\n    if (spatialSearch === undefined) {\r\n      spatialSearch = new ccNetViz_spatialSearch(\r\n        context,\r\n        texts,\r\n        options,\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        normalize,\r\n        nodeStyle,\r\n        getLabelSize,\r\n        getLabelHideSize\r\n      );\r\n    }\r\n    return spatialSearch;\r\n  };\r\n\r\n  this.remove = () => { };\r\n\r\n  let edgeTypes;\r\n  let edgePoses;\r\n\r\n  let spatialSearch = undefined;\r\n\r\n  //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\r\n  let set_end = () => {\r\n    let enableLazyRedraw = false;\r\n    let reset = p => {\r\n      if (enableLazyRedraw) this.set(this.nodes, this.edges);\r\n    };\r\n    files.onLoad(reset);\r\n    textures.onLoad(reset);\r\n    enableLazyRedraw = true;\r\n  };\r\n\r\n  this.set = function (nodes, edges, layout, layout_options) {\r\n    removedNodes = 0;\r\n    removedEdges = 0;\r\n\r\n    this.nodes = nodes = nodes || [];\r\n    this.edges = edges = edges ? [].concat(edges) : [];\r\n\r\n    spatialSearch = undefined;\r\n\r\n    let lines = [],\r\n      curves = [],\r\n      circles = [];\r\n\r\n    //tanslate indexes into node objects\r\n    for (let i = 0; i < edges.length; i++) {\r\n      let e = edges[i];\r\n      if (typeof e.source == 'number') e.source = nodes[e.source];\r\n\r\n      if (typeof e.target == 'number') e.target = nodes[e.target];\r\n    }\r\n\r\n    let init = () => {\r\n      let getIndex = e => {\r\n        return e.uniqid || -e.index || -e.nidx;\r\n      };\r\n\r\n      // NOTE: here init\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        nodes[i].index = i;\r\n      }\r\n\r\n      for (let i = 0, j = nodes.length + 10; i < edges.length; i++ , j++) {\r\n        edges[i].nidx = j;\r\n      }\r\n\r\n      edgeTypes = [];\r\n      edgePoses = new Uint32Array(edges.length);\r\n      const dummysd = { k: '_', kArrow: '_', d: [] };\r\n      const circlesd = { k: 'circles', kArrow: 'circleArrows', d: circles };\r\n      const linesd = { k: 'lines', kArrow: 'lineArrows', d: lines };\r\n      const curvesd = { k: 'curves', kArrow: 'curveArrows', d: curves };\r\n\r\n      if (extensions.OES_standard_derivatives) {\r\n        let map = {};\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          (map[si] || (map[si] = {}))[ti] = true;\r\n        }\r\n\r\n        //enable the \"curve\" feature\r\n        const is_bidirectional_overlap = options.bidirectional === 'overlap';\r\n\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let target,\r\n            e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          let t = dummysd;\r\n          if (si === ti) {\r\n            e.t = 2; //circle\r\n            target = circles;\r\n            t = circlesd;\r\n          } else {\r\n            let m = map[ti];\r\n            if (m && m[si] && is_bidirectional_overlap) {\r\n              e.t = 1; //curve\r\n              target = curves;\r\n              t = curvesd;\r\n            } else {\r\n              e.t = 0; //line\r\n              target = lines;\r\n              t = linesd;\r\n            }\r\n          }\r\n          edgeTypes.push(t);\r\n          edgePoses[i] = t.d.length;\r\n          target.push(e);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          let t = dummysd;\r\n          if (si !== ti) {\r\n            t = linesd;\r\n            e.t = 0;\r\n            lines.push(e);\r\n          }\r\n          edgeTypes.push(t);\r\n          edgePoses[i] = t.d.length;\r\n        }\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    let nodesParts = partitionByStyle(nodes);\r\n    let circlesParts = partitionByStyle(circles);\r\n    let linesParts = partitionByStyle(lines);\r\n    let curvesParts = partitionByStyle(curves);\r\n\r\n    this.getCurrentSpatialSearch = context => {\r\n      if (spatialSearch === undefined) {\r\n        spatialSearch = new ccNetViz_spatialSearch(\r\n          context,\r\n          texts,\r\n          options,\r\n          nodes,\r\n          nodesParts,\r\n          lines,\r\n          linesParts,\r\n          curves,\r\n          curvesParts,\r\n          circles,\r\n          circlesParts,\r\n          normalize,\r\n          nodeStyle,\r\n          getLabelSize,\r\n          getLabelHideSize\r\n        );\r\n      }\r\n      return spatialSearch;\r\n    };\r\n\r\n    layout &&\r\n      new ccNetViz_layout[layout](nodes, edges, layout_options).apply() &&\r\n      ccNetViz_layout.normalize(nodes);\r\n\r\n    if (!gl) return;\r\n\r\n    let tryInitPrimitives = () => {\r\n      var isDirty = false;\r\n\r\n      let defaultAdder = (section, addSection) => {\r\n        if (typeof section.style.texture === 'string')\r\n          section.style.texture = textures.get(\r\n            gl,\r\n            section.style.texture,\r\n            addSection\r\n          );\r\n        else addSection();\r\n      };\r\n      let labelAdder = (section, addSection) => {\r\n        var slf = (section.style.label || {}).font || {};\r\n        let textEngine = texts.getEngine(slf);\r\n        section.style.texture = textEngine.getTexture(slf, addSection);\r\n      };\r\n\r\n      let is;\r\n      is = nodes.length && !nodes[0].color;\r\n      isDirty =\r\n        isDirty ||\r\n        scene.nodes.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          is ? nodes : [],\r\n          is ? nodesParts : {},\r\n          nodesFiller\r\n        );\r\n      is = nodes.length && nodes[0].color;\r\n      isDirty =\r\n        isDirty ||\r\n        scene.nodesColored.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          is ? nodes : [],\r\n          is ? nodesParts : {},\r\n          nodesFiller\r\n        );\r\n      if (nodeStyle.label) {\r\n        texts.clear();\r\n        isDirty =\r\n          isDirty ||\r\n          scene.labelsOutline.set(\r\n            gl,\r\n            options.styles,\r\n            labelAdder,\r\n            nodes,\r\n            nodesParts,\r\n            labelsFiller\r\n          );\r\n        isDirty =\r\n          isDirty ||\r\n          scene.labels.set(\r\n            gl,\r\n            options.styles,\r\n            labelAdder,\r\n            nodes,\r\n            nodesParts,\r\n            labelsFiller\r\n          );\r\n        texts.bind();\r\n      }\r\n\r\n      isDirty =\r\n        isDirty ||\r\n        scene.lines.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          lines,\r\n          linesParts,\r\n          edgesFiller.lines\r\n        );\r\n\r\n      if (extensions.OES_standard_derivatives) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.curves.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            curves,\r\n            curvesParts,\r\n            edgesFiller.curves\r\n          );\r\n        isDirty =\r\n          isDirty ||\r\n          scene.circles.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            circles,\r\n            circlesParts,\r\n            edgesFiller.circles\r\n          );\r\n      }\r\n\r\n      if (edgeStyle.arrow) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.lineArrows.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            lines,\r\n            linesParts,\r\n            arrowFiller.lineArrows\r\n          );\r\n\r\n        if (extensions.OES_standard_derivatives) {\r\n          isDirty =\r\n            isDirty ||\r\n            scene.curveArrows.set(\r\n              gl,\r\n              options.styles,\r\n              defaultAdder,\r\n              curves,\r\n              curvesParts,\r\n              arrowFiller.curveArrows\r\n            );\r\n\r\n          isDirty =\r\n            isDirty ||\r\n            scene.circleArrows.set(\r\n              gl,\r\n              options.styles,\r\n              defaultAdder,\r\n              circles,\r\n              circlesParts,\r\n              arrowFiller.circleArrows\r\n            );\r\n        }\r\n      }\r\n\r\n      return isDirty;\r\n    };\r\n\r\n    while (tryInitPrimitives()); //loop until they are not dirty\r\n    set_end();\r\n  };\r\n\r\n  this.update = function (element, attribute, data) {\r\n    if (!gl) return;\r\n    scene[element].update(gl, attribute, data, function (style) {\r\n      return {\r\n        set: function (v, e, iV) {\r\n          return ccNetViz_primitive.colors(v, iV, e, e, e, e);\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  this.find = (x, y, dist, nodes, edges, labels) => {\r\n    return this.getCurrentSpatialSearch(context).find(\r\n      context,\r\n      x,\r\n      y,\r\n      dist,\r\n      view.size,\r\n      nodes,\r\n      edges,\r\n      labels\r\n    );\r\n  };\r\n\r\n  this.findArea = (x1, y1, x2, y2, nodes, edges, labels) => {\r\n    return this.getCurrentSpatialSearch(context).findArea(\r\n      context,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2,\r\n      view.size,\r\n      nodes,\r\n      edges,\r\n      labels\r\n    );\r\n  };\r\n\r\n  this.updateNode = (n, i) => {\r\n    this.nodes[i] = n;\r\n\r\n    if (spatialSearch) spatialSearch.update(context, 'nodes', i, n);\r\n\r\n    if (!gl) return;\r\n\r\n    (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(\r\n      gl,\r\n      n,\r\n      i,\r\n      nodesFiller\r\n    );\r\n    scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\r\n    scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\r\n  };\r\n\r\n  this.updateEdge = (e, i) => {\r\n    let t = edgeTypes[i];\r\n    let pos = edgePoses[i];\r\n\r\n    t.d[pos] = this.edges[i] = e;\r\n\r\n    if (spatialSearch) spatialSearch.update(context, t.k, pos, e);\r\n\r\n    if (!gl) return;\r\n\r\n    scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\r\n    if (edgeStyle.arrow)\r\n      scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\r\n  };\r\n\r\n  let removedNodes = 0;\r\n  let removedEdges = 0;\r\n\r\n  const freenode = { x: -1, y: -1, title: '' };\r\n  this.removeNodeAtPos = pos => {\r\n    if (this.nodes[pos] === freenode) {\r\n      return;\r\n    }\r\n\r\n    removedNodes++;\r\n    this.updateNode(freenode, pos);\r\n  };\r\n\r\n  const freeedge = { source: { x: -1, y: -1 }, target: { x: -1, y: -1 } };\r\n  this.removeEdgeAtPos = pos => {\r\n    if (this.edges[pos] === freeedge) {\r\n      return;\r\n    }\r\n\r\n    removedEdges++;\r\n\r\n    this.updateEdge(freeedge, pos);\r\n  };\r\n\r\n  this.getVisibleNodes = () => {\r\n    if (removedNodes <= 0) return this.nodes;\r\n\r\n    let r = [];\r\n    this.nodes.forEach(n => {\r\n      if (n !== freenode) r.push(n);\r\n    });\r\n    return r;\r\n  };\r\n\r\n  this.getVisibleEdges = () => {\r\n    if (removedEdges <= 0) return this.edges;\r\n\r\n    let r = [];\r\n    this.edges.forEach(n => {\r\n      if (n !== freeedge) r.push(n);\r\n    });\r\n    return r;\r\n  };\r\n\r\n  this.cntShownNodes = () => {\r\n    return this.nodes.length - removedNodes;\r\n  };\r\n\r\n  this.cntShownEdges = () => {\r\n    return this.edges.length - removedEdges;\r\n  };\r\n\r\n  this.nodes = [];\r\n  this.edges = [];\r\n\r\n  let extensions = gl\r\n    ? ccNetViz_gl.initExtensions(gl, 'OES_standard_derivatives')\r\n    : {};\r\n  let scene = (this.scene = createScene.call(this));\r\n\r\n  if (!gl) {\r\n    let loadCalled = false;\r\n    options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad();\r\n    return this;\r\n  }\r\n\r\n  // NOTE: split to different file and use getPrimitive to get webgl element\r\n  const lineEdge = new Line(gl, edgeStyle, this.hasEdgeAnimation);\r\n  scene.add('lines', lineEdge.getPrimitive());\r\n\r\n  if (extensions.OES_standard_derivatives) {\r\n    const curveEdge = new Curve(gl, edgeStyle);\r\n    scene.add('curves', curveEdge.getPrimitive());\r\n\r\n    const circleEdge = new Circle(gl, edgeStyle);\r\n    scene.add('circles', circleEdge.getPrimitive());\r\n  }\r\n\r\n  if (edgeStyle.arrow) {\r\n    const lineArrow = new LineArrow(gl, view, edgeStyle, getSize, getEdgesCnt);\r\n    scene.add('lineArrows', lineArrow.getPrimitive());\r\n\r\n    if (extensions.OES_standard_derivatives) {\r\n      const curveArrow = new CurveArrow(\r\n        gl,\r\n        view,\r\n        edgeStyle,\r\n        getSize,\r\n        getEdgesCnt\r\n      );\r\n      scene.add('curveArrows', curveArrow.getPrimitive());\r\n      const circleArrow = new CircleArrow(\r\n        gl,\r\n        view,\r\n        edgeStyle,\r\n        getSize,\r\n        getEdgesCnt\r\n      );\r\n      scene.add('circleArrows', circleArrow.getPrimitive());\r\n    }\r\n  }\r\n\r\n  // TODO: getNodeSize??\r\n  const node = new Node(gl, nodeStyle, getNodeSize);\r\n  scene.add('nodes', node.getPrimitive());\r\n  const nodeColored = new NodeColored(gl, nodeStyle, getNodeSize);\r\n  scene.add('nodesColored', nodeColored.getPrimitive());\r\n\r\n  const labelOutline = new LabelOutline(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor\r\n  );\r\n  nodeStyle.label && scene.add('labelsOutline', labelOutline.getPrimitive());\r\n  const label = new Label(gl, nodeStyle, getNodeSize, getLabelSize, texts);\r\n  nodeStyle.label && scene.add('labels', label.getPrimitive(), backgroundColor);\r\n\r\n  if (options.onLoad) {\r\n    let styles = options.styles;\r\n    for (let p in styles) {\r\n      let s = styles[p];\r\n\r\n      s.texture && textures.get(gl, s.texture, onLoad);\r\n      s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\r\n    }\r\n  }\r\n\r\n  function createScene() {\r\n    return {\r\n      elements: [],\r\n      add: (name, e) => {\r\n        scene[name] = e;\r\n        scene.elements.push(e);\r\n      },\r\n    };\r\n  }\r\n}\r\n","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\n// this file creates webGL type textures of images example custom.html\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad, 5)];\r\n    this._textures = {}; //already converted to textures\r\n    this._pending = {}; //pending images \r\n    this._n = 0;  //counts pending images to be converted to textures\r\n  }\r\n\r\n  get(gl, img, action, options) { \r\n      var p = this._pending[img];\r\n      var t = this._textures[img];\r\n\r\n      \r\n      // TODO : add explanation about if-else statements below\r\n      if (p) {\r\n          p.push(action);\r\n      }\r\n      else if (t) {\r\n          action && action();\r\n      }\r\n\r\n      // if image is neither in this._pending array nor nor in already converted this._textures array\r\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\r\n      // and remove it from pending + add it to textures\r\n      \r\n      else {\r\n          p = this._pending[img] = [action];\r\n          this._n++;\r\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\r\n              p.forEach(a => a && a());\r\n              delete this._pending[img];\r\n              \r\n              --this._n || this._load.forEach(l => l());\r\n          }, options);\r\n      }\r\n      return t;\r\n  }\r\n\r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n\r\n}","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\r\n    this._files = {};\r\n    this._pending = {};\r\n    this._n = 0;\r\n  }\r\n  \r\n  _transformFile(data, dataType) {\r\n    if(dataType === 'json')\r\n      return JSON.parse(data);\r\n    return data;    \r\n  }\r\n  \r\n  get(url) {\r\n    return this._files[url];\r\n  }\r\n\r\n  /*\r\n   * @param type {\r\n   *   url: 'url of file',\r\n   *   success: callback\r\n   *   dataType \"text\" || \"json\"\r\n   * }\r\n   */\r\n  load(url, action, dataType) {\r\n    let p = this._pending[url];\r\n    let f = this._files[url];\r\n\r\n    if (p) {\r\n        p.push(action);\r\n    }\r\n    else if (f) {\r\n        action && action();\r\n    }\r\n    else {\r\n      p = this._pending[url] = [action];\r\n      this._n++;\r\n\r\n      ccNetViz_utils.ajax(url, (data) => {\r\n        this._files[url] = this._transformFile(data,dataType);\r\n        p.forEach(a => a && a(this._files[url]));\r\n        delete this._pending[url];\r\n        --this._n || this._load.forEach(l => l());\r\n      }, dataType=='arraybuffer'?dataType:undefined);\r\n    }\r\n    return f;\r\n  }\r\n  \r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n  \r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(gl, files, textures) {\r\n    this._gl = gl;\r\n    this._size = 1024;\r\n\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.width = this._canvas.height = this._size;\r\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\r\n    this._canvas.style.display = 'none';\r\n    this._el = document.body.appendChild(this._canvas);\r\n\r\n    this._context = this._canvas.getContext('2d');\r\n    this._context.fillStyle = 'white';\r\n    this._context.textAlign = 'left';\r\n    this._context.textBaseline = 'top';\r\n\r\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\r\n\r\n    this.texture = this._gl.createTexture();\r\n  }\r\n\r\n  clear() {\r\n    this._rendered = {};\r\n    this._context.clearRect(0, 0, this._size, this._size);\r\n    this._height = this._x = this._y = 0;\r\n  }\r\n\r\n  setFont(font) {\r\n    var fontstr = font ? font.size + 'px ' + font.type : '15px arial';\r\n    if (typeof this._rendered === 'undefined') this._rendered = {};\r\n    this._rendered[fontstr] = this._texts = this._rendered[fontstr] || {};\r\n    this._context.font = fontstr;\r\n    this._x = 0;\r\n    this._y += this._height;\r\n    this._height = font ? font.size + 1 : NaN;\r\n  }\r\n\r\n  get fontSize() {\r\n    return this._height - 1;\r\n  }\r\n\r\n  getTexture(style, onLoad) {\r\n    onLoad();\r\n    return this.texture;\r\n  }\r\n\r\n  _getText(text) {\r\n    let result = this._texts[text];\r\n    if (!result) {\r\n      let width = this._context.measureText(text).width;\r\n      if (this._x + width > this._size) {\r\n        this._x = 0;\r\n        this._y += this._height;\r\n      }\r\n      this._context.fillText(text, this._x, this._y);\r\n      this._texts[text] = result = {\r\n        width: width,\r\n        height: this._height,\r\n        left: this._x / this._size,\r\n        right: (this._x + width) / this._size,\r\n        top: this._y / this._size,\r\n        bottom: (this._y + this._height) / this._size,\r\n      };\r\n      this._x += width;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get(text, x, y) {\r\n    let c = this._getText(text);\r\n\r\n    let dx = x <= 0.5 ? 0 : -c.width;\r\n    let dy = y <= 0.5 ? 0 : -c.height;\r\n\r\n    return [\r\n      {\r\n        width: c.width,\r\n        height: c.height,\r\n        left: c.left,\r\n        right: c.right,\r\n        top: c.top,\r\n        bottom: c.bottom,\r\n        dx: dx,\r\n        dy: dy,\r\n      },\r\n    ];\r\n  }\r\n\r\n  steps(text) {\r\n    return 1;\r\n  }\r\n\r\n  bind() {\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\r\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    this._gl.texParameteri(\r\n      this._gl.TEXTURE_2D,\r\n      this._gl.TEXTURE_MAG_FILTER,\r\n      this._gl.NEAREST\r\n    );\r\n    this._gl.texParameteri(\r\n      this._gl.TEXTURE_2D,\r\n      this._gl.TEXTURE_MIN_FILTER,\r\n      this._gl.NEAREST\r\n    );\r\n    this._gl.texImage2D(\r\n      this._gl.TEXTURE_2D,\r\n      0,\r\n      this._gl.RGBA,\r\n      this._gl.RGBA,\r\n      this._gl.UNSIGNED_BYTE,\r\n      this._canvas\r\n    );\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\r\n  }\r\n\r\n  remove() {\r\n    this._context && this._el.parentNode.removeChild(this._el);\r\n  }\r\n}\r\n","'use strict';\r\n\r\nimport ShelfPack from 'shelf-pack';\r\n\r\n// size of the spritesheet generated in pixels\r\nconst DEFAULT_SIZE = 1024;\r\n\r\n// multiplication factor by which spritesheet can grow, if shelfpack is full\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// max size to contain all the characters in the spritesheet\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\nconst MAX_SIZE = 2048;\r\n\r\nexport default class GlyphAtlas {\r\n    constructor(gl, resetCache) {\r\n\r\n        // setting width to default\r\n        this.width = DEFAULT_SIZE;\r\n\r\n        // setting height to default\r\n        this.height = DEFAULT_SIZE;\r\n\r\n        // resets cached glyphs in sdf.js before making resize() call\r\n        this._resetCache = resetCache;\r\n\r\n        // creating an empty spritesheet to pack glyphs\r\n        this.bin = new ShelfPack(this.width, this.height);\r\n\r\n        /**\r\n         * stores information coordinate about character\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": {\r\n         *      id, x, y, h, w, maxh, maxw, ref_count\r\n         *  }\r\n         */\r\n        this.index = {};\r\n\r\n        /**\r\n         * stores list of character ids available in atlas.js\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": [\"charid\"]\r\n         */\r\n        this.ids = {};\r\n\r\n        // webgl rendering context\r\n        this.gl = gl;\r\n\r\n        // initialized to empty Uint8Array buffer to store texture data\r\n        this.data = new Uint8Array(this.width * this.height);\r\n    }\r\n\r\n\r\n    // refreshes texture of characters when updateTexture() is called\r\n    _createTexture() {\r\n        //\r\n        this.dirty = false;\r\n\r\n        // standard creation of webgl texture\r\n        let gl = this.gl;\r\n        let texture = gl.createTexture();\r\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n        /**\r\n         * pixelStorei() (Func): specifies the pixel storage modes\r\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\r\n         */\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n        // standard interpolation Filters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D, // target: A two-dimensional texture\r\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\r\n            gl.ALPHA, // internalFormat: only reads the alpha component\r\n            this.width, // width\r\n            this.height, // height\r\n            0, // border\r\n            gl.ALPHA, // format\r\n            gl.UNSIGNED_BYTE, // type\r\n            this.data // ImageData object\r\n        );\r\n\r\n\r\n        // Unbinding the buffer channel\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        // returning so formed texture\r\n        return texture;\r\n    }\r\n\r\n    // utility function that returns list of glyphs added\r\n    getGlyphs() {\r\n        const glyphs = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!glyphs[name]) glyphs[name] = [];\r\n            glyphs[name].push(id);\r\n        }\r\n        return glyphs;\r\n    }\r\n\r\n    // utility function that returns list of rects added\r\n    getRects() {\r\n        const rects = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!rects[name]) rects[name] = {};\r\n            rects[name][id] = this.index[key];\r\n        }\r\n        return rects;\r\n    }\r\n\r\n    // main function of the module called from sdf.js\r\n    addGlyph(\r\n        id, // character id\r\n        name, // name of the font - \"fontstrong#range.pbf\"\r\n        glyph, // glyph object from sdf.js\r\n        buffer, // padding around glyph\r\n        fontSize,\r\n        markDirty //\r\n    ) {\r\n        if (!glyph) return null;\r\n\r\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\r\n        const key = `${name}#${glyph.id}`;\r\n\r\n        // if key is present in index and not present in ids then add it in ids\r\n        if (this.index[key]) {\r\n            if (this.ids[key].indexOf(id) < 0) {\r\n                this.ids[key].push(id);\r\n            }\r\n            return this.index[key];\r\n        }\r\n\r\n        const bufferedWidth = glyph.width + buffer * 2;\r\n        const bufferedHeight = glyph.height + buffer * 2;\r\n\r\n        // Add a 1px border around every image.\r\n        // 'padding' variable is basically border\r\n        // buffer variable is basically padding\r\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\r\n        // const padding = 12;\r\n        let packWidth = bufferedWidth + 2 * padding;\r\n        let packHeight = bufferedHeight + 2 * padding;\r\n\r\n        // Increase to next number divisible by 4, but at least 1.\r\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\r\n        packWidth += (4 - packWidth % 4);\r\n        packHeight += (4 - packHeight % 4);\r\n\r\n        let rect = this.bin.packOne(packWidth, packHeight);\r\n\r\n        // if the current size is not sufficient to contain all the characters in the texture\r\n        // then, expand (resize) it\r\n        if (!rect) {\r\n            this.resize();\r\n            rect = this.bin.packOne(packWidth, packHeight);\r\n            // if markDirty callback was passed then execute it\r\n            markDirty && markDirty();\r\n        }\r\n\r\n        // if still not found then there is some problem, simply return null to indicate problem\r\n        if (!rect) {\r\n            return null;\r\n        }\r\n\r\n\r\n        this.index[key] = rect;\r\n        this.ids[key] = [id];\r\n\r\n        // if bitmap corresponding to the glyph object exists then, add the glyph\r\n        if (glyph.bitmap) {\r\n            const target = this.data;\r\n            const source = glyph.bitmap;\r\n            for (let y = 0; y < bufferedHeight; y++) {\r\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\r\n                const y2 = bufferedWidth * y;\r\n                for (let x = 0; x < bufferedWidth; x++) {\r\n                    target[y1 + x] = source[y2 + x];\r\n                }\r\n            }\r\n        }\r\n        this.dirty = true;\r\n        return rect;\r\n    }\r\n\r\n    // expands the size of the texture if all the characters were not contained in default size\r\n    resize() {\r\n        const prevWidth = this.width;\r\n        const prevHeight = this.height;\r\n\r\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\r\n\r\n        if (this._texture) {\r\n            if (this.gl) {\r\n                this.gl.deleteTexture(this._texture);\r\n            }\r\n            this._texture = null;\r\n        }\r\n\r\n        this.width *= SIZE_GROWTH_RATE;\r\n        this.height *= SIZE_GROWTH_RATE;\r\n        this.bin.resize(this.width, this.height);\r\n\r\n        const buf = new ArrayBuffer(this.width * this.height);\r\n        for (let i = 0; i < prevHeight; i++) {\r\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\r\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\r\n            dst.set(src);\r\n        }\r\n        this.data = new Uint8Array(buf);\r\n        this._resetCache();\r\n    }\r\n\r\n    bind(gl) {\r\n    }\r\n\r\n    // getter of texture from GlyphAtlas object\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    updateTexture() {\r\n        let gl = this.gl;\r\n        if (!this._texture) {\r\n            this._texture = this._createTexture();\r\n        }\r\n\r\n        // if dirty functionality is true then:\r\n        if (this.dirty) {\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n            // specifies a sub - rectangle of the current texture\r\n            gl.texSubImage2D(\r\n                gl.TEXTURE_2D,\r\n                0,\r\n                0,\r\n                0,\r\n                this.width,\r\n                this.height,\r\n                gl.ALPHA,\r\n                gl.UNSIGNED_BYTE,\r\n                this.data\r\n            );\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            this.dirty = false;\r\n        }\r\n        return this._texture;\r\n    }\r\n};\r\n","/* Algorithm to trim the glyph and add padding to it */\r\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\r\n// Slicing the extra columns\r\n// Adding buffer space on the sides\r\n\r\nexport default class {\r\n    constructor(buffer) {\r\n        if (buffer == undefined) this.buffer = 0;\r\n        else this.buffer = buffer;\r\n    }\r\n    \r\n    // find lb and rb of single row\r\n    _findRowBounds(a) { // a == array\r\n        let lb = 0, // left bound of individual row\r\n            rb = 0; // right bound of individual row\r\n        \r\n        const threshold = 170;\r\n            \r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] > threshold) {\r\n                lb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!lb) lb = a.length;\r\n\r\n        for (let i = a.length; i > -1; i--) {\r\n            if (a[i] > threshold) {\r\n                rb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!rb) rb = -1;\r\n\r\n        return [lb, rb];\r\n    }\r\n\r\n    _findGlyphBounds(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n        let currentRow = [];\r\n\r\n        let lbs = [], // row left bounds\r\n            rbs = []; // row right bounds    \r\n        let lb = -1,\r\n            rb = glyphData.length;\r\n        \r\n        // iterate through every row\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            // slice out the array\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            var res = this._findRowBounds(currentRow);\r\n            lbs.push(res[0]);\r\n            rbs.push(res[1]);\r\n        }\r\n\r\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\r\n        lb = Math.min(...lbs);\r\n        rb = Math.max(...rbs);\r\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\r\n        return [lb, rb];\r\n    }\r\n\r\n    process(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n\r\n        const bounds = this._findGlyphBounds(glyph);\r\n        const lb = bounds[0];\r\n        const rb = bounds[1];\r\n\r\n        const buffer = this.buffer;\r\n        // const buffer = 20;\r\n        // const buffer = 1;\r\n        // const buffer = 0;\r\n\r\n        var newData = [];\r\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\r\n        var newWidth = (rb - lb + 1) + buffer * 2;\r\n        // var newWidth = (rb - lb + 1);\r\n\r\n        // iterate through every row\r\n        let currentRow = [];\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\r\n            newData.push(\r\n                // 255,\r\n                ...bufferCol, //returns array of zeros\r\n                ...currentRow.slice(lb, rb + 1),\r\n                ...bufferCol, //returns array of zeros\r\n                // 255,\r\n            );\r\n        }\r\n\r\n        // JS passes objects by reference. Therefore,\r\n        glyph.bitmap = new Uint8ClampedArray(newData);\r\n        glyph.width = newWidth;\r\n        glyph.advance = newWidth;\r\n    }    \r\n    \r\n} // ends class","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","import GlyphAtlas from './atlas';\r\nimport SpriteGenerator from './spriteGenerator';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: Aleš Saska\r\n */\r\n\r\n\r\n// A simplified representation of the glyph containing only the properties needed for shaping.\r\nclass SimpleGlyph {\r\n  constructor(glyph, rect, buffer) {\r\n    const padding = 1;\r\n    this.advance = glyph.advance;\r\n    this.left = glyph.left - buffer - padding;\r\n    this.top = glyph.top + buffer + padding;\r\n    this.rect = rect;\r\n  }\r\n}\r\n\r\n\r\n// Multiplication factor by which the size will grow\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// Size in which we try to contian the glyphs\r\nconst DEFAULT_SIZE = 512;\r\n\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\n// Maybe the maximum size allowed of the atlas\r\nconst MAX_SIZE = 2048;\r\n\r\n\r\n// Class for the text engine\r\n\r\n// invoked only when main configuration object, the \"font\" is mentioned and\r\n// the proper link to the font file is present\r\nexport default class {\r\n\r\n  // new text engine object takes 3 arguments\r\n  // 1. gl = Webgl context\r\n  // 2. files = File object programmed in src/dataSources/files.js\r\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\r\n\r\n  constructor(gl, files, textures) {\r\n    // Defines the dimensions of the texture\r\n    this.width = DEFAULT_SIZE;\r\n    this.height = DEFAULT_SIZE;\r\n\r\n    // Does nothing. Required in default.js text engine\r\n    this.clear();\r\n\r\n    // _files contains the file object of the glyph obtained via protobuf\r\n    this._files = files;\r\n\r\n    // Webgl Rendering context\r\n    this._gl = gl;\r\n\r\n    // Atlas object programmed in src/texts/sdf/atlas.js\r\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\r\n\r\n    // For every char_id, contains position, properties and buffer data\r\n    this._glyphs = {};\r\n\r\n    // For every char_id, contains position and properties\r\n    this._rects = {};\r\n\r\n    // glyphs that are cached from previous draw call of label for next one\r\n    this._cachedGlyphs = {};\r\n\r\n    // Client-Side builder of spritesheet\r\n    this.spriteGenerator = new SpriteGenerator();\r\n  }\r\n\r\n\r\n  // returns if we are using SDF TextEngine or not\r\n  get isSDF() {\r\n    return true;\r\n  }\r\n\r\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\r\n  clear() {\r\n  }\r\n\r\n\r\n  /**\r\n   * style = object: {\r\n   *   pbf: <url to the font file on the server>\r\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\r\n   * }\r\n   */\r\n  setFont(style) {\r\n    // curFont => current_font\r\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\r\n    this.curFont = style.pbf;\r\n  }\r\n\r\n  // FontSize is fixed and hardcoded i.e. 24\r\n  get fontSize() {\r\n    return 24;\r\n  }\r\n\r\n  //\r\n  getTexture(style, onLoad) {\r\n    // init with first most-used ASCII chars\r\n    for (let i = 0; i < 128; i++) {\r\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\r\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\r\n      this._getChar(String.fromCharCode(i));\r\n    }\r\n    onLoad && onLoad.apply(this, arguments);\r\n\r\n    // by calling this._getChar, we have updated the texture in this.atlas object\r\n    // following we are returning the updated object\r\n    // TODO: this code is not intuitive, we can write better\r\n    return this.atlas.texture;\r\n  }\r\n\r\n\r\n  /**\r\n   * Updates the 'texture' member variable of this.atlas object\r\n   *\r\n   * text = single character which is to be added to the texture of 'this.atlas'\r\n   * markDirty = ??? callback to be called if the size of the texture is resized\r\n   */\r\n  // TODO: parameter name should be changed from 'text' to 'char'\r\n  _getChar(text, markDirty) {\r\n    // curFont is same as style.pbf defined above\r\n    // TODO: We are doing this too many times in this code. Find a better mech.\r\n    const font = this.curFont;\r\n\r\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\r\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\r\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\r\n\r\n    const glyphID = text.charCodeAt(0);\r\n\r\n    // Padding around the glyph\r\n    const buffer = 0;\r\n\r\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\r\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\r\n    \r\n    const fontSize = this.spriteGenerator.fontSize;\r\n    \r\n    if (!this._rects[font]) this._rects[font] = {};\r\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\r\n      glyphID, // character id\r\n      this.curFont, // contains url of the font file on server\r\n      glyph, // glyph object\r\n      buffer, // padding\r\n      fontSize, // fontSize\r\n      markDirty, // callback function to be called if texture resizes\r\n    );\r\n\r\n    return (\r\n      cache[glyphID] ||\r\n      (cache[glyphID] = new SimpleGlyph(\r\n        glyph,\r\n        rect,\r\n        buffer)\r\n      )\r\n    );\r\n  }\r\n\r\n  get(text, x, y, markDirty) {\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    const horiBearingX = 3;\r\n    const horiBearingY = 2;\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      const char = this._getChar(text[i], markDirty);\r\n      const rect = char.rect || {};\r\n      \r\n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\r\n     //decide the height and then max of them is taken each time to have a max height that fits each char\r\n\r\n      height = Math.max(height, rect.h - char.top);\r\n\r\n      // addiding const horiBearingx and char.advance wo get the total width of label\r\n\r\n      width += char.advance + horiBearingX;\r\n    }\r\n\r\n    \r\n   // x and y are the clipspace co-ordinates between 0 and 1\r\n   // dx and dy shifts the position of label w.r.t possibly node\r\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\r\n\r\n    let dx = x <= 0.5 ? 0 : -width;\r\n    let dy = y <= 0.5 ? 0 : -height;\r\n\r\n\r\n\r\n    // \"ret\" must be the return object. \"ret\" is always the return object\r\n    let ret = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n\r\n      const char = this._getChar(text[i], markDirty);\r\n      const rect = char.rect || {};\r\n\r\n      let horiAdvance;\r\n      \r\n      dx += horiBearingX;\r\n\r\n      // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\r\n\r\n      ret.push({\r\n        width: rect.w,\r\n        height: rect.h,\r\n        left: rect.x / this.atlas.width,\r\n        right: (rect.x + rect.w) / this.atlas.width,\r\n        bottom: (rect.y + rect.h) / this.atlas.height,\r\n        top: rect.y / this.atlas.height,\r\n        dx: dx,\r\n        dy: dy + char.top + (height - rect.h)\r\n      });\r\n\r\n      dx += char.advance;\r\n      //      dx += rect.w;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  steps(text) {\r\n    return text.length;\r\n  }\r\n\r\n  bind() {\r\n    this.atlas.updateTexture(this._gl);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nimport ccNetViz_defaultTexts  from './default';\r\nimport ccNetViz_sdfTexts      from './sdf/sdf';\r\nimport ccNetViz_utils         from '../utils';\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n\r\n    this._modules = {\r\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\r\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\r\n    };\r\n  }\r\n\r\n  clear() {\r\n    for(let k in this._modules){\r\n      this._modules[k].clear();\r\n    }\r\n  }\r\n  \r\n  isSDF(font){\r\n    if(ccNetViz_utils.isObject(font)){\r\n      if(font.type === 'sdf'){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  getEngine(font) {\r\n    if(this.isSDF(font)){\r\n      return this._modules.sdf;\r\n    }\r\n    return this._modules.default;\r\n  }\r\n\r\n  bind () {\r\n    for(let k in this._modules){\r\n      this._modules[k].bind();\r\n    }\r\n  }\r\n  \r\n  remove () {\r\n    for(let k in this._modules){\r\n      this._modules[k].remove && this._modules[k].remove();\r\n    }\r\n  }\r\n\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(){\r\n    this._enable = true;\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n      let timeout, args, context, timestamp, result;\r\n\r\n      let later = () => {\r\n          let last = Date.now - timestamp;\r\n\r\n          if (last < wait && last > 0) {\r\n              timeout = setTimeout(later, wait - last);\r\n          } else {\r\n              timeout = null;\r\n              if (!immediate) {\r\n                  if(this._enable){\r\n                    result = func.apply(context, args);\r\n                  }\r\n                  if (!timeout) context = args = null;\r\n              }\r\n          }\r\n      };\r\n\r\n      return () => {\r\n          context = this;\r\n          args = arguments;\r\n          timestamp = Date.now;\r\n          let callNow = immediate && !timeout;\r\n          if (!timeout) timeout = setTimeout(later, wait);\r\n          if (callNow) {\r\n              if(this._enable){\r\n                result = func.apply(context, args);\r\n              }\r\n              context = args = null;\r\n          }\r\n\r\n          return result;\r\n      };\r\n  }\r\n  \r\n  disable(){\r\n    this._enable = false;\r\n  }\r\n};","import geomutils from './geomutils';\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska\r\n */\r\n\r\n\r\nfunction pushUnique(arr, e){\r\n  if(arr.indexOf(e) >= 0)\r\n    return;\r\n  arr.push(e);\r\n}\r\n\r\nexport default class {\r\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\r\n    this._layers = layers;\r\n    this._insertTempLayer = insertTempLayer;\r\n\r\n    this._draw = draw;\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._checkUniqId = checkUniqId;\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n\r\n    //create support structures\r\n    this._nPos = {};\r\n    this._ePos = {};\r\n    this._eDirs = {};\r\n\r\n    nodes.forEach((n, i) => {\r\n      this._nPos[n.uniqid] = i;\r\n      this._eDirs[n.uniqid] = {};\r\n    });\r\n    \r\n    edges.forEach((e, i) => {\r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      let si = s.uniqid || s.__uniqid;\r\n      let ti = t.uniqid || t.__uniqid;\r\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\r\n      this._ePos[e.uniqid] = i;\r\n    });\r\n    \r\n    this._actualTempNodes = [];\r\n    this._actualTempEdges = [];\r\n  }\r\n  _doRemoveNodes(nodes){\r\n    nodes.forEach((n) => {\r\n      if(n.uniqid === undefined)\r\n        return;\r\n      \r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._nPos[n.uniqid];\r\n        this._layers.main.removeNodeAtPos(pos);\r\n        delete this._nPos[n.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempNodes.length; i++){\r\n          if(this._actualTempNodes[i] === n){\r\n            this._actualTempNodes.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      n.__uniqid = n.uniqid;\r\n      delete n.uniqid;\r\n    });\r\n  }\r\n  _doRemoveEdges(edges){\r\n    edges.forEach((e) => {\r\n      if(e.uniqid === undefined)\r\n        return;\r\n      \r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\r\n      \r\n      if(this._ePos[e.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._ePos[e.uniqid];\r\n        this._layers.main.removeEdgeAtPos(pos);\r\n        delete this._ePos[e.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempEdges.length; i++){\r\n          if(this._actualTempEdges[i] === e){\r\n            this._actualTempEdges.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n\r\n      }\r\n      \r\n      e.__uniqid = e.uniqid;\r\n      delete e.uniqid;\r\n    });\r\n  }\r\n  _doAddEdges(){\r\n    this._toAddEdges.forEach((e) => {\r\n      //already added in main graph\r\n      if(\r\n        this._ePos[e.uniqid] !== undefined\r\n      ){\r\n        this._doRemoveEdges([e]);\r\n      }\r\n      \r\n      if(e.uniqid !== undefined){\r\n        console.error(e);\r\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(e);\r\n      \r\n      //add this node into temporary chart\r\n      \r\n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\r\n      pushUnique(this._actualTempEdges, e);\r\n    });\r\n  }\r\n  _doAddNodes(nodes){\r\n    this._toAddNodes.forEach((n) => {\r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        this._doRemoveNodes([n]);\r\n      }\r\n      \r\n      //already added\r\n      if(n.uniqid !== undefined){\r\n        console.error(n);\r\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(n);\r\n      \r\n      this._eDirs[n.uniqid] = {};\r\n\r\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\r\n      pushUnique(this._actualTempNodes, n);\r\n    });\r\n  }\r\n  addEdge(e){\r\n    let s = geomutils.edgeSource(e);\r\n    let t = geomutils.edgeTarget(e);\r\n    \r\n    let tid = t.uniqid || t.__uniqid;\r\n    let sid = s.uniqid || s.__uniqid;\r\n    \r\n    if((this._eDirs[sid] || {})[tid]){\r\n      //this edge was already added >> remove it\r\n      this._doRemoveEdges([e]);\r\n    }\r\n    \r\n    if((this._eDirs[tid] || {})[sid]){\r\n      //must remove line and add two curves\r\n      \r\n      this._toAddEdges.push(this._eDirs[tid][sid]);\r\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\r\n\r\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\r\n      \r\n      return this;\r\n    }\r\n\r\n    this._toAddEdges.push(e);\r\n    return this;\r\n  }\r\n  addNode(n){\r\n    this._toAddNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeNode(n){\r\n    this._toRemoveNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeEdge(e){\r\n    this._toRemoveEdges.push(e);\r\n    return this;\r\n  }\r\n  applyChanges(){\r\n    \r\n    //nothing to do\r\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\r\n      return this;\r\n    \r\n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\r\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\r\n    \r\n    this._doRemoveEdges(this._toRemoveEdges);\r\n    this._doRemoveNodes(this._toRemoveNodes);\r\n    this._doAddNodes();\r\n    this._doAddEdges();\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n    \r\n    this._insertTempLayer();\r\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\r\n\r\n    this._draw();\r\n    \r\n    return this;\r\n  }\r\n};","import ccNetViz_layer from './layer/index';\r\nimport ccNetViz_layout from './layout/layout';\r\nimport ccNetViz_gl from './gl';\r\nimport ccNetViz_color from './color';\r\nimport ccNetViz_utils from './utils';\r\nimport ccNetViz_textures from './dataSources/textures';\r\nimport ccNetViz_files from './dataSources/files';\r\nimport ccNetViz_texts from './texts/texts';\r\nimport ccNetViz_lazyEvents from './lazyEvents';\r\nimport ccNetViz_interactivityBatch from './interactivityBatch';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\r\nimport { getPartitionStyle } from './primitiveTools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n *  David Tichy\r\n *    Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\nlet sCanvas = document.createElement('canvas');\r\nfunction getContext(canvas) {\r\n  let attributes = { depth: false, antialias: false };\r\n  let gl =\r\n    canvas.getContext('webgl', attributes) ||\r\n    canvas.getContext('experimental-webgl', attributes);\r\n\r\n  return gl;\r\n}\r\n\r\nvar lastUniqId = 0;\r\n\r\nfunction checkUniqId(el) {\r\n  if (el.__uniqid !== undefined) {\r\n    el.uniqid = el.__uniqid;\r\n    delete el.__uniqid;\r\n  } else if (el.uniqid === undefined) {\r\n    el.uniqid = ++lastUniqId;\r\n  }\r\n}\r\n\r\nfunction mergeArrays(a, b, cmp) {\r\n  let r = [];\r\n  r.length = a.length + b.length;\r\n\r\n  let i = 0,\r\n    j = 0,\r\n    k = 0;\r\n\r\n  while (i < a.length && j < b.length) {\r\n    if (cmp(a[i], b[j]) < 0) r[k++] = a[i++];\r\n    else r[k++] = b[j++];\r\n  }\r\n\r\n  while (i < a.length) r[k++] = a[i++];\r\n\r\n  while (j < b.length) r[k++] = b[j++];\r\n\r\n  return r;\r\n}\r\n\r\nvar ccNetViz = function(canvas, options) {\r\n  let self = this;\r\n  canvas = canvas || sCanvas;\r\n  let backgroundStyle = (options.styles.background =\r\n    options.styles.background || {});\r\n  let backgroundColor = new ccNetViz_color(\r\n    backgroundStyle.color || 'rgb(255, 255, 255)'\r\n  );\r\n\r\n  let removed = false;\r\n  let setted = false;\r\n\r\n  let nodeStyle = (options.styles.node = options.styles.node || {});\r\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\r\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\r\n  nodeStyle.color = nodeStyle.color || 'rgb(255, 255, 255)';\r\n\r\n  if (nodeStyle.label) {\r\n    let s = nodeStyle.label;\r\n    s.color = s.color || 'rgb(120, 120, 120)';\r\n    s.font = s.font || { type: 'Arial, Helvetica, sans-serif', size: 11 };\r\n  }\r\n\r\n  let edgeStyle = (options.styles.edge = options.styles.edge || { arrow: {} });\r\n  edgeStyle.width = edgeStyle.width || 1;\r\n  edgeStyle.color = edgeStyle.color || 'rgb(204, 204, 204)';\r\n  edgeStyle.animateColor = edgeStyle.animateColor || 'rgb(240, 80, 120)';\r\n  edgeStyle.animateSpeed = edgeStyle.animateSpeed || 1.0;\r\n\r\n  let onLoad = () => {\r\n    if (!options.onLoad || options.onLoad()) {\r\n      this.draw(true);\r\n    }\r\n  };\r\n\r\n  if (edgeStyle.arrow) {\r\n    if (typeof edgeStyle.arrow.texture !== 'undefined') {\r\n      let s = edgeStyle.arrow;\r\n      s.minSize = s.minSize != null ? s.minSize : 6;\r\n      s.maxSize = s.maxSize || 12;\r\n      s.aspect = 1;\r\n    }\r\n  }\r\n\r\n  let events = new ccNetViz_lazyEvents();\r\n  let layers = {};\r\n  let view, gl, drawFunc, textures, files, texts;\r\n  let context = {};\r\n\r\n  this.cntShownNodes = () => {\r\n    let n = 0;\r\n    for (var k in layers) n += layers[k].cntShownNodes();\r\n    return n;\r\n  };\r\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\r\n\r\n  this.cntShownEdges = () => {\r\n    let e = 0;\r\n    for (var k in layers) e += layers[k].cntShownEdges();\r\n    return e;\r\n  };\r\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\r\n\r\n  let onRedraw = events.debounce(() => {\r\n    self.draw.call(self);\r\n    return false;\r\n  }, 5);\r\n\r\n  function checkRemoved() {\r\n    if (removed) {\r\n      console.error('Cannot call any function on graph after remove()');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let nodes, edges;\r\n\r\n  function insertTempLayer() {\r\n    if (layers.temp) return;\r\n    layers.temp = new ccNetViz_layer(\r\n      canvas,\r\n      context,\r\n      view,\r\n      gl,\r\n      textures,\r\n      files,\r\n      texts,\r\n      events,\r\n      options,\r\n      backgroundColor,\r\n      nodeStyle,\r\n      edgeStyle,\r\n      getSize,\r\n      getNodeSize,\r\n      getLabelSize,\r\n      getLabelHideSize,\r\n      getNodesCnt,\r\n      getEdgesCnt,\r\n      onRedraw,\r\n      onLoad\r\n    );\r\n  }\r\n\r\n  let batch = undefined;\r\n  function getBatch() {\r\n    if (!batch)\r\n      batch = new ccNetViz_interactivityBatch(\r\n        layers,\r\n        insertTempLayer,\r\n        drawFunc,\r\n        nodes,\r\n        edges,\r\n        checkUniqId\r\n      );\r\n    return batch;\r\n  }\r\n\r\n  this.set = (n, e, layout, layout_options = {}) => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes = n || [];\r\n    edges = e || [];\r\n\r\n    nodes.forEach(checkUniqId);\r\n    edges.forEach(checkUniqId);\r\n\r\n    let promises = [];\r\n    if (typeof ccNetVizPlugins !== 'undefined') {\r\n      if (typeof ccNetVizPlugins.node !== 'undefined')\r\n        promises = ccNetVizPlugins.node.Integration(options, self).shapes;\r\n      if (typeof ccNetVizPlugins.arrow !== 'undefined')\r\n        promises = promises.concat(\r\n          ccNetVizPlugins.arrow.Integration(options, self).shapes\r\n        );\r\n    }\r\n\r\n    Promise.all(promises.map(item => item.config)).then(c => {\r\n      c.map((item, index) => {\r\n        if (item.plugin === 'arrow') {\r\n          options.styles[promises[index].name].arrow = item;\r\n        } else {\r\n          options.styles[promises[index].name] = item;\r\n        }\r\n      });\r\n      layers.temp && layers.temp.set([], [], layout, layout_options);\r\n      layers.main.set(nodes, edges, layout, layout_options);\r\n    });\r\n\r\n    //reset batch\r\n    batch = undefined;\r\n    setted = true;\r\n    return this;\r\n  };\r\n\r\n  //make all dynamic changes static\r\n  this.reflow = () => {\r\n    if (checkRemoved()) return;\r\n\r\n    getBatch().applyChanges();\r\n\r\n    //nodes and edges in dynamic chart are actual\r\n    let n = layers.main.getVisibleNodes();\r\n    if (layers.temp) n = n.concat(layers.temp.getVisibleNodes());\r\n\r\n    let e = layers.main.getVisibleEdges();\r\n    if (layers.temp) e = e.concat(layers.temp.getVisibleEdges());\r\n\r\n    this.set(n, e);\r\n    this.draw();\r\n  };\r\n\r\n  this.removeNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().removeNode(n);\r\n    return this;\r\n  };\r\n  this.removeEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().removeEdge(e);\r\n    return this;\r\n  };\r\n  this.addEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().addEdge(e);\r\n    return this;\r\n  };\r\n  this.addNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().addNode(n);\r\n    return this;\r\n  };\r\n  this.updateNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    return this.removeNode(n).addNode(n);\r\n  };\r\n  this.updateEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    return this.removeEdge(e).addEdge(e);\r\n  };\r\n  this.applyChanges = () => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().applyChanges();\r\n    return this;\r\n  };\r\n\r\n  this.addEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.addEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.addNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.addNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.removeEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.removeEdge(e);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.removeNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.removeNode(n);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.updateNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.updateNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.updateEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.updateEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  let getSize = (c, s, n, sc) => {\r\n    let result = (sc * Math.sqrt((c.width * c.height) / (n + 1))) / view.size;\r\n    if (s) {\r\n      let min = s.size ? s.size : s.minSize;\r\n      let max = s.size ? s.size : s.maxSize;\r\n\r\n      result = max ? Math.min(max, result) : result;\r\n      if (result < s.hideSize) return 0;\r\n      result = min ? Math.max(min, result) : result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\r\n  let getLabelSize = (c, s) => getSize(c, s, getNodesCnt(), 0.25);\r\n\r\n  let getLabelHideSize = (c, s) => {\r\n    if (s) {\r\n      const sc = 0.25;\r\n      let n = layers.main.cntShownNodes(); //lower bound\r\n      let t = sc * Math.sqrt((c.width * c.height) / (n + 1));\r\n\r\n      let vs;\r\n      if (s.hideSize) {\r\n        vs = t / s.hideSize;\r\n        if (s.maxSize) vs = Math.min(vs, t / s.maxSize);\r\n        return vs;\r\n      }\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  let offset = 0.5 * nodeStyle.maxSize;\r\n\r\n  this.draw = silent => {\r\n    if (silent && (removed || !setted)) return;\r\n    if (checkRemoved()) return;\r\n\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n    let aspect = width / height;\r\n    let o = view.size === 1 ? offset : 0;\r\n    let ox = o / width;\r\n    let oy = o / height;\r\n\r\n    context.transform = ccNetViz_gl.ortho(\r\n      view.x - ox,\r\n      view.x + view.size + ox,\r\n      view.y - oy,\r\n      view.y + view.size + oy,\r\n      -1,\r\n      1\r\n    );\r\n    context.offsetX = ox;\r\n    context.offsetY = oy;\r\n    context.width = 0.5 * width;\r\n    context.height = 0.5 * height;\r\n    context.aspect2 = aspect * aspect;\r\n    context.aspect = aspect;\r\n    context.count = getNodesCnt();\r\n\r\n    //bad hack because we use different size for curveExc and for nodeSize :(\r\n    if (context.style) delete context.style;\r\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\r\n    context.style = nodeStyle;\r\n    context.nodeSize = getNodeSize(context);\r\n\r\n    gl && gl.viewport(0, 0, width, height);\r\n\r\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    const startTime = Date.now();\r\n    let drawNums = 0;\r\n\r\n    const drawOnce = () => {\r\n      for (let i = 0; i < layers.main.scene.elements.length; i++) {\r\n        layers.main.scene.elements[i].draw(context);\r\n        layers.temp && layers.temp.scene.elements[i].draw(context);\r\n      }\r\n    };\r\n    const drawLoop = () => {\r\n      context.renderTime = (Date.now() - startTime) / 1000.0;\r\n      drawOnce();\r\n      drawNums++;\r\n      this.fps = drawNums / context.renderTime; // TODO: number overflow\r\n      requestAnimationFrame(drawLoop);\r\n    };\r\n\r\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\r\n      drawLoop();\r\n    } else {\r\n      drawOnce();\r\n    }\r\n  };\r\n  drawFunc = this.draw.bind(this);\r\n\r\n  this.getScreenCoords = function(conf) {\r\n    if (checkRemoved()) return;\r\n    let ret = {};\r\n    let rect = canvas.getBoundingClientRect();\r\n    if (conf.x !== undefined)\r\n      ret.x =\r\n        ((conf.x - view.x + context.offsetX) /\r\n          (view.size + 2 * context.offsetX)) *\r\n          canvas.width +\r\n        rect.left;\r\n    if (conf.y !== undefined)\r\n      ret.y =\r\n        (1 -\r\n          (conf.y - view.y + context.offsetY) /\r\n            (view.size + 2 * context.offsetY)) *\r\n          canvas.height +\r\n        rect.top;\r\n    return ret;\r\n  };\r\n\r\n  this.getLayerCoords = function(conf) {\r\n    if (checkRemoved()) return;\r\n\r\n    let ret = {};\r\n\r\n    ['x', 'x1', 'x2'].forEach(k => {\r\n      if (conf[k] !== undefined) {\r\n        let x = conf[k];\r\n        x =\r\n          (x / canvas.width) * (view.size + 2 * context.offsetX) -\r\n          context.offsetX +\r\n          view.x;\r\n        ret[k] = x;\r\n      }\r\n    });\r\n\r\n    ['y', 'y1', 'y2'].forEach(k => {\r\n      if (conf[k] !== undefined) {\r\n        let y = conf[k];\r\n        y =\r\n          (1 - y / canvas.height) * (view.size + 2 * context.offsetY) -\r\n          context.offsetY +\r\n          view.y;\r\n        ret[k] = y;\r\n      }\r\n    });\r\n\r\n    if (conf.radius !== undefined) {\r\n      let dist = conf.radius;\r\n\r\n      let disth = dist / canvas.height;\r\n      let distw = dist / canvas.width;\r\n      dist = Math.max(disth, distw) * view.size;\r\n\r\n      ret.radius = dist;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  let findMerge = function(funcname, args) {\r\n    if (checkRemoved() || !gl) return;\r\n\r\n    let f1 = layers.main[funcname].apply(layers.main, args);\r\n\r\n    if (!layers.temp) return f1;\r\n\r\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\r\n\r\n    let r = {};\r\n    for (let key in f1) {\r\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\r\n        return e1.dist2 - e2.dist2;\r\n      });\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  this.find = function() {\r\n    return findMerge('find', arguments);\r\n  };\r\n  this.findArea = function() {\r\n    return findMerge('findArea', arguments);\r\n  };\r\n\r\n  this.getTextPosition = n => {\r\n    if (checkRemoved() || !gl) return;\r\n\r\n    const offset = 0.5 * context.nodeSize;\r\n    const offsety = (2.0 * (n.y <= 0.5 ? 0 : 1) - 1.0) * offset;\r\n\r\n    let ns = getPartitionStyle(options.styles[n.style], nodeStyle, 'label');\r\n    let textEngine = texts.getEngine(ns.font);\r\n    textEngine.setFont(ns.font);\r\n\r\n    let wantedSize = textEngine.isSDF\r\n      ? getLabelSize(context, ns.label || {})\r\n      : textEngine.fontSize;\r\n    let fontScale = wantedSize / textEngine.fontSize;\r\n    if (wantedSize === 0) {\r\n      fontScale = 0;\r\n    }\r\n\r\n    return {\r\n      offsetY: offsety,\r\n      fontScale: fontScale,\r\n      chars: textEngine.get(n.label, n.x, n.y),\r\n    };\r\n  };\r\n\r\n  let addEvts = (el, evts) => {\r\n    for (var k in evts || {}) {\r\n      evts[k] &&\r\n        el.addEventListener(k, evts[k], { passive: options.passiveEvts });\r\n    }\r\n  };\r\n\r\n  let removeEvts = (el, evts) => {\r\n    for (var k in evts || {}) {\r\n      evts[k] && el.removeEventListener(k, evts[k]);\r\n    }\r\n  };\r\n\r\n  let onDownThis = onMouseDown.bind(this);\r\n\r\n  const onWheelThis = onWheel.bind(this);\r\n\r\n  let zoomevts;\r\n  addEvts(\r\n    canvas,\r\n    (zoomevts = {\r\n      mousedown: onDownThis,\r\n      touchstart: onDownThis,\r\n      wheel: onWheelThis,\r\n      contextmenu: options.onContextMenu,\r\n    })\r\n  );\r\n\r\n  this.remove = () => {\r\n    if (checkRemoved()) return;\r\n\r\n    for (var k in layers) {\r\n      layers[k].remove();\r\n    }\r\n\r\n    if (gl) {\r\n      gl.viewport(0, 0, context.width * 2, context.height * 2);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\r\n      gl_lose && gl_lose.loseContext();\r\n    }\r\n\r\n    removeEvts(canvas, zoomevts);\r\n\r\n    events.disable();\r\n    texts && texts.remove();\r\n\r\n    removed = true;\r\n  };\r\n\r\n  let last_view = {};\r\n  function checkChangeViewport() {\r\n    let is_change = false;\r\n    if (last_view) {\r\n      for (let k in view) {\r\n        if (last_view[k] !== view[k]) is_change = true;\r\n      }\r\n    }\r\n    ccNetViz_utils.extend(last_view, view);\r\n\r\n    if (is_change) {\r\n      options.onChangeViewport && options.onChangeViewport(view);\r\n    }\r\n  }\r\n\r\n  function onContextMenu(e) {}\r\n\r\n  function onWheel(e) {\r\n    let rect = canvas.getBoundingClientRect();\r\n\r\n    if (!options.passiveEvts) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    let oldsize, oldx, oldy;\r\n\r\n    // Mouse coordinates\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    const radius = 10;\r\n\r\n    // if no timer found i.e. we are not in continuous phase\r\n    // we are calculating the focus variables again\r\n    if (!onWheel.continuosZoom) {\r\n      onWheel.startView = { size: view.size, x: view.x, y: view.y };\r\n\r\n      const lCoords = this.getLayerCoords({\r\n        x1: mouseX - radius,\r\n        y1: mouseY - radius,\r\n        x2: mouseX + radius,\r\n        y2: mouseY - radius,\r\n      });\r\n      const searchNodes = this.findArea(\r\n        lCoords.x1,\r\n        lCoords.y1,\r\n        lCoords.x2,\r\n        lCoords.y2,\r\n        true\r\n      );\r\n      // if node found beneath mouse_ptr, zooming_focus is the center of that node\r\n      if (searchNodes.nodes.length) {\r\n        let node = searchNodes.nodes[0];\r\n        let focus = this.getScreenCoords({\r\n          x: node.node.x,\r\n          y: node.node.y,\r\n        });\r\n        onWheel.focusX = focus.x;\r\n        onWheel.focusY = focus.y;\r\n      }\r\n      // else, it is the window co-ords of the mouse_ptr\r\n      else {\r\n        onWheel.focusX = mouseX;\r\n        onWheel.focusY = mouseY;\r\n      }\r\n      onWheel.oldX = view.x;\r\n      onWheel.oldY = view.y;\r\n      onWheel.oldSize = view.size;\r\n\r\n      if (onWheel.continuosZoom) clearTimeout(onWheel.continuosZoom);\r\n\r\n      oldx = view.x;\r\n      oldy = view.y;\r\n    }\r\n    onWheel.continuosZoom = setTimeout(() => {\r\n      onWheel.continuosZoom = undefined;\r\n    }, 200);\r\n\r\n    let size = Math.min(\r\n      1.0,\r\n      view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY)\r\n    );\r\n    let delta = size - onWheel.oldSize;\r\n\r\n    view.size = size;\r\n    view.x = Math.max(\r\n      0,\r\n      Math.min(1 - size, onWheel.oldX - (delta * onWheel.focusX) / canvas.width)\r\n    );\r\n    view.y = Math.max(\r\n      0,\r\n      Math.min(\r\n        1 - size,\r\n        onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)\r\n      )\r\n    );\r\n\r\n    if (options.onZoom && options.onZoom(view) === false) {\r\n      view.size = oldsize;\r\n      view.x = oldx;\r\n      view.y = oldy;\r\n      return;\r\n    }\r\n\r\n    checkChangeViewport();\r\n\r\n    this.draw();\r\n  }\r\n\r\n  let lastUpTime = 0;\r\n  function onMouseDown(downe) {\r\n    if (downe.which !== 1) return; //catch only 1 - left mouse button\r\n\r\n    let parseTouchEvts = e => {\r\n      if (!e.touches) return e;\r\n\r\n      let x = 0,\r\n        y = 0;\r\n      for (let i = 0; i < e.touches.length; i++) {\r\n        x += e.touches[i].clientX;\r\n        y += e.touches[i].clientY;\r\n      }\r\n      e.clientX = x / e.touches.length;\r\n      e.clientY = y / e.touches.length;\r\n\r\n      return e;\r\n    };\r\n\r\n    downe = parseTouchEvts(downe);\r\n\r\n    let width = canvas.width / view.size;\r\n    let height = canvas.height / view.size;\r\n    let sx = downe.clientX;\r\n    let sy = downe.clientY;\r\n    let dx = view.x + sx / width;\r\n    let dy = sy / height - view.y;\r\n    let od = options.onDrag;\r\n    let dragged, custom;\r\n    let panning = true;\r\n    let zooming = false;\r\n    let evts;\r\n\r\n    let origdist;\r\n    if ((downe.touches || []).length === 2) {\r\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX,\r\n        my = downe.touches[0].clientY - downe.touches[1].clientY;\r\n      origdist = Math.sqrt(mx * mx + my * my);\r\n      zooming = true;\r\n    }\r\n\r\n    let drag = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if (e.touches && e.touches.length != 1) panning = false;\r\n\r\n      if (dragged) {\r\n        if (panning) {\r\n          if (custom) {\r\n            od.drag && od.drag(e);\r\n          } else {\r\n            view.x = Math.max(\r\n              0,\r\n              Math.min(1 - view.size, dx - e.clientX / width)\r\n            );\r\n            view.y = Math.max(\r\n              0,\r\n              Math.min(1 - view.size, e.clientY / height - dy)\r\n            );\r\n            checkChangeViewport();\r\n            this.draw();\r\n          }\r\n        }\r\n      } else {\r\n        let x, y;\r\n        if (e.touches && e.touches.length > 0) {\r\n          x = e.touches[0].clientX;\r\n          y = e.touches[0].clientY;\r\n        } else {\r\n          x = e.clientX;\r\n          y = e.clientY;\r\n        }\r\n\r\n        let mx = x - sx;\r\n        let my = y - sy;\r\n\r\n        if (mx * mx + my * my > 8) {\r\n          dragged = true;\r\n          custom = od && od.start(downe);\r\n          custom && od.drag && od.drag(e);\r\n        }\r\n      }\r\n      if (!options.passiveEvts) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    let up = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      custom && od.stop && od.stop(e);\r\n\r\n      if (!dragged) {\r\n        options.onClick && options.onClick(e);\r\n\r\n        if (new Date().getTime() - lastUpTime < 250) {\r\n          options.onDblClick && options.onDblClick(e);\r\n          lastUpTime = 0;\r\n        } else {\r\n          lastUpTime = new Date().getTime();\r\n        }\r\n      }\r\n\r\n      removeEvts(window, evts);\r\n    };\r\n\r\n    let zoom = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if (e.touches && e.touches.length == 2) {\r\n        let mx = e.touches[0].clientX - e.touches[1].clientX,\r\n          my = e.touches[0].clientY - e.touches[1].clientY;\r\n        let dist = Math.sqrt(mx * mx + my * my);\r\n        e.deltaY = -(dist - origdist) * 5;\r\n        onWheelThis(e);\r\n        origdist = dist;\r\n      }\r\n    };\r\n\r\n    addEvts(\r\n      window,\r\n      (evts = {\r\n        mouseup: up,\r\n        touchend: up,\r\n        touchcancel: up,\r\n        mousemove: zooming ? zoom : drag,\r\n        touchmove: zooming ? zoom : drag,\r\n      })\r\n    );\r\n  }\r\n\r\n  this.image = function() {\r\n    if (checkRemoved()) return;\r\n\r\n    return canvas.toDataURL();\r\n  };\r\n\r\n  this.resize = function() {\r\n    if (checkRemoved()) return;\r\n\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n  };\r\n\r\n  this.getViewport = function() {\r\n    return view;\r\n  };\r\n\r\n  this.setViewport = function(v) {\r\n    if (checkRemoved()) return;\r\n\r\n    ccNetViz_utils.extend(view, v);\r\n\r\n    checkChangeViewport();\r\n  };\r\n\r\n  this.resetView = () => this.setViewport({ size: 1, x: 0, y: 0 });\r\n\r\n  //expose these methods from layer into this class\r\n  ['update'].forEach(function(method) {\r\n    (function(method, self) {\r\n      self[method] = function() {\r\n        let args = arguments;\r\n        for (let k in layers) {\r\n          let l = layers[k];\r\n          l[method].apply(l, args);\r\n        }\r\n        return self;\r\n      };\r\n    })(method, self);\r\n  });\r\n\r\n  if ((gl = getContext(canvas))) {\r\n    gl.clearColor(\r\n      backgroundColor.r,\r\n      backgroundColor.g,\r\n      backgroundColor.b,\r\n      backgroundColor.a\r\n    );\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n    gl.enable(gl.BLEND);\r\n  }\r\n\r\n  view = { size: 1, x: 0, y: 0 };\r\n\r\n  this.resize();\r\n\r\n  textures = new ccNetViz_textures(events, onLoad);\r\n  files = new ccNetViz_files(events, onLoad);\r\n  texts = gl && new ccNetViz_texts(gl, files, textures);\r\n  layers.main = new ccNetViz_layer(\r\n    canvas,\r\n    context,\r\n    view,\r\n    gl,\r\n    textures,\r\n    files,\r\n    texts,\r\n    events,\r\n    options,\r\n    backgroundColor,\r\n    nodeStyle,\r\n    edgeStyle,\r\n    getSize,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    getLabelHideSize,\r\n    getNodesCnt,\r\n    getEdgesCnt,\r\n    onRedraw,\r\n    onLoad\r\n  );\r\n\r\n  if (!gl) console.warn('Cannot initialize WebGL context');\r\n};\r\n\r\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\r\n\r\nccNetViz.color = ccNetViz_color;\r\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\r\nccNetViz.layout = ccNetViz_layout;\r\nccNetViz.color = ccNetViz_color;\r\n\r\nwindow.ccNetViz = ccNetViz;\r\nexport default ccNetViz;\r\n"],"sourceRoot":""}