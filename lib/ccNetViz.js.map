{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./node_modules/ml-array-max/src/index.js","webpack:///./node_modules/ml-array-rescale/src/index.js","webpack:///./node_modules/ml-array-min/src/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","animateColor","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Color","_classCallCheck","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","context","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","width","height","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x1","y1","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","size","wantedSize","label","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","default","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","remove","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","canvas","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","sCanvas","document","createElement","getContext","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","_this","backgroundStyle","background","backgroundColor","removed","setted","minSize","maxSize","edgeStyle","arrow","texture","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","ccNetVizPlugins","Integration","shapes","Promise","config","then","plugin","main","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","startTime","Date","now","drawOnce","scene","elements","animateType","drawLoop","renderTime","requestAnimationFrame","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","redraw","hasEdgeAnimation","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","startPos","endPos","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","is_bidirectional_overlap","bidirectional","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","animateStylesTransl","none","basic","gradient","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","getEdgeAnimateType","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","f","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","time","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x0","y0","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","display","_el","body","appendChild","_context","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","advance","char","h","w","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","callNow","pushUnique","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","src_max","input","isArray","rescale","TypeError","output","currentMin","src_min","currentMax","RangeError","minValue","autoMinMax","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,qFC1EgBC,cAAT,SAAwBC,EAAMC,GACjC,SAAOC,6HAAAC,CAAIC,MAAMJ,GAAMK,SAAQC,IAAI,SAAAvC,GAAA,OAAKqC,MAAMH,GAASM,KAAK,QAGhDC,QAAT,SAAiBC,EAAOC,GAE7B,IAAIF,EAAUJ,MAAMK,EAAME,QAAQJ,KAAK,GACvCG,EAAME,QAAQ,SAASC,GACnBL,EAAQK,EAAEC,OAAOC,QAAU,EAC3BP,EAAQK,EAAEG,OAAOD,QAAU,IAG/B,IAAIE,EAAgBT,EAAQF,IAAI,SAASY,EAAInD,GACzC,OAASgD,MAAOhD,EAAGiB,MAAOkC,KAE9BD,EAAcE,KAAK,SAASC,EAAGC,GAC3B,QAASD,EAAEpC,MAAQqC,EAAErC,UAAYoC,EAAEpC,QAAUqC,EAAErC,OAAS,IAE5D,IAAIsC,EAAkBL,EAAcX,IAAI,SAASY,GAC7C,OAAOV,EAAQU,EAAGH,SAEtB,OAASN,MAAOQ,EACPT,QAASc,MAGJC,SAAT,SAASA,EAASC,GACrB,IAAIC,EAAQ,EACRD,EAAIE,UACJF,EAAIE,SAASd,QAAQ,SAAUvC,GAClC,GAAuB,GAAnBA,EAAEsD,cACL,MAAM,IAAIC,MAAM,gDAEjBvD,EAAEsD,eAAgB,EACX,IAAIE,EAAWN,EAASlD,GACpBwD,EAAWJ,IACXA,EAAQI,KAIpB,OAAO,EAAIJ,KAGCK,UAAT,SAAmBtC,GAExB,IADAA,EAAIuC,KAAKC,IAAIxC,KACL,EACJ,OACEyC,MAAO,GACPC,KAAM,GAIZ,OACID,MAFQ,IAGRC,KAAM,IAAa1C,EAAE,iVCrDN2C,8KACLC,GACZ,IAAI,IAAIrE,EAAI,EAAGA,EAAIsE,UAAU1B,OAAQ5C,IACnC,IAAI,IAAIuE,KAAKD,UAAUtE,GACrBqE,EAAKE,GAAKD,UAAUtE,GAAGuE,GAG3B,OAAOF,mCAGQZ,GACf,OAAOA,IAAQ/C,OAAO+C,uCAGLA,GACjB,IAAIW,EAAMI,SAASf,GACjB,OAAO,EAET,IAAI,IAAIc,KAAKd,EACX,OAAO,EACT,OAAO,+BAGGgB,EAAKC,EAAUC,GACzB,IAAIC,GAEJA,EAAU,IAAIC,gBACNC,mBAAsB,SAASC,GACrC,OAAO,WACqB,GAAtBH,EAAQI,YAAqC,KAAlBJ,EAAQK,QACrCF,EAAY,eAARJ,EAAwBC,EAAQM,SAAWN,EAAQO,eAH/B,CAM3BT,GACAC,IAAMC,EAAQQ,aAAaT,GAC9BC,EAAQS,KAAK,MAAOZ,GAAK,GACzBG,EAAQU,0BApCSlB,ogBCGGmB,GAGlB,IAFA,IAAIC,EAAaD,EAAGE,yBAChBC,KACK1F,EAAI,EAAGA,EAAIsE,UAAU1B,OAAQ5C,IAAK,CACvC,IAAI8C,EAAIwB,UAAUtE,IACjB0F,EAAO5C,GAAK0C,EAAWG,QAAQ7C,IAAM,IAAMyC,EAAGK,aAAa9C,GAEhE,OAAO4C,uCAISH,EAAIZ,EAAM5B,GAC1B,IAAI2C,EAASH,EAAGM,aAAalB,GAI7B,OAHAY,EAAGO,aAAaJ,EAAQ3C,GACxBwC,EAAGQ,cAAcL,GAEZH,EAAGS,mBAAmBN,EAAQH,EAAGU,gBAI/BP,GAHHQ,QAAQC,IAAIZ,EAAGa,iBAAiBV,IACzB,4CAOMH,EAAIc,EAAKC,EAAQC,GAClC,IAAIb,EAASH,EAAGiB,gBAEZC,EAAQ,IAAIC,MAEZC,EAAO,WACLF,EAAMG,OAAS,KACfrB,EAAGsB,YAAYtB,EAAGuB,WAAYpB,IAI1Ba,OAAeQ,KACjBxB,EAAGyB,YAAYzB,EAAG0B,qBAAqB,GACvC1B,EAAG2B,WAAW3B,EAAGuB,WAAY,EAAGvB,EAAG4B,UAAW5B,EAAG4B,UAAW5B,EAAG6B,cAAeX,GAC9ElB,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAG+B,mBAAoB/B,EAAGgC,QAC1DhC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGiC,mBAAoBjC,EAAGgC,QAC1DhC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGkC,eAAgBlC,EAAGmC,eACtDnC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGoC,eAAgBpC,EAAGmC,iBAEtDnC,EAAGyB,YAAYzB,EAAG0B,qBAAqB,GACvC1B,EAAG2B,WAAW3B,EAAGuB,WAAY,EAAGvB,EAAGqC,KAAMrC,EAAGqC,KAAMrC,EAAG6B,cAAeX,GACpElB,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAG+B,mBAAoB/B,EAAGgC,QAC1DhC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGiC,mBAAoBjC,EAAGgC,QAC1DhC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGkC,eAAgBlC,EAAGmC,eACtDnC,EAAG8B,cAAc9B,EAAGuB,WAAYvB,EAAGoC,eAAgBpC,EAAGmC,gBAGxDnC,EAAGsB,YAAYtB,EAAGuB,WAAY,MAC9BR,GAAUA,KAQhB,OALAG,EAAMG,OAASD,EACfF,EAAMoB,IAAMxB,EACZI,EAAMqB,cAAgBrB,EAAMsB,eAAiBpB,IAE7CjB,EAAOe,MAAQA,EACRf,uCAGSH,EAAIyC,EAAUC,GAC9B1C,EAAG2C,UAAUF,EAAUC,EAAMnH,EAAGmH,EAAME,EAAGF,EAAM3E,EAAG2E,EAAM5E,iCAG/C+E,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACzC,IAAIC,EAAK,GAAKN,EAAOC,GACjBM,EAAK,GAAKL,EAASC,GACnBK,EAAK,GAAKJ,EAAOC,GAEjB/C,EAAS,IAAImD,aAAa,IAiB9B,OAhBAnD,EAAO,IAAM,EAAIgD,EACjBhD,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,IAAM,EAAIiD,EACjBjD,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,IAAM,EAAIkD,EACjBlD,EAAO,IAAM,EACbA,EAAO,KAAO0C,EAAOC,GAASK,EAC9BhD,EAAO,KAAO6C,EAAMD,GAAUK,EAC9BjD,EAAO,KAAO+C,EAAMD,GAAQI,EAC5BlD,EAAO,IAAM,EACNA,oJCrGb,wDAAA9F,EAAA,MAyCQkJ,iBAvCR,SAA0BC,GAItB,IAHA,IAAIC,KAEAC,KACKjJ,EAAI,EAAGA,EAAI+I,EAAKnG,OAAQ5C,IAAK,CAClC,IAAImD,EAAK4F,EAAK/I,GACVkJ,EAAOF,EAAM7F,EAAGgG,OAASH,EAAM7F,EAAGgG,gBACtBC,IAAbF,EAAKG,MACNH,EAAKG,QACPH,EAAKG,IAAIC,KAAKtJ,GAEdmD,EAAGoG,GAAKN,EAAG9F,EAAGgG,YAA0BC,IAAjBH,EAAG9F,EAAGgG,OAAuB,EAAIF,EAAG9F,EAAGgG,OAAO,EAErED,EAAKI,KAAKnG,GAGd,OAAO6F,KAuBeQ,kBApB1B,SAA2BL,EAAOM,EAAWC,GACzC,IAAIhE,KAEAiE,EAAO,SAAA5H,GACP,GAAIA,EAAG,IAAK,IAAID,KAAKC,EAAG2D,EAAO5D,GAAKC,EAAED,IAY1C,OATA6H,EAAKF,GACLE,EAAKR,GAEDO,IACAC,EAAKF,EAAUC,IACfP,GAASQ,EAAKR,EAAMO,KAExBhE,EAAOuC,MAAQvC,EAAOuC,OAAS,IAAI2B,UAAelE,EAAOuC,OACzDvC,EAAOmE,aAAenE,EAAOmE,cAAgB,IAAID,UAAelE,EAAOmE,cAChEnE,igBCtBS5C,GAChB,GAAGA,EAAEC,OAAOA,OAAO,CACjB,IAAIhB,EAAI+H,KAAKC,WAAWjH,EAAEC,QACtB7B,EAAI4I,KAAKE,WAAWlH,EAAEC,QAC1B,OACQkH,GAAIlI,EAAEkI,EAAE/I,EAAE+I,GAAG,EACbC,GAAInI,EAAEmI,EAAEhJ,EAAEgJ,GAAG,EACbC,OAAQrH,EAAEqH,OACVnH,MAAOF,EAAEE,MACToH,SAAS,EACTtH,EAAGA,EAAEC,QAIf,OAAOD,EAAEC,0CAGQD,GACjB,GAAGA,EAAEG,OAAOF,OAAO,CAEjB,IAAIhB,EAAI+H,KAAKC,WAAWjH,EAAEG,QACtB/B,EAAI4I,KAAKE,WAAWlH,EAAEG,QAE1B,OACQgH,GAAIlI,EAAEkI,EAAE/I,EAAE+I,GAAG,EACbC,GAAInI,EAAEmI,EAAEhJ,EAAEgJ,GAAG,EACbC,OAAQrH,EAAEqH,OACVnH,MAAOF,EAAEE,MACToH,SAAS,EACTtH,EAAGA,EAAEG,QAIf,OAAOH,EAAEG,6CAGWH,EAAGhC,GAGrB,IAFAA,EAAIA,OACFmJ,EAAInJ,EAAEoJ,EAAIpJ,EAAEuJ,GAAKvJ,EAAEwJ,GAAK,GACtBxH,EACF,OAAOhC,EACT,GAAGgC,EAAE5B,GAAK4B,EAAE5B,GAAK,EACf,GAAG4B,EAAE5B,GAAK,EAAE,CACV,IACIZ,EADIwJ,KAAKC,WAAWjH,GACdoH,EAAI,GAAM,GAAK,EAEzBpJ,EAAEuJ,GAAS,KAAJ/J,EACPQ,EAAEwJ,GAAK,MACJ,CACH,IAAIC,EAAKT,KAAKC,WAAWjH,GACrB0H,EAAKV,KAAKE,WAAWlH,GAEzBhC,EAAEmJ,EAAIM,EAAGN,EAAIO,EAAGP,EAChBnJ,EAAEoJ,EAAIK,EAAGL,EAAIM,EAAGN,EAGpB,OAAOpJ,gHCpDT,SAAA2J,EAAYxC,GAOR,+FAPeyC,CAAAZ,KAAAW,GAIfX,KAAKhJ,EAAIgJ,KAAK3B,EAAI2B,KAAKxG,EAAI,EAC3BwG,KAAKzG,EAAI,EAEL4E,aAAiBwC,EACjBX,KAAKhJ,EAAImH,EAAMnH,EACfgJ,KAAK3B,EAAIF,EAAME,EACf2B,KAAKxG,EAAI2E,EAAM3E,EACfwG,KAAKzG,EAAI4E,EAAM5E,OACZ,GAAIiB,UAAU1B,QAAU,EAI3BkH,KAAKhJ,EAAIwD,UAAU,GACnBwF,KAAK3B,EAAI7D,UAAU,GACnBwF,KAAKxG,EAAIgB,UAAU,GACnBA,UAAU1B,OAAS,IAAMkH,KAAKzG,EAAIiB,UAAU,SACzC,GAAI,2CAA2CqG,KAAK1C,GAAQ,CAI/DA,EAAQ,2CAA2C2C,KAAK3C,GACxD,IAAIpH,EAAM,SAAAgK,GAAA,OAAKC,SAASD,EAAG,IAAM,KAEjCf,KAAKhJ,EAAID,EAAIoH,EAAM,IACnB6B,KAAK3B,EAAItH,EAAIoH,EAAM,IACnB6B,KAAKxG,EAAIzC,EAAIoH,EAAM,IACnB6B,KAAKzG,EAAIxC,EAAIoH,EAAM,SAChB,GAAI,kCAAkC0C,KAAK1C,GAAQ,CAGtDA,EAAQ,kCAAkC2C,KAAK3C,GAC/C,IAAIpH,EAAM,SAAAgK,GAAA,OAAKC,SAASD,EAAG,IAAM,KAEjCf,KAAKhJ,EAAID,EAAIoH,EAAM,IACnB6B,KAAK3B,EAAItH,EAAIoH,EAAM,IACnB6B,KAAKxG,EAAIzC,EAAIoH,EAAM,SAChB,GAAI,wCAAwC0C,KAAK1C,GAAQ,CAG5DA,EAAQ,wCAAwC2C,KAAK3C,GACrD,IAAIpH,EAAM,SAAAgK,GAAA,OAAKC,SAASD,EAAG,IAAM,KAEjCf,KAAKhJ,EAAID,EAAIoH,EAAM,IACnB6B,KAAK3B,EAAItH,EAAIoH,EAAM,IACnB6B,KAAKxG,EAAIzC,EAAIoH,EAAM,QACZ,qBAAqB0C,KAAK1C,KAGjCA,EAAQ6C,SAAS7C,EAAM8C,UAAU,GAAI,IAGrCjB,KAAKhJ,GAAKmH,GAAS,GAAK,KAAO,IAC/B6B,KAAK3B,GAAKF,GAAS,EAAI,KAAO,IAC9B6B,KAAKxG,GAAa,IAAR2E,GAAe,kVC5ErCrI,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,6OA+CoB8C,EAAOsI,GACvB,IAAIC,SAAMC,SAAMzJ,EAAIiB,EAAME,OAE1B,GAAIoI,EACAC,EAAOD,EAAIC,KACXC,EAAOF,EAAIE,SAEV,CACD,IAAIC,GAAQC,IACRC,GAAQD,IACZH,EAAOC,EAAOE,IAEd,IAAK,IAAIpL,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIS,EAAIiC,EAAM1C,GACdmL,EAAOnH,KAAKsH,IAAIH,EAAM1K,EAAEwJ,GACxBoB,EAAOrH,KAAKsH,IAAID,EAAM5K,EAAEyJ,GACxBe,EAAOjH,KAAKuH,IAAIN,EAAMxK,EAAEwJ,GACxBiB,EAAOlH,KAAKuH,IAAIL,EAAMzK,EAAEyJ,GAG5Bc,GACIG,KAAMA,EACNE,KAAMA,EACNJ,KAAMA,EACNC,KAAMA,GAOd,IAHA,IAAIM,EAAMP,IAASD,EAAIG,KAAO,GAAKH,EAAIG,KAAOF,IAAUA,GAAQ,GAAM,GAClEQ,EAAMP,IAASF,EAAIK,KAAO,GAAKL,EAAIK,KAAOH,IAAUA,GAAQ,GAAM,GAE7DlL,EAAI,EAAGA,EAAIyB,EAAGzB,IAAK,CACxB,IAAIS,EAAIiC,EAAM1C,GACdS,EAAEwJ,EAAIuB,GAAO/K,EAAEwJ,EAAIgB,GACnBxK,EAAEyJ,EAAIuB,GAAOhL,EAAEyJ,EAAIgB,GAGvB,OAAOF,gCAxEP,OAAOU,yCAGP,OAAOC,2CAGP,OAAOC,uCAGP,OAAOC,wCAGP,OAAOC,+CAGP,OAAOC,2CAMP,OAAOC,4CAGP,OAAOC,uCAGP,OAAOC,uCAGP,OAAOC,2CAEP,OAAOC,2WCvDXxM,EAAA,QACAA,EAAA,IAEAyM,KADAzM,EAAA,IACAA,EAAA,IACA0M,EAAA1M,EAAA,qJAyBA,IAAI2M,KACJ,SAASC,EAAaC,EAASC,EAAY5J,EAAGyJ,GAC5CI,UAAmBC,cAAc9J,EAAEyJ,GAInC,IAAYM,EAAKC,EAAbC,SAAIC,SAERD,GAAOR,EAAGrC,EACV8C,EAAMT,EAAGtC,EAAIwC,EAAQQ,QAErB,IAAIC,EAAOH,EAAIN,EAAQU,MAAMJ,EAAIN,EAAQU,MAAQH,EAAIP,EAAQW,OAAOJ,EAAIP,EAAQW,OAEhF,IAAG,EAAAd,EAAAe,IAAGH,EAAM,GACVH,EAAM,EACNC,EAAM,MACH,CACH,IAAIM,EAAMtJ,KAAKuJ,KAAKL,GACpBH,GAA0B,IAAnBN,EAAQe,SAAkBd,EAAaY,EAC9CN,GAA0B,IAAnBP,EAAQe,SAAkBd,EAAaY,EAGhD,IAAIG,EAAQ,IAAMhB,EAAQiB,SAAWhB,EAAaD,EAAQU,MACtDQ,EAAQ,IAAMlB,EAAQiB,SAAWhB,EAAaD,EAAQW,OAC1DP,EAAgB,IAARN,EAAGjC,GAAWmD,EACtBX,EAAe,GAARP,EAAGlC,GAAWsD,EAErBpB,EAAGtC,EAAI8C,EAAMF,EACbN,EAAGrC,EAAI8C,EAAMF,MAGTc,aACJ,SAAAA,EAAYnM,GAAEiJ,EAAAZ,KAAA8D,GACZ9D,KAAKhH,EAAIrB,8CAMT,OAAQqI,KAAKhH,EAAEmH,EAAE4D,MAAK/D,KAAKhH,EAAEoH,EAAI2D,MAAK/D,KAAKhH,EAAEmH,EAAI4D,MAAK/D,KAAKhH,EAAEoH,EAAI2D,8CAEpDC,EAAGC,EAAGC,EAAGC,GACtB,OAAO,EAAA3B,EAAA4B,aAAYpE,KAAKhH,EAAEmH,EAAGH,KAAKhH,EAAEoH,EAAG4D,EAAGC,EAAGC,EAAGC,iCAE5ChE,EAAEC,EAAGuC,GACT,OAAO,EAAAH,EAAA6B,WAAUlE,EAAEC,EAAEJ,KAAKhH,EAAEmH,EAAEH,KAAKhH,EAAEoH,kCATrC,OAAO,WAaLkE,aACJ,SAAAA,EAAY3M,EAAG4M,EAASlF,EAAOmF,EAAUC,EAAOC,GAAa9D,EAAAZ,KAAAsE,GAC3DtE,KAAKhH,EAAIrB,EACTqI,KAAK2E,IAAMJ,EACXvE,KAAKX,MAAQA,EACbW,KAAKwE,SAAWA,EAChBxE,KAAKyE,MAAQA,EACbzE,KAAK0E,aAAeA,+CAKX/B,EAAQiC,GACjB,IAAIzE,EAAIH,KAAKhH,EAAEmH,EACXC,EAAIJ,KAAKhH,EAAEoH,EAEX4D,SAAGC,SAAGC,SAAGC,SACbH,EAAKE,EAAK/D,EACV8D,EAAKE,EAAK/D,EAEV,IAAIyE,EAAe7E,KAAKyE,MAAQzE,KAAK0E,aAAa/B,EAAS3C,KAAKX,MAAMyF,WAAe9E,KAAKwE,SAEtFO,EAAYF,EAAa7E,KAAKwE,SAChB,IAAfK,IAAmBE,EAAY,GAElC,IAGMC,EAAS,GAAMrC,EAAQiB,SAGzBqB,GAFS,OACD,QAiBZ,OAbAjF,KAAK2E,IAAI5L,QAAQ,SAACxC,GAChB,IAAM2O,GAAW,EAVR,SAACC,EAAMhF,GAAP,OAAcA,EAAIgF,EAAO,EAAI,EAUf9K,CAAK+F,EAAG,IAAO,GAAO4E,EAC7ChB,EAAK7D,EAAIyE,GAASrO,EAAE6O,GAAKL,GAAcpC,EAAQU,MAAQ,EACvDY,EAAK7D,EAAIwE,GAAWrO,EAAE8O,GAAKN,EAAcG,GAAYvC,EAAQW,OAAS,EACtEY,EAAK/D,EAAIyE,IAAarO,EAAE6O,GAAK7O,EAAE8M,OAAU0B,GAAgBpC,EAAQU,MAAQ,EACzEc,EAAK/D,EAAIwE,IAAarO,EAAE8O,GAAK9O,EAAE+M,QAAWyB,EAAcG,GAAYvC,EAAQW,OAAS,EAErF2B,EAAK,GAAK/K,KAAKuH,IAAIuC,EAAGiB,EAAK,IAC3BA,EAAK,GAAK/K,KAAKuH,IAAIwC,EAAGgB,EAAK,IAC3BA,EAAK,GAAK/K,KAAKsH,IAAI0C,EAAGe,EAAK,IAC3BA,EAAK,GAAK/K,KAAKsH,IAAI2C,EAAGc,EAAK,MAGtBA,kCAEDtC,GACN,IAAI2C,EAAKtF,KAAKuF,WAAW5C,EAAQ,GAKjC,OAJA2C,EAAG,GAAKpL,KAAKuH,IAAI6D,EAAG,GAAGtF,KAAKhH,EAAEmH,GAC9BmF,EAAG,GAAKpL,KAAKuH,IAAI6D,EAAG,GAAGtF,KAAKhH,EAAEoH,GAC9BkF,EAAG,GAAKpL,KAAKsH,IAAI8D,EAAG,GAAGtF,KAAKhH,EAAEmH,GAC9BmF,EAAG,GAAKpL,KAAKsH,IAAI8D,EAAG,GAAGtF,KAAKhH,EAAEoH,GACvBkF,yCAEMtB,EAAGC,EAAGC,EAAGC,EAAGxB,EAAQiC,GACjC,IAAIxN,EAAI4I,KAAKuF,WAAW5C,EAAQiC,GAChC,OAAO,EAAApC,EAAAgD,oBAAmBxB,EAAGC,EAAGC,EAAGC,EAAG/M,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,kCAEnD+I,EAAEC,EAAGuC,EAASiC,GAClB,IAAIxN,EAAI4I,KAAKuF,WAAW5C,EAASiC,GAEjC,OAAG,EAAApC,EAAA4B,aAAYjE,EAAEC,EAAEhJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAC3B,EAGF8C,KAAKuH,KACV,EAAAe,EAAA6B,WAAUjN,EAAE,GAAGA,EAAE,KACjB,EAAAoL,EAAA6B,WAAUjN,EAAE,GAAGA,EAAE,KACjB,EAAAoL,EAAA6B,WAAUjN,EAAE,GAAGA,EAAE,KACjB,EAAAoL,EAAA6B,WAAUjN,EAAE,GAAGA,EAAE,KACjB,EAAAoL,EAAAiD,YAAWtF,EAAEC,EAAEhJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAChC,EAAAoL,EAAAiD,YAAWtF,EAAEC,EAAEhJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAChC,EAAAoL,EAAAiD,YAAWtF,EAAEC,EAAEhJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAChC,EAAAoL,EAAAiD,YAAWtF,EAAEC,EAAEhJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,qCAlElC,OAAO,WAuELsO,aACJ,SAAAA,EAAYvP,GAAEyK,EAAAZ,KAAA0F,GACZ1F,KAAKhH,EAAI7C,8CAKDwM,EAASiC,GACjB,IAAIZ,SAAGC,SAAGC,SAAGC,SAETlM,EAAI4K,UAAmB5C,WAAWD,KAAKhH,GACvC5B,EAAIyL,UAAmB3C,WAAWF,KAAKhH,GAc3C,OAZAgL,EAAK/L,EAAEkI,EACP8D,EAAKhM,EAAEmI,EACP8D,EAAK9M,EAAE+I,EACPgE,EAAK/M,EAAEgJ,EAEPsC,EAAaC,EAASiC,EAAM3M,EAAEe,EAAGyJ,GACjCuB,GAAMvB,EAAGtC,EACT8D,GAAMxB,EAAGrC,EACTsC,EAAaC,EAASiC,EAAMxN,EAAE4B,EAAGyJ,IAIzBuB,EAAGC,EAHXC,GAAMzB,EAAGtC,EACTgE,GAAM1B,EAAGrC,mCAIHuC,EAASiC,GACf,IAAI5M,EAAIgI,KAAK2F,UAAUhD,EAASiC,GAEhC,OAAQ1K,KAAKuH,IAAIzJ,EAAE,GAAGA,EAAE,IAAKkC,KAAKuH,IAAIzJ,EAAE,GAAGA,EAAE,IAAKkC,KAAKsH,IAAIxJ,EAAE,GAAGA,EAAE,IAAKkC,KAAKsH,IAAIxJ,EAAE,GAAGA,EAAE,4CAE1EgM,EAAGC,EAAGC,EAAGC,EAAIxB,EAASiC,GACnC,IAAI5M,EAAIgI,KAAK2F,UAAUhD,EAASiC,GAEhC,OAAO,EAAApC,EAAAoD,oBAAmB5N,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIgM,EAAGC,EAAGC,EAAGC,iCAEvDhE,EAAEC,EAAGuC,EAASiC,GAClB,IAAI5M,EAAIgI,KAAK2F,UAAUhD,EAASiC,GAEhC,OAAO,EAAApC,EAAAiD,YAAWtF,EAAEC,EAAEpI,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,mCAnCvC,OAAO,WAuCL6N,aACJ,SAAAA,EAAYtP,GAAEqK,EAAAZ,KAAA6F,GACZ7F,KAAKhH,EAAIzC,oDAKKoM,EAASC,GACvB,IAAU3K,EAAN+L,SAAGC,SAEPD,GADA/L,EAAI4K,UAAmB5C,WAAWD,KAAKhH,IAChCmH,EACP8D,EAAKhM,EAAEmI,EAEP,IAAIwE,EAAO,IAAMjC,EAAQiB,SAAWhB,EAChCkD,EAAQlB,EAAOjC,EAAQU,MAAQ,EAC/B0C,EAAQnB,EAAOjC,EAAQW,OAAS,EAEhC9M,EAAIyB,EAAEmI,EAAI,GAAM,GAAK,EAMzB,OAJAsC,EAAaC,EAASC,EAAY3K,EAAEe,EAAGyJ,IACvCuB,GAAMvB,EAAGtC,EACT8D,GAAMxB,EAAGrC,EAKP4D,EAAW,EAAN8B,EACL7B,EAAK8B,EAAMvP,EACXwN,EACAC,EAAW,KAAN8B,EAAWvP,EAChBwN,EAAW,EAAN8B,EACL7B,EAAK8B,EAAMvP,mCAGPmM,EAASiC,GACf,IAAI7D,EAAIf,KAAKgG,gBAAgBrD,EAASiC,GAEtC,OAAO,EAAApC,EAAAyD,iBAAgBlF,0CAEViD,EAAGC,EAAGC,EAAGC,EAAIxB,EAASiC,EAAMsB,GACzC,IAAInF,EAAIf,KAAKgG,gBAAgBrD,EAAQiC,GACrC,OAAO,EAAApC,EAAA2D,sBAAqBpF,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGiD,EAAGC,EAAGC,EAAGC,KAAO,EAAA3B,EAAA2D,sBAAqBpF,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGiD,EAAGC,EAAGC,EAAGC,iCAElIhE,EAAEC,EAAEuC,EAAQiC,GAChB,IAAI7D,EAAIf,KAAKgG,gBAAgBrD,EAAQiC,GAGjCwB,GAAK,EAAA5D,EAAA6D,mBAAkBlG,EAAEC,EAAEW,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtDuF,GAAK,EAAA9D,EAAA6D,mBAAkBlG,EAAEC,EAAEW,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IAE1D,OAAO7G,KAAKuH,IAAI2E,EAAGE,kCA7CnB,OAAO,WAiDLC,aACJ,SAAAA,EAAYhQ,GAAEqK,EAAAZ,KAAAuG,GACZvG,KAAKhH,EAAIzC,oDAKKoM,EAASiC,EAAMsB,GAC7B,IAAIlC,SAAGE,SAAGD,SAAGE,SACTlM,EAAI4K,UAAmB5C,WAAWD,KAAKhH,GACvC5B,EAAIyL,UAAmB3C,WAAWF,KAAKhH,GAE3CgL,EAAK/L,EAAEkI,EACP8D,EAAKhM,EAAEmI,EACP8D,EAAK9M,EAAE+I,EACPgE,EAAK/M,EAAEgJ,EAEP,IAAI5J,EAAI0P,EAAUjO,EAAGb,GAEjBoP,EAAKhQ,EAAE4J,EACPqG,EAAK9D,EAAQQ,SAAS3M,EAAE2J,EAExBA,EAAIwC,EAAQU,MAAQmD,EACpBpG,EAAIuC,EAAQW,OAAQmD,EACpBtQ,EAAuB,EAAnB+D,KAAKuJ,KAAKtD,EAAEA,EAAEC,EAAEA,GAoBxB,OAlBAoG,GAAM7D,EAAQe,SAASkB,EAAKzO,EAC5BsQ,GAAM9D,EAAQe,SAASkB,EAAKzO,EAE5BuM,EAAaC,EAASiC,EAAM3M,EAAEe,EAAGyJ,GACjCuB,GAAMvB,EAAGtC,EACT8D,GAAMxB,EAAGrC,EACTsC,EAAaC,EAASiC,EAAMxN,EAAE4B,EAAGyJ,IAK/BuB,EACAC,GACCD,GANHE,GAAMzB,EAAGtC,IAMC,EAAIqG,GACXvC,GANHE,GAAM1B,EAAGrC,IAMC,EAAIqG,EACZvC,EACAC,0CAIWH,EAAGC,EAAGC,EAAGC,EAAIxB,EAASiC,EAAMsB,GACzC,IAAInF,EAAIf,KAAKgG,gBAAgBrD,EAASiC,EAAMsB,GAC5C,OAAO,EAAA1D,EAAA2D,sBAAqBpF,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGiD,EAAGC,EAAGC,EAAGC,mCAE7DxB,EAASiC,EAAMsB,GACrB,IAAInF,EAAIf,KAAKgG,gBAAgBrD,EAASiC,EAAMsB,GAC5C,OAAO,EAAA1D,EAAAyD,iBAAgBlF,iCAEnBZ,EAAEC,EAAGuC,EAASiC,EAAMsB,GACxB,IAAInF,EAAIf,KAAKgG,gBAAgBrD,EAASiC,EAAMsB,GAC5C,OAAO,EAAA1D,EAAA6D,mBAAkBlG,EAAEC,EAAEW,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,mCAnDxD,OAAO,WAwDX,SAAS2F,EAAgBC,EAAIC,GAC3B,OAAOD,EAAGE,MAAQD,EAAGC,MAIvB,IAAIC,GAAUlO,MAAOkL,EAAMiD,MAAOrB,EAAMsB,QAASnB,EAAQoB,OAAQV,EAAOW,OAAQ5C,GAE3D6C,aACnB,SAAAA,EAAY5Q,EAAG6Q,EAAO3K,EAAS7D,EAAOyO,EAAYN,EAAOO,EAAYL,EAAQM,EAAaP,EAASQ,EAActB,EAAWuB,EAAW/C,EAAcgD,GAAmB9G,EAAAZ,KAAAmH,GAEtK,IAAsBQ,EAAUpR,EAAEqO,MAAQ,EAAGrO,EAAEqO,KAAO,EAEtD5E,KAAKoH,MAAQA,EACbpH,KAAKkG,UAAYA,EACjB,IAAI9O,EAAI4I,KAAK4H,OAAShP,SAAWmO,SAAWC,WAAaC,UAAYC,WACjEhR,EAAI,EAAGM,KAEPqR,EAAY,SAAC7O,EAAGxC,EAAGN,GAGrB,OAFAM,EAAEN,GAAK8C,EAAE8O,QAAQvR,EARN,EAQe2P,GAC1B1P,EAAEN,GAAGsJ,KAAKxG,GACHA,GAGTJ,EAAMG,QAAQ,SAACpB,GACbP,EAAEwB,MAAM4G,KAAKqI,EAAU,IAAI/D,EAAKnM,GAAInB,EAAGN,QAGzC6Q,EAAMhO,QAAQ,SAAC5C,GACbiB,EAAE2P,MAAMvH,KAAKqI,EAAU,IAAInC,EAAKvP,GAAIK,EAAGN,QAGzC8Q,EAAQjO,QAAQ,SAACxC,GACfa,EAAE4P,QAAQxH,KAAKqI,EAAU,IAAIhC,EAAOtP,GAAIC,EAAGN,QAG7C+Q,EAAOlO,QAAQ,SAACxC,GACda,EAAE6P,OAAOzH,KAAKqI,EAAU,IAAItB,EAAMhQ,GAAIC,EAAGN,QAI3C,IAAI6R,KACAC,KAjCkKC,EAAA,SAqC9J5I,GACN,IAAIzG,EAAQyO,EAAWhI,GAGnB9H,GAAK,EAAAgL,EAAA7C,mBAAkBjD,EAAQyL,OAAO7I,GAAOoI,EAAU,SACvDU,EAAaf,EAAMgB,UAAU7Q,EAAG8Q,MACpCF,EAAWG,QAAQ/Q,EAAG8Q,MACtB,IAAM7D,EAAW2D,EAAW3D,SACtBC,EAAQ0D,EAAW1D,MAErB8D,EAAQR,EAAG1I,KAAW0I,EAAG1I,OACzBmJ,EAASR,EAAI3I,KAAW2I,EAAI3I,GAAS,GAGzC9I,EAAEqO,KAAO8C,EAAmBnR,EAAGgB,EAAGuN,WAClClM,EAAMG,QAAQ,SAACpB,GACb,IAAI4M,EAAU4D,EAAWpR,IAAIY,EAAEmN,MAAOnN,EAAEwI,EAAGxI,EAAEyI,GAC7ChJ,EAAE8P,OAAO1H,KAAKqI,EAAU,IAAIvD,EAAM3M,EAAE4M,EAAShN,EAAIiN,EAAUC,EAAOC,GAAe6D,EAAMC,QAGzFR,EAAI3I,GAASmJ,GApBf,IAAI,IAAInJ,KAASgI,EAAWY,EAApB5I,GAwBR,IAAI,IAAIA,KADRW,KAAKyI,eACYV,EAAG,EACP/H,KAAKyI,YAAYpJ,IAAS,EAAAqJ,EAAAC,YAChC9L,KAAKkL,EAAG1I,IAIfW,KAAK4I,WAAY,EAAAF,EAAAC,WACjB3I,KAAK4I,UAAU/L,KAAKrG,GAIpBD,EAAEqO,KAAO+C,8CAEDkB,EAAK7P,EAAG6N,EAAOjO,EAAOC,EAAOqO,GAClCtO,GAASI,EAAE8P,QACZD,EAAIjQ,MAAM4G,MAAMuJ,KAAK/P,EAAEA,EAAGgQ,KAAM9O,KAAKuJ,KAAKoD,GAAQA,MAAOA,IAExDhO,GAASG,EAAEiQ,QACZJ,EAAIhQ,MAAM2G,MAAM2F,KAAKnM,EAAEA,EAAGgQ,KAAM9O,KAAKuJ,KAAKoD,GAAQA,MAAOA,IAExDK,GAAUlO,EAAEkQ,SACbL,EAAI3B,OAAO1H,MAAMsF,MAAM9L,EAAEA,EAAGgQ,KAAM9O,KAAKuJ,KAAKoD,GAAQA,MAAOA,qCAGtDlE,EAAQqB,EAAGC,EAAGC,EAAGC,EAAGS,EAAKhM,EAAMC,EAAMqO,GAC5C,GAAGlD,EAAKE,EAAG,CACT,IAAIlM,EAAIgM,EACRA,EAAKE,EACLA,EAAKlM,EAEP,GAAGiM,EAAKE,EAAG,CACT,IAAInM,EAAIiM,EACRA,EAAKE,EACLA,EAAKnM,EAIP,IAAI6Q,KACDhQ,IAAOgQ,EAAIhQ,UACXD,IAAOiQ,EAAIjQ,UACXsO,IAAQ2B,EAAI3B,WAEf,IAAI/G,GAAK6D,EAAGE,GAAI,EACZ9D,GAAK6D,EAAGE,GAAI,EAEZlF,EAAOe,KAAK4I,UAAUO,QAAQnF,EAAGD,MAAKE,EAAGF,MAAKG,EAAGH,MAAMI,EAAGJ,QAC9D,GAAGmD,EACC,IAAI,IAAIjP,KAAK+H,KAAKyI,YACdxJ,EAAOA,EAAK5G,OAAO2H,KAAKyI,YAAYxQ,GAAGkR,QAAQnF,EAAGD,MAAKE,EAAGF,MAAKG,EAAGH,MAAMI,EAAGJ,SAInF,IAAI,IAAI7N,EAAI,EAAGA,EAAI+I,EAAKnG,OAAQ5C,IAAI,CAClC,IAAI8C,EAAIiG,EAAK/I,GAAG,GACZ2Q,EAAQ7N,EAAE6N,MAAM1G,EAAEC,EAAGuC,EAASiC,EAAM5E,KAAKkG,UAAWlG,KAAKoH,OACzDpO,EAAEoQ,eAAepF,EAAGC,EAAGC,EAAGC,EAAGxB,EAASiC,EAAM5E,KAAKkG,UAAWlG,KAAKoH,QAGrEpH,KAAKqJ,UAAUR,EAAK7P,EAAG6N,EAAOjO,EAAOC,EAAOqO,GAG9C,IAAI,IAAIzM,KAAKoO,EACXA,EAAIpO,GAAGnB,KAAKoN,GAGd,OAAOmC,+BAEJlG,EAASxC,EAAEC,EAAGkJ,EAAQ1E,EAAMhM,EAAOC,EAAOqO,GAC7C,IAAI2B,KACDhQ,IAAOgQ,EAAIhQ,UACXD,IAAOiQ,EAAIjQ,UACXsO,IAAQ2B,EAAI3B,WAEf,IAAIqC,EAAUD,EACVE,EAAUF,EAEVG,EAAUH,EAAOA,EAEjBrK,EAAOe,KAAK4I,UAAUO,QAAQhJ,EAAIoJ,EAASnJ,EAAIoJ,EAASrJ,EAAIoJ,EAAUnJ,EAAIoJ,IAC9E,GAAGtC,EACC,IAAI,IAAIjP,KAAK+H,KAAKyI,YACdxJ,EAAOA,EAAK5G,OAAO2H,KAAKyI,YAAYxQ,GAAGkR,QAAQhJ,EAAIoJ,EAASnJ,EAAIoJ,EAASrJ,EAAIoJ,EAAUnJ,EAAIoJ,KAInG,IAAI,IAAItT,EAAI,EAAGA,EAAI+I,EAAKnG,OAAQ5C,IAAI,CAClC,IAAI8C,EAAIiG,EAAK/I,GAAG,GACZ2Q,EAAQ7N,EAAE6N,MAAM1G,EAAEC,EAAGuC,EAASiC,EAAM5E,KAAKkG,UAAWlG,KAAKoH,OAC1DP,EAAQ4C,GAGXzJ,KAAKqJ,UAAUR,EAAK7P,EAAG6N,EAAOjO,EAAOC,EAAOqO,GAG9C,IAAI,IAAIzM,KAAKoO,EACXA,EAAIpO,GAAGnB,KAAKoN,GAGd,OAAOmC,iCAEFlG,EAASvL,EAAGlB,EAAG6K,GAIpBf,KAAK4I,UAAUc,OAAO1J,KAAK4H,MAAMxQ,GAAGlB,IAEpC,IAAI8C,EAAI,IAAI8N,EAAO1P,GAAG2J,GAClB4I,EAAM3Q,EAAE8O,QAAQnF,EALT,EAKwB3C,KAAKkG,UAAWlG,KAAKoH,OACxDuC,EAAInK,KAAKxG,GAETgH,KAAK4I,UAAUgB,OAAO5J,KAAK4H,MAAMxQ,GAAGlB,GAAKyT,sBA5KxBxC,gCC9TrB,SAAS0C,EAAMC,EAAYC,GACvB,KAAM/J,gBAAgB6J,GAAQ,OAAO,IAAIA,EAAMC,EAAYC,GAG3D/J,KAAKgK,YAAc9P,KAAKsH,IAAI,EAAGsI,GAAc,GAC7C9J,KAAKiK,YAAc/P,KAAKsH,IAAI,EAAGtH,KAAKgQ,KAAwB,GAAnBlK,KAAKgK,cAE1CD,GACA/J,KAAKmK,YAAYJ,GAGrB/J,KAAKoK,QA2cT,SAASC,EAAStB,EAAMuB,GACpBvB,EAAK9D,KAAOsF,EAASxB,EAAM,EAAGA,EAAKlP,SAASf,OAAQwR,GAIxD,SAASC,EAASxB,EAAMtO,EAAGzC,EAAGsS,GAG1B,IAFA,IAEgBE,EAFZvF,EAAOwF,IAEFvU,EAAIuE,EAAUvE,EAAI8B,EAAG9B,IAC1BsU,EAAQzB,EAAKlP,SAAS3D,GACtBwU,EAAOzF,EAAM8D,EAAK4B,KAAOL,EAAOE,GAASA,EAAMvF,MAGnD,OAAOA,EAGX,SAASwF,IAAU,OAAQnJ,IAAUA,KAAWA,KAAWA,KAE3D,SAASoJ,EAAOnR,EAAGC,GAKf,OAJAD,EAAE,GAAKW,KAAKuH,IAAIlI,EAAE,GAAIC,EAAE,IACxBD,EAAE,GAAKW,KAAKuH,IAAIlI,EAAE,GAAIC,EAAE,IACxBD,EAAE,GAAKW,KAAKsH,IAAIjI,EAAE,GAAIC,EAAE,IACxBD,EAAE,GAAKW,KAAKsH,IAAIjI,EAAE,GAAIC,EAAE,IACjBD,EAGX,SAASqR,EAAgBrR,EAAGC,GAAK,OAAOD,EAAE0L,KAAK,GAAKzL,EAAEyL,KAAK,GAC3D,SAAS4F,EAAgBtR,EAAGC,GAAK,OAAOD,EAAE0L,KAAK,GAAKzL,EAAEyL,KAAK,GAE3D,SAAS6F,EAASvR,GAAO,OAAQA,EAAE,GAAKA,EAAE,KAAOA,EAAE,GAAKA,EAAE,IAC1D,SAASwR,EAAWxR,GAAK,OAAQA,EAAE,GAAKA,EAAE,IAAOA,EAAE,GAAKA,EAAE,IAE1D,SAASyR,EAAazR,EAAGC,GACrB,OAAQU,KAAKsH,IAAIhI,EAAE,GAAID,EAAE,IAAMW,KAAKuH,IAAIjI,EAAE,GAAID,EAAE,MACxCW,KAAKsH,IAAIhI,EAAE,GAAID,EAAE,IAAMW,KAAKuH,IAAIjI,EAAE,GAAID,EAAE,KAGpD,SAAS0R,EAAiB1R,EAAGC,GACzB,IAAI2H,EAAOjH,KAAKsH,IAAIjI,EAAE,GAAIC,EAAE,IACxB4H,EAAOlH,KAAKsH,IAAIjI,EAAE,GAAIC,EAAE,IACxB6H,EAAOnH,KAAKuH,IAAIlI,EAAE,GAAIC,EAAE,IACxB+H,EAAOrH,KAAKuH,IAAIlI,EAAE,GAAIC,EAAE,IAE5B,OAAOU,KAAKsH,IAAI,EAAGH,EAAOF,GACnBjH,KAAKsH,IAAI,EAAGD,EAAOH,GAG9B,SAAS8J,EAAS3R,EAAGC,GACjB,OAAOD,EAAE,IAAMC,EAAE,IACVD,EAAE,IAAMC,EAAE,IACVA,EAAE,IAAMD,EAAE,IACVC,EAAE,IAAMD,EAAE,GAGrB,SAAS4R,EAAW5R,EAAGC,GACnB,OAAOA,EAAE,IAAMD,EAAE,IACVC,EAAE,IAAMD,EAAE,IACVC,EAAE,IAAMD,EAAE,IACVC,EAAE,IAAMD,EAAE,GAMrB,SAAS6R,EAAYzB,EAAKrL,EAAMC,EAAO5G,EAAG0T,GAItC,IAHA,IACIC,EADAC,GAASjN,EAAMC,GAGZgN,EAAMzS,SACTyF,EAAQgN,EAAMC,QACdlN,EAAOiN,EAAMC,QAEO7T,IAGpB8T,EAAO9B,EAAKrL,EAAMC,EADlB+M,EAAMhN,EAAOpE,KAAKgQ,MAAM3L,EAAQD,GAAQ3G,EAAI,GAAKA,EACnB0T,GAE9BE,EAAM/L,KAAKlB,EAAMgN,EAAKA,EAAK/M,IAMnC,SAASkN,EAAO9B,EAAKrL,EAAMC,EAAO9D,EAAG4Q,GAGjC,IAFA,IAAI1T,EAAGzB,EAAGwV,EAAGzT,EAAG8P,EAAuB3Q,EAAGuU,EAEnCpN,EAAQD,GAAM,CAmBjB,IAlBIC,EAAQD,EAAO,MACf3G,EAAI4G,EAAQD,EAAO,EACnBpI,EAAIuE,EAAI6D,EAAO,EACfoN,EAAIxR,KAAKmC,IAAI1E,GACbM,EAAI,GAAMiC,KAAK0R,IAAI,EAAIF,EAAI,GAC3B3D,EAAK,GAAM7N,KAAKuJ,KAAKiI,EAAIzT,GAAKN,EAAIM,GAAKN,IAAMzB,EAAIyB,EAAI,EAAI,GAAK,EAAI,GAGlE8T,EAAO9B,EAFGzP,KAAKsH,IAAIlD,EAAMpE,KAAK2R,MAAMpR,EAAIvE,EAAI+B,EAAIN,EAAIoQ,IACzC7N,KAAKuH,IAAIlD,EAAOrE,KAAK2R,MAAMpR,GAAK9C,EAAIzB,GAAK+B,EAAIN,EAAIoQ,IAC7BtN,EAAG4Q,IAGtCjU,EAAIuS,EAAIlP,GACRvE,EAAIoI,EACJqN,EAAIpN,EAEJuN,EAAKnC,EAAKrL,EAAM7D,GACZ4Q,EAAQ1B,EAAIpL,GAAQnH,GAAK,GAAG0U,EAAKnC,EAAKrL,EAAMC,GAEzCrI,EAAIyV,GAAG,CAIV,IAHAG,EAAKnC,EAAKzT,EAAGyV,GACbzV,IACAyV,IACON,EAAQ1B,EAAIzT,GAAIkB,GAAK,GAAGlB,IAC/B,KAAOmV,EAAQ1B,EAAIgC,GAAIvU,GAAK,GAAGuU,IAGL,IAA1BN,EAAQ1B,EAAIrL,GAAOlH,GAAU0U,EAAKnC,EAAKrL,EAAMqN,GAG7CG,EAAKnC,IADLgC,EACapN,GAGboN,GAAKlR,IAAG6D,EAAOqN,EAAI,GACnBlR,GAAKkR,IAAGpN,EAAQoN,EAAI,IAIhC,SAASG,EAAKnC,EAAKzT,EAAGyV,GAClB,IAAII,EAAMpC,EAAIzT,GACdyT,EAAIzT,GAAKyT,EAAIgC,GACbhC,EAAIgC,GAAKI,mDAvkBblC,EAAM/R,WAEFkU,IAAK,WACD,OAAOhM,KAAKiM,KAAKjM,KAAKf,UAG1BkK,OAAQ,SAAUlE,GAEd,IAAI8D,EAAO/I,KAAKf,KACZrD,KACA0O,EAAStK,KAAKsK,OAElB,IAAKa,EAAWlG,EAAM8D,EAAK9D,MAAO,OAAOrJ,EAKzC,IAHA,IACI1F,EAAGsN,EAAKgH,EAAO0B,EADfC,KAGGpD,GAAM,CACT,IAAK7S,EAAI,EAAGsN,EAAMuF,EAAKlP,SAASf,OAAQ5C,EAAIsN,EAAKtN,IAE7CsU,EAAQzB,EAAKlP,SAAS3D,GAGlBiV,EAAWlG,EAFfiH,EAAYnD,EAAK4B,KAAOL,EAAOE,GAASA,EAAMvF,QAGtC8D,EAAK4B,KAAM/O,EAAO4D,KAAKgL,GAClBU,EAASjG,EAAMiH,GAAYlM,KAAKiM,KAAKzB,EAAO5O,GAChDuQ,EAAc3M,KAAKgL,IAGhCzB,EAAOoD,EAAcX,MAGzB,OAAO5P,GAGXwQ,SAAU,SAAUnH,GAEhB,IAAI8D,EAAO/I,KAAKf,KACZqL,EAAStK,KAAKsK,OAElB,IAAKa,EAAWlG,EAAM8D,EAAK9D,MAAO,OAAO,EAKzC,IAHA,IACI/O,EAAGsN,EAAKgH,EAAO0B,EADfC,KAGGpD,GAAM,CACT,IAAK7S,EAAI,EAAGsN,EAAMuF,EAAKlP,SAASf,OAAQ5C,EAAIsN,EAAKtN,IAK7C,GAHAsU,EAAQzB,EAAKlP,SAAS3D,GAGlBiV,EAAWlG,EAFfiH,EAAYnD,EAAK4B,KAAOL,EAAOE,GAASA,EAAMvF,MAEb,CAC7B,GAAI8D,EAAK4B,MAAQO,EAASjG,EAAMiH,GAAY,OAAO,EACnDC,EAAc3M,KAAKgL,GAG3BzB,EAAOoD,EAAcX,MAGzB,OAAO,GAGX3O,KAAM,SAAUoC,GACZ,IAAMA,IAAQA,EAAKnG,OAAS,OAAOkH,KAEnC,GAAIf,EAAKnG,OAASkH,KAAKiK,YAAa,CAChC,IAAK,IAAI/T,EAAI,EAAGsN,EAAMvE,EAAKnG,OAAQ5C,EAAIsN,EAAKtN,IACxC8J,KAAK4J,OAAO3K,EAAK/I,IAErB,OAAO8J,KAIX,IAAI+I,EAAO/I,KAAKqM,OAAOpN,EAAKqN,QAAS,EAAGrN,EAAKnG,OAAS,EAAG,GAEzD,GAAKkH,KAAKf,KAAKpF,SAASf,OAIjB,GAAIkH,KAAKf,KAAKqE,SAAWyF,EAAKzF,OAEjCtD,KAAKuM,WAAWvM,KAAKf,KAAM8J,OAExB,CACH,GAAI/I,KAAKf,KAAKqE,OAASyF,EAAKzF,OAAQ,CAEhC,IAAIkJ,EAAUxM,KAAKf,KACnBe,KAAKf,KAAO8J,EACZA,EAAOyD,EAIXxM,KAAKyM,QAAQ1D,EAAM/I,KAAKf,KAAKqE,OAASyF,EAAKzF,OAAS,GAAG,QAfvDtD,KAAKf,KAAO8J,EAkBhB,OAAO/I,MAGX4J,OAAQ,SAAU8C,GAEd,OADIA,GAAM1M,KAAKyM,QAAQC,EAAM1M,KAAKf,KAAKqE,OAAS,GACzCtD,MAGXoK,MAAO,WAOH,OANApK,KAAKf,MACDpF,YACAyJ,OAAQ,EACR2B,KAAMwF,IACNE,MAAM,GAEH3K,MAGX0J,OAAQ,SAAUgD,GACd,IAAKA,EAAM,OAAO1M,KASlB,IAPA,IAII9J,EAAGyW,EAAQzT,EAAO0T,EAJlB7D,EAAO/I,KAAKf,KACZgG,EAAOjF,KAAKsK,OAAOoC,GACnBG,KACAC,KAIG/D,GAAQ8D,EAAK/T,QAAQ,CASxB,GAPKiQ,IACDA,EAAO8D,EAAKrB,MACZmB,EAASE,EAAKA,EAAK/T,OAAS,GAC5B5C,EAAI4W,EAAQtB,MACZoB,GAAU,GAGV7D,EAAK4B,OAGU,KAFfzR,EAAQ6P,EAAKlP,SAASgC,QAAQ6Q,IAO1B,OAHA3D,EAAKlP,SAASkT,OAAO7T,EAAO,GAC5B2T,EAAKrN,KAAKuJ,GACV/I,KAAKgN,UAAUH,GACR7M,KAIV4M,GAAY7D,EAAK4B,OAAQO,EAASnC,EAAK9D,KAAMA,GAOvC0H,GACPzW,IACA6S,EAAO4D,EAAO9S,SAAS3D,GACvB0W,GAAU,GAEP7D,EAAO,MAXV8D,EAAKrN,KAAKuJ,GACV+D,EAAQtN,KAAKtJ,GACbA,EAAI,EACJyW,EAAS5D,EACTA,EAAOA,EAAKlP,SAAS,IAU7B,OAAOmG,MAGXsK,OAAQ,SAAUoC,GAAQ,OAAOA,GAEjCO,YAAa,SAAU1T,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,IAC/C0T,YAAa,SAAU3T,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,IAE/C2T,OAAQ,WAAc,OAAOnN,KAAKf,MAElCmO,SAAU,SAAUnO,GAEhB,OADAe,KAAKf,KAAOA,EACLe,MAGXiM,KAAM,SAAUlD,EAAMnN,GAElB,IADA,IAAIuQ,KACGpD,GACCA,EAAK4B,KAAM/O,EAAO4D,KAAK6N,MAAMzR,EAAQmN,EAAKlP,UACzCsS,EAAc3M,KAAK6N,MAAMlB,EAAepD,EAAKlP,UAElDkP,EAAOoD,EAAcX,MAEzB,OAAO5P,GAGXyQ,OAAQ,SAAUiB,EAAOhP,EAAMC,EAAO+E,GAElC,IAEIyF,EAFAwE,EAAIhP,EAAQD,EAAO,EACnBkP,EAAIxN,KAAKgK,YAGb,GAAIuD,GAAKC,EASL,OADAnD,EANAtB,GACIlP,SAAUyT,EAAMhB,MAAMhO,EAAMC,EAAQ,GACpC+E,OAAQ,EACR2B,KAAM,KACN0F,MAAM,GAEK3K,KAAKsK,QACbvB,EAGNzF,IAEDA,EAASpJ,KAAKgQ,KAAKhQ,KAAKmC,IAAIkR,GAAKrT,KAAKmC,IAAImR,IAG1CA,EAAItT,KAAKgQ,KAAKqD,EAAIrT,KAAKuT,IAAID,EAAGlK,EAAS,KAG3CyF,GACIlP,YACAyJ,OAAQA,EACR2B,KAAM,KACN0F,MAAM,GAKV,IAEIzU,EAAGyV,EAAG+B,EAAQC,EAFdC,EAAK1T,KAAKgQ,KAAKqD,EAAIC,GACnBK,EAAKD,EAAK1T,KAAKgQ,KAAKhQ,KAAKuJ,KAAK+J,IAKlC,IAFApC,EAAYkC,EAAOhP,EAAMC,EAAOsP,EAAI7N,KAAKiN,aAEpC/W,EAAIoI,EAAMpI,GAAKqI,EAAOrI,GAAK2X,EAM5B,IAFAzC,EAAYkC,EAAOpX,EAFnBwX,EAASxT,KAAKuH,IAAIvL,EAAI2X,EAAK,EAAGtP,GAEAqP,EAAI5N,KAAKkN,aAElCvB,EAAIzV,EAAGyV,GAAK+B,EAAQ/B,GAAKiC,EAE1BD,EAASzT,KAAKuH,IAAIkK,EAAIiC,EAAK,EAAGF,GAG9B3E,EAAKlP,SAAS2F,KAAKQ,KAAKqM,OAAOiB,EAAO3B,EAAGgC,EAAQrK,EAAS,IAMlE,OAFA+G,EAAStB,EAAM/I,KAAKsK,QAEbvB,GAGX+E,eAAgB,SAAU7I,EAAM8D,EAAMgF,EAAOlB,GAIzC,IAFA,IAAI3W,EAAGsN,EAAKgH,EAAOwD,EAAYC,EAAMC,EAAaC,EAASC,EAGvDvB,EAAKrN,KAAKuJ,IAENA,EAAK4B,MAAQkC,EAAK/T,OAAS,IAAMiV,GAH5B,CAOT,IAFAI,EAAUC,EAAiB9M,IAEtBpL,EAAI,EAAGsN,EAAMuF,EAAKlP,SAASf,OAAQ5C,EAAIsN,EAAKtN,IAE7C+X,EAAOnD,GADPN,EAAQzB,EAAKlP,SAAS3D,IACA+O,OACtBiJ,EAAclD,EAAa/F,EAAMuF,EAAMvF,MAAQgJ,GAG7BG,GACdA,EAAiBF,EACjBC,EAAUF,EAAOE,EAAUF,EAAOE,EAClCH,EAAaxD,GAEN0D,IAAgBE,GAEnBH,EAAOE,IACPA,EAAUF,EACVD,EAAaxD,GAKzBzB,EAAOiF,GAAcjF,EAAKlP,SAAS,GAGvC,OAAOkP,GAGX0D,QAAS,SAAUC,EAAMqB,EAAOjF,GAE5B,IAAIwB,EAAStK,KAAKsK,OACdrF,EAAO6D,EAAS4D,EAAKzH,KAAOqF,EAAOoC,GACnC2B,KAGAtF,EAAO/I,KAAK8N,eAAe7I,EAAMjF,KAAKf,KAAM8O,EAAOM,GAOvD,IAJAtF,EAAKlP,SAAS2F,KAAKkN,GACnBhC,EAAO3B,EAAK9D,KAAMA,GAGX8I,GAAS,GACRM,EAAWN,GAAOlU,SAASf,OAASkH,KAAKgK,aACzChK,KAAKsO,OAAOD,EAAYN,GACxBA,IAKR/N,KAAKuO,oBAAoBtJ,EAAMoJ,EAAYN,IAI/CO,OAAQ,SAAUD,EAAYN,GAE1B,IAAIhF,EAAOsF,EAAWN,GAClBP,EAAIzE,EAAKlP,SAASf,OAClBxC,EAAI0J,KAAKiK,YAEbjK,KAAKwO,iBAAiBzF,EAAMzS,EAAGkX,GAE/B,IAAIiB,EAAazO,KAAK0O,kBAAkB3F,EAAMzS,EAAGkX,GAE7CmB,GACA9U,SAAUkP,EAAKlP,SAASkT,OAAO0B,EAAY1F,EAAKlP,SAASf,OAAS2V,GAClEnL,OAAQyF,EAAKzF,OACb2B,KAAM,KACN0F,MAAM,GAGN5B,EAAK4B,OAAMgE,EAAQhE,MAAO,GAE9BN,EAAStB,EAAM/I,KAAKsK,QACpBD,EAASsE,EAAS3O,KAAKsK,QAEnByD,EAAOM,EAAWN,EAAQ,GAAGlU,SAAS2F,KAAKmP,GAC1C3O,KAAKuM,WAAWxD,EAAM4F,IAG/BpC,WAAY,SAAUxD,EAAM4F,GAExB3O,KAAKf,MACDpF,UAAWkP,EAAM4F,GACjBrL,OAAQyF,EAAKzF,OAAS,EACtB2B,KAAM,KACN0F,MAAM,GAEVN,EAASrK,KAAKf,KAAMe,KAAKsK,SAG7BoE,kBAAmB,SAAU3F,EAAMzS,EAAGkX,GAElC,IAAItX,EAAG0Y,EAAOC,EAAOC,EAASb,EAAMc,EAAYZ,EAASjV,EAIzD,IAFA6V,EAAaZ,EAAU7M,IAElBpL,EAAII,EAAGJ,GAAKsX,EAAIlX,EAAGJ,IAIpB4Y,EAAU7D,EAHV2D,EAAQrE,EAASxB,EAAM,EAAG7S,EAAG8J,KAAKsK,QAClCuE,EAAQtE,EAASxB,EAAM7S,EAAGsX,EAAGxN,KAAKsK,SAGlC2D,EAAOnD,EAAS8D,GAAS9D,EAAS+D,GAG9BC,EAAUC,GACVA,EAAaD,EACb5V,EAAQhD,EAERiY,EAAUF,EAAOE,EAAUF,EAAOE,GAE3BW,IAAYC,GAEfd,EAAOE,IACPA,EAAUF,EACV/U,EAAQhD,GAKpB,OAAOgD,GAIXsV,iBAAkB,SAAUzF,EAAMzS,EAAGkX,GAEjC,IAAIP,EAAclE,EAAK4B,KAAO3K,KAAKiN,YAAcrC,EAC7CsC,EAAcnE,EAAK4B,KAAO3K,KAAKkN,YAAcrC,EACnC7K,KAAKgP,eAAejG,EAAMzS,EAAGkX,EAAGP,GAChCjN,KAAKgP,eAAejG,EAAMzS,EAAGkX,EAAGN,IAIvBnE,EAAKlP,SAASP,KAAK2T,IAI9C+B,eAAgB,SAAUjG,EAAMzS,EAAGkX,EAAGnC,GAElCtC,EAAKlP,SAASP,KAAK+R,GAEnB,IAIInV,EAAGsU,EAJHF,EAAStK,KAAKsK,OACd2E,EAAW1E,EAASxB,EAAM,EAAGzS,EAAGgU,GAChC4E,EAAY3E,EAASxB,EAAMyE,EAAIlX,EAAGkX,EAAGlD,GACrC6E,EAASpE,EAAWkE,GAAYlE,EAAWmE,GAG/C,IAAKhZ,EAAII,EAAGJ,EAAIsX,EAAIlX,EAAGJ,IACnBsU,EAAQzB,EAAKlP,SAAS3D,GACtBwU,EAAOuE,EAAUlG,EAAK4B,KAAOL,EAAOE,GAASA,EAAMvF,MACnDkK,GAAUpE,EAAWkE,GAGzB,IAAK/Y,EAAIsX,EAAIlX,EAAI,EAAGJ,GAAKI,EAAGJ,IACxBsU,EAAQzB,EAAKlP,SAAS3D,GACtBwU,EAAOwE,EAAWnG,EAAK4B,KAAOL,EAAOE,GAASA,EAAMvF,MACpDkK,GAAUpE,EAAWmE,GAGzB,OAAOC,GAGXZ,oBAAqB,SAAUtJ,EAAM4H,EAAMkB,GAEvC,IAAK,IAAI7X,EAAI6X,EAAO7X,GAAK,EAAGA,IACxBwU,EAAOmC,EAAK3W,GAAG+O,KAAMA,IAI7B+H,UAAW,SAAUH,GAEjB,IAAK,IAAyBuC,EAArBlZ,EAAI2W,EAAK/T,OAAS,EAAa5C,GAAK,EAAGA,IACZ,IAA5B2W,EAAK3W,GAAG2D,SAASf,OACb5C,EAAI,GACJkZ,EAAWvC,EAAK3W,EAAI,GAAG2D,UACdkT,OAAOqC,EAASvT,QAAQgR,EAAK3W,IAAK,GAExC8J,KAAKoK,QAETC,EAASwC,EAAK3W,GAAI8J,KAAKsK,SAItCH,YAAa,SAAUJ,GAOnB,IAAIsF,GAAc,WAAY,OAAQ,KAEtCrP,KAAKiN,YAAc,IAAIqC,SAAS,IAAK,IAAKD,EAAWE,KAAKxF,EAAO,KACjE/J,KAAKkN,YAAc,IAAIoC,SAAS,IAAK,IAAKD,EAAWE,KAAKxF,EAAO,KAEjE/J,KAAKsK,OAAS,IAAIgF,SAAS,IAAK,YAAcvF,EAAOwF,KAAK,OAAS,kBAwI5D1F,iFC/lBf,wDAAA/T,EAAA,KAYA,IAAI0Z,EAAqB,SAASC,EAAQhT,GACxC,IACIiT,EAMAC,EAAeC,EAPfC,EAAY,IAAIC,UAASL,EAAQhT,GAGjCsT,KACAC,KAMJP,EAAOQ,iBAAiB,cAAeN,EAAgB,SAAS3W,GAC9D,GAAG+W,EAAQjX,OAAS,EAAE,CACzB,IAAIoX,EAASH,EAAQvE,MAErBwE,EAAWE,EAEXL,EAAUM,IAAIH,EAASpX,MAAOoX,EAASnX,OACvCgX,EAAUO,OAGPpX,EAAEqX,mBAGJZ,EAAOQ,iBAAiB,QAASL,EAAU,SAAS5W,GAClD,IAAIsM,EAAKmK,EAAOa,wBACZnQ,EAAInH,EAAEuX,QAAUjL,EAAGhH,KACnB8B,EAAIpH,EAAEwX,QAAUlL,EAAG7G,IAGnBgS,EAAUZ,EAAUa,gBAAgBpH,OAF3B,EAE2CnJ,EAAEA,EAAGC,EAAEA,IAC3DxE,EAASiU,EAAUc,KAAKF,EAAQtQ,EAAEsQ,EAAQrQ,EAAEqQ,EAAQnH,QAAO,GAAK,GACpE,GAAG1N,EAAOhD,MAAME,OAAS,EAAE,CACzB,IAAIiQ,EAAOnN,EAAOhD,MAAM,GAAGmQ,KAEvB6H,EAAS7H,EAAK6H,QAAUlB,EAS5B,GARG3G,EAAK8H,iBAEbD,OAAStR,EAGFyJ,EAAK8H,kBAAmB,EAGvB9H,EAAKnQ,OAASmQ,EAAKlQ,MAAM,CACjC,IAAIiY,EAAc/H,EAAKnQ,MACnBmY,EAAchI,EAAKlQ,MAEvBkX,EAAQvQ,KAAKwQ,GACbA,GAAYpX,MAAOkY,EAAajY,MAAOkY,GAEvClB,EAAUM,IAAIH,EAASpX,MAAOoX,EAASnX,MAAO+X,GAC9Cf,EAAUO,WAOTpQ,KAAK0J,OAAS,WACZ+F,EAAOuB,oBAAoB,cAAerB,GAC1CF,EAAOuB,oBAAoB,QAASpB,GACpCC,EAAUnG,UAIZ1J,KAAKmQ,IAAM,SAASvX,EAAOC,EAAO+X,GAChCZ,GAAYpX,MAAOA,EAAOC,MAAOA,GACjCkX,KAEAL,EAAYkB,EACZf,EAAUM,IAAI9C,MAAMwC,EAAWrV,YAGjC,IACIyW,EAAOjR,MADU,OAAQ,WAAY,iBAAkB,OAAQ,YAAa,cAAe,SAAU,aAE3FjH,QAAQ,SAASmY,IAC7B,SAAUA,EAAQD,GAChBA,EAAKC,GAAU,WACpB,OAAOrB,EAAUqB,GAAQ7D,MAAMwC,EAAWrV,YAFvC,CAIG0W,EAAQD,MAKfE,OAAO3B,mBAAqBA,YAEbA,iFCpGf,QAAA1Z,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,IACAyM,EAAAzM,EAAA,sDAYA,IAAIsb,EAAUC,SAASC,cAAc,UACrC,SAASC,EAAW9B,GAChB,IAAI+B,GAAe5X,OAAO,EAAO6X,WAAW,GAG5C,OAFShC,EAAO8B,WAAW,QAASC,IAAe/B,EAAO8B,WAAW,qBAAsBC,GAM/F,IAAIE,EAAa,EAEjB,SAASC,EAAYtY,QACAiG,IAAhBjG,EAAGuY,UACJvY,EAAGgH,OAAShH,EAAGuY,gBACRvY,EAAGuY,eACWtS,IAAdjG,EAAGgH,SACVhH,EAAGgH,SAAWqR,GAKlB,SAASG,EAAYtY,EAAGC,EAAGsY,GACzB,IAAI9a,KACJA,EAAE8B,OAASS,EAAET,OAASU,EAAEV,OAIxB,IAFA,IAAI5C,EAAI,EAAEyV,EAAE,EAAElR,EAAE,EAETvE,EAAIqD,EAAET,QAAU6S,EAAInS,EAAEV,QAEvBgZ,EAAIvY,EAAErD,GAAGsD,EAAEmS,IAAM,EACnB3U,EAAEyD,KAAOlB,EAAErD,KAEXc,EAAEyD,KAAOjB,EAAEmS,KAGf,KAAOzV,EAAIqD,EAAET,QACX9B,EAAEyD,KAAOlB,EAAErD,KAGb,KAAOyV,EAAInS,EAAEV,QACX9B,EAAEyD,KAAOjB,EAAEmS,KAEb,OAAO3U,EAGT,IAAI8Y,EAAW,SAASL,EAAQhT,GAAQ,IAAAsV,EAAA/R,KAClCiR,EAAOjR,KACXyP,EAASA,GAAU2B,EACnB,IAAIY,EAAkBvV,EAAQyL,OAAO+J,WAAaxV,EAAQyL,OAAO+J,eAC7DC,EAAkB,IAAIpS,UAAekS,EAAgB7T,OAAS,sBAE9DgU,GAAU,EACVC,GAAU,EAEV3K,EAAYhL,EAAQyL,OAAOa,KAAOtM,EAAQyL,OAAOa,SAKrD,GAJAtB,EAAU4K,QAA+B,MAArB5K,EAAU4K,QAAkB5K,EAAU4K,QAAU,EACpE5K,EAAU6K,QAAU7K,EAAU6K,SAAW,GACzC7K,EAAUtJ,MAAQsJ,EAAUtJ,OAAS,qBAEjCsJ,EAAU3C,MAAO,CACjB,IAAI7M,EAAIwP,EAAU3C,MAClB7M,EAAEkG,MAAQlG,EAAEkG,OAAS,qBACrBlG,EAAEoQ,KAAOpQ,EAAEoQ,OAASxN,KAAK,+BAAgC+J,KAAM,IAGnE,IAAI2N,EAAY9V,EAAQyL,OAAO/C,KAAO1I,EAAQyL,OAAO/C,OAAUqN,UAC/DD,EAAUlP,MAAQkP,EAAUlP,OAAS,EACrCkP,EAAUpU,MAAQoU,EAAUpU,OAAS,qBACrCoU,EAAUxS,aAAewS,EAAUxS,cAAgB,oBAEnD,IAAIvD,EAAS,WAAYC,EAAQD,SAAUC,EAAQD,UAAUuV,EAAK3B,MAAK,IAEvE,GAAImC,EAAUC,YAC0B,IAA5BD,EAAUC,MAAMC,QAAwB,CAChD,IAAIxa,EAAIsa,EAAUC,MAClBva,EAAEoa,QAAuB,MAAbpa,EAAEoa,QAAkBpa,EAAEoa,QAAU,EAC5Cpa,EAAEqa,QAAUra,EAAEqa,SAAW,GACzBra,EAAEya,OAAS,EAKf,IAAIC,EAAS,IAAIC,UACbC,KACAC,SAAKrX,SAAGsX,SAASC,SAASC,SAAM7L,SAChCzE,KAEJ3C,KAAKkT,cAAgB,WACnB,IAAIvb,EAAI,EACR,IAAI,IAAI8C,KAAKoY,EACXlb,GAAKkb,EAAOpY,GAAGyY,gBACjB,OAAOvb,GAET,IAAIwb,EAAc1W,EAAQ0W,aAAenT,KAAKkT,cAE9ClT,KAAKoT,cAAgB,WACnB,IAAIpa,EAAI,EACR,IAAI,IAAIyB,KAAKoY,EACX7Z,GAAK6Z,EAAOpY,GAAG2Y,gBACjB,OAAOpa,GAET,IAAIqa,EAAc5W,EAAQ4W,aAAerT,KAAKoT,cAE1CE,EAAWX,EAAOY,SAAS,WAE7B,OADAtC,EAAKb,KAAK/Z,KAAK4a,IACR,GACN,GAEH,SAASuC,IACP,QAAGrB,IACD/V,QAAQqX,MAAM,qDACP,GAKX,IAAI7a,SAAOC,SAEX,SAAS6a,IACJb,EAAOc,OAEVd,EAAOc,KAAO,IAAIC,UAAenE,EAAQ9M,EAASmQ,EAAMrX,EAAIuX,EAAUC,EAAO7L,EAAOuL,EAAQlW,EAASyV,EAAiBzK,EAAW8K,EAAWsB,EAASC,EAAapP,EAAcqP,EAAkBZ,EAAaE,EAAaC,EAAU9W,IAGxO,IAAIwX,OAAQ1U,EACZ,SAAS2U,IAGP,OAFID,IACFA,EAAQ,IAAIE,UAA4BrB,EAAQa,EAAiBX,EAAUna,EAAOC,EAAO8Y,IACpFqC,EAGThU,KAAKmQ,IAAM,SAACxY,EAAGqB,EAAG4X,GAAgC,IAAxBuD,EAAwB3Z,UAAA1B,OAAA,QAAAwG,IAAA9E,UAAA,GAAAA,UAAA,MAChD,GAAIgZ,IAAgB,OAAOzB,EAE3BnZ,EAAQjB,MACRkB,EAAQG,MAERJ,EAAMG,QAAQ4Y,GACd9Y,EAAME,QAAQ4Y,GAEd,IAAIyC,KAuBJ,MAtB8B,oBAApBC,uBAC2B,IAAzBA,gBAAgBtL,OACxBqL,EAAWC,gBAAgBtL,KAAKuL,YAAY7X,EAAQwU,GAAMsD,aACxB,IAA1BF,gBAAgB7B,QACxB4B,EAAWA,EAAS/b,OAAOgc,gBAAgB7B,MAAM8B,YAAY7X,EAAQwU,GAAMsD,UAG/EC,QAAQxI,IAAIoI,EAAS3b,IAAI,SAAAiU,GAAA,OAAQA,EAAK+H,UAASC,KAAK,SAACne,GACnDA,EAAEkC,IAAI,SAACiU,EAAMxT,GACQ,UAAhBwT,EAAKiI,OACNlY,EAAQyL,OAAOkM,EAASlb,GAAOzC,MAAM+b,MAAQ9F,EAE7CjQ,EAAQyL,OAAOkM,EAASlb,GAAOzC,MAAQiW,IAG3CmG,EAAOc,MAAQd,EAAOc,KAAKxD,UAAYS,EAAQuD,GAC/CtB,EAAO+B,KAAKzE,IAAIvX,EAAOC,EAAO+X,EAAQuD,KAIxCH,OAAQ1U,EACR8S,GAAS,EACFL,GAIT/R,KAAK6U,OAAS,WACZ,IAAGrB,IAAH,CAEAS,IAAWa,eAGX,IAAInd,EAAIkb,EAAO+B,KAAKG,kBACjBlC,EAAOc,OAAOhc,EAAIA,EAAEU,OAAOwa,EAAOc,KAAKoB,oBAE1C,IAAI/b,EAAI6Z,EAAO+B,KAAKI,kBACjBnC,EAAOc,OAAM3a,EAAIA,EAAEX,OAAOwa,EAAOc,KAAKqB,oBAEzCjD,EAAK5B,IAAIxY,EAAEqB,GACX+Y,EAAK3B,SAGPpQ,KAAKiV,WAAa,SAACtd,GAAQ,OAAG6b,IAAuBzB,GAAOkC,IAAWgB,WAAWtd,GAAWoa,IAC7F/R,KAAKkV,WAAa,SAAClc,GAAQ,OAAGwa,IAAuBzB,GAAOkC,IAAWiB,WAAWlc,GAAW+Y,IAC7F/R,KAAKmV,QAAU,SAACnc,GAAQ,OAAGwa,IAAuBzB,GAAOkC,IAAWkB,QAAQnc,GAAW+Y,IACvF/R,KAAKoV,QAAU,SAACzd,GAAQ,OAAG6b,IAAuBzB,GAAOkC,IAAWmB,QAAQzd,GAAWoa,IACvF/R,KAAKqV,WAAa,SAAC1d,GAAQ,OAAG6b,IAAuBzB,EAAcA,EAAKkD,WAAWtd,GAAGyd,QAAQzd,IAC9FqI,KAAKsV,WAAa,SAACtc,GAAQ,OAAGwa,IAAuBzB,EAAcA,EAAKmD,WAAWlc,GAAGmc,QAAQnc,IAC9FgH,KAAK8U,aAAe,WAAQ,OAAGtB,IAAuBzB,GAAOkC,IAAWa,eAAuB/C,IAE/F/R,KAAKuV,SAAW,SAAC1c,GACf,OAAG2a,IAAuBzB,GAE1BlZ,EAAME,QAAQ,SAACC,GACb+Y,EAAKoD,QAAQnc,KAGR+Y,IAGT/R,KAAKwV,SAAW,SAAC5c,GACf,OAAG4a,IAAuBzB,GAE1BnZ,EAAMG,QAAQ,SAACpB,GACboa,EAAKqD,QAAQzd,KAGRoa,IAGT/R,KAAKyV,YAAc,SAAC5c,GAClB,OAAG2a,IAAuBzB,GAE1BlZ,EAAME,QAAQ,SAACC,GACb+Y,EAAKmD,WAAWlc,KAEX+Y,IAGT/R,KAAK0V,YAAc,SAAC9c,GAClB,OAAG4a,IAAuBzB,GAE1BnZ,EAAMG,QAAQ,SAACpB,GACboa,EAAKkD,WAAWtd,KAEXoa,IAGT/R,KAAK2V,YAAc,SAAC/c,GAClB,OAAG4a,IAAuBzB,GAE1BnZ,EAAMG,QAAQ,SAACpB,GACboa,EAAKsD,WAAW1d,KAGXoa,IAGT/R,KAAK4V,YAAc,SAAC/c,GAClB,OAAG2a,IAAuBzB,GAE1BlZ,EAAME,QAAQ,SAACC,GACb+Y,EAAKuD,WAAWtc,KAGX+Y,IAIT,IAAI8B,EAAU,SAACtd,EAAG0B,EAAGN,EAAGke,GACtB,IAAIja,EAASia,EAAK3b,KAAKuJ,KAAKlN,EAAE8M,MAAQ9M,EAAE+M,QAAU3L,EAAE,IAAMmb,EAAKlO,KAC/D,GAAI3M,EAAG,CACL,IAAIwJ,EAAMxJ,EAAE2M,KAAO3M,EAAE2M,KAAO3M,EAAEoa,QAC1B7Q,EAAMvJ,EAAE2M,KAAO3M,EAAE2M,KAAO3M,EAAEqa,QAG9B,IADA1W,EAAS4F,EAAMtH,KAAKuH,IAAID,EAAK5F,GAAUA,GAC3B3D,EAAE6d,SACZ,OAAO,EACTla,EAAS6F,EAAMvH,KAAKsH,IAAIC,EAAK7F,GAAUA,EAEzC,OAAOA,GAGLkY,EAAc,SAAAvd,GAAA,OAAKsd,EAAQtd,EAAGA,EAAE8I,MAAO8T,IAAe,KACtDzO,EAAe,SAACnO,EAAE0B,GAAH,OAAS4b,EAAQtd,EAAG0B,EAAGkb,IAAe,MAErDY,EAAmB,SAACxd,EAAE0B,GACxB,GAAGA,EAAE,CACD,IACIN,EAAIkb,EAAO+B,KAAK1B,gBAChB9b,EAFO,IAEE8C,KAAKuJ,KAAKlN,EAAE8M,MAAQ9M,EAAE+M,QAAW3L,EAAE,IAE5Coe,SACJ,GAAG9d,EAAE6d,SAID,OAHAC,EAAK3e,EAAIa,EAAE6d,SACR7d,EAAEqa,UACDyD,EAAK7b,KAAKuH,IAAIsU,EAAI3e,EAAIa,EAAEqa,UACrByD,EAIf,OAAO,GAGL/Q,EAAS,GAAMyC,EAAU6K,QAE7BtS,KAAKoQ,KAAO,SAAC4F,GACX,KAAGA,IAAW7D,GAAYC,KACvBoB,IAAH,CAEA,IAAInQ,EAAQoM,EAAOpM,MACfC,EAASmM,EAAOnM,OAChBoP,EAASrP,EAAQC,EACjB3M,EAAkB,IAAdmc,EAAKlO,KAAaI,EAAS,EAC/BiR,EAAKtf,EAAI0M,EACT6S,EAAKvf,EAAI2M,EAEbX,EAAQwT,UAAYC,UAAYC,MAAMvD,EAAK3S,EAAI8V,EAAInD,EAAK3S,EAAI2S,EAAKlO,KAAOqR,EAAInD,EAAK1S,EAAI8V,EAAIpD,EAAK1S,EAAI0S,EAAKlO,KAAOsR,GAAK,EAAG,GACtHvT,EAAQ2T,QAAYL,EACpBtT,EAAQ4T,QAAYL,EACpBvT,EAAQU,MAAY,GAAMA,EAC1BV,EAAQW,OAAY,GAAMA,EAC1BX,EAAQQ,QAAYuP,EAASA,EAC7B/P,EAAQ+P,OAAYA,EACpB/P,EAAQ6T,MAAYrD,IAGjBxQ,EAAQtD,cAAcsD,EAAQtD,MACjCsD,EAAQe,SAAWmQ,EAAQlR,OAASrD,EAAW+T,IAAe,IAC9D1Q,EAAQtD,MAAYoI,EACpB9E,EAAQiB,SAAWkQ,EAAYnR,GAE/BlH,GAAMA,EAAGgb,SAAS,EAAG,EAAGpT,EAAOC,GAE/B7H,GAAMA,EAAG2O,MAAM3O,EAAGib,kBAElB,IAAMC,EAAYC,KAAKC,MAEjBC,EAAW,WACb,IAAI,IAAI5gB,EAAI,EAAGA,EAAI2c,EAAO+B,KAAKmC,MAAMC,SAASle,OAAQ5C,IAClD2c,EAAO+B,KAAKmC,MAAMC,SAAS9gB,GAAGka,KAAKzN,GACnCkQ,EAAOc,MAAQd,EAAOc,KAAKoD,MAAMC,SAAS9gB,GAAGka,KAAKzN,IAStD4P,EAAU0E,aAAyC,SAA1B1E,EAAU0E,YANtB,SAAXC,IACFvU,EAAQwU,YAAcP,KAAKC,MAAQF,GAAa,IAChDG,IACAM,sBAAsBF,GAItBA,GAEAJ,MAGN/D,EAAW/S,KAAKoQ,KAAK1Y,KAAKsI,MAE1BA,KAAKqX,gBAAkB,SAASC,GAC9B,IAAG9D,IAAH,CACA,IAAI3K,KACA0O,EAAO9H,EAAOa,wBAGlB,YAFchR,IAAXgY,EAAKnX,IAAiB0I,EAAI1I,GAAKmX,EAAKnX,EAAI2S,EAAK3S,EAAIwC,EAAQ2T,UAAYxD,EAAKlO,KAAO,EAAEjC,EAAQ2T,SAAW7G,EAAOpM,MAAQkU,EAAKjZ,WAC/GgB,IAAXgY,EAAKlX,IAAiByI,EAAIzI,GAAM,GAAMkX,EAAKlX,EAAI0S,EAAK1S,EAAIuC,EAAQ4T,UAAYzD,EAAKlO,KAAO,EAAEjC,EAAQ4T,UAAc9G,EAAOnM,OAASiU,EAAK9Y,KACjIoK,IAGT7I,KAAK0Q,eAAiB,SAAS4G,GAC7B,IAAG9D,IAAH,CAEA,IAAI3K,KAmBJ,IAjBC,IAAI,KAAK,MAAM9P,QAAQ,SAAA0B,GACtB,QAAe6E,IAAZgY,EAAK7c,GAAiB,CACvB,IAAI0F,EAAImX,EAAK7c,GACb0F,EAAKA,EAAEsP,EAAOpM,OAAQyP,EAAKlO,KAAK,EAAEjC,EAAQ2T,SAAS3T,EAAQ2T,QAAQxD,EAAK3S,EACxE0I,EAAIpO,GAAK0F,MAKZ,IAAI,KAAK,MAAMpH,QAAQ,SAAA0B,GACtB,QAAe6E,IAAZgY,EAAK7c,GAAiB,CACvB,IAAI2F,EAAIkX,EAAK7c,GACb2F,GAAK,EAAEA,EAAEqP,EAAOnM,SAASwP,EAAKlO,KAAK,EAAEjC,EAAQ4T,SAAS5T,EAAQ4T,QAAQzD,EAAK1S,EAC3EyI,EAAIpO,GAAK2F,UAIMd,IAAhBgY,EAAKhO,OAAqB,CAC3B,IAAIN,EAAOsO,EAAKhO,OAEZkO,EAAQxO,EAAOyG,EAAOnM,OACtBmU,EAAQzO,EAAOyG,EAAOpM,MAC1B2F,EAAO9O,KAAKsH,IAAIgW,EAAOC,GAAS3E,EAAKlO,KAErCiE,EAAIS,OAASN,EAGf,OAAOH,IAGT,IAAI6O,EAAY,SAASC,EAAUC,GACjC,IAAGpE,KAAmB/X,EAAtB,CAEA,IAAIoc,EAAKhF,EAAO+B,KAAK+C,GAAUtK,MAAMwF,EAAO+B,KAAMgD,GAElD,IAAI/E,EAAOc,KACT,OAAOkE,EAET,IAAIC,EAAKjF,EAAOc,KAAKgE,GAAUtK,MAAMwF,EAAOc,KAAMiE,GAE9C5gB,KACJ,IAAI,IAAIS,KAAOogB,EACb7gB,EAAES,GAAOoa,EAAYgG,EAAGpgB,GAAMqgB,EAAGrgB,GAAM,SAACkP,EAAIC,GAC1C,OAAOD,EAAGE,MAAQD,EAAGC,QAIzB,OAAO7P,IAGTgJ,KAAK2Q,KAAO,WAAW,OAAO+G,EAAU,OAAQld,YAChDwF,KAAK+X,SAAW,WAAW,OAAOL,EAAU,WAAYld,YAExDwF,KAAKgY,gBAAkB,SAACrgB,GACtB,IAAG6b,KAAmB/X,EAAtB,CAEA,IAAMuJ,EAAS,GAAMrC,EAAQiB,SACvBsB,GAAW,GAAOvN,EAAEyI,GAAM,GAAM,EAAI,GAAK,GAAO4E,EAElDzN,GAAK,EAAAgL,EAAA7C,mBAAkBjD,EAAQyL,OAAOvQ,EAAE0H,OAAOoI,EAAU,SACzDU,EAAaf,EAAMgB,UAAU7Q,EAAG8Q,MACpCF,EAAWG,QAAQ/Q,EAAG8Q,MAEtB,IAAIxD,EAAesD,EAAW1D,MAAQC,EAAa/B,EAASpL,EAAGuN,WAAeqD,EAAW3D,SACrFO,EAAYF,EAAasD,EAAW3D,SAExC,OAFoE,IAAfK,IAAmBE,EAAY,IAE5EwR,QAASrR,EAASH,UAAWA,EAAWkT,MAAO9P,EAAWpR,IAAIY,EAAEmN,MAAOnN,EAAEwI,EAAGxI,EAAEyI,MAKxF,IAgBI8X,EAhBAC,EAAU,SAAC9e,EAAI+e,GACjB,IAAI,IAAI3d,KAAM2d,MACZA,EAAK3d,IAAMpB,EAAG4W,iBAAiBxV,EAAG2d,EAAK3d,IAAK4d,QAAS5b,EAAQ6b,eAI7DC,EAAa,SAAClf,EAAI+e,GACpB,IAAI,IAAI3d,KAAM2d,MACZA,EAAK3d,IAAMpB,EAAG2X,oBAAoBvW,EAAG2d,EAAK3d,KAI1C+d,GAwHJ,SAAqBC,GAAO,IAAAC,EAAA1Y,KAC1B,GAAmB,IAAhByY,EAAME,MAAa,OAEtB,IAAIC,EAAiB,SAAC5f,GACpB,IAAIA,EAAE6f,QAAS,OAAO7f,EAGtB,IADA,IAAImH,EAAI,EAAEC,EAAI,EACNlK,EAAI,EAAGA,EAAI8C,EAAE6f,QAAQ/f,OAAQ5C,IAAMiK,GAAKnH,EAAE6f,QAAQ3iB,GAAGqa,QAASnQ,GAAKpH,EAAE6f,QAAQ3iB,GAAGsa,QAIxF,OAHAxX,EAAEuX,QAAUpQ,EAAInH,EAAE6f,QAAQ/f,OAC1BE,EAAEwX,QAAUpQ,EAAIpH,EAAE6f,QAAQ/f,OAEnBE,GAITyf,EAAQG,EAAeH,GAGvB,IAAIpV,EAAQoM,EAAOpM,MAAQyP,EAAKlO,KAC5BtB,EAASmM,EAAOnM,OAASwP,EAAKlO,KAC9BkU,EAAKL,EAAMlI,QACXwI,EAAKN,EAAMjI,QACXpL,EAAK0N,EAAK3S,EAAI2Y,EAAKzV,EACnBgC,EAAK0T,EAAKzV,EAASwP,EAAK1S,EACxB4Y,EAAKvc,EAAQwc,OACbC,SAASC,SACTC,GAAU,EACVC,GAAU,EACVjB,SAEAkB,SACJ,GAAoC,KAAhCb,EAAMI,aAAe/f,OAAa,CACpC,IAAIygB,EAAKd,EAAMI,QAAQ,GAAGtI,QAAUkI,EAAMI,QAAQ,GAAGtI,QAASiJ,EAAKf,EAAMI,QAAQ,GAAGrI,QAAUiI,EAAMI,QAAQ,GAAGrI,QAC/G8I,EAAWpf,KAAKuJ,KAAM8V,EAAKA,EAAKC,EAAKA,GACrCH,GAAU,EAIZ,IAAII,EAAO,SAAAzgB,GAKT,IAJAA,EAAI4f,EAAe5f,IAEd6f,SAA+B,GAApB7f,EAAE6f,QAAQ/f,SAAcsgB,GAAU,GAE9CF,EACGE,IACKD,EACAH,EAAGS,MAAQT,EAAGS,KAAKzgB,IAGnB8Z,EAAK3S,EAAIjG,KAAKsH,IAAI,EAAGtH,KAAKuH,IAAI,EAAIqR,EAAKlO,KAAMQ,EAAKpM,EAAEuX,QAAUlN,IAC9DyP,EAAK1S,EAAIlG,KAAKsH,IAAI,EAAGtH,KAAKuH,IAAI,EAAIqR,EAAKlO,KAAM5L,EAAEwX,QAAUlN,EAAS+B,IAClEqU,KACAhB,EAAKtI,aAIZ,CACD,IAAIjQ,SAAEC,SACHpH,EAAE6f,SAAW7f,EAAE6f,QAAQ/f,OAAS,GAAIqH,EAAInH,EAAE6f,QAAQ,GAAGtI,QAASnQ,EAAIpH,EAAE6f,QAAQ,GAAGrI,UAAkBrQ,EAAInH,EAAEuX,QAASnQ,EAAIpH,EAAEwX,SAEzH,IAAI+I,EAAKpZ,EAAI2Y,EACTU,EAAKpZ,EAAI2Y,EAETQ,EAAKA,EAAKC,EAAKA,EAAK,IACpBN,GAAU,GACVC,EAASH,GAAMA,EAAG5e,MAAMqe,KACdO,EAAGS,MAAQT,EAAGS,KAAKzgB,IAGjCyD,EAAQ6b,aAActf,EAAEqX,kBAG1BsJ,EAAK,SAAA3gB,GACLA,EAAI4f,EAAe5f,GAEnBmgB,GAAUH,EAAGY,MAAQZ,EAAGY,KAAK5gB,GAEzBkgB,IACFzc,EAAQmT,SAAWnT,EAAQmT,QAAQ5W,IAE/B,IAAI4d,MAAOiD,UAAYC,GAAa,KACtCrd,EAAQsd,YAActd,EAAQsd,WAAW/gB,GACzC8gB,GAAa,GAEbA,IAAa,IAAIlD,MAAOiD,WAI5BtB,EAAWpH,OAAQiH,IAGnB4B,EAAO,SAAAhhB,GAGP,IAFAA,EAAI4f,EAAe5f,IAEd6f,SAA+B,GAApB7f,EAAE6f,QAAQ/f,OAAY,CAClC,IAAIygB,EAAKvgB,EAAE6f,QAAQ,GAAGtI,QAAUvX,EAAE6f,QAAQ,GAAGtI,QAASiJ,EAAKxgB,EAAE6f,QAAQ,GAAGrI,QAAUxX,EAAE6f,QAAQ,GAAGrI,QAC3FxH,EAAO9O,KAAKuJ,KAAK8V,EAAKA,EAAKC,EAAKA,GACpCxgB,EAAEihB,OAA4B,IAAjBjR,EAAOsQ,GACpBY,GAAYlhB,GACZsgB,EAAWtQ,IAInBmP,EAAQhH,OAAQiH,GACd+B,QAAWR,EACXS,SAAYT,EACZU,YAAeV,EACfW,UAAajB,EAAUW,EAAOP,EAC9Bc,UAAalB,EAAUW,EAAOP,KApOL/hB,KAAKsI,MAE5Bka,GAkDN,SAASM,EAAQxhB,GACb,IAAIue,EAAO9H,EAAOa,wBAEd7T,EAAQ6b,aAActf,EAAEqX,iBAE5B,IAAaoK,SAAMC,SAGnB,IAAMC,EAAS3hB,EAAEuX,QAAUgH,EAAKjZ,KAChC,IAAMsc,EAAS5hB,EAAEwX,QAAU+G,EAAK9Y,IAKhC,IAAI+b,EAAQK,cAAe,CACvBL,EAAQM,WAAalW,KAAMkO,EAAKlO,KAAMzE,EAAG2S,EAAK3S,EAAGC,EAAG0S,EAAK1S,GAEzD,IAAMqQ,EAAUzQ,KAAK0Q,gBAAiB1M,GAAI2W,EAP/B,GAOgD1W,GAAI2W,EAPpD,GAOqE1W,GAAIyW,EAPzE,GAO0FxW,GAAIyW,EAP9F,KAQLG,EAAc/a,KAAK+X,SAAStH,EAAQzM,GAAIyM,EAAQxM,GAAIwM,EAAQvM,GAAIuM,EAAQtM,IAAI,GAElF,GAAI4W,EAAYniB,MAAME,OAAQ,CAC1B,IAAIiQ,EAAOgS,EAAYniB,MAAM,GACzBoiB,EAAQhb,KAAKqX,iBACblX,EAAG4I,EAAKA,KAAK5I,EACbC,EAAG2I,EAAKA,KAAK3I,IAEjBoa,EAAQS,OAASD,EAAM7a,EACvBqa,EAAQU,OAASF,EAAM5a,OAIvBoa,EAAQS,OAASN,EACjBH,EAAQU,OAASN,EAErBJ,EAAQW,KAAOrI,EAAK3S,EACpBqa,EAAQY,KAAOtI,EAAK1S,EACpBoa,EAAQa,QAAUvI,EAAKlO,KAEpB4V,EAAQK,eACPS,aAAad,EAAQK,eAEzBJ,EAAO3H,EAAK3S,EACZua,EAAO5H,EAAK1S,EAEhBoa,EAAQK,cAAgBU,WAAW,WACjCf,EAAQK,mBAAgBvb,GACvB,KAEH,IAAIsF,EAAO1K,KAAKuH,IAAI,EAAKqR,EAAKlO,MAAQ,EAAI,MAAS5L,EAAEwiB,UAAY,GAAK,GAAKxiB,EAAEihB,SAC7E,IAAIwB,EAAQ7W,EAAO4V,EAAQa,QAE3BvI,EAAKlO,KAAOA,EACZkO,EAAK3S,EAAIjG,KAAKsH,IAAI,EAAGtH,KAAKuH,IAAI,EAAImD,EAAM4V,EAAQW,KAAOM,EAAQjB,EAAQS,OAASxL,EAAOpM,QACvFyP,EAAK1S,EAAIlG,KAAKsH,IAAI,EAAGtH,KAAKuH,IAAI,EAAImD,EAAM4V,EAAQY,KAAOK,GAAS,EAAIjB,EAAQU,OAASzL,EAAOnM,UAE5F,GAAG7G,EAAQif,SAAmC,IAAzBjf,EAAQif,OAAO5I,GAIlC,OAHAA,EAAKlO,UAnDH+C,EAoDFmL,EAAK3S,EAAIsa,OACT3H,EAAK1S,EAAIsa,GAIXhB,KAEA1Z,KAAKoQ,QAlHmB1Y,KAAKsI,MAGjCmY,EAAQ1I,EAAQyI,GACdyD,UAAanD,GACboD,WAAcpD,GACdqD,MAAS3B,GACT4B,YAAerf,EAAQkT,gBAGzB3P,KAAK0J,OAAS,WACZ,IAAG8J,IAAH,CAEA,IAAI,IAAI/Y,KAAKoY,EAAQA,EAAOpY,GAAGiP,SAE/B,GAAGjO,EAAG,CACJA,EAAGgb,SAAS,EAAG,EAAiB,EAAd9T,EAAQU,MAAwB,EAAfV,EAAQW,QAC3C7H,EAAG2O,MAAM3O,EAAGib,kBAEZ,IAAIqF,EAAUtgB,EAAGK,aAAa,sBAC9BigB,GAAWA,EAAQC,cAGrBzD,EAAW9I,EAAQyI,GAEnBvF,EAAOsJ,UACP7U,GAASA,EAAMsC,SAEfyI,GAAU,IAGZ,IAAI+J,MACJ,SAASxC,KACP,IAAIyC,GAAY,EAChB,GAAGD,GACD,IAAI,IAAIzhB,KAAKqY,EACRoJ,GAAUzhB,KAAOqY,EAAKrY,KACvB0hB,GAAY,GAGlBC,UAAe1R,OAAOwR,GAAWpJ,GAE9BqJ,GACD1f,EAAQ4f,kBAAoB5f,EAAQ4f,iBAAiBvJ,GA0EzD,IAAIgH,GAAa,EAkHjB9Z,KAAKrD,MAAQ,WACX,IAAG6W,IAEH,OAAO/D,EAAO6M,aAGhBtc,KAAKuc,OAAS,WACT/I,MAEH/D,EAAOpM,MAAQoM,EAAO+M,YACtB/M,EAAOnM,OAASmM,EAAOgN,eAGzBzc,KAAK0c,YAAc,WACjB,OAAO5J,GAGT9S,KAAK2c,YAAc,SAAS5b,GACvByS,MAEH4I,UAAe1R,OAAOoI,EAAM/R,GAE5B2Y,OAGF1Z,KAAK4c,UAAY,kBAAM7K,EAAK4K,aAAa/X,KAAK,EAAEzE,EAAE,EAAEC,EAAE,MAGrD,UAAUrH,QAAQ,SAASmY,IAC1B,SAAUA,EAAQD,GAChBA,EAAKC,GAAU,WACb,IAAI0G,EAAOpd,UACX,IAAI,IAAIC,KAAKoY,EAAO,CAClB,IAAI1c,EAAI0c,EAAOpY,GACftE,EAAE+a,GAAQ7D,MAAMlX,EAAEyhB,GAEpB,OAAO3G,GAPX,CASGC,EAAQD,MAGVxV,EAAK8V,EAAW9B,MACjBhU,EAAGohB,WAAW3K,EAAgBlb,EAAGkb,EAAgB7T,EAAG6T,EAAgB1Y,EAAG0Y,EAAgB3Y,GACvFkC,EAAGqhB,cAAcrhB,EAAGshB,UACpBthB,EAAGuhB,kBAAkBvhB,EAAGwhB,UAAWxhB,EAAGyhB,oBAAqBzhB,EAAG0hB,IAAK1hB,EAAG0hB,KACtE1hB,EAAG2hB,OAAO3hB,EAAG4hB,QAGfvK,GAAQlO,KAAK,EAAEzE,EAAE,EAAEC,EAAE,GAErBJ,KAAKuc,SAELvJ,EAAW,IAAIsK,UAAkB3K,EAAQnW,GACzCyW,EAAQ,IAAIsK,UAAe5K,EAAQnW,GACnC4K,EAAQ3L,GAAO,IAAI+hB,UAAe/hB,EAAIwX,EAAOD,GAC7CH,EAAO+B,KAAO,IAAIhB,UAAenE,EAAQ9M,EAASmQ,EAAMrX,EAAIuX,EAAUC,EAAO7L,EAAOuL,EAAQlW,EAASyV,EAAiBzK,EAAW8K,EAAWsB,EAASC,EAAapP,EAAcqP,EAAkBZ,EAAaE,EAAaC,EAAU9W,GAElOf,GACFW,QAAQqhB,KAAK,oCAGjB3N,EAAS4N,iBAAmB,mBAAQnM,EAAWH,IAE/CtB,EAAS3R,MAAQ2B,UACjBgQ,EAAS6N,cAAgBC,UACzB9N,EAASc,OAASiN,UAClB/N,EAAS3R,MAAQ2B,UAEjBqR,OAAOrB,SAAWA,YACHA,2FCtuBA,SAASL,EAAQ9M,EAASmQ,EAAMrX,EAAIuX,EAAUC,EAAO7L,EAAOuL,EAAQlW,EAASyV,EAAiBzK,EAAW8K,EAAWsB,EAASC,EAAapP,EAAcqP,EAAkBZ,EAAaE,EAAaC,EAAU9W,GAAQ,IAAAuV,EAAA/R,KACjOmT,EAAcA,GAAgB,WAAK,OAAOpB,EAAKnZ,MAAME,QACrDua,EAAcA,GAAgB,WAAK,OAAOtB,EAAKlZ,MAAMC,QAErDkH,KAAK8d,OAASxK,GAAa,cAE3B7W,EAAUA,OACFyL,OAASzL,EAAQyL,WAGzBlI,KAAK+d,mBAAsBxL,EAAU0E,aAAyC,SAA1B1E,EAAU0E,YAE9D,IAAI+G,EACF,SAAA3e,GAAA,OACE8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACZ,IAAI/d,EAAInH,EAAEmH,EACNC,EAAIpH,EAAEoH,EAGV,GAFA+d,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAI9d,EAAGC,EAAGD,EAAGC,EAAGD,EAAGC,EAAGD,EAAGC,GACjE+d,UAAmBC,SAASrd,EAAEud,aAAcL,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClEld,EAAE5C,MAAM,CACT,IAAI5H,EAAIyC,EAAEmF,MACVggB,UAAmBI,OAAOxd,EAAE5C,MAAO8f,EAAI1nB,EAAGA,EAAGA,EAAGA,GAElD4nB,UAAmBK,KAAKzd,EAAE0d,QAASR,EAAIC,MAG3CQ,EAAgB,SAAArf,GAChB,OAAQ,SAASA,GACf,IAAI8I,EAAaf,EAAMgB,UAAU/I,EAAMgJ,MAIvC,OAFAF,EAAWG,QAAQjJ,EAAMgJ,OAGrB8H,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GAMd,IALA,IAAI/d,EAAInH,EAAEmH,EACNC,EAAIpH,EAAEoH,EAENyI,GAAM,EACN3J,EAAQiJ,EAAWpR,IAAIiC,EAAE8L,OAAS,GAAI3E,EAAGC,EAAG,WAAOyI,GAAM,IACrD3S,EAAI,EAAGA,EAAIgJ,EAAMpG,OAAQ5C,IAAK+nB,GAAM,EAAGC,GAAM,EAAE,CACrD,IAAI3nB,EAAI2I,EAAMhJ,GAEdioB,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAI9d,EAAGC,EAAGD,EAAGC,EAAGD,EAAGC,EAAGD,EAAGC,GACjE+d,UAAmBC,SAASrd,EAAE4d,SAAUV,EAAI1nB,EAAE6O,GAAI7O,EAAE8O,GAAI9O,EAAE8M,MAAQ9M,EAAE6O,GAAI7O,EAAE8O,GAAI9O,EAAE8M,MAAQ9M,EAAE6O,GAAI7O,EAAE+M,OAAS/M,EAAE8O,GAAI9O,EAAE6O,GAAI7O,EAAE+M,OAAS/M,EAAE8O,IAClI8Y,UAAmBC,SAASrd,EAAEud,aAAcL,EAAI1nB,EAAE+H,KAAM/H,EAAEiI,OAAQjI,EAAEgI,MAAOhI,EAAEiI,OAAQjI,EAAEgI,MAAOhI,EAAEkI,IAAKlI,EAAE+H,KAAM/H,EAAEkI,KAC/G0f,UAAmBK,KAAKzd,EAAE0d,QAASR,EAAIC,GAGzC,OAAOrV,GAETjE,KAAM,SAAC7D,EAAE/H,GACP,OAAOmP,EAAWyW,MAAM5lB,EAAE8L,OAAS,MAxBnC,CA2BLzF,IAGH6G,EAAY,SAAC3M,EAAGC,GAChB,IAAI2G,EAAI3G,EAAE2G,EAAI5G,EAAE4G,EACZC,EAAI5G,EAAE4G,EAAI7G,EAAE6G,EACZyV,EAAK,EAAI3b,KAAKuJ,KAAKtD,EAAEA,EAAIC,EAAEA,GAC/B,OAASD,EAAG0V,EAAK1V,EAAGC,EAAGyV,EAAKzV,IAG5BgF,EAAKlL,KAAK2kB,IAAI,IACdxZ,EAAKnL,KAAK4kB,IAAI,IAEdC,KAAUC,KAAUvc,KACpBwc,EAAuB,SAACle,EAAEkd,EAAGhmB,EAAEb,GAC/B,IAAI8nB,EAAIC,EAAIlc,EAAIC,EAAIkc,EAAKC,EAAUtc,EAAKC,EACxCH,UAAmBC,cAAc1L,EAAE4B,EAAE+lB,GACrC9b,EAAM8b,EAAI5e,EACV+C,EAAM6b,EAAI3e,EACV2C,EAAOgc,EAAIxe,GACXyC,EAAO+b,EAAIve,GAEXqC,UAAmBC,cAAc7K,EAAEe,EAAEgmB,GACrCE,EAAMF,EAAI7e,EACVgf,EAAMH,EAAI5e,EACVgf,EAAOJ,EAAIze,GACX8e,EAAOL,EAAIxe,GAEXO,EAAEue,YAAcnB,UAAmBC,SAASrd,EAAEue,WAAYrB,GAAKkB,EAAKD,GAAMC,EAAKD,GAAMhc,EAAKD,GAAMC,EAAKD,GACrGlC,EAAEwe,aAAepB,UAAmBC,SAASrd,EAAEwe,YAAatB,GAAKoB,EAAMD,GAAOC,EAAMD,GAAOpc,EAAMD,GAAOC,EAAMD,IAG9Gyc,GACFzY,MAAU,SAAA1H,GAAA,OACJ8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACZ,IAAIjmB,EAAI4K,UAAmB5C,WAAWjH,GAClC5B,EAAIyL,UAAmB3C,WAAWlH,GAClCoM,EAAKnN,EAAEkI,EAAE/I,EAAE+I,EACXkF,EAAKpN,EAAEmI,EAAEhJ,EAAEgJ,EACX5J,EAAI0P,EAAUjO,EAAGb,GAErB6nB,EAAqBle,EAAEkd,EAAGhmB,EAAEb,GAE5B+mB,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAIhmB,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,EAAGhJ,EAAE+I,EAAG/I,EAAEgJ,EAAGhJ,EAAE+I,EAAG/I,EAAEgJ,GACjF+d,UAAmBC,SAASrd,EAAE0e,YAAaxB,EAAI,EAAG,EAAE,EAAE,EAAE7Y,EAAIC,EAAID,EAAIC,GACpE8Y,UAAmBC,SAASrd,EAAE2e,OAAQzB,GAAKznB,EAAE4J,EAAG5J,EAAE2J,EAAG3J,EAAE4J,GAAI5J,EAAE2J,EAAG3J,EAAE4J,GAAI5J,EAAE2J,GAAI3J,EAAE4J,EAAG5J,EAAE2J,GAE/E4R,EAAKgM,mBAELI,UAAmBC,SAASrd,EAAE4e,SAAU1B,EAAIhmB,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,GACjF+d,UAAmBC,SAASrd,EAAE6e,OAAQ3B,EAAI7mB,EAAE+I,EAAG/I,EAAEgJ,EAAGhJ,EAAE+I,EAAG/I,EAAEgJ,EAAGhJ,EAAE+I,EAAG/I,EAAEgJ,EAAGhJ,EAAE+I,EAAG/I,EAAEgJ,IAGnF+d,UAAmBK,KAAKzd,EAAE0d,QAASR,EAAIC,MAEhDjX,OAAW,SAAA5H,GAAA,OACEwgB,YAAa,EACbC,WAAY,EACZ3P,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACZ,IAAIjmB,EAAI4K,UAAmB5C,WAAWjH,GAClC5B,EAAIyL,UAAmB3C,WAAWlH,GAClCoM,EAAKnN,EAAEkI,EAAE/I,EAAE+I,EACXkF,EAAKpN,EAAEmI,EAAEhJ,EAAEgJ,EACX5J,EAAI0P,EAAUjO,EAAGb,GAErB6nB,EAAqBle,EAAEkd,EAAGhmB,EAAEb,GAE5B+mB,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAIhmB,EAAEkI,EAAGlI,EAAEmI,EAAG,IAAOhJ,EAAE+I,EAAIlI,EAAEkI,GAAI,IAAO/I,EAAEgJ,EAAInI,EAAEmI,GAAIhJ,EAAE+I,EAAG/I,EAAEgJ,GACnG+d,UAAmBC,SAASrd,EAAE0e,YAAaxB,EAAI,EAAG,EAAE7Y,EAAG,EAAGC,EAAG,EAAGD,EAAIC,GACpE8Y,UAAmBC,SAASrd,EAAE2e,OAAQzB,EAAI,EAAG,EAAGznB,EAAE4J,GAAI5J,EAAE2J,EAAG,EAAG,GAC9Dge,UAAmBC,SAASrd,EAAEgf,MAAO9B,EAAI,EAAG,EAAG,GAAK,EAAK,EAAG,GAC5DE,UAAmBM,QAAQ1d,EAAE0d,QAASR,EAAIC,EAAI,EAAG,EAAG,MAGrElX,QAAY,SAAA3H,GAAA,OACC8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACZ,IAAIjmB,EAAI4K,UAAmB5C,WAAWjH,GAClCxC,EAAIyB,EAAEmI,EAAI,GAAM,GAAK,EAKrB4f,EAASxpB,EAETypB,EAAS,KAAKzpB,EAEd0pB,EAAS,IAAI1pB,EAEjByoB,EAAqBle,EAAEkd,EAAGhmB,EAAEA,GAE5BkmB,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAIhmB,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,EAAGnI,EAAEkI,EAAGlI,EAAEmI,GACjF+d,UAAmBC,SAASrd,EAAE0e,YAAaxB,EAZ9B,EACA,EACA,EAU0D+B,EAR1D,EAQ0EC,EAN1E,EAM0FC,GACvG/B,UAAmBC,SAASrd,EAAE2e,OAAQzB,EAAI,EAAG,EAAG,EAAGznB,EAAG,EAAG,KAAOA,GAAI,EAAGA,GACvE2nB,UAAmBC,SAASrd,EAAEgf,MAAO9B,EAAI,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAClEE,UAAmBK,KAAKzd,EAAE0d,QAASR,EAAIC,OAKvD/N,EAAM,SAACpP,EAAG/H,EAAGf,EAAGb,EAAG6mB,EAAIC,EAAI9Y,EAAIC,GAC/B,IAIIpC,EAAIC,EAAIH,EAAKC,EAJbmd,EAAK/oB,EAAE+I,EACPigB,EAAKhpB,EAAEgJ,EAEPigB,SAGJxd,UAAmBC,cAAc1L,EAAE4B,EAAEyJ,GACrCQ,EAAMR,EAAGtC,EACT+C,EAAMT,EAAGrC,EACT2C,EAAON,EAAGlC,GACVyC,EAAOP,EAAGjC,GAIR6f,EAFCjpB,EAAEkJ,QAES,EAEA,EAEdS,EAAEue,YAAcnB,UAAmBC,SAASrd,EAAEue,WAAYrB,GAAK/a,EAAKD,GAAMC,EAAKD,GAAMC,EAAKD,GAAMC,EAAKD,GACrGlC,EAAEwe,aAAepB,UAAmBC,SAASrd,EAAEwe,YAAatB,GAAKjb,EAAMD,GAAOC,EAAMD,GAAOC,EAAMD,GAAOC,EAAMD,GAE9Gob,UAAmBmC,QAAQvf,EAAEsf,UAAWpC,EAAIoC,EAAWA,EAAWA,EAAWA,GAC7ElC,UAAmBC,SAASrd,EAAEsd,SAAUJ,EAAIkC,EAAIC,EAAID,EAAIC,EAAID,EAAIC,EAAID,EAAIC,GACxEjC,UAAmBC,SAASrd,EAAEwf,UAAWtC,EAAI7Y,EAAIC,EAAID,EAAIC,EAAID,EAAIC,EAAID,EAAIC,GACzE8Y,UAAmBC,SAASrd,EAAEud,aAAcL,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrEE,UAAmBK,KAAKzd,EAAE0d,QAASR,EAAIC,IAGvCsC,GACFC,WAAa,SAAAphB,GAAA,OACH8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACZ,IAAIjmB,EAAI4K,UAAmB5C,WAAWjH,GAClC5B,EAAIyL,UAAmB3C,WAAWlH,GAClCxC,EAAI0P,EAAUjO,EAAGb,GACrB+Y,EAAIpP,EAAG/H,EAAGf,EAAGb,EAAG6mB,EAAIC,EAAI1nB,EAAE2J,EAAG3J,EAAE4J,MAE5CsgB,YAAc,SAAArhB,GAAA,OACG8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACd,IAAIjmB,EAAI4K,UAAmB5C,WAAWjH,GAClC5B,EAAIyL,UAAmB3C,WAAWlH,GACtC,OAAOmX,EAAIpP,EAAG/H,EAAGf,EAAGb,EAAG6mB,EAAIC,EAAI,IAAO9mB,EAAE+I,EAAIlI,EAAEkI,GAAI,IAAO/I,EAAEgJ,EAAInI,EAAEmI,OAGpFugB,aAAe,SAAAthB,GAAA,OACE8Q,IAAK,SAACpP,EAAG/H,EAAGilB,EAAIC,GACd,IAAI9mB,EAAIyL,UAAmB3C,WAAWlH,GAEtC,OAAOmX,EAAIpP,EAAG/H,EAAGf,EAAGb,EAAG6mB,EAAIC,EAAI9mB,EAAE+I,EAAI,GAAMiF,GAAMA,EAAIhO,EAAEgJ,EAAI,IAAOiF,EAAKA,OAK7FrF,KAAK4gB,wBAA0B,SAACje,GAI9B,YAHqBrD,IAAlBqe,IACDA,EAAgB,IAAIC,UAAuBjb,EAASyE,EAAO3K,0BAAyCyJ,EAAWuB,EAAW/C,EAAcqP,IAEnI4J,GAGT3d,KAAK0J,OAAS,aAGd,IAAImX,SACAC,SAEAnD,OAAgBre,EAepBU,KAAKmQ,IAAM,SAASvX,EAAOC,EAAO+X,EAAQuD,GACtC4M,EAAe,EACfC,EAAe,EAEfhhB,KAAKpH,MAAQA,EAAQA,MACrBoH,KAAKnH,MAAQA,EAAQA,KAAWR,OAAOQ,MAEvC8kB,OAAgBre,EAKhB,IAHA,IAAIyH,KAAYE,KAAaD,KAGpB9Q,EAAI,EAAGA,EAAI2C,EAAMC,OAAQ5C,IAAK,CACrC,IAAI8C,EAAIH,EAAM3C,GACQ,iBAAZ8C,EAAEC,SACVD,EAAEC,OAASL,EAAMI,EAAEC,SAEC,iBAAZD,EAAEG,SACVH,EAAEG,OAASP,EAAMI,EAAEG,SAIvB,IAAI8nB,EAAW,SAACjoB,GACZ,OAAOA,EAAEqH,SAAWrH,EAAEE,QAAUF,EAAEkoB,OAG3B,WACP,IAAK,IAAIhrB,EAAI,EAAGA,EAAI0C,EAAME,OAAQ5C,IAC9B0C,EAAM1C,GAAGgD,MAAQhD,EAGrB,IAAK,IAAIA,EAAI,EAAEyV,EAAE/S,EAAME,OAAS,GAAI5C,EAAI2C,EAAMC,OAAQ5C,IAAKyV,IACvD9S,EAAM3C,GAAGgrB,KAAOvV,EAGpBkV,KACAC,EAAY,IAAIK,YAAYtoB,EAAMC,QAClC,IAAMsoB,GAAY3mB,EAAI,IAAU4mB,OAAQ,IAAK7qB,MACvC8qB,GAAY7mB,EAAG,UAAW4mB,OAAQ,eAAgB7qB,EAAGwQ,GACrDua,GAAY9mB,EAAG,QAAW4mB,OAAQ,aAAa7qB,EAAGuQ,GAClDya,GAAY/mB,EAAG,SAAW4mB,OAAQ,cAAc7qB,EAAGyQ,GAEzD,GAAIvL,EAAW+lB,yBAA0B,CAErC,IADA,IAAIhpB,KACKvC,EAAI,EAAGA,EAAI2C,EAAMC,OAAQ5C,IAAK,CACnC,IAAI8C,EAAIH,EAAM3C,GAERwrB,EAAKT,EAASjoB,EAAEC,QAChB0oB,EAAKV,EAASjoB,EAAEG,SAErBV,EAAIipB,KAAQjpB,EAAIipB,QAAWC,IAAM,EAMtC,IAFA,IAAMC,EAAqD,YAA1BnlB,EAAQolB,cAEhC3rB,EAAI,EAAGA,EAAI2C,EAAMC,OAAQ5C,IAAK,CACnC,IAAIiD,SAAQH,EAAIH,EAAM3C,GAEhBwrB,EAAKT,EAASjoB,EAAEC,QAChB0oB,EAAKV,EAASjoB,EAAEG,QAElB/B,EAAIgqB,EACR,GAAIM,IAAOC,EACP3oB,EAAE5B,EAAI,EACN+B,EAAS6N,EACT5P,EAAIkqB,MACF,CACF,IAAIhrB,EAAImC,EAAIkpB,GACTrrB,GAAKA,EAAEorB,IAAOE,GACf5oB,EAAE5B,EAAI,EACN+B,EAAS8N,EACT7P,EAAIoqB,IAEJxoB,EAAE5B,EAAI,EACN+B,EAAS4N,EACT3P,EAAImqB,GAGVV,EAAUrhB,KAAKpI,GACf0pB,EAAU5qB,GAAKkB,EAAEZ,EAAEsC,OACnBK,EAAOqG,KAAKxG,SAGhB,IAAK,IAAI9C,EAAI,EAAGA,EAAI2C,EAAMC,OAAQ5C,IAAK,CACnC,IAAI8C,EAAIH,EAAM3C,GAKVkB,EAAIgqB,EAHGH,EAASjoB,EAAEC,UACXgoB,EAASjoB,EAAEG,UAIpB/B,EAAImqB,EACJvoB,EAAE5B,EAAI,EACN2P,EAAMvH,KAAKxG,IAEb6nB,EAAUrhB,KAAKpI,GACf0pB,EAAU5qB,GAAKkB,EAAEZ,EAAEsC,QAK/BgpB,GAEA,IAAIza,GAAe,EAAA9E,EAAAvD,kBAAiBpG,GAChC4O,GAAe,EAAAjF,EAAAvD,kBAAiBgI,GAChCM,GAAe,EAAA/E,EAAAvD,kBAAiB+H,GAChCQ,GAAe,EAAAhF,EAAAvD,kBAAiBiI,GAWpC,GATAjH,KAAK4gB,wBAA0B,SAACje,GAI9B,YAHqBrD,IAAlBqe,IACDA,EAAgB,IAAIC,UAAuBjb,EAASyE,EAAO3K,EAAS7D,EAAOyO,EAAYN,EAAOO,EAAYL,EAAQM,EAAaP,EAASQ,EAActB,EAAWuB,EAAW/C,EAAcqP,IAErL4J,GAGT/M,GAAU,IAAIiN,UAAgBjN,GAAQhY,EAAOC,EAAOsb,GAAgB9G,SAAWwQ,UAAgB3X,UAAUtN,GAErG6C,EAAJ,CAkDA,IAhDA,IAAIsmB,EAAoB,WACpB,IAAIC,GAAU,EAEVC,EAAe,SAACC,EAASC,GACS,iBAA1BD,EAAQ7iB,MAAMoT,QACpByP,EAAQ7iB,MAAMoT,QAAUO,EAASjc,IAAI0E,EAAIymB,EAAQ7iB,MAAMoT,QAAS0P,GAEhEA,KAEFC,EAAa,SAACF,EAASC,GACzB,IAAIE,GAAOH,EAAQ7iB,MAAMyF,WAAauD,SAClCF,EAAaf,EAAMgB,UAAUia,GACjCH,EAAQ7iB,MAAMoT,QAAUtK,EAAWma,WAAWD,EAAKF,IAGjDI,SA8BJ,OA7BAA,EAAK3pB,EAAME,SAAWF,EAAM,GAAGuF,MAC/B6jB,EAAUA,GAAWjL,EAAMne,MAAMuX,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAcM,EAAK3pB,KAAY2pB,EAAKlb,KAAiB2W,GAC9GuE,EAAK3pB,EAAME,QAAUF,EAAM,GAAGuF,MAC9B6jB,EAAUA,GAAWjL,EAAMyL,aAAarS,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAcM,EAAK3pB,KAAY2pB,EAAKlb,KAAiB2W,GAEjHvW,EAAU3C,QACVsC,EAAMgD,QAEN4X,GADAA,EAAUA,GAAWjL,EAAM0L,cAActS,IAAI1U,EAAIgB,EAAQyL,OAAQka,EAAYxpB,EAAOyO,EAAYqX,KAC3E3H,EAAM7P,OAAOiJ,IAAI1U,EAAIgB,EAAQyL,OAAQka,EAAYxpB,EAAOyO,EAAYqX,GACzFtX,EAAM1P,QAGVsqB,EAAUA,GAAWjL,EAAMhQ,MAAMoJ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAclb,EAAOO,EAAYkY,EAAYzY,OAElGrL,EAAW+lB,2BAEXO,GADAA,EAAUA,GAAWjL,EAAM9P,OAAOkJ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAchb,EAAQM,EAAaiY,EAAYvY,UACpF8P,EAAM/P,QAAQmJ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAcjb,EAASQ,EAAcgY,EAAYxY,UAG5GuL,EAAUC,QACVwP,EAAUA,GAAWjL,EAAM0J,WAAWtQ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAclb,EAAOO,EAAYkZ,EAAYC,YAEvG/kB,EAAW+lB,2BAGXO,GAFAA,EAAUA,GAAWjL,EAAM2J,YAAYvQ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAchb,EAAQM,EAAaiZ,EAAYE,eAEzF3J,EAAM4J,aAAaxQ,IAAI1U,EAAIgB,EAAQyL,OAAQ+Z,EAAcjb,EAASQ,EAAcgZ,EAAYG,gBAIlHqB,GAGLD,OAnLI,WACZ,IAAIW,GAAmB,EACnBC,EAAQ,SAAC3qB,GACR0qB,GACD3Q,EAAK5B,IAAI4B,EAAKnZ,MAAOmZ,EAAKlZ,QAE9Boa,EAAMzW,OAAOmmB,GACb3P,EAASxW,OAAOmmB,GAChBD,GAAmB,EA4KjBE,KAKJ5iB,KAAK6iB,OAAS,SAASC,EAASC,EAAW9jB,GACnCxD,GACJsb,EAAM+L,GAASD,OAAOpnB,EAAIsnB,EAAW9jB,EAAM,SAASI,GAAS,OACzD8Q,IAAK,SAASpP,EAAG/H,EAAGilB,GAAM,OAAOE,UAAmBI,OAAOxd,EAAGkd,EAAIjlB,EAAGA,EAAGA,EAAGA,QAInFgH,KAAK2Q,KAAO,SAACxQ,EAAEC,EAAE4I,EAAKpQ,EAAMC,EAAMqO,GAChC,OAAO6K,EAAK6O,wBAAwBje,GAASgO,KAAKhO,EAASxC,EAAEC,EAAE4I,EAAM8J,EAAKlO,KAAMhM,EAAMC,EAAMqO,IAG9FlH,KAAK+X,SAAW,SAAC/T,EAAGC,EAAGC,EAAGC,EAAGvL,EAAMC,EAAMqO,GACvC,OAAO6K,EAAK6O,wBAAwBje,GAASoV,SAASpV,EAASqB,EAAGC,EAAGC,EAAGC,EAAI2O,EAAKlO,KAAMhM,EAAMC,EAAMqO,IAGrGlH,KAAKqV,WAAa,SAAC1d,EAAGzB,GACpB6b,EAAKnZ,MAAM1C,GAAKyB,EAEbgmB,GACDA,EAAckF,OAAOlgB,EAAS,QAASzM,EAAGyB,GAExC8D,KAEHsW,EAAKnZ,MAAM,GAAGuF,MAAQ4Y,EAAMyL,aAAezL,EAAMne,OAAOoqB,SAASvnB,EAAI9D,EAAGzB,EAAG8nB,GAC5EjH,EAAM7P,QAAU6P,EAAM7P,OAAO8b,SAASvnB,EAAI9D,EAAGzB,EAAGwoB,GAChD3H,EAAM0L,eAAiB1L,EAAM0L,cAAcO,SAASvnB,EAAI9D,EAAGzB,EAAGwoB,KAIhE1e,KAAKsV,WAAc,SAACtc,EAAG9C,GACrB,IAAIkB,EAAIypB,EAAU3qB,GACdyO,EAAMmc,EAAU5qB,GAEpBkB,EAAEZ,EAAEmO,GAAOoN,EAAKlZ,MAAM3C,GAAK8C,EAExB2kB,GACDA,EAAckF,OAAOlgB,EAASvL,EAAEqD,EAAGkK,EAAK3L,GAEtCyC,IAEJsb,EAAM3f,EAAEqD,GAAGuoB,SAASvnB,EAAIzC,EAAG2L,EAAK6a,EAAYpoB,EAAEqD,IAC1C8X,EAAUC,OACZuE,EAAM3f,EAAEiqB,QAAQ2B,SAASvnB,EAAIzC,EAAG2L,EAAK6b,EAAYppB,EAAEiqB,WAGvD,IAAIN,EAAe,EACfC,EAAe,EAEbiC,GAAY9iB,GAAG,EAAEC,GAAG,EAAE8iB,MAAM,IAClCljB,KAAKmjB,gBAAmB,SAACxe,GACpBoN,EAAKnZ,MAAM+L,KAASse,IAIvBlC,IACAhP,EAAKsD,WAAW4N,EAAUte,KAG5B,IAAMye,GAAYnqB,QAAQkH,GAAG,EAAEC,GAAG,GAAGjH,QAAQgH,GAAG,EAAEC,GAAG,IACrDJ,KAAKqjB,gBAAmB,SAAC1e,GACpBoN,EAAKlZ,MAAM8L,KAASye,IAIvBpC,IAEAjP,EAAKuD,WAAW8N,EAAUze,KAG5B3E,KAAK+U,gBAAkB,WACrB,GAAGgM,GAAgB,EACjB,OAAOhP,EAAKnZ,MAEd,IAAI5B,KAKJ,OAJA+a,EAAKnZ,MAAMG,QAAQ,SAAApB,GACdA,IAAMsrB,GACPjsB,EAAEwI,KAAK7H,KAEJX,GAGTgJ,KAAKgV,gBAAkB,WACrB,GAAGgM,GAAgB,EACjB,OAAOjP,EAAKlZ,MAEd,IAAI7B,KAKJ,OAJA+a,EAAKlZ,MAAME,QAAQ,SAACpB,GACfA,IAAMyrB,GACPpsB,EAAEwI,KAAK7H,KAEJX,GAGTgJ,KAAKkT,cAAiB,WACpB,OAAOnB,EAAKnZ,MAAME,OAASioB,GAG7B/gB,KAAKoT,cAAiB,WACpB,OAAOrB,EAAKlZ,MAAMC,OAASkoB,GAG7B,IAAIsC,EAAoB,SAAC/sB,GACvB,OAAOA,EAAE8M,MAAO,KAQdkgB,GACFC,KAAQ,EACRC,OAAY,EACZC,eAAgB,EAChBC,OAAU,GAERC,EAAc,SAACxsB,GASjB,YARSkI,IAANlI,IACDA,EAAImsB,EAAansB,SAGVkI,IAANlI,GAAgC,iBAANA,IAC3BA,EAAI,GAGCA,GAGLysB,GACFC,KAAQ,EACRC,MAAS,EACTC,SAAY,GAcdhkB,KAAKpH,SACLoH,KAAKnH,SAEL,IAAI6C,EAAaD,EAAK2a,UAAY6N,eAAexoB,EAAI,+BACjDsb,EAAQ/W,KAAK+W,MA4iBjB,WACI,OACIC,YACAkN,IAAK,SAACztB,EAAMuC,GACR+d,EAAMtgB,GAAQuC,EACd+d,EAAMC,SAASxX,KAAKxG,MAjjBK3C,KAAK2J,MAEtCmkB,GAAa,EACjB,IAAI1oB,EAAgF,OAA1EgB,EAAQD,SAAW2nB,IAAeA,GAAa,IAAS1nB,EAAQD,SAAiBwD,KAE3F,IAMMokB,IACF,2BACA,sBACA,6BACA,mBACA,oBACA,kEACA,KAGEC,IACF,2BACA,kCACA,8BACA,qCACA,sBACA,wBACA,0BACA,uDACA,2BACA,gBACA,oBACA,yCACA,+DACA,+CACA,WACA,mEACA,MACA,KAaEC,IACF,sBACA,gCACA,gCACA,4BACA,iCACA,gDACA,4BACA,gCACA,QAaEC,IACF,kDACA,eACA,yBACA,SACA,uBACA,sBACA,sBACA,8BACA,0BACA,kBACA,8BACA,oBACA,4EACElsB,OAAOisB,IAAWjsB,QACpB,wBACA,wBACA,yCACA,yCACA,6DACA,0CACA,+BACA,sEACA,MAIEmsB,IACF,6BACA,6BACA,+DACA,6CACA,oFACA,IACA,8BACA,8BACA,wCACA,KAkPJ,GA/MIxkB,KAAK+d,iBACLhH,EAAMmN,IAAI,QAAS,IAAI/F,UAAmB1iB,EAAI8W,EAAW,MACjD,2BACA,2BACA,yBACA,8BACA,2BACA,yBACA,sBACA,qBACA,qBACA,uBACA,yBACA,wBACA,sBACA,0BACA,wBACA,2BACA,yBACA,yBACA,kBACA,+BACEla,OAAOmsB,IAAensB,QACxB,oBACA,uHAEA,+CACA,4CACA,oBACA,4BACA,wBACA,wBAEA,iBACA,OAEA,2BACA,sBACA,6BACA,sBACA,6BACA,kBACA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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n/**\n * @class\n * @classdesc Describes color properties that could be given to the shader.\n * @member {number} r\n * @member {number} g\n * @member {number} b\n * @member {number} a\n */\n\n\nexport default class Color {\n    constructor(color) {\n\n        // Default value for red, blue and green.\n        // Black color is rendered.\n        this.r = this.g = this.b = 0;\n        this.a = 1;\n\n        if (color instanceof Color) {\n            this.r = color.r;\n            this.g = color.g;\n            this.b = color.b;\n            this.a = color.a;\n        } else if (arguments.length >= 3) {\n\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\n            // Aplha value is optional.\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n            arguments.length > 3 && (this.a = arguments[3]);\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\n            // Aplha value is optional.\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n            this.a = get(color[4]);\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 100;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n\n            // color is of the form '#23ff74'.\n            color = parseInt(color.substring(1), 16);\n\n            // Converts to range [0,1] by using bitwise operator.\n            this.r = (color >> 16 & 255) / 255;\n            this.g = (color >> 8 & 255) / 255;\n            this.b = (color & 255) / 255;\n        }\n    }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\n//import layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n/*  static get hierarchical2(){\n    return layoutHierarchical2;\n  }*/\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || { arrow: { } };\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n  edgeStyle.animateColor = edgeStyle.animateColor || \"rgb(240, 80, 120)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n    if(typeof edgeStyle.arrow.texture !== \"undefined\"){\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n    }\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = [];\n    if(typeof ccNetVizPlugins !== \"undefined\"){\n      if(typeof ccNetVizPlugins.node !== \"undefined\")\n        promises = ccNetVizPlugins.node.Integration(options,self).shapes;\n      if(typeof ccNetVizPlugins.arrow !== \"undefined\")\n        promises = promises.concat(ccNetVizPlugins.arrow.Integration(options,self).shapes);\n    }\n\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        if(item.plugin === \"arrow\"){\n          options.styles[promises[index].name].arrow = item;\n        }else{\n          options.styles[promises[index].name] = item;\n        }\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const startTime = Date.now();\n\n    const drawOnce = () => {\n        for(let i = 0; i < layers.main.scene.elements.length; i++){\n            layers.main.scene.elements[i].draw(context);\n            layers.temp && layers.temp.scene.elements[i].draw(context);\n        }\n    }\n    const drawLoop = () => {\n        context.renderTime = (Date.now() - startTime) / 1000.0;\n        drawOnce();\n        requestAnimationFrame(drawLoop);\n    }\n\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\n        drawLoop();\n    } else {\n        drawOnce();\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  const onWheelThis = onWheel.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheelThis,\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    // set animation flag\n    this.hasEdgeAnimation = (!!edgeStyle.animateType && edgeStyle.animateType !== 'none')\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                \n                if (this.hasEdgeAnimation) {\n                    // when do edge animation, shader need to know the startPos and endPos\n                    ccNetViz_primitive.vertices(v.startPos, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                    ccNetViz_primitive.vertices(v.endPos, iV, t.x, t.y, t.x, t.y, t.x, t.y, t.x, t.y);\n                }\n\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                //enable the \"curve\" feature\n                const is_bidirectional_overlap = options.bidirectional === 'overlap';\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si] && is_bidirectional_overlap){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n    let animateStylesTransl = {\n      'none': 0,\n      'basic': 1,\n      'gradient': 2,\n    }\n    let getEdgeAnimateType = (t) => {\n        if(t !== undefined){\n          t = animateStylesTransl[t];\n        }\n  \n        if(t === undefined || typeof t !== 'number'){\n          t = 0;\n        }\n  \n        return t;\n      };\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n\n    const lineAnimateTypes = [\n        \"   if (animateType >= 1.5) {\",\n        \"       gl_FragColor = isAnimateCoveredGradient() * animateColor + (1. - isAnimateCoveredGradient()) * color;\",\n        \"   } else if (animateType >= 0.5) {\",\n        \"       gl_FragColor = isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\",\n        \"   } else {\",\n        \"       gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n        \"   }\",\n    ]\n\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    const isAnimateCovered = [\n        \"float isAnimateCovered() {\",\n        \"   vec2 pos = gl_FragCoord.xy;\",\n        \"   vec2 viewport = 2. * v_screen;\",\n        \"   vec2 startPos = viewport * v_startPos;\",\n        \"   vec2 endPos = viewport * v_endPos;\",\n        \"   float totalLen = distance(startPos, endPos);\",\n        \"   float len = distance(pos, startPos);\",\n        \"   // float r = 300.;\",\n        \"   float r = fract(v_time / 3.) * totalLen;\",\n        \"   // float r = 0.5 * totalLen;\",\n        \"   float draw = 1. - step(r, len);\",\n        \"   return draw;\",\n        \"}\",\n    ]\n\n    const isAnimateCoveredGradient = [\n        \"float isAnimateCoveredGradient() {\",\n        \"   vec2 pos = gl_FragCoord.xy;\",\n        \"   vec2 viewport = 2. * v_screen;\",\n        \"   vec2 startPos = viewport * v_startPos;\",\n        \"   vec2 endPos = viewport * v_endPos;\",\n        \"   float totalLen = distance(startPos, endPos);\",\n        \"   float len = distance(pos, startPos);\",\n        \"   float gradLen = 180.;\", // TODO: can config\n        \"   float r = fract(v_time / 3.) * (totalLen + gradLen);\",\n        \"   // float r = 0.5 * totalLen;\",\n        \"   float draw = fract(smoothstep(r - gradLen, r, len));\",\n        \"   return draw;\",\n        \"}\",\n    ]\n\n    if (this.hasEdgeAnimation) {\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision mediump float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"attribute vec2 startPos;\",\n                \"attribute vec2 endPos;\",\n                \"uniform float time;\",\n                \"uniform float exc;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 width;\",\n                \"uniform mat4 transform;\",\n                \"varying float v_time;\",\n                \"varying vec2 v_startPos;\",\n                \"varying vec2 v_endPos;\",\n                \"varying vec2 v_screen;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\"\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"   v_time = time;\",\n                \"   v_startPos = startPos;\",\n                \"   v_endPos = endPos;\",\n                \"   v_screen = screen;\",\n\n                \"   n = normal;\",\n                \"}\"\n            ]), [\n                \"precision mediump float;\",\n                \"uniform float type;\",\n                \"uniform float animateType;\",\n                \"uniform vec4 color;\",\n                \"uniform vec4 animateColor;\",\n                \"varying vec2 n;\",\n                \"varying float v_time;\",\n                \"varying vec2 v_startPos;\",\n                \"varying vec2 v_endPos;\",\n                \"varying vec2 v_screen;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"uniform float lineSize;\",\n            ]\n            .concat(isAnimateCovered)\n            .concat(isAnimateCoveredGradient).concat([\n                \"void main(void) {\",\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n            ]).concat(lineTypes)\n            .concat(lineAnimateTypes)\n            .concat([\n                \"}\"\n            ]), c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform1f(uniforms.animateType, getEdgeAnimateType(c.style.animateType));\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n                ccNetViz_gl.uniformColor(gl, uniforms.animateColor, c.style.animateColor);\n            })\n        );\n    } else {\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision mediump float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 width;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\"\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"   n = normal;\",\n                \"}\"\n            ]), [\n                \"precision mediump float;\",\n                \"uniform float type;\",\n                \"uniform vec4 color;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"uniform float lineSize;\",\n                \"void main(void) {\",\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n            ].concat(lineTypes).concat([\n                \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n                \"}\"\n            ]), c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n        gl.uniform1f(shader.uniforms.time, context.renderTime);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            let point;\n            if (point = node.point) {\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      \n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\n     //decide the height and then max of them is taken each time to have a max height that fits each char\n\n      height = Math.max(height, rect.h - char.top);\n\n      // addiding const horiBearingx and char.advance wo get the total width of label\n\n      width += char.advance + horiBearingX;\n    }\n\n    \n   // x and y are the clipspace co-ordinates between 0 and 1\n   // dx and dy shifts the position of label w.r.t possibly node\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n      \n      dx += horiBearingX;\n\n      // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function max(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var max = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] > max) max = input[i];\n    }\n    return max;\n}\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nexport default function rescale(input, options = {}) {\n    if (!Array.isArray(input)) {\n        throw new TypeError('input must be an array');\n    } else if (input.length === 0) {\n        throw new TypeError('input must not be empty');\n    }\n\n    let output;\n    if (options.output !== undefined) {\n        if (!Array.isArray(options.output)) {\n            throw new TypeError('output option must be an array if specified');\n        }\n        output = options.output;\n    } else {\n        output = new Array(input.length);\n    }\n\n    const currentMin = min(input);\n    const currentMax = max(input);\n\n    if (currentMin === currentMax) {\n        throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n    }\n\n    const {\n        min: minValue = options.autoMinMax ? currentMin : 0,\n        max: maxValue = options.autoMinMax ? currentMax : 1\n    } = options;\n\n    if (minValue >= maxValue) {\n        throw new RangeError('min option must be smaller than max option');\n    }\n\n    const factor = (maxValue - minValue) / (currentMax - currentMin);\n    for (var i = 0; i < input.length; i++) {\n        output[i] = (input[i] - currentMin) * factor + minValue;\n    }\n\n    return output;\n}\n","/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function min(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var min = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] < min) min = input[i];\n    }\n    return min;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}