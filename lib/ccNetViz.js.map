{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/color.js","webpack:///./src/gl.js","webpack:///./src/shader.js","webpack:///./src/utils.js","webpack:///./src/primitiveTools.js","webpack:///./src/primitive.js","webpack:///./src/quadTree.js","webpack:///./src/layout/force.js","webpack:///./src/layout/random.js","webpack:///./src/layout/utils.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/layout/layout.js","webpack:///./src/geomutils.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/shaders/easeFunctions/index.js","webpack:///./src/shaders/easeFunctions/linear.glsl","webpack:///./src/shaders/easeFunctions/sin-in.glsl","webpack:///./src/shaders/easeFunctions/sin-out.glsl","webpack:///./src/shaders/easeFunctions/sin-inout.glsl","webpack:///./src/shaders/easeFunctions/exp-in.glsl","webpack:///./src/shaders/easeFunctions/exp-out.glsl","webpack:///./src/shaders/easeFunctions/exp-inout.glsl","webpack:///./src/shaders/easeFunctions/bounce-in.glsl","webpack:///./src/shaders/easeFunctions/bounce-out.glsl","webpack:///./src/shaders/easeFunctions/bounce-inout.glsl","webpack:///./src/shaders/easeFunctions/circular-in.glsl","webpack:///./src/shaders/easeFunctions/circular-out.glsl","webpack:///./src/shaders/easeFunctions/circular-inout.glsl","webpack:///./src/shaders/easeFunctions/quad-in.glsl","webpack:///./src/shaders/easeFunctions/quad-out.glsl","webpack:///./src/shaders/easeFunctions/quad-inout.glsl","webpack:///./src/shaders/easeFunctions/cubic-in.glsl","webpack:///./src/shaders/easeFunctions/cubic-out.glsl","webpack:///./src/shaders/easeFunctions/cubic-inout.glsl","webpack:///./src/shaders/easeFunctions/quart-in.glsl","webpack:///./src/shaders/easeFunctions/quart-out.glsl","webpack:///./src/shaders/easeFunctions/quart-inout.glsl","webpack:///./src/shaders/easeFunctions/quint-in.glsl","webpack:///./src/shaders/easeFunctions/quint-out.glsl","webpack:///./src/shaders/easeFunctions/quint-inout.glsl","webpack:///./src/layer.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/texts.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./src/ccNetViz.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","endsWith","ShelfPack","w","h","options","this","autoResize","shelves","freebins","stats","bins","maxId","Shelf","y","x","free","Bin","id","maxw","maxh","refcount","pack","concat","allocation","results","length","width","height","packOne","inPlace","push","w2","h2","j","shelf","Math","max","resize","bin","waste","h1","w1","best","freebin","Infinity","getBin","ref","allocFreebin","allocShelf","index","splice","alloc","unref","clear","Color","color","_classCallCheck","g","b","arguments","test","exec","v","parseInt","substring","gl","extensions","getSupportedExtensions","result","e","indexOf","getExtension","type","source","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","uniform4f","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","defaultAttr","Shader","vs","fs","shaderParams","shader_classCallCheck","_gl","_vs","_fs","program","_program","createProgram","attachShader","ccNetViz_gl","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","uniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","attribute","attributes","ACTIVE_ATTRIBUTES","getActiveAttrib","size","useProgram","enableVertexAttribArray","disableVertexAttribArray","Utils","from","k","obj","isObject","url","callback","xmlhttp","cbk","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","responseType","open","send","partitionByStyle","data","parts","pN","el","part","style","undefined","idx","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","animateColor","primitive","_this","primitive_classCallCheck","iV","iI","fb","shader","ccNetViz_shader","join","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","forEach","init","floor","maxBufferSize","numVertices","nV","min","nI","numIndices","indices","Uint16Array","zerofiller","indicesarr","verticesarr","apply","vertices","set","styles","adder","isDirty","_iIs","Uint32Array","_iVs","_iBs","Uint8Array","_sizes","store","section","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","addSection","update","DYNAMIC_DRAW","updateEl","pos","buffer","olds","error","bufferSubData","BYTES_PER_ELEMENT","storeToPos","draw","context","uniformMatrix4fv","transform","uniform1f","time","renderTime","texture","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","quadTree","points","xs","ys","x1_","y1_","x2_","y2_","dx","dy","insert","x1","y1","x2","y2","leaf","nx","ny","insertChild","nPoint","point","xm","ym","below","nodes","visit","f","node","sx","sy","children","find","x0","y0","x3","y3","closestPoint","minDistance2","distance2","distance","sqrt","findNode","force","edges","alpha","friction","charge","gravity","theta2","chargeDistance2","distances","strengths","charges","repulse","quad","_","cx","cy","dw","dn","px","py","pointCharge","step","q","target","weight","accumulate","random","ccNetViz_quadtree","fixed","rnd","fixed2","minX","maxX","minY","maxY","_default","random_classCallCheck","_nodes","create2dArray","rows","columns","_toConsumableArray","Array","keys","map","fill","degrees","ordered_nodes","sort","ordered_degrees","getDepth","depth","depth_visited","Error","tmpDepth","getRanges","abs","start","layout_options","circular_classCallCheck","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","cos","sin","tree_classCallCheck","visited_leafs_parent","layer","centered","visited_leafs","child","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","treeT_classCallCheck","visited","drawTreeTop","hierarchical_classCallCheck","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","lib_es6","input","src_default","TypeError","ml_array_min_lib_es6","ml_array_rescale_lib_es6","output","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","count","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","slice","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","warn","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","Number","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","tmp","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","ii","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","isArray","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newData","newMatrix","empty","rng","matrix1","matrix2","klass","jj","previousColumn","isEchelonForm","checked","isReducedEchelonForm","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","dot","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","add","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","rand","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","mathMethod","inplaceMeth","staticMeth","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","xr","xi","yr","yi","spectral_classCallCheck","A","reduce","foo","EigenvalueDecomposition","iii","arr","mini","second_min","second_mini","third_min","twoSmallest","foo_","xy","maxx","maxy","minx","miny","normalize","spectral2_classCallCheck","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","node_degree","deg","dims","u","ones","uhk","itt_count","stop","uk","ul","top_","vmi","ratio","vsi","normalize2","coordinates","pow","euclideanDistance","narr","hive_classCallCheck","_margin","_radius","_nlines","nodes_segment","angle","grid_classCallCheck","sq","nnodes","nlines","nlines2","versinus_classCallCheck","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","dim","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","edgeSource","edgeTarget","uniqid","is_edge","se","te","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","calcBBox","toBBox","bbox","distBBox","extend","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","compare","mid","stack","pop","select","sd","exp","swap","all","_all","search","len","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","item","remove","parent","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","EPS","cuberoot","distance2ToBezier","eqresult","acos","solveCubic","mindist","dist","getBBFromPoints","xmin","xmax","ymin","ymax","val","pDistance2","xx","yy","C","len_sq","param","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","pointInRect","eq","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","bezierIntersectsRect","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","dist2","ct","getEdgeShift","screensize","ctx","cty","citx","city","ccNetViz_geomutils","getCurveShift","aspect2","len2","curveExc","sizex","nodeSize","sizey","Node","spatialSearch_classCallCheck","Label","textpos","fontSize","isSDF","getLabelSize","wantedSize","label","fontScale","offset","offsety","edge","bb","getTextPos","p1x","p1y","p2x","p2y","Line","getPoints","Circle","xsize","ysize","getBezierPoints","d1","d2","Curve","n2","n3","sortByDistances","e1","e2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sdi","_loop","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","rbushtree","ret","isEdge","isLabel","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","easeFunctions","linear","sin-in","sin-out","sin-inout","exp-in","exp-out","exp-inout","bounce-in","bounce-out","bounce-inout","circular-in","circular-out","circular-inout","quad-in","quad-out","quad-inout","cubic-in","cubic-out","cubic-inout","quart-in","quart-out","quart-inout","quint-in","quint-out","quint-inout","src_layer","canvas","view","textures","files","events","backgroundColor","edgeStyle","getSize","getNodeSize","getLabelHideSize","getNodesCnt","getEdgesCnt","onRedraw","redraw","hasEdgeAnimation","animateType","edgeTypes","edgePoses","nodesFiller","ccNetViz_primitive","position","textureCoord","colors","labelsFiller","relative","steps","sc","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","startPos","endPos","curve","ydiff2","ydiff3","ydiff4","offsetMul","tx","ty","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","spatialSearch","ccNetViz_spatialSearch","layout","removedNodes","removedEdges","getIndex","nidx","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","ti","is_bidirectional_overlap","bidirectional","ccNetViz_layout","is","defaultAdder","labelAdder","enableLazyRedraw","reset","slf","getTexture","scene","nodesColored","labelsOutline","arrow","element","findArea","updateNode","updateEdge","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getVisibleNodes","getVisibleEdges","cntShownNodes","cntShownEdges","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","animateStylesTransl","none","basic","gradient","initExtensions","elements","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","easeFunctionPart","animateEase","exc","uniform2f","screen","lineSize","aspect","animateSpeed","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","getLabelType","sdfSize","boldness","height_font","outlineColor","textures_classCallCheck","_load","debounce","_textures","_pending","_n","action","allLoaded","ccNetViz_utils","emptyObject","files_classCallCheck","_files","dataType","JSON","parse","ajax","_transformFile","default_classCallCheck","_size","_canvas","document","createElement","display","_el","body","appendChild","_context","getContext","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","GlyphAtlas","resetCache","atlas_classCallCheck","_resetCache","ids","dirty","ALPHA","split","glyphs","rects","glyph","markDirty","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","rect","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","glyphTrimmer_classCallCheck","lb","rb","glyphData","numCols","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newWidth","bufferCol","valueOf","glyphTrimmer_toConsumableArray","Uint8ClampedArray","advance","SpriteGenerator","spriteGenerator_classCallCheck","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","char","imgData","getImageData","_edt","charCodeAt","process","_edt1d","SimpleGlyph","sdf_classCallCheck","atlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","curFont","pbf","_getChar","String","fromCharCode","glyphID","cache","addGlyph","updateTexture","texts_classCallCheck","_modules","default","ccNetViz_defaultTexts","ccNetViz_sdfTexts","lazyEvents_classCallCheck","_enable","func","wait","immediate","timeout","timestamp","_arguments","later","last","Date","now","setTimeout","callNow","pushUnique","layers","insertTempLayer","checkUniqId","interactivityBatch_classCallCheck","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","__uniqid","_actualTempNodes","_actualTempEdges","_this2","main","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","sCanvas","antialias","lastUniqId","mergeArrays","cmp","ccNetViz","self","backgroundStyle","background","removed","setted","minSize","maxSize","drawFunc","ccNetViz_lazyEvents","checkRemoved","ccNetViz_layer","batch","getBatch","ccNetViz_interactivityBatch","promises","ccNetVizPlugins","Integration","shapes","Promise","config","then","plugin","reflow","applyChanges","removeNode","removeEdge","addEdge","addNode","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","hideSize","silent","ox","oy","ortho","offsetX","offsetY","viewport","COLOR_BUFFER_BIT","startTime","drawOnce","drawLoop","requestAnimationFrame","getScreenCoords","conf","getBoundingClientRect","getLayerCoords","disth","distw","findMerge","funcname","f1","f2","getTextPosition","chars","zoomevts","addEvts","evts","addEventListener","passive","passiveEvts","removeEvts","removeEventListener","onDownThis","downe","which","parseTouchEvts","touches","clientX","clientY","dragged","custom","origdist","od","onDrag","panning","zooming","mx","my","drag","checkChangeViewport","preventDefault","up","onClick","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","lCoords","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","onContextMenu","gl_lose","loseContext","disable","last_view","is_change","onChangeViewport","toDataURL","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","isWebGLSupported"],"mappings":"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,GAAmB,IAAA/nC,OAClBi/B,GAAciC,EAAU8G,YAAc9G,EAAU8G,YAAc,YAuPrE,GAlNIjpC,KAAK2iC,iBACLiE,EAAMjf,IAAI,QAAS,IAAIqb,EAAmBp/B,EAAIu+B,EAAW,KAAM,CACvD,2BACA,2BACA,yBACA,8BACA,2BACA,yBACA,sBACA,qBACA,qBACA,uBACA,yBACA,wBACA,sBACA,0BACA,wBACA,2BACA,yBACA,yBACA,kBACA,+BACElhC,OAAO8nC,IAAe9nC,OAAO,CAC/B,oBACA,uHAEA,+CACA,4CACA,oBACA,4BACA,wBACA,wBAEA,iBACA,MACA,CACA,2BACA,sBACA,6BACA,sBACA,6BACA,8BACA,kBACA,wBACA,2BACA,yBACA,yBACA,8BACA,2BAEHA,OAAO+nC,IACP/nC,OArFgB,CACrB,6BACA,iCACA,oCACA,sCACA,4CACA,wCACA,kDACA,0CACA,wBACA,wFACA,kCACA,qCACA,kBACA,MAwEKA,OArEwB,CAC7B,qCACA,iCACA,oCACA,sCACA,4CACA,wCACA,kDACA,0CACA,2BACA,yGACA,kCACA,0DACA,kBACA,MAuDsCA,OAAO,CACrC,oBACA,oEACDA,OAAO4nC,GACT5nC,OAhJgB,CACrB,+BACA,+GACA,sCACA,+FACA,cACA,8EACA,SA0IKA,OAAO,CACJ,MACA,SAAAlD,GACA,IAAIqK,EAAWrK,EAAE2N,OAAOtD,SACxBA,EAAS8gC,KAAOtlC,EAAG6L,UAAUrH,EAAS8gC,IAAKnrC,EAAE09B,UAC7C73B,EAAGulC,UAAU/gC,EAASghC,OAAQrrC,EAAEsD,MAAOtD,EAAEuD,QACzC,IAvOc1C,EAuOVkK,EAAO,IAAM/K,EAAE49B,SACnBvzB,EAASU,MAAQlF,EAAGulC,UAAU/gC,EAASU,KAAMA,EAAO/K,EAAEsD,MAAOyH,EAAO/K,EAAEuD,QACtEsC,EAAG6L,UAAUrH,EAASihC,SAAUxB,EAAiB9pC,IACjD6F,EAAG6L,UAAUrH,EAASmzB,QAASx9B,EAAEw9B,SACjC33B,EAAG6L,UAAUrH,EAASkhC,OAAQvrC,EAAEurC,QAChC1lC,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","file":"ccNetViz.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n/**\n * @class\n * @classdesc Describes color properties that could be given to the shader.\n * @member {number} r\n * @member {number} g\n * @member {number} b\n * @member {number} a\n */\n\n\nexport default class Color {\n    constructor(color) {\n\n        // Default value for red, blue and green.\n        // Black color is rendered.\n        this.r = this.g = this.b = 0;\n        this.a = 1;\n\n        if (color instanceof Color) {\n            this.r = color.r;\n            this.g = color.g;\n            this.b = color.b;\n            this.a = color.a;\n        } else if (arguments.length >= 3) {\n\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\n            // Aplha value is optional.\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n            arguments.length > 3 && (this.a = arguments[3]);\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\n            // Aplha value is optional.\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n            this.a = get(color[4]);\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 100;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n\n            // color is of the form '#23ff74'.\n            color = parseInt(color.substring(1), 16);\n\n            // Converts to range [0,1] by using bitwise operator.\n            this.r = (color >> 16 & 255) / 255;\n            this.g = (color >> 8 & 255) / 255;\n            this.b = (color & 255) / 255;\n        }\n    }\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n        gl.uniform1f(shader.uniforms.time, context.renderTime);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            let point;\n            if (point = node.point) {\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\n//import layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n/*  static get hierarchical2(){\n    return layoutHierarchical2;\n  }*/\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","import linear from './linear.glsl';\nimport sinIn from './sin-in.glsl';\nimport sinOut from './sin-out.glsl';\nimport sinInOut from './sin-inout.glsl';\nimport expIn from './exp-in.glsl';\nimport expOut from './exp-out.glsl';\nimport expInOut from './exp-inout.glsl';\nimport bounceIn from './bounce-in.glsl';\nimport bounceOut from './bounce-out.glsl';\nimport bounceInOut from './bounce-inout.glsl';\nimport circularIn from './circular-in.glsl';\nimport circularOut from './circular-out.glsl';\nimport circularInOut from './circular-inout.glsl';\nimport quadIn from './quad-in.glsl';\nimport quadOut from './quad-out.glsl';\nimport quadInOut from './quad-inout.glsl';\nimport cubicIn from './cubic-in.glsl';\nimport cubicOut from './cubic-out.glsl';\nimport cubicInOut from './cubic-inout.glsl';\nimport quartIn from './quart-in.glsl';\nimport quartOut from './quart-out.glsl';\nimport quartInOut from './quart-inout.glsl';\nimport quintIn from './quint-in.glsl';\nimport quintOut from './quint-out.glsl';\nimport quintInOut from './quint-inout.glsl';\n\nconst easeFunctions = {\n    'linear': linear,\n    'sin-in': sinIn,\n    'sin-out': sinOut,\n    'sin-inout': sinInOut,\n    'exp-in': expIn,\n    'exp-out': expOut,\n    'exp-inout': expInOut,\n    'bounce-in': bounceIn,\n    'bounce-out': bounceOut,\n    'bounce-inout': bounceInOut,\n    'circular-in': circularIn,\n    'circular-out': circularOut,\n    'circular-inout': circularInOut,\n    'quad-in': quadIn,\n    'quad-out': quadOut,\n    'quad-inout': quadInOut,\n    'cubic-in': cubicIn,\n    'cubic-out': cubicOut,\n    'cubic-inout': cubicInOut,\n    'quart-in': quartIn,\n    'quart-out': quartOut,\n    'quart-inout': quartInOut,\n    'quint-in': quintIn,\n    'quint-out': quintOut,\n    'quint-inout': quintInOut,\n}\n\nexport {\n    easeFunctions,\n}","export default \"float ease(float t) {\\n  return t;\\n}\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat ease(float t) {\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\n}\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat ease(float t) {\\n  return sin(t * HALF_PI);\\n}\"","export default \"#ifndef PI\\n#define PI 3.141592653589793\\n#endif\\n\\nfloat ease(float t) {\\n  return -0.5 * (cos(PI * t) - 1.0);\\n}\"","export default \"float ease(float t) {\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\n}\"","export default \"float ease(float t) {\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\n}\\n\"","export default \"float ease(float t) {\\n  return t == 0.0 || t == 1.0\\n    ? t\\n    : t < 0.5\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\n}\"","export default \"#ifndef PI\\n#define PI 3.141592653589793\\n#endif\\n\\nfloat bounceOut(float t) {\\n  const float a = 4.0 / 11.0;\\n  const float b = 8.0 / 11.0;\\n  const float c = 9.0 / 10.0;\\n\\n  const float ca = 4356.0 / 361.0;\\n  const float cb = 35442.0 / 1805.0;\\n  const float cc = 16061.0 / 1805.0;\\n\\n  float t2 = t * t;\\n\\n  return t < a\\n    ? 7.5625 * t2\\n    : t < b\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\n      : t < c\\n        ? ca * t2 - cb * t + cc\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\n}\\n\\n\\nfloat ease(float t) {\\n  return 1.0 - bounceOut(1.0 - t);\\n}\"","export default \"#ifndef PI\\n#define PI 3.141592653589793\\n#endif\\n\\nfloat ease(float t) {\\n  const float a = 4.0 / 11.0;\\n  const float b = 8.0 / 11.0;\\n  const float c = 9.0 / 10.0;\\n\\n  const float ca = 4356.0 / 361.0;\\n  const float cb = 35442.0 / 1805.0;\\n  const float cc = 16061.0 / 1805.0;\\n\\n  float t2 = t * t;\\n\\n  return t < a\\n    ? 7.5625 * t2\\n    : t < b\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\n      : t < c\\n        ? ca * t2 - cb * t + cc\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\n}\\n\"","export default \"#ifndef PI\\n#define PI 3.141592653589793\\n#endif\\n\\nfloat bounceOut(float t) {\\n  const float a = 4.0 / 11.0;\\n  const float b = 8.0 / 11.0;\\n  const float c = 9.0 / 10.0;\\n\\n  const float ca = 4356.0 / 361.0;\\n  const float cb = 35442.0 / 1805.0;\\n  const float cc = 16061.0 / 1805.0;\\n\\n  float t2 = t * t;\\n\\n  return t < a\\n    ? 7.5625 * t2\\n    : t < b\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\n      : t < c\\n        ? ca * t2 - cb * t + cc\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\n}\\n\\nfloat ease(float t) {\\n  return t < 0.5\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\n}\"","export default \"float ease(float t) {\\n  return 1.0 - sqrt(1.0 - t * t);\\n}\"","export default \"float ease(float t) {\\n  return sqrt((2.0 - t) * t);\\n}\"","export default \"float ease(float t) {\\n  return t < 0.5\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\n}\"","export default \"float ease(float t) {\\n  return t * t;\\n}\"","export default \"float ease(float t) {\\n  return -t * (t - 2.0);\\n}\"","export default \"float ease(float t) {\\n  return t < 0.5\\n    ? +8.0 * pow(t, 4.0)\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\n}\"","export default \"float ease(float t) {\\n  return t * t * t;\\n}\"","export default \"float ease(float t) {\\n  float f = t - 1.0;\\n  return f * f * f + 1.0;\\n}\"","export default \"float ease(float t) {\\n  return t < 0.5\\n    ? 4.0 * t * t * t\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\n}\"","export default \"float ease(float t) {\\n  return pow(t, 4.0);\\n}\"","export default \"float ease(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\"","export default \"float ease(float t) {\\n  return t < 0.5\\n    ? +8.0 * pow(t, 4.0)\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\n}\"","export default \"float ease(float t) {\\n  return pow(t, 5.0);\\n}\"","export default \"float ease(float t) {\\n  return 1.0 + (pow(t - 1.0, 5.0)); // NOTE: fix original bug '-' -> '+'\\n}\"","export default \"float ease(float t) {\\n  return t < 0.5\\n    ? +16.0 * pow(t, 5.0)\\n    : 0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0; // NOTE: fix original bug, no '-'\\n}\\n\"","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\nimport {easeFunctions} from './shaders'\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    // set animation flag\n    this.hasEdgeAnimation = (!!edgeStyle.animateType && edgeStyle.animateType !== 'none')\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                \n                if (this.hasEdgeAnimation) {\n                    // when do edge animation, shader need to know the startPos and endPos\n                    ccNetViz_primitive.vertices(v.startPos, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                    ccNetViz_primitive.vertices(v.endPos, iV, t.x, t.y, t.x, t.y, t.x, t.y, t.x, t.y);\n                }\n\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                //enable the \"curve\" feature\n                const is_bidirectional_overlap = options.bidirectional === 'overlap';\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si] && is_bidirectional_overlap){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n    let animateStylesTransl = {\n      'none': 0,\n      'basic': 1,\n      'gradient': 2,\n    }\n    let getEdgeAnimateType = (t) => {\n        if(t !== undefined){\n          t = animateStylesTransl[t];\n        }\n  \n        if(t === undefined || typeof t !== 'number'){\n          t = 0;\n        }\n  \n        return t;\n      };\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n\n    const lineAnimateTypes = [\n        \"   if (animateType >= 1.5) {\",\n        \"       gl_FragColor = isAnimateCoveredGradient() * animateColor + (1. - isAnimateCoveredGradient()) * color;\",\n        \"   } else if (animateType >= 0.5) {\",\n        \"       gl_FragColor = isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\",\n        \"   } else {\",\n        \"       gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n        \"   }\",\n    ]\n\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    const easeFunctionPart = [\n        `${easeFunctions[edgeStyle.animateEase ? edgeStyle.animateEase : 'linear']}`\n    ];\n\n    const isAnimateCovered = [\n        \"float isAnimateCovered() {\",\n        \"   vec2 pos = gl_FragCoord.xy;\",\n        \"   vec2 viewport = 2. * v_screen;\",\n        \"   float maxLen = length(viewport);\",\n        \"   vec2 startPos = viewport * v_startPos;\",\n        \"   vec2 endPos = viewport * v_endPos;\",\n        \"   float totalLen = distance(startPos, endPos);\",\n        \"   float len = distance(pos, startPos);\",\n        \"   // float r = 300.;\",\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * totalLen;\",\n        \"   // float r = 0.5 * totalLen;\",\n        \"   float draw = 1. - step(r, len);\",\n        \"   return draw;\",\n        \"}\",\n    ]\n\n    const isAnimateCoveredGradient = [\n        \"float isAnimateCoveredGradient() {\",\n        \"   vec2 pos = gl_FragCoord.xy;\",\n        \"   vec2 viewport = 2. * v_screen;\",\n        \"   float maxLen = length(viewport);\",\n        \"   vec2 startPos = viewport * v_startPos;\",\n        \"   vec2 endPos = viewport * v_endPos;\",\n        \"   float totalLen = distance(startPos, endPos);\",\n        \"   float len = distance(pos, startPos);\",\n        \"   float gradLen = 180.;\", // TODO: can config\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * (totalLen + gradLen / 2.);\", // NOTE: use 0.2 as a proper factor\n        \"   // float r = 0.5 * totalLen;\",\n        \"   float draw = fract(smoothstep(r - gradLen, r, len));\",\n        \"   return draw;\",\n        \"}\",\n    ]\n\n    if (this.hasEdgeAnimation) {\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision mediump float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"attribute vec2 startPos;\",\n                \"attribute vec2 endPos;\",\n                \"uniform float time;\",\n                \"uniform float exc;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 width;\",\n                \"uniform mat4 transform;\",\n                \"varying float v_time;\",\n                \"varying vec2 v_startPos;\",\n                \"varying vec2 v_endPos;\",\n                \"varying vec2 v_screen;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\"\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"   v_time = time;\",\n                \"   v_startPos = startPos;\",\n                \"   v_endPos = endPos;\",\n                \"   v_screen = screen;\",\n\n                \"   n = normal;\",\n                \"}\"\n            ]), [\n                \"precision mediump float;\",\n                \"uniform float type;\",\n                \"uniform float animateType;\",\n                \"uniform vec4 color;\",\n                \"uniform vec4 animateColor;\",\n                \"uniform float animateSpeed;\",\n                \"varying vec2 n;\",\n                \"varying float v_time;\",\n                \"varying vec2 v_startPos;\",\n                \"varying vec2 v_endPos;\",\n                \"varying vec2 v_screen;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"uniform float lineSize;\",\n            ]\n            .concat(easeFunctionPart)\n            .concat(isAnimateCovered)\n            .concat(isAnimateCoveredGradient).concat([\n                \"void main(void) {\",\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n            ]).concat(lineTypes)\n            .concat(lineAnimateTypes)\n            .concat([\n                \"}\"\n            ]), c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform1f(uniforms.animateType, getEdgeAnimateType(c.style.animateType));\n                gl.uniform1f(uniforms.animateSpeed, c.style.animateSpeed);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n                ccNetViz_gl.uniformColor(gl, uniforms.animateColor, c.style.animateColor);\n            })\n        );\n    } else {\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision mediump float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 width;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\"\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"   n = normal;\",\n                \"}\"\n            ]), [\n                \"precision mediump float;\",\n                \"uniform float type;\",\n                \"uniform vec4 color;\",\n                \"varying vec2 n;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"uniform float lineSize;\",\n                \"void main(void) {\",\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n            ].concat(lineTypes).concat([\n                \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n                \"}\"\n            ]), c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      \n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\n     //decide the height and then max of them is taken each time to have a max height that fits each char\n\n      height = Math.max(height, rect.h - char.top);\n\n      // addiding const horiBearingx and char.advance wo get the total width of label\n\n      width += char.advance + horiBearingX;\n    }\n\n    \n   // x and y are the clipspace co-ordinates between 0 and 1\n   // dx and dy shifts the position of label w.r.t possibly node\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n      \n      dx += horiBearingX;\n\n      // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || { arrow: { } };\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n  edgeStyle.animateColor = edgeStyle.animateColor || \"rgb(240, 80, 120)\";\n  edgeStyle.animateSpeed = edgeStyle.animateSpeed || 1.0;\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n    if(typeof edgeStyle.arrow.texture !== \"undefined\"){\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n    }\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = [];\n    if(typeof ccNetVizPlugins !== \"undefined\"){\n      if(typeof ccNetVizPlugins.node !== \"undefined\")\n        promises = ccNetVizPlugins.node.Integration(options,self).shapes;\n      if(typeof ccNetVizPlugins.arrow !== \"undefined\")\n        promises = promises.concat(ccNetVizPlugins.arrow.Integration(options,self).shapes);\n    }\n\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        if(item.plugin === \"arrow\"){\n          options.styles[promises[index].name].arrow = item;\n        }else{\n          options.styles[promises[index].name] = item;\n        }\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    const startTime = Date.now();\n\n    const drawOnce = () => {\n        for(let i = 0; i < layers.main.scene.elements.length; i++){\n            layers.main.scene.elements[i].draw(context);\n            layers.temp && layers.temp.scene.elements[i].draw(context);\n        }\n    }\n    const drawLoop = () => {\n        context.renderTime = (Date.now() - startTime) / 1000.0;\n        drawOnce();\n        requestAnimationFrame(drawLoop);\n    }\n\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\n        drawLoop();\n    } else {\n        drawOnce();\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  const onWheelThis = onWheel.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheelThis,\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;"],"sourceRoot":""}