{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/gl.js","webpack:///./src/shader.js","webpack:///./src/utils.js","webpack:///./src/color.js","webpack:///./src/primitiveTools.js","webpack:///./src/primitive.js","webpack:///./src/quadTree.js","webpack:///./src/layout/force.js","webpack:///./src/layout/random.js","webpack:///./src/layout/utils.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hierarchical2.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/layout/index.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/geomutils.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/layer/util.js","webpack:///./src/shaders/easeFunctions/index.js","webpack:///./src/shaders/easeFunctions/linear.glsl","webpack:///./src/shaders/easeFunctions/sin-in.glsl","webpack:///./src/shaders/easeFunctions/sin-out.glsl","webpack:///./src/shaders/easeFunctions/sin-inout.glsl","webpack:///./src/shaders/easeFunctions/exp-in.glsl","webpack:///./src/shaders/easeFunctions/exp-out.glsl","webpack:///./src/shaders/easeFunctions/exp-inout.glsl","webpack:///./src/shaders/easeFunctions/bounce-in.glsl","webpack:///./src/shaders/easeFunctions/bounce-out.glsl","webpack:///./src/shaders/easeFunctions/bounce-inout.glsl","webpack:///./src/shaders/easeFunctions/circular-in.glsl","webpack:///./src/shaders/easeFunctions/circular-out.glsl","webpack:///./src/shaders/easeFunctions/circular-inout.glsl","webpack:///./src/shaders/easeFunctions/quad-in.glsl","webpack:///./src/shaders/easeFunctions/quad-out.glsl","webpack:///./src/shaders/easeFunctions/quad-inout.glsl","webpack:///./src/shaders/easeFunctions/cubic-in.glsl","webpack:///./src/shaders/easeFunctions/cubic-out.glsl","webpack:///./src/shaders/easeFunctions/cubic-inout.glsl","webpack:///./src/shaders/easeFunctions/quart-in.glsl","webpack:///./src/shaders/easeFunctions/quart-out.glsl","webpack:///./src/shaders/easeFunctions/quart-inout.glsl","webpack:///./src/shaders/easeFunctions/quint-in.glsl","webpack:///./src/shaders/easeFunctions/quint-out.glsl","webpack:///./src/shaders/easeFunctions/quint-inout.glsl","webpack:///./src/shaders/elements/getShiftFuncs.glsl","webpack:///./src/shaders/elements/fsLineHead.glsl","webpack:///./src/shaders/elements/fsLineAnimateFuncs.glsl","webpack:///./src/shaders/elements/fsLineMain.glsl","webpack:///./src/shaders/elements/fsCurve.glsl","webpack:///./src/shaders/elements/index.js","webpack:///./src/shaders/elements/vsLineHead.glsl","webpack:///./src/shaders/elements/vsLineMain.glsl","webpack:///./src/shaders/elements/vsCurveHead.glsl","webpack:///./src/shaders/elements/vsCurveMain.glsl","webpack:///./src/shaders/elements/vsCircleHead.glsl","webpack:///./src/shaders/elements/vsCircleMain.glsl","webpack:///./src/shaders/elements/vsLineArrowHead.glsl","webpack:///./src/shaders/elements/vsLineArrowMain.glsl","webpack:///./src/shaders/elements/vsCurveArrowHead.glsl","webpack:///./src/shaders/elements/vsCurveArrowMain.glsl","webpack:///./src/shaders/elements/vsCircleArrowHead.glsl","webpack:///./src/shaders/elements/vsCircleArrowMain.glsl","webpack:///./src/shaders/elements/fsLineBasic.glsl","webpack:///./src/shaders/elements/fsColorTexture.glsl","webpack:///./src/shaders/elements/fsVarColorTexture.glsl","webpack:///./src/shaders/elements/vsLabelsShader.glsl","webpack:///./src/shaders/elements/fsLabelTexture.glsl","webpack:///./src/shaders/elements/vsLabelsBackgroundShader.glsl","webpack:///./src/shaders/elements/vsLabelsBorder.glsl","webpack:///./src/shaders/elements/fsLabelsBackgroundShader.glsl","webpack:///./src/shaders/elements/fsLabelsBorder.glsl","webpack:///./src/shaders/elements/vsNode.glsl","webpack:///./src/shaders/elements/vsNodeColored.glsl","webpack:///./src/layer/shapes/baseShape.js","webpack:///./src/layer/shapes/edge.js","webpack:///./src/layer/shapes/node.js","webpack:///./src/layer/shapes/edgeArrow.js","webpack:///./src/layer/shapes/labels.js","webpack:///./src/layer/shapes/labelsBackground.js","webpack:///./src/layer/index.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/texts.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./src/ccNetViz.js","webpack:///./src/ccNetVizMultiLevel.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","endsWith","ShelfPack","w","h","options","this","autoResize","shelves","freebins","stats","bins","maxId","Shelf","y","x","free","Bin","id","maxw","maxh","refcount","pack","concat","allocation","results","length","width","height","packOne","inPlace","push","w2","h2","j","shelf","Math","max","resize","bin","waste","h1","w1","best","freebin","Infinity","getBin","ref","allocFreebin","allocShelf","index","splice","alloc","unref","clear","gl","extensions","getSupportedExtensions","result","arguments","e","indexOf","getExtension","type","source","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","b","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","defaultAttr","Shader","vs","fs","shaderParams","shader_classCallCheck","_gl","_vs","_fs","program","_program","createProgram","attachShader","ccNetViz_gl","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","uniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","attribute","attributes","ACTIVE_ATTRIBUTES","getActiveAttrib","size","useProgram","enableVertexAttribArray","disableVertexAttribArray","Utils","from","k","obj","isObject","url","callback","xmlhttp","cbk","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","responseType","open","send","Color","color_classCallCheck","test","exec","v","parseInt","substring","partitionByStyle","data","parts","pN","el","part","style","undefined","idx","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","animateColor","primitive","_this","primitive_classCallCheck","Array","isArray","join","iV","iI","fb","shader","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","forEach","init","floor","maxBufferSize","numVertices","nV","min","nI","numIndices","indices","Uint16Array","zerofiller","indicesarr","verticesarr","apply","vertices","set","styles","adder","isDirty","_iIs","Uint32Array","_iVs","_iBs","Uint8Array","_sizes","store","section","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","addSection","update","DYNAMIC_DRAW","updateEl","pos","buffer","olds","error","bufferSubData","BYTES_PER_ELEMENT","storeToPos","draw","context","uniformMatrix4fv","transform","uniform1f","time","renderTime","texture","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","quadTree","points","xs","ys","x1_","y1_","x2_","y2_","dx","dy","insert","x1","y1","x2","y2","leaf","nx","ny","insertChild","nPoint","point","xm","ym","below","nodes","visit","f","node","sx","sy","children","find","x0","y0","x3","y3","closestPoint","minDistance2","distance2","distance","sqrt","findNode","force","edges","layout_options","edgeDistance","edgeDistace","edgeStrength","friction","charge","gravity","theta2","margin","direction","chargeDistance2","_options","alpha","distances","strengths","charges","repulse","quad","_","cx","cy","dw","dn","px","py","pointCharge","step","q","target","weight","accumulate","random","ccNetViz_quadtree","fixed","rnd","fixed2","minX","maxX","minY","maxY","_default","random_classCallCheck","_nodes","defaults","ccNetViz_utils","extend","create2dArray","rows","columns","_toConsumableArray","keys","map","fill","degrees","ordered_nodes","sort","ordered_degrees","getDepth","depth","depth_visited","Error","tmpDepth","getRanges","abs","start","hierarchicalDirection","foo","fromTo","node1","node2","uniqid","circular_classCallCheck","_edges","center","ordering","angle_step","PI","starting_angle","radius","angle_ratio","radius_ratio","divisions","nd","angle0","astep","ri","rf","nnodes","parents","visited","initHierarchy","this_","nodes_","picked","degree","found_child","ii","topological","angle","cos","sin","tree_classCallCheck","visited_leafs_parent","layer","centered","visited_leafs","child","drawTreeCentered","stepy","alphay","stepx","alphax","leafs","treeT_classCallCheck","drawTreeTop","hierarchical_classCallCheck","roots","next_layer","neighbors","includes","makeLayers","root_option","isroot","max_outdegree","findRoots_","isOrphan","orphan","hierarchical2_classCallCheck","components","current_component","unvisited","orphans","max_layer","maybe_more","layers","lowest_layer","child_found","parent_found","parent_","component","max_nodes_layer","index_offset","vertical_nodes","current_layer","initializeComponent","candidates","layerNodes","separateOrphans","unvisitedNodes","maybe_mode","placeAdditional","layer_val","placeOrphans","lib_es6","input","src_default","TypeError","ml_array_min_lib_es6","ml_array_rescale_lib_es6","output","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","count","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","slice","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","transpose","aux","warn","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","Number","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","scale","sp","spm1","epm1","sk","ek","shift","tmp","Y","threshold","scols","Ls","zeros","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newData","newMatrix","empty","rng","matrix1","matrix2","klass","jj","previousColumn","isEchelonForm","checked","isReducedEchelonForm","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","temp","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","dot","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","add","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","rand","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","mathMethod","inplaceMeth","staticMeth","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","z","iter","cdiv","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","xr","xi","yr","yi","spectral_classCallCheck","A","reduce","EigenvalueDecomposition","iii","arr","mini","second_min","second_mini","third_min","twoSmallest","foo_","xy","maxx","maxy","minx","miny","normalize","spectral2_classCallCheck","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","node_degree","deg","dims","u","ones","uhk","itt_count","stop","uk","ul","top_","vmi","ratio","vsi","normalize2","coordinates","pow","euclideanDistance","narr","hive_classCallCheck","nlines","nodes_segment","ceil","sangle","od","grid_classCallCheck","sq","nlines2","versinus_classCallCheck","hubs","intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","dim","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutHierarchical2","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","rbush","maxEntries","format","_maxEntries","_minEntries","_initFormat","calcBBox","toBBox","bbox","distBBox","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","compare","mid","stack","pop","select","sd","exp","swap","all","_all","search","len","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","item","remove","parent","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","edgeSource","edgeTarget","is_edge","se","te","EPS","cuberoot","distance2ToBezier","eqresult","acos","solveCubic","mindist","dist","getBBFromPoints","xmin","xmax","ymin","ymax","val","pDistance2","xx","yy","C","len_sq","param","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","pointInRect","eq","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","bezierIntersectsRect","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","dist2","ct","getEdgeShift","screensize","ctx","cty","citx","city","ccNetViz_geomutils","getCurveShift","aspect2","len2","curveExc","sizex","nodeSize","sizey","Node","spatialSearch_classCallCheck","Label","textpos","fontSize","isSDF","getLabelSize","wantedSize","label","fontScale","offset","offsety","edge","bb","getTextPos","p1x","p1y","p2x","p2y","Line","getPoints","Circle","xsize","ysize","getBezierPoints","d1","d2","Curve","n2","n3","sortByDistances","e1","e2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sdi","_loop","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","rbushtree","ret","isEdge","isLabel","intersectsRect","_tryAddEl","xradius","yradius","radius2","sc","easeFunctions","linear","sin-in","sin-out","sin-inout","exp-in","exp-out","exp-inout","bounce-in","bounce-out","bounce-inout","circular-in","circular-out","circular-inout","quad-in","quad-out","quad-inout","cubic-in","cubic-out","cubic-inout","quart-in","quart-out","quart-inout","quint-in","quint-out","quint-inout","getShiftFuncs","fsLineHead","fsLineAnimateFuncs","fsLineMain","fsCurve","vsLine","vsCurve","vsCircle","vsLineArrow","vsCurveArrow","vsCircleArrow","easeFunctionPart","ease","elementShaders","fsLineAnimate","fsLineBasic","fsColorTexture","fsVarColorTexture","vsLabelsShader","fsLabelTexture","vsLabelsBackgroundShader","vsLabelsBorder","fsLabelsBackgroundShader","fsLabelsBorder","fsCircle","vsNode","vsNodeColored","BaseShape","baseShape_classCallCheck","_primitive","BaseShapeManager","_filler","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","animateStylesTransl","none","basic","gradient","double-gradient","getEdgeAnimateType","edgeStyle","edge_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","hasAnimation","animateType","ccNetViz_primitive","animateEase","exc","uniform2f","screen","lineSize","aspect","uniformColor","animateSpeed","_this2","lineStepSize","_this3","setVerticeCurveShift","csx","csy","cisx","cisy","ct1","ct2","curveShift","circleShift","EdgeManager","_this4","position","lengthSoFar","normal","startPos","endPos","curve","ydiff2","ydiff3","ydiff4","getNodeSize","node_classCallCheck","node_possibleConstructorReturn","node_getPrototypeOf","NodeColored","NodeManager","textureCoord","colors","shaderparams","offsetMul","bindEdgeArrows","view","getSize","getEdgesCnt","arrowsize","cexc","tx","ty","singles","LineArrow","edgeArrow_classCallCheck","edgeArrow_possibleConstructorReturn","edgeArrow_getPrototypeOf","CurveArrow","CircleArrow","EdgeArrowManager","lineArrows","curveArrows","circleArrows","bindLabels","is_outline","backgroundColor","getLabelType","sdfSize","boldness","height_font","outlineColor","labels_classCallCheck","labels_possibleConstructorReturn","labels_getPrototypeOf","LabelOutline","LabelManager","boxMinusX","boxMinusY","relative","steps","bindLabelParams","is_background","is_border","borderWidth","borderColor","getLabelVertices","startPosX","endPosX","advance","LabelsBackground","labelsBackground_classCallCheck","labelsBackground_possibleConstructorReturn","labelsBackground_getPrototypeOf","LabelsBorder","LabelsBackgroundManager","background","rect","border","labelVertices","src_layer","canvas","textures","files","events","getLabelHideSize","getNodesCnt","onRedraw","redraw","edgeTypes","edgePoses","labelsFiller","getFiller","labelsBackgroundFiller","arrowFiller","edgesFiller","nodesFiller","getCurrentSpatialSearch","spatialSearch","ccNetViz_spatialSearch","layout","removedNodes","removedEdges","getIndex","nidx","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","ti","is_bidirectional_overlap","bidirectional","options_","ccNetViz_layout","is","defaultAdder","labelAdder","slf","getTexture","scene","nodesColored","labelsOutline","labelsBackground","labelsBorder","arrow","enableLazyRedraw","reset","set_end","element","findArea","updateNode","updateEdge","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getVisibleNodes","getVisibleEdges","cntShownNodes","cntShownEdges","initExtensions","elements","loadCalled","lineEdge","getPrimitive","curveEdge","circleEdge","lineArrow","curveArrow","circleArrow","nodeColored","labelOutline","textures_classCallCheck","_load","debounce","_textures","_pending","_n","action","allLoaded","emptyObject","files_classCallCheck","_files","dataType","JSON","parse","ajax","_transformFile","default_classCallCheck","_size","_canvas","document","createElement","display","_el","body","appendChild","_context","getContext","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","GlyphAtlas","resetCache","atlas_classCallCheck","_resetCache","ids","dirty","ALPHA","split","glyphs","rects","glyph","markDirty","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","glyphTrimmer_classCallCheck","lb","rb","glyphData","numCols","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newWidth","bufferCol","valueOf","glyphTrimmer_toConsumableArray","Uint8ClampedArray","SpriteGenerator","fontStyle","spriteGenerator_classCallCheck","round","textSize","cutoff","strokeText","fontFamily","family","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","trimmer","Trimmer","alphaChannel","imageData","createImageData","char","imgData","getImageData","_edt","charCodeAt","process","_edt1d","grid","stride","SimpleGlyph","sdf_classCallCheck","atlas","_cachedGlyphs","_glyphs","_rects","curFont","stringify","wordWidth","widthArray","_getChar","String","fromCharCode","charArray","alignment","textArray","_getCharArray","character","spriteGenerator","glyphID","cache","addGlyph","widthAndHeightObj","getWidthAndHeight","alignText","updateTexture","texts_classCallCheck","_modules","default","ccNetViz_defaultTexts","ccNetViz_sdfTexts","lazyEvents_classCallCheck","_enable","func","wait","immediate","timeout","timestamp","_arguments","later","last","Date","now","setTimeout","callNow","pushUnique","insertTempLayer","checkUniqId","interactivityBatch_classCallCheck","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","__uniqid","_actualTempNodes","_actualTempEdges","main","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","sCanvas","antialias","lastUniqId","mergeArrays","cmp","ccNetViz","self","backgroundStyle","removed","setted","minSize","maxSize","drawFunc","ccNetViz_lazyEvents","checkRemoved","ccNetViz_layer","batch","getBatch","ccNetViz_interactivityBatch","promises","ccNetVizPlugins","Integration","shapes","Promise","config","then","plugin","reflow","applyChanges","removeNode","removeEdge","addEdge","addNode","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","hideSize","silent","ox","oy","ortho","offsetX","offsetY","viewport","COLOR_BUFFER_BIT","startTime","drawNums","drawOnce","drawLoop","fps","requestAnimationFrame","getScreenCoords","conf","getBoundingClientRect","getLayerCoords","disth","distw","findMerge","funcname","f1","f2","getTextPosition","chars","zoomevts","addEvts","evts","addEventListener","passive","passiveEvts","removeEvts","removeEventListener","onDownThis","downe","which","parseTouchEvts","touches","clientX","clientY","dragged","custom","origdist","onDrag","panning","zooming","mx","my","drag","checkChangeViewport","preventDefault","up","onClick","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","lCoords","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","onContextMenu","gl_lose","loseContext","disable","last_view","is_change","onChangeViewport","toDataURL","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","isWebGLSupported","__webpack_exports__","ccNetVizMultiLevel_ccNetVizMultiLevel","ccNetVizMultiLevel","vizLayout","vizScreen","history","curlevel","histel","__computedLayout","insidenodes","insideedges"],"mappings":"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XC,UG7BW,kIH8BXC,YI9BW,iIJ+BXC,SK/BW,oFLgCXC,UMhCW,uFNiCXC,YOjCW,6LPkCXC,YQlCW,qmBRmCXC,aSnCW,whBToCXC,eUpCW,8qBVqCXC,cWrCW,kEXsCXC,eYtCW,8DZuCXC,iBavCW,gKbwCXC,UcxCW,gDdyCXC,WezCW,yDf0CXC,agB1CW,sHhB2CXC,WiB3CW,oDjB4CXC,YkB5CW,kFlB6CXC,cmB7CW,wHnB8CXC,WoB9CW,sDpB+CXC,YqB/CW,8ErBgDXC,csBhDW,sHtBiDXC,WuBjDW,sDvBkDXC,YwBlDW,yGxBmDXC,cyBnDW,mKCAAC,GAAA,uWCAAC,GAAA,8VCAAC,GAAA,y5DCAAC,GAAA,kkCCAAC,GAAA,wlCCqCTC,GAAS,CCrCA,qgBDqCaL,GErCb,kYFqCwC55B,KAAK,MACtDk6B,GAAU,CGtCD,2UHsCeN,GItCf,8ZJsC2C55B,KAAK,MACzDm6B,GAAW,CKvCF,2ULuCiBP,GMvCjB,+RNuC8C55B,KAAK,MAE5Do6B,GAAc,COzCL,uTPyCuBR,GQzCvB,0bRyCuD55B,KACpE,MAEIq6B,GAAe,CS5CN,8UT4CyBT,GU5CzB,wiBV4C0D55B,KACvE,MAEIs6B,GAAgB,CW/CP,uTXiDbV,GYjDa,4ZZmDb55B,KAAK,MAEDu6B,GAAmB,SAAAC,GACvB,SAAAhlC,OAAU0iC,GAAcsC,GAAc,YAYlCC,GAAiB,CACrBR,UACAS,cAXoB,SAAAF,GACpB,MAAO,CACLX,GACAU,GAAiBC,GACjBV,GACAC,IACA/5B,KAAK,OAMP26B,YarEa,ksBbsEbC,ectEa,iMduEbC,kBevEa,yLfwEbC,egBxEa,8ZhByEbC,eiBzEa,mlBjB0EbC,yBkB1Ea,qVlB2EbC,emB3Ea,qfnB4EbC,yBoB5Ea,2LpB6EbC,eqB7Ea,kMrB8EbnB,WACAE,WACAkB,SAAUpB,GACVG,YACAkB,OsBlFa,+StBmFbC,cuBnFa,2WvBoFblB,eACAC,gBACAC,wVwBtFIiB,cACJ,SAAAA,IAAcC,GAAAjnC,KAAAgnC,GACZhnC,KAAKknC,WAAa,uDAGlB,OAAOlnC,KAAKknC,oBAIVC,cACJ,SAAAA,IAAcF,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","file":"ccNetViz.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n // initialises webGL\r\n\r\nexport default class {\r\n  static initExtensions(gl) {\r\n      let extensions = gl.getSupportedExtensions();\r\n      let result = {};\r\n      for (let i = 1; i < arguments.length; i++) {\r\n          let e = arguments[i];\r\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\r\n      }\r\n      return result;\r\n  }\r\n  // compiles shader \r\n  \r\n  static createShader(gl, type, source) {\r\n      let result = gl.createShader(type);\r\n      gl.shaderSource(result, source);\r\n      gl.compileShader(result);\r\n\r\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\r\n          console.log(gl.getShaderInfoLog(result));\r\n          return null;\r\n      }\r\n      return result;\r\n  }\r\n\r\n// texture binding\r\n\r\n  static createTexture(gl, img, onLoad, options) {\r\n      let result = gl.createTexture();\r\n\r\n      let image = new Image();\r\n      \r\n      let load = () => {\r\n            image.onload = null;\r\n            gl.bindTexture(gl.TEXTURE_2D, result);\r\n\r\n            //refer article https://open.gl/textures\r\n\r\n            if((options || {}).sdf){\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }else{\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            onLoad && onLoad();\r\n      }\r\n\r\n      image.onload = load;\r\n      image.src = img;\r\n      image.naturalWidth && image.naturalHeight && load();\r\n      \r\n      result.image = image;\r\n      return result;\r\n  }\r\n\r\n  static uniformColor(gl, location, color) {\r\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\r\n  }\r\n\r\n  static ortho(left, right, bottom, top, near, far) {\r\n      let lr = 1 / (left - right),\r\n          bt = 1 / (bottom - top),\r\n          nf = 1 / (near - far);\r\n\r\n      let result = new Float32Array(16);\r\n      result[0] = -2 * lr;\r\n      result[1] = 0;\r\n      result[2] = 0;\r\n      result[3] = 0;\r\n      result[4] = 0;\r\n      result[5] = -2 * bt;\r\n      result[6] = 0;\r\n      result[7] = 0;\r\n      result[8] = 0;\r\n      result[9] = 0;\r\n      result[10] = 2 * nf;\r\n      result[11] = 0;\r\n      result[12] = (left + right) * lr;\r\n      result[13] = (top + bottom) * bt;\r\n      result[14] = (far + near) * nf;\r\n      result[15] = 1;\r\n      return result;\r\n  }\r\n};\r\n","import ccNetViz_gl from './gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nvar defaultAttr = {color: 4};\r\n\r\nexport default class Shader {\r\n  constructor(gl, vs, fs, shaderParams) {\r\n    this._gl = gl;\r\n    this._vs = vs;\r\n    this._fs = fs;\r\n    \r\n    let program = this._program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\r\n    gl.linkProgram(program);\r\n    \r\n    this.uniforms = {};\r\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveUniform(program, i).name;\r\n        this.uniforms[name] = gl.getUniformLocation(program, name);\r\n    }\r\n    \r\n    let attrParams = (shaderParams || {}).attribute || {};\r\n\r\n    this.attributes = {};\r\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveAttrib(program, i).name;\r\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\r\n    }\r\n    \r\n  }\r\n  \r\n  static get attribute(){\r\n    return defaultAttr;\r\n  }\r\n  \r\n  bind () {\r\n    this._gl.useProgram(this._program);\r\n\r\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\r\n  }\r\n\r\n  unbind () {\r\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\r\n  }\r\n  \r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class Utils {\r\n  static extend(from){\r\n    for(var i = 1; i < arguments.length; i++){\r\n      for(var k in arguments[i]){\r\n        from[k] = arguments[i][k];\r\n      }\r\n    }\r\n    return from;\r\n  }\r\n  \r\n  static isObject (obj) {\r\n    return obj === Object(obj);\r\n  }\r\n  \r\n  static emptyObject(obj) {\r\n    if(!Utils.isObject(obj))\r\n      return false;\r\n\r\n    for(var k in obj)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  static ajax(url, callback, type){\r\n    var xmlhttp;\r\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\r\n    xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = (function(cbk){\r\n      return function(){\r\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\r\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\r\n        }\r\n      }\r\n    })(callback);\r\n    if(type) xmlhttp.responseType=type;\r\n    xmlhttp.open(\"GET\", url, true);\r\n    xmlhttp.send();\r\n  }\r\n\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n/**\r\n * @class\r\n * @classdesc Describes color properties that could be given to the shader.\r\n * @member {number} r\r\n * @member {number} g\r\n * @member {number} b\r\n * @member {number} a\r\n */\r\n\r\n\r\nexport default class Color {\r\n    constructor(color) {\r\n\r\n        // Default value for red, blue and green.\r\n        // Black color is rendered.\r\n        this.r = this.g = this.b = 0;\r\n        this.a = 1;\r\n\r\n        if (color instanceof Color) {\r\n            this.r = color.r;\r\n            this.g = color.g;\r\n            this.b = color.b;\r\n            this.a = color.a;\r\n        } else if (arguments.length >= 3) {\r\n\r\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\r\n            // Aplha value is optional.\r\n            this.r = arguments[0];\r\n            this.g = arguments[1];\r\n            this.b = arguments[2];\r\n            arguments.length > 3 && (this.a = arguments[3]);\r\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\r\n            // Aplha value is optional.\r\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n            this.a = get(color[4]);\r\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\r\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\r\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 100;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\r\n\r\n            // color is of the form '#23ff74'.\r\n            color = parseInt(color.substring(1), 16);\r\n\r\n            // Converts to range [0,1] by using bitwise operator.\r\n            this.r = (color >> 16 & 255) / 255;\r\n            this.g = (color >> 8 & 255) / 255;\r\n            this.b = (color & 255) / 255;\r\n        }\r\n    }\r\n};","import ccNetViz_color  from './color' ;\r\n\r\nfunction partitionByStyle(data){\r\n    let parts = {};\r\n    \r\n    let pN = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let el = data[i];\r\n        let part = parts[el.style] = parts[el.style] || [];\r\n        if(part.idx === undefined)\r\n          part.idx = [];\r\n        part.idx.push(i); \r\n\r\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\r\n        \r\n        part.push(el);\r\n    }\r\n    \r\n    return parts;\r\n}\r\n\r\nfunction getPartitionStyle(style, baseStyle, styleProperty){\r\n    let result = {};\r\n\r\n    let copy = s => {\r\n        if (s) for (let p in s) result[p] = s[p];\r\n    };\r\n\r\n    copy(baseStyle);\r\n    copy(style);\r\n\r\n    if (styleProperty) {\r\n        copy(baseStyle[styleProperty]);\r\n        style && copy(style[styleProperty]);\r\n    }\r\n    result.color = result.color && new ccNetViz_color(result.color);\r\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\r\n    return result;\r\n};\r\n\r\n\r\nexport {partitionByStyle, getPartitionStyle};","import ccNetViz_shader from './shader';\r\nimport ccNetViz_utils from './utils';\r\nimport { getPartitionStyle } from './primitiveTools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class primitive {\r\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\r\n    if (Array.isArray(vs)) {\r\n      vs = vs.join('\\n');\r\n    }\r\n    if (Array.isArray(fs)) {\r\n      fs = fs.join('\\n');\r\n    }\r\n    let shader = new ccNetViz_shader(gl, vs, fs, shaderParams);\r\n    let buffers = [];\r\n    let sections = [];\r\n\r\n    let sectionsByStyle = {};\r\n\r\n    let e = {};\r\n    let iV,\r\n      iI,\r\n      iS = 0,\r\n      iB = 0;\r\n\r\n    let partLength = (filler, part) => {\r\n      if (filler.size) {\r\n        let n = 0;\r\n        part.forEach(p => {\r\n          n += filler.size(e, p);\r\n        });\r\n        return n;\r\n      } else {\r\n        return part.length;\r\n      }\r\n      return;\r\n    };\r\n\r\n    let init = (filler, n) => {\r\n      iV = iI = 0;\r\n      let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\r\n      let nV = Math.min(max, n - (iB - iS) * max);\r\n      let nI = nV * filler.numIndices;\r\n\r\n      if (!e.indices || e.indices.length !== nI) {\r\n        e.indices = new Uint16Array(nI);\r\n        nV *= filler.numVertices;\r\n        for (let a in shader.attributes)\r\n          e[a] = new Float32Array(shader.attributes[a].size * nV);\r\n      }\r\n    };\r\n\r\n    let zerofiller = {\r\n      set: (v, iV, iI, numVertices, numIndices) => {\r\n        let indicesarr = [v.indices, iV, iI];\r\n        for (let i = 0; i < numIndices; i++) indicesarr.push(0);\r\n\r\n        let verticesarr = [undefined, iV, iI];\r\n        for (let i = 0; i < numVertices; i++) verticesarr.push(0);\r\n\r\n        for (var k in v) {\r\n          if (k === 'indices') {\r\n            primitive.indices.apply(this, indicesarr);\r\n          } else {\r\n            verticesarr[0] = v[k];\r\n            primitive.vertices.apply(this, verticesarr);\r\n          }\r\n        }\r\n      },\r\n    };\r\n\r\n    this.set = (gl, styles, adder, data, parts, get) => {\r\n      var isDirty = false;\r\n\r\n      iS = 0;\r\n      iB = 0;\r\n\r\n      this._iIs = new Uint32Array(data.length);\r\n      this._iVs = new Uint32Array(data.length);\r\n      this._iBs = new Uint8Array(data.length);\r\n      this._sizes = new Uint8Array(data.length);\r\n\r\n      let store = section => {\r\n        let b = buffers[iB];\r\n        if (!b) {\r\n          buffers[iB] = b = {};\r\n          for (let a in e) b[a] = gl.createBuffer();\r\n        }\r\n        for (let a in shader.attributes) {\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n          gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\r\n        b.numIndices = iI;\r\n        b.numVertices = iV;\r\n        section.buffers.push(b);\r\n        iB++;\r\n      };\r\n\r\n      sections = [];\r\n      for (let p in parts) {\r\n        iS = iB;\r\n\r\n        let section = {\r\n          style: getPartitionStyle(styles[p], baseStyle, styleProperty),\r\n          buffers: [],\r\n          styleName: p,\r\n        };\r\n\r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n        filler.numIndices = filler.numIndices || 6;\r\n\r\n        let part = parts[p];\r\n\r\n        let pL = partLength(filler, part);\r\n        init(filler, pL);\r\n        let max = primitive.maxBufferSize;\r\n        for (let i = 0; i < part.length; i++) {\r\n          let s = filler.size ? filler.size(e, part[i]) : 1;\r\n          let niV = iV + s * filler.numVertices;\r\n          let niI = iI + s * filler.numIndices;\r\n\r\n          if (niV >= max) {\r\n            store(section);\r\n            init(filler, pL);\r\n            niV = iV;\r\n            niI = iI;\r\n          }\r\n\r\n          if (filler.set(e, part[i], iV, iI)) isDirty = true;\r\n\r\n          let idx = part.idx[i];\r\n          this._iIs[idx] = iI;\r\n          this._iVs[idx] = iV;\r\n          this._iBs[idx] = iB;\r\n          this._sizes[idx] = s;\r\n\r\n          iI = niI;\r\n          iV = niV;\r\n        }\r\n        store(section);\r\n\r\n        function add() {\r\n          sections.push(this);\r\n          sectionsByStyle[this.styleName] = this;\r\n        }\r\n        let addSection = add.bind(section);\r\n\r\n        adder ? adder(section, addSection) : addSection();\r\n      }\r\n\r\n      return isDirty;\r\n    };\r\n\r\n    let fb;\r\n    this.update = function(gl, attribute, data, get) {\r\n      let i = 0,\r\n        size = shader.attributes[attribute].size;\r\n      sections.forEach(function(section) {\r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n\r\n        section.buffers.forEach(function(e) {\r\n          (!fb || fb.length !== size * e.numVertices) &&\r\n            (fb = new Float32Array(size * e.numVertices));\r\n          for (\r\n            let iV = 0;\r\n            iV < e.numVertices;\r\n            iV +=\r\n              (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices\r\n          )\r\n            filler.set(fb, data[i++], iV);\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\r\n          gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\r\n        });\r\n      });\r\n    };\r\n\r\n    this.updateEl = (gl, el, pos, get) => {\r\n      let storeToPos = (b, iV, iI) => {\r\n        for (let a in shader.attributes) {\r\n          gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n          gl.bufferSubData(\r\n            gl.ARRAY_BUFFER,\r\n            shader.attributes[a].size * iV * e[a].BYTES_PER_ELEMENT,\r\n            e[a]\r\n          );\r\n        }\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n        gl.bufferSubData(\r\n          gl.ELEMENT_ARRAY_BUFFER,\r\n          iI * e.indices.BYTES_PER_ELEMENT,\r\n          e.indices\r\n        );\r\n      };\r\n\r\n      let section = sectionsByStyle[el.style];\r\n\r\n      let filler = get(section.style);\r\n      filler.numVertices = filler.numVertices || 4;\r\n      filler.numIndices = filler.numIndices || 6;\r\n\r\n      iB = iS = 0;\r\n\r\n      let buffer = section.buffers[this._iBs[pos]];\r\n      let s = filler.size ? filler.size(buffer, el) : 1;\r\n      let olds = this._sizes[pos];\r\n      if (s > olds) {\r\n        console.error(\r\n          'Cannot set primitive to new value which has greater size (' +\r\n            s +\r\n            ' > ' +\r\n            olds +\r\n            ') - no enough empty space to fill in GL buffer'\r\n        );\r\n        return;\r\n      }\r\n\r\n      init(filler, olds);\r\n      filler.set(e, el, 0, 0);\r\n\r\n      for (; s < olds; s++) {\r\n        //zero fill empty spaces\r\n        zerofiller.set(\r\n          e,\r\n          s * filler.numVertices,\r\n          s * filler.numIndices,\r\n          filler.numVertices,\r\n          filler.numIndices\r\n        );\r\n      }\r\n\r\n      let iV = this._iVs[pos];\r\n      let iI = this._iIs[pos];\r\n      storeToPos(buffer, iV, iI);\r\n    };\r\n\r\n    this.draw = context => {\r\n      context.shader = shader;\r\n      shader.bind();\r\n\r\n      gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\r\n      gl.uniform1f(shader.uniforms.time, context.renderTime);\r\n\r\n      sections.forEach(section => {\r\n        if (section.style.texture) {\r\n          section.style.texture.update && section.style.texture.update();\r\n          gl.activeTexture(gl.TEXTURE0);\r\n          gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\r\n          gl.uniform1i(shader.uniforms.texture, 0);\r\n        }\r\n\r\n        context.style = section.style;\r\n        if (bind(context)) return;\r\n\r\n        section.buffers.forEach(e => {\r\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\r\n\r\n          for (var a in shader.attributes) {\r\n            var attribute = shader.attributes[a];\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\r\n            gl.vertexAttribPointer(\r\n              attribute.index,\r\n              attribute.size,\r\n              gl.FLOAT,\r\n              false,\r\n              0,\r\n              0\r\n            );\r\n          }\r\n\r\n          gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\r\n        });\r\n      });\r\n\r\n      shader.unbind();\r\n    };\r\n  }\r\n\r\n  static vertices(buffer, iV) {\r\n    for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = arguments[i];\r\n  }\r\n\r\n  static singles(buffer, iV) {\r\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = arguments[i];\r\n  }\r\n\r\n  static colors(buffer, iV) {\r\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\r\n      let c = arguments[i];\r\n      buffer[j++] = c.r;\r\n      buffer[j++] = c.g;\r\n      buffer[j++] = c.b;\r\n      buffer[j++] = c.a;\r\n    }\r\n  }\r\n\r\n  static indices(buffer, iV, iI) {\r\n    for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++)\r\n      buffer[j] = iV + arguments[i];\r\n  }\r\n\r\n  static quad(buffer, iV, iI) {\r\n    primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\r\n  }\r\n\r\n  static get maxBufferSize() {\r\n    return 65536;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(points) {\r\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n\r\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n    xs = [], ys = [];\r\n    n = points.length;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n        d = points[i];\r\n        if (d.x < x1_) x1_ = d.x;\r\n        if (d.y < y1_) y1_ = d.y;\r\n        if (d.x > x2_) x2_ = d.x;\r\n        if (d.y > y2_) y2_ = d.y;\r\n        xs.push(d.x);\r\n        ys.push(d.y);\r\n    }\r\n\r\n    let dx = x2_ - x1_;\r\n    let dy = y2_ - y1_;\r\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\r\n\r\n    function create() {\r\n        return {\r\n            leaf: true,\r\n            nodes: [],\r\n            point: null,\r\n            x: null,\r\n            y: null\r\n        };\r\n    }\r\n\r\n    function visit(f, node, x1, y1, x2, y2) {\r\n        if (!f(node, x1, y1, x2, y2)) {\r\n            let sx = (x1 + x2) * 0.5;\r\n            let sy = (y1 + y2) * 0.5;\r\n            let children = node.nodes;\r\n\r\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\r\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\r\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\r\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (n.leaf) {\r\n            let nx = n.x;\r\n            let ny = n.y;\r\n\r\n            if (nx !== null) {\r\n                if (nx === x && ny === y) {\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n                else {\r\n                    let nPoint = n.point;\r\n                    n.x = n.y = n.point = null;\r\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n            } else {\r\n                n.x = x, n.y = y, n.point = d;\r\n            }\r\n        } else {\r\n            insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        let xm = (x1 + x2) * 0.5;\r\n        let ym = (y1 + y2) * 0.5;\r\n        let right = x >= xm;\r\n        let below = y >= ym;\r\n        let i = below << 1 | right;\r\n\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = create());\r\n\r\n        right ? x1 = xm : x2 = xm;\r\n        below ? y1 = ym : y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n    }\r\n\r\n    function findNode(root, x, y, x0, y0, x3, y3) {\r\n        let minDistance2 = Infinity;\r\n        let closestPoint;\r\n\r\n        (function find(node, x1, y1, x2, y2) {\r\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n\r\n            let point;\r\n            if (point = node.point) {\r\n                let dx = x - node.x;\r\n                let dy = y - node.y;\r\n                let distance2 = dx * dx + dy * dy;\r\n\r\n                if (distance2 < minDistance2) {\r\n                    let distance = Math.sqrt(minDistance2 = distance2);\r\n                    x0 = x - distance, y0 = y - distance;\r\n                    x3 = x + distance, y3 = y + distance;\r\n                    closestPoint = point;\r\n                }\r\n            }\r\n\r\n            let children = node.nodes;\r\n            let xm = (x1 + x2) * .5;\r\n            let ym = (y1 + y2) * .5;\r\n            let right = x >= xm;\r\n            let below = y >= ym;\r\n\r\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n                if (node = children[i & 3]) switch (i & 3) {\r\n                    case 0: find(node, x1, y1, xm, ym); break;\r\n                    case 1: find(node, xm, y1, x2, ym); break;\r\n                    case 2: find(node, x1, ym, xm, y2); break;\r\n                    case 3: find(node, xm, ym, x2, y2); break;\r\n                }\r\n            }\r\n        })(root, x0, y0, x3, y3);\r\n\r\n        return closestPoint;\r\n    }\r\n\r\n    let root = create();\r\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\r\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\r\n\r\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n    --i;\r\n\r\n    xs = ys = points = d = null;\r\n\r\n    return root;\r\n};","import ccNetViz_quadtree from '../quadTree';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(nodes, edges, layout_options) {\r\n  const edgeDistance = layout_options.edgeDistace || 15,\r\n    edgeStrength = layout_options.edgeStrength || 1,\r\n    friction = layout_options.friction || 0.9,\r\n    charge = layout_options.charge || -30,\r\n    gravity = layout_options.gravity || 0.4,\r\n    theta2 = layout_options.theta2 || 0.64,\r\n    size = layout_options.size || [1, 1],\r\n    margin = layout_options.margin || 0.05,\r\n    direction = layout_options.direction || 'left-right',\r\n    chargeDistance2 = layout_options.chargeDistance2 || Infinity;\r\n  this._options = {\r\n    margin: margin,\r\n    direction: direction,\r\n  };\r\n\r\n  let alpha,\r\n    distances = [],\r\n    strengths = [],\r\n    charges = [];\r\n\r\n  function accumulate(quad, alpha, charges) {\r\n    let cx = 0,\r\n      cy = 0;\r\n    quad.charge = 0;\r\n    if (!quad.leaf) {\r\n      let nodes = quad.nodes;\r\n      let c,\r\n        n = nodes.length;\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        c = nodes[i];\r\n        if (c == null) continue;\r\n        accumulate(c, alpha, charges);\r\n        quad.charge += c.charge;\r\n        cx += c.charge * c.cx;\r\n        cy += c.charge * c.cy;\r\n      }\r\n    }\r\n    if (quad.point) {\r\n      if (!quad.leaf) {\r\n        quad.point.x += Math.random() - 0.5;\r\n        quad.point.y += Math.random() - 0.5;\r\n      }\r\n      let k = alpha * charges[quad.point.index];\r\n      quad.charge += quad.pointCharge = k;\r\n      cx += k * quad.point.x;\r\n      cy += k * quad.point.y;\r\n    }\r\n    quad.cx = cx / quad.charge;\r\n    quad.cy = cy / quad.charge;\r\n  }\r\n\r\n  function repulse(node) {\r\n    return function(quad, x1, _, x2) {\r\n      if (quad.point !== node) {\r\n        let dx = quad.cx - node.x;\r\n        let dy = quad.cy - node.y;\r\n        let dw = x2 - x1;\r\n        let dn = dx * dx + dy * dy;\r\n\r\n        if ((dw * dw) / theta2 < dn) {\r\n          if (dn < chargeDistance2) {\r\n            let k = quad.charge / dn;\r\n            node.px -= dx * k;\r\n            node.py -= dy * k;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        if (quad.point && dn && dn < chargeDistance2) {\r\n          let k = quad.pointCharge / dn;\r\n          node.px -= dx * k;\r\n          node.py -= dy * k;\r\n        }\r\n      }\r\n      return !quad.charge;\r\n    };\r\n  }\r\n\r\n  function step() {\r\n    if ((alpha *= 0.99) < 0.05) {\r\n      alpha = 0;\r\n      return true;\r\n    }\r\n\r\n    let q, o, s, t, l, k, x, y;\r\n    let n = nodes.length;\r\n    let m = edges.length;\r\n\r\n    for (let i = 0; i < m; i++) {\r\n      o = edges[i];\r\n      s = o.source;\r\n      t = o.target;\r\n      x = t.x - s.x;\r\n      y = t.y - s.y;\r\n      if ((l = x * x + y * y)) {\r\n        l = (alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i])) / l;\r\n        x *= l;\r\n        y *= l;\r\n        t.x -= x * (k = s.weight / (t.weight + s.weight));\r\n        t.y -= y * k;\r\n        s.x += x * (k = 1 - k);\r\n        s.y += y * k;\r\n      }\r\n    }\r\n\r\n    if ((k = alpha * gravity)) {\r\n      x = size[0] / 2;\r\n      y = size[1] / 2;\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        o = nodes[i];\r\n        o.x += (x - o.x) * k;\r\n        o.y += (y - o.y) * k;\r\n      }\r\n    }\r\n\r\n    if (charge) {\r\n      accumulate((q = ccNetViz_quadtree(nodes)), alpha, charges);\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        let o = nodes[i];\r\n        !o.fixed && q.visit(repulse(o));\r\n      }\r\n    }\r\n\r\n    const rnd = (min, max) => Math.random() * (max - min) + min;\r\n    for (let i = 0; i < n; i++) {\r\n      o = nodes[i];\r\n      if (o.fixed || o.fixed2) {\r\n        o.x = o.px;\r\n        o.y = o.py;\r\n      } else {\r\n        o.x -= (o.px - (o.px = o.x)) * friction;\r\n        o.y -= (o.py - (o.py = o.y)) * friction;\r\n        if (typeof options !== 'undefined') {\r\n          if (typeof options.minX !== 'undefined') {\r\n            if (o.x < options.minX || o.x > options.maxX) {\r\n              o.x = rnd(options.minX, options.maxX);\r\n            }\r\n            if (o.y < options.minY || o.y > options.maxY) {\r\n              o.y = rnd(options.minY, options.maxY);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  this.apply = function() {\r\n    let n = nodes.length;\r\n    let d = Math.sqrt(n);\r\n    let s = 0.3 / d;\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      let o = nodes[i];\r\n      o.weight = 0;\r\n      o.x = o.x !== undefined ? o.x : s + (i % d) / d;\r\n      o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\r\n      o.px = o.x;\r\n      o.py = o.y;\r\n      charges[i] = charge;\r\n    }\r\n\r\n    for (let i = 0; i < edges.length; i++) {\r\n      let o = edges[i];\r\n      o.source.weight++;\r\n      o.target.weight++;\r\n      distances[i] = edgeDistance;\r\n      strengths[i] = edgeStrength;\r\n    }\r\n\r\n    alpha = 0.1;\r\n    while (!step());\r\n\r\n    return this._options;\r\n  };\r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  constructor(nodes, layout_options) {\r\n    this._nodes = nodes;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  apply() {\r\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\r\n      let o = this._nodes[i];\r\n      o.x = Math.random();\r\n      o.y = Math.random();\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport function create2dArray(rows, columns) {\r\n  return [...Array(rows).keys()].map(i => Array(columns).fill(0));\r\n}\r\n\r\nexport function degrees(nodes, edges) {\r\n  // should return ordered nodes and their degrees - high to low\r\n  let degrees = Array(nodes.length).fill(0);\r\n  edges.forEach(function(e) {\r\n    degrees[e.source.index] += 1;\r\n    degrees[e.target.index] += 1;\r\n  }); // check to see if not getting double of the degree in undirected graphs\r\n  //getting the order of nodes from highest to lowest degrees\r\n  let ordered_nodes = degrees.map(function(el, i) {\r\n    return { index: i, value: el };\r\n  });\r\n  ordered_nodes.sort(function(a, b) {\r\n    return +(a.value < b.value) || +(a.value === b.value) - 1;\r\n  });\r\n  let ordered_degrees = ordered_nodes.map(function(el) {\r\n    return degrees[el.index];\r\n  });\r\n  return { nodes: ordered_nodes, degrees: ordered_degrees };\r\n}\r\n\r\nexport function getDepth(obj) {\r\n  let depth = 0;\r\n  if (obj.children) {\r\n    obj.children.forEach(function(d) {\r\n      if (d.depth_visited == true) {\r\n        throw new Error('This layout is only for trees acyclic graphs');\r\n      }\r\n      d.depth_visited = true;\r\n      let tmpDepth = getDepth(d);\r\n      if (tmpDepth > depth) {\r\n        depth = tmpDepth;\r\n      }\r\n    });\r\n  }\r\n  return 1 + depth;\r\n}\r\n\r\nexport function getRanges(n) {\r\n  n = Math.abs(n);\r\n  if (n <= 1) {\r\n    return {\r\n      start: 0.5,\r\n      step: 1,\r\n    };\r\n  }\r\n  let start = 0.05;\r\n  return {\r\n    start,\r\n    step: (1 - 2 * start) / (n - 1),\r\n  };\r\n}\r\n\r\nexport function hierarchicalDirection(nodes, direction) {\r\n  if (direction == 'right-left') {\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      nodes[i].x = 1 - nodes[i].x;\r\n    }\r\n  } else if (direction == 'top-down') {\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      const foo = 1 - nodes[i].x;\r\n      nodes[i].x = nodes[i].y;\r\n      nodes[i].y = foo;\r\n    }\r\n  } else if (direction == 'bottom-up') {\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      const foo = nodes[i].x;\r\n      nodes[i].x = nodes[i].y;\r\n      nodes[i].y = foo;\r\n    }\r\n  } else if (direction != 'left-right') {\r\n    throw new Error(\r\n      \"directions can be only 'left-right' (default), 'right-left', 'top-down' or 'bottom-up'\"\r\n    );\r\n  }\r\n}\r\n\r\nexport function initHierarchy(nodes, edges) {\r\n  nodes.forEach(function(n, i) {\r\n    n.parents = [];\r\n    n.children = [];\r\n    n.visited = false;\r\n  });\r\n  edges.forEach(function(e, i) {\r\n    e.source.children.push(e.target);\r\n    e.target.parents.push(e.source);\r\n  });\r\n}\r\n\r\nexport function findRoots_(nodes, root_option) {\r\n  // find the roots:\r\n  // nodes defined by the user as roots OR\r\n  // nodes with in-degree == 0 OR\r\n  // nodes with greatest in-degree (or degree if undirected graph)\r\n  let roots = [];\r\n  if (root_option == 'user-defined' || root_option == 'auto') {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i].isroot == true) {\r\n        // has to be on the json file of the graph\r\n        roots.push(nodes[i]);\r\n      }\r\n    }\r\n  }\r\n  if (\r\n    root_option == 'no-in-degree' ||\r\n    (root_option == 'auto' && roots.length == 0)\r\n  ) {\r\n    if (roots.length == 0) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].parents.length == 0) {\r\n          roots.push(nodes[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (root_option == 'degree' || (root_option == 'auto' && roots.length == 0)) {\r\n    // calculate max out-degree\r\n    let max_outdegree = 0;\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length > max_outdegree) {\r\n        max_outdegree = node.children.length;\r\n      }\r\n    });\r\n    // choose vertices with greatest out-degree\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length == max_outdegree) {\r\n        roots.push(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  return roots;\r\n}\r\n\r\nexport function erdosSectorialization(degrees, min_incidence) {\r\n  let sectorialization =\r\n    'classification of vertices into hubs, intermediary and peripheral';\r\n  // Returns fractions of hubs, intermediary and peripheral vertices\r\n  // given their degrees and a minimum incidence of histogram bin\r\n  // by comparing the distribution against that of an Erdös-Rényi network.\r\n  // Only basic partitioning using degree is implemented.\r\n  // For other possibilities (using in-out degrees and strengths) see:\r\n  // http://dx.doi.org/10.1016/j.physa.2017.04.109\r\n\r\n  // get maximum degree\r\n  // make list of distinct degree values\r\n  // make binomial distribution considering probability of edge and max degree\r\n  // derive sectors by comparing the empirical distribution against the binomial\r\n  // model implementation:\r\n  // https://github.com/ttm/percolation/blob/master/percolation/measures/topology/erdosSectors.py\r\n\r\n  // not implemented now because it requires an external package (to build the binomial)\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport { degrees, initHierarchy } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nfunction fromTo(node1, node2) {\r\n  let children = node1.children;\r\n  for (let i = 0; i < children.length; ++i) {\r\n    if (children[i].uniqid === node2.uniqid) return true;\r\n  }\r\n  return false;\r\n}\r\nfunction topological(nd, nodes) {\r\n  let nodes_ = [nodes[0]];\r\n  nodes[0].picked = true;\r\n  for (let i = 1; i < nd.nodes.length; ++i) {\r\n    nodes[i].degree = nd.degrees[i];\r\n  }\r\n  let t = 0;\r\n  for (let i = 1; i < nodes.length; ++i) {\r\n    let degree = nodes[i].degree;\r\n    if (\r\n      (i === nodes.length - 1 ||\r\n        degree !== nodes[i + 1].degree ||\r\n        fromTo(nodes_[t], nodes[i])) &&\r\n      nodes[i].picked != true\r\n    ) {\r\n      nodes_.push(nodes[i]);\r\n      nodes[i].picked = true;\r\n      t++;\r\n    } else {\r\n      // get all children of last node and see if one of them has degree == degree\r\n      // if true, pick the node, else pick any node with degree == degree\r\n      let children = nodes_[t].children;\r\n      let found_child = false;\r\n      for (let j = 0; j < children.length; ++j) {\r\n        if (children[j].degree === degree && children[j].picked !== true) {\r\n          nodes_.push(children[j]);\r\n          children[j].picked = true;\r\n          found_child = true;\r\n          break;\r\n        }\r\n      }\r\n      let ii = 0;\r\n      while (found_child !== true) {\r\n        if (nodes[ii].picked !== true) {\r\n          nodes_.push(nodes[ii]);\r\n          nodes[ii].picked = true;\r\n          found_child = true;\r\n        }\r\n        ii++;\r\n        if (ii === nodes.length) break;\r\n      }\r\n    }\r\n  }\r\n  return nodes_;\r\n}\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges, layout_options = {}) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    const margin = 0.05;\r\n    const center = [0.5, 0.5];\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n      ordering: 'degree', // \"topological\" for degree which also considers the topological order\r\n      angle_step: (2 * Math.PI) / nodes.length,\r\n      starting_angle: 0,\r\n      center: center,\r\n      radius: Math.max.apply(null, center) - margin, // initial radius\r\n      angle_ratio: 1, // how many 2*pi from first to last nodes\r\n      radius_ratio: 1, // factor that radius changes after 2*pi\r\n      divisions: 1, // how many partitions of the circle are used.\r\n      // I.e. each partition has angle 2*pi/divisions;\r\n      // and each successive node is placed in each successive partition\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n  apply() {\r\n    const nd = degrees(this._nodes, this._edges);\r\n    const angle0 = this._options.starting_angle;\r\n    const astep = this._options.angle_step * this._options.angle_ratio;\r\n    const center = this._options.center;\r\n    const ri = this._options.radius; // initial\r\n    const rf = this._options.radius_ratio * this._options.radius; // final\r\n    const divisions = this._options.divisions;\r\n    const nnodes = this._nodes.length;\r\n    if (this._options.ordering == 'topological') {\r\n      initHierarchy(this._nodes, this._edges);\r\n      let this_ = this;\r\n      let nodes = nd.nodes.map(function(el) {\r\n        return this_._nodes[el.index];\r\n      });\r\n      let nodes_ = topological(nd, nodes);\r\n      for (let i = 0; i < nnodes; ++i) {\r\n        const radius = ri + (i * (rf - ri)) / (nnodes - 1);\r\n        const angle =\r\n          angle0 +\r\n          Math.floor(i / divisions) * astep +\r\n          ((2 * Math.PI) / divisions) * (i % divisions);\r\n        if (typeof nodes_[i] === 'undefined') continue;\r\n        nodes_[i].x = center[0] + Math.cos(angle) * radius;\r\n        nodes_[i].y = center[1] + Math.sin(angle) * radius;\r\n        nodes_[i].weight = nodes_[i].degree;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < nnodes; ++i) {\r\n        const radius = ri + (i * (rf - ri)) / (nnodes - 1);\r\n        const angle =\r\n          angle0 +\r\n          Math.floor(i / divisions) * astep +\r\n          ((2 * Math.PI) / divisions) * (i % divisions);\r\n        this._nodes[nd.nodes[i].index].x = center[0] + Math.cos(angle) * radius;\r\n        this._nodes[nd.nodes[i].index].y = center[1] + Math.sin(angle) * radius;\r\n        this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport { getDepth, getRanges, hierarchicalDirection } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right', // other options: right-left, top-down, bottom-up\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  drawTreeCentered(root, visited_leafs_parent = 0, layer = 1) {\r\n    root.centered = true;\r\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n    // branch order is for now stable but unpredictable, see layouts.cri\r\n    let visited_leafs = 0;\r\n    for (let i = 0; i < root.children.length; i++) {\r\n      let child = root.children[i];\r\n      if (child.centered != true) {\r\n        visited_leafs += this.drawTreeCentered(\r\n          child,\r\n          visited_leafs + visited_leafs_parent,\r\n          layer + 1\r\n        );\r\n      }\r\n    }\r\n    if (root.children == 0) {\r\n      visited_leafs++;\r\n    }\r\n    // moving to parent, position node\r\n    root.y =\r\n      this.stepy * (visited_leafs_parent + (visited_leafs - 1) / 2) +\r\n      this.alphay;\r\n    root.x = (layer - 1) * this.stepx + this.alphax;\r\n    return visited_leafs;\r\n  }\r\n\r\n  apply() {\r\n    // only one root node supported for now\r\n    // left-right tree by default, let user choose\r\n    // top-down, bottom-top, right-left in subsequent versions\r\n    // hierarchical layouts for non-trees (cyclical graphs) should be\r\n    // implemented separately for now\r\n    let nodes = this._nodes;\r\n    // make hierarchy, annotate parent(s) and children in the nodes\r\n    nodes.forEach(function(n, i) {\r\n      n.parents = [];\r\n      n.children = [];\r\n      n.centered = false;\r\n    });\r\n    this._edges.forEach(function(e, i) {\r\n      e.source.children.push(e.target);\r\n      e.target.parents.push(e.source);\r\n    });\r\n    // find the root\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i].parents.length == 0) {\r\n        var root = nodes[i];\r\n        break;\r\n      }\r\n    }\r\n    const depth = getDepth(root);\r\n    // each layer of tree x = [0+alpha,1-alpha]\r\n    let r = getRanges(depth);\r\n    this.alphax = r.start;\r\n    this.stepx = r.step;\r\n    // posx = alphax + stepx*(depth-1)\r\n\r\n    // find the number of leafs to distribute nodes vertically\r\n    let leafs = 0;\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length == 0) {\r\n        leafs++;\r\n      }\r\n    });\r\n    r = getRanges(leafs);\r\n    // each leaf y = [0+alpha,1-alpha]\r\n    this.alphay = r.start;\r\n    this.stepy = r.step;\r\n    // posy = alphay + stepy*(leafn-1)\r\n\r\n    this.drawTreeCentered(root);\r\n    hierarchicalDirection(this._nodes, this._options.direction);\r\n    return this._options;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport { getDepth, getRanges, hierarchicalDirection } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right', // other options: right-left, top-down, bottom-up\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  drawTreeTop(root, visited_leafs_parent = 0, layer = 1) {\r\n    // each node is in vertically on the top of the stack of its leafs\r\n    root.visited = true;\r\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n    root.x = this.alphax + this.stepx * (layer - 1);\r\n    root.y = 1 - (this.alphay + this.stepy * visited_leafs_parent);\r\n    // visit children until leafs\r\n    let visited_leafs = 0;\r\n    for (let i = 0; i < root.children.length; i++) {\r\n      let child = root.children[i];\r\n      if (child.centered != true) {\r\n        visited_leafs += this.drawTreeTop(\r\n          child,\r\n          visited_leafs + visited_leafs_parent,\r\n          layer + 1\r\n        );\r\n      }\r\n    }\r\n    if (root.children.length == 0) {\r\n      visited_leafs++;\r\n    }\r\n    return visited_leafs;\r\n  }\r\n  apply() {\r\n    let nodes = this._nodes;\r\n    // make hierarchy, annotate parent(s) and children in the nodes\r\n    // this layout can be run on any graph actually\r\n    // for which the children might be selected e.g. for their degree\r\n    // draw can be decided on other measures, such as closeness centrality or clustering\r\n    nodes.forEach(function(n, i) {\r\n      n.parents = [];\r\n      n.children = [];\r\n      n.centered = false;\r\n    });\r\n    this._edges.forEach(function(e, i) {\r\n      e.source.children.push(e.target);\r\n      e.target.parents.push(e.source);\r\n    });\r\n    // find the root\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i].parents.length == 0) {\r\n        var root = nodes[i];\r\n        break;\r\n      }\r\n    }\r\n    const depth = getDepth(root);\r\n    // each layer of tree x = [0+alpha,1-alpha]\r\n    let r = getRanges(depth);\r\n    this.alphax = r.start;\r\n    this.stepx = r.step;\r\n    // posx = alphax + stepx*(depth-1)\r\n\r\n    // find the number of leafs to distribute nodes vertically\r\n    let leafs = 0;\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length == 0) {\r\n        leafs++;\r\n      }\r\n    });\r\n    // each leaf y = [0+alpha,1-alpha]\r\n    r = getRanges(leafs);\r\n    this.alphay = r.start;\r\n    this.stepy = r.step;\r\n    // posy = alphay + stepy*(leafn-1)\r\n\r\n    // give nodes their positions\r\n    // plot each branch in depth first,\r\n    // increment y position for each leaf\r\n    // backtracking to go from leaf to parents\r\n    // and decide if parent is visited (always in tree layout)\r\n\r\n    this.drawTreeTop(root);\r\n    hierarchicalDirection(this._nodes, this._options.direction);\r\n    return this._options;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport ccNetViz_utils from '../utils';\r\n// import findRoots_ from './utils';\r\n\r\nexport default class {\r\n  // this layout should handle any digraph\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right', // other options: right-left, top-down, bottom-up\r\n      roots: 'auto', // other options: user-defined (in the graph define isroot = true); \"no-in-degree\"; \"auto\"\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  makeLayers(nodes, layer) {\r\n    if (nodes.length > 1) {\r\n      const stepy = 1 / (nodes.length - 1);\r\n      for (let i = 0; i < nodes.length; ++i) {\r\n        nodes[i].visited = true;\r\n        nodes[i].layer = layer; // makes x afterwards\r\n        nodes[i].y = i * stepy;\r\n      }\r\n    } else {\r\n      nodes[0].visited = true;\r\n      nodes[0].layer = layer; // makes x afterwards\r\n      nodes[0].y = 0.5;\r\n    }\r\n    let next_layer = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let neighbors = nodes[i].parents.concat(nodes[i].children);\r\n      for (let j = 0; j < neighbors.length; j++) {\r\n        if (\r\n          neighbors[j].visited == false &&\r\n          !next_layer.includes(neighbors[j])\r\n        ) {\r\n          next_layer.push(neighbors[j]);\r\n        }\r\n      }\r\n    }\r\n    if (next_layer.length == 0) {\r\n      return layer;\r\n    } else {\r\n      return this.makeLayers(next_layer, layer + 1);\r\n    }\r\n  }\r\n\r\n  apply() {\r\n    // left-right tree by default, let user choose\r\n    // top-down, bottom-top, right-left in subsequent versions\r\n    // hierarchical layouts for trees (acyclic graphs) are\r\n    // implemented separately for now\r\n    let nodes = this._nodes;\r\n    nodes.forEach(function(n, i) {\r\n      n.parents = [];\r\n      n.children = [];\r\n      n.visited = false;\r\n    });\r\n    this._edges.forEach(function(e, i) {\r\n      e.source.children.push(e.target);\r\n      e.target.parents.push(e.source);\r\n    });\r\n    // find the roots:\r\n    // nodes defined by the user as roots OR\r\n    // nodes with in-degree == 0 OR\r\n    // nodes with greatest in-degree (or degree if undirected graph)\r\n    let roots = findRoots_(nodes, this._options.roots);\r\n    // number of layers and max number of nodes in each layer\r\n    // has to be found by making the layout\r\n    // there are two approaches to finding the nodes in each layer:\r\n    // 1) each layer has all the neighbors of the nodes in the previous layer\r\n    // 2) follow links and then place non visited nodes on the layer of neighbors OR\r\n    // this layout implements the first of these approaches.\r\n    const depth = this.makeLayers(roots, 1);\r\n    // each layer of tree x = [0+alpha,1-alpha]\r\n    const stepx = 1 / (depth - 1);\r\n    // posx = marginx + stepx*(depth-1)\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      this._nodes[i].x = stepx * (this._nodes[i].layer - 1);\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n\r\nfunction findRoots_(nodes, root_option) {\r\n  // find the roots:\r\n  // nodes defined by the user as roots OR\r\n  // nodes with in-degree == 0 OR\r\n  // nodes with greatest in-degree (or degree if undirected graph)\r\n  let roots = [];\r\n  if (root_option == 'user-defined' || root_option == 'auto') {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i].isroot == true) {\r\n        // has to be on the json file of the graph\r\n        roots.push(nodes[i]);\r\n      }\r\n    }\r\n  }\r\n  if (\r\n    root_option == 'no-in-degree' ||\r\n    (root_option == 'auto' && roots.length == 0)\r\n  ) {\r\n    if (roots.length == 0) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].parents.length == 0) {\r\n          roots.push(nodes[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (root_option == 'degree' || (root_option == 'auto' && roots.length == 0)) {\r\n    // calculate max out-degree\r\n    let max_outdegree = 0;\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length > max_outdegree) {\r\n        max_outdegree = node.children.length;\r\n      }\r\n    });\r\n    // choose vertices with greatest out-degree\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length == max_outdegree) {\r\n        roots.push(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  return roots;\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport ccNetViz_utils from '../utils';\r\n// import findRoots_ from './utils';\r\n\r\nfunction isOrphan(node) {\r\n  let orphan = true;\r\n  for (let i = 0; i < node.parents.length; ++i) {\r\n    let parent_ = node.parents[i];\r\n    if (parent_ != node) orphan = false;\r\n  }\r\n  for (let i = 0; i < node.children.length; ++i) {\r\n    let child = node.children[i];\r\n    if (child != node) orphan = false;\r\n  }\r\n  return orphan;\r\n}\r\n\r\nexport default class {\r\n  // this layout should handle any digraph\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this.components = { current_component: 0, depth: 1 };\r\n    this.unvisited = nodes;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right', // other options: right-left, top-down, bottom-up\r\n      roots: 'auto', // other options: user-defined (in the graph define isroot = true); \"no-in-degree\"; \"auto\"\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  initHierarchy() {\r\n    this._nodes.forEach(function(n, i) {\r\n      n.parents = [];\r\n      n.children = [];\r\n      n.visited = false;\r\n    });\r\n    this._edges.forEach(function(e, i) {\r\n      e.source.children.push(e.target);\r\n      e.target.parents.push(e.source);\r\n    });\r\n  }\r\n\r\n  separateOrphans() {\r\n    let orphans = [];\r\n    let nodes = [];\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      let node = this._nodes[i];\r\n      if (isOrphan(node)) orphans.push(node);\r\n      else nodes.push(node);\r\n    }\r\n    return orphans;\r\n  }\r\n\r\n  placeOrphans(nodes, max_layer) {\r\n    const stepy = 1 / (nodes.length - 1);\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      nodes[i].y = i * stepy;\r\n      nodes[i].x = max_layer + 1;\r\n    }\r\n    if (nodes.length > 0) return max_layer + 1;\r\n    else return max_layer;\r\n  }\r\n\r\n  unvisitedNodes() {\r\n    let nodes = [];\r\n    let orphans = this.orphans;\r\n    this.unvisited.forEach(function(node) {\r\n      if (node.visited == false && !(node in orphans)) nodes.push(node);\r\n    });\r\n    if (nodes.length != this.unvisited) {\r\n      this.maybe_more = true;\r\n      this.unvisited = nodes;\r\n    } else this.maybe_more = false;\r\n  }\r\n\r\n  placeAdditional() {\r\n    const sep = 0;\r\n\r\n    // place non-visited nodes in between layers\r\n    let aux_layers = {};\r\n    let c = this.components[this.components.current_component];\r\n    let layers = c.layers;\r\n    for (let i = 0; i < this.unvisited.length; ++i) {\r\n      let node = this.unvisited[i];\r\n      let lowest_layer = this.components.depth;\r\n      let child_found = false;\r\n      for (let j = 0; j < node.children.length; ++j) {\r\n        let child = node.children[j];\r\n        if (child.visited == true) {\r\n          child_found = true;\r\n          if (child.layer <= lowest_layer) {\r\n            // child has to be visited to have a layer\r\n            lowest_layer = child.layer;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      if (child_found) {\r\n        node.visited = true;\r\n        // node.index = lowest_layer-sep;\r\n        if (!(lowest_layer - sep in layers)) layers[lowest_layer - sep] = [];\r\n        layers[lowest_layer - sep].push(node);\r\n      } else {\r\n        let lowest_layer = max_layer;\r\n        let parent_found = false;\r\n        for (let j = 0; j < node.parents.length; ++j) {\r\n          let parent_ = node.parents[j];\r\n          if (parent_.visited == true) {\r\n            parent_found = true;\r\n            if (parent_.layer <= lowest_layer) {\r\n              // child has to be visited to have a layer\r\n              lowest_layer = parent_.layer;\r\n            }\r\n          }\r\n        }\r\n        if (parent_found) {\r\n          node.visited = true;\r\n          node.x = lowest_layer + sep;\r\n          if (!(lowest_layer + sep in layers)) layers[lowest_layer + sep] = [];\r\n          layers[lowest_layer + sep].push(node);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  initializeComponent(component) {\r\n    this.components[component] = {};\r\n    this.components[component].max_nodes_layer = 0;\r\n    if (component > 0)\r\n      this.components[component].index_offset = this.components[\r\n        component - 1\r\n      ].vertical_nodes;\r\n    else this.components[component].index_offset = 0;\r\n    this.components[component].current_layer = 1;\r\n    //this.components[component].layers = {\"nodes\": [], \"layer_value\": 1};\r\n    this.components[component].layers = {};\r\n    this.components[component].vertical_nodes = 0;\r\n  }\r\n\r\n  layerNodes(nodes) {\r\n    if (!(this.components.current_component in this.components))\r\n      this.initializeComponent(this.components.current_component);\r\n    let c = this.components[this.components.current_component];\r\n    if (nodes.length > c.vertical_nodes) c.vertical_nodes = nodes.length;\r\n    c.layers[c.current_layer] = [];\r\n    for (let i = 0; i < nodes.length; ++i) {\r\n      nodes[i].visited = true;\r\n      c.layers[c.current_layer].push(nodes[i]);\r\n    }\r\n    let next_layer = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      let candidates = nodes[i].children;\r\n      for (let j = 0; j < candidates.length; j++) {\r\n        if (\r\n          candidates[j].visited == false &&\r\n          !next_layer.includes(candidates[j])\r\n        ) {\r\n          next_layer.push(candidates[j]);\r\n        }\r\n      }\r\n    }\r\n    if (next_layer.length > 0) {\r\n      c.current_layer++;\r\n      if (this.components.depth < c.current_layer)\r\n        this.components.depth = c.current_layer;\r\n      this.layerNodes(next_layer);\r\n    }\r\n  }\r\n\r\n  apply() {\r\n    // left-right tree by default, let user choose\r\n    // top-down, bottom-top, right-left in subsequent versions\r\n    // hierarchical layouts for trees (acyclic graphs) are\r\n    // implemented separately for now\r\n\r\n    // number of layers and max number of nodes in each layer\r\n    // has to be found by making the layout\r\n    // there are two approaches to finding the nodes in each layer:\r\n    // 1) each layer has all the neighbors of the nodes in the previous layer\r\n    // 2) follow links and then place non visited nodes on the layer of neighbors OR\r\n    // this layout implements the second of these approaches.\r\n\r\n    this.initHierarchy();\r\n    this.orphans = this.separateOrphans();\r\n    this.unvisitedNodes();\r\n    while (this.unvisited.length > 0) {\r\n      let roots = findRoots_(this.unvisited, 'auto');\r\n      this.layerNodes(roots);\r\n      this.unvisitedNodes(); // update unvisited nodes\r\n      this.maybe_mode = true;\r\n      while (this.maybe_more) {\r\n        this.placeAdditional(); // place additional nodes linked to this component\r\n        this.unvisitedNodes(); // update unvisited nodes\r\n      }\r\n      this.components.current_component++;\r\n    }\r\n    this.components.vertical_nodes = 0;\r\n    for (let i = 0; i < this.components.current_component; i++) {\r\n      this.components.vertical_nodes += this.components[i].vertical_nodes;\r\n    }\r\n\r\n    // layerNodes should populate the dictionary this.components of components and aux variables:\r\n    // components[x] is a component, x is an integer\r\n    // components[x].vertical_nodes is the maximum number of nodes in a layer for the component\r\n    // components[x].layer[j] is the j-th layer on the component, j can be fractional\r\n    // components[x].index_offset is the number of nodes positioned in above components\r\n    // components.ncomponents is the number of components\r\n    // components.vertical_nodes is the sum of the max nodes in any layer of each component\r\n    // components.depth is the maximum number of layers\r\n\r\n    // each layer of tree xy = [0+alpha,1-alpha]\r\n    const stepx = 1 / this.components.depth;\r\n    const stepy = 1 / this.components.vertical_nodes;\r\n    for (let i = 0; i < this.components.current_component; i++) {\r\n      let component = this.components[i];\r\n      for (let layer_val in component.layers) {\r\n        let layer = component.layers[layer_val];\r\n        if (layer.length == 1) {\r\n          let node = layer[0];\r\n          node.x = stepx * layer_val;\r\n          node.y =\r\n            stepy * (component.index_offset + component.vertical_nodes / 2);\r\n        } else {\r\n          for (let k = 0; k < layer.length; ++k) {\r\n            let node = layer[k];\r\n            node.x = stepx * layer_val;\r\n            node.y = stepy * (component.index_offset + k);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.placeOrphans(this.orphans, 0);\r\n    return this._options;\r\n  }\r\n}\r\n\r\nfunction findRoots_(nodes, root_option) {\r\n  // find the roots:\r\n  // nodes defined by the user as roots OR\r\n  // nodes with in-degree == 0 OR\r\n  // nodes with greatest in-degree (or degree if undirected graph)\r\n  let roots = [];\r\n  if (root_option == 'user-defined' || root_option == 'auto') {\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i].isroot == true) {\r\n        // has to be on the json file of the graph\r\n        roots.push(nodes[i]);\r\n      }\r\n    }\r\n  }\r\n  if (\r\n    root_option == 'no-in-degree' ||\r\n    (root_option == 'auto' && roots.length == 0)\r\n  ) {\r\n    if (roots.length == 0) {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        if (nodes[i].parents.length == 0) {\r\n          roots.push(nodes[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (root_option == 'degree' || (root_option == 'auto' && roots.length == 0)) {\r\n    // calculate max out-degree\r\n    let max_outdegree = 0;\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length > max_outdegree) {\r\n        max_outdegree = node.children.length;\r\n      }\r\n    });\r\n    // choose vertices with greatest out-degree\r\n    nodes.forEach(function(node) {\r\n      if (node.children.length == max_outdegree) {\r\n        roots.push(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  return roots;\r\n}\r\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport { EigenvalueDecomposition } from 'ml-matrix';\r\nimport { create2dArray } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nfunction twoSmallest(arr) {\r\n  const min = Math.min.apply(null, arr), // get the max of the array\r\n    mini = arr.indexOf(min);\r\n  arr[mini] = Infinity; // replace max in the array with -infinity\r\n  const second_min = Math.min.apply(null, arr), // get the new max\r\n    second_mini = arr.indexOf(second_min);\r\n  arr[second_mini] = Infinity; // replace max in the array with -infinity\r\n  const third_min = Math.min.apply(null, arr), // get the new max\r\n    third_mini = arr.indexOf(third_min);\r\n  return [second_mini, third_mini];\r\n}\r\n\r\nfunction normalize(x, y) {\r\n  let maxx = Math.max.apply(null, x.map(Math.abs)),\r\n    maxy = Math.max.apply(null, y.map(Math.abs));\r\n  let minx = Math.min.apply(null, x),\r\n    miny = Math.min.apply(null, y);\r\n  for (let i = 0; i < x.length; ++i) {\r\n    x[i] = 0.1 + (x[i] - minx) / ((maxx - minx) * 1.25);\r\n    y[i] = 0.1 + (y[i] - miny) / ((maxy - miny) * 1.25);\r\n  }\r\n  return [x, y];\r\n}\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n\r\n  apply() {\r\n    let A = create2dArray(this._nodes.length, this._nodes.length);\r\n    // build the adjacency matrix\r\n    for (let i = 0; i < this._edges.length; ++i) {\r\n      let ii = this._edges[i].source.index;\r\n      let j = this._edges[i].target.index;\r\n      A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n      A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n    }\r\n    // build the diagonal of degrees\r\n    // NOT subtract adjacency from degrees but:\r\n    // substitute diagonal by degrees\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      A[i][i] = -A[i].reduce((a, b) => a + b, 0);\r\n    }\r\n    let foo = new EigenvalueDecomposition(A);\r\n    const iii = twoSmallest(foo.realEigenvalues);\r\n    const foo_ = foo.eigenvectorMatrix.transpose();\r\n    const x = foo_[iii[0]];\r\n    const y = foo_[iii[1]];\r\n    const xy = normalize(x, y);\r\n    // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n    // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n    // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\r\n    // and implemented in networkx/drawing/layout.py\r\n    this._nodes.forEach(function(node, i) {\r\n      node.x = xy[0][i];\r\n      node.y = xy[1][i];\r\n    });\r\n    return this._options;\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\n// inspired in Matlab implementation\r\n// and JS transcription in\r\n// https://github.com/alanmeeson/spectral-graph-layout\r\n\r\nimport { create2dArray } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._epsilon = 1e-8; // tolerance\r\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\r\n    this._num_elements = nodes.length; //number of nodes in graph\r\n    this._dims = 2;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n  apply() {\r\n    let A = create2dArray(this._nodes.length, this._nodes.length);\r\n    // build the adjacency matrix\r\n    for (let i = 0; i < this._edges.length; ++i) {\r\n      let ii = this._edges[i].source.index;\r\n      let j = this._edges[i].target.index;\r\n      A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\r\n    }\r\n    const D = deg(A); //degree of each node in graph (number of connections).\r\n\r\n    const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\r\n    let u = new Array(dims); //declare the eigen vector matrix\r\n    u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\r\n    for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\r\n\r\n    //Power iteration to determine the remaining eigen vectors.\r\n    for (let k = 1; k < dims; k++) {\r\n      //for each eigen vector after the first,\r\n      //initialize eigen vector with random values\r\n      let uhk = normalize(rand(this._num_elements));\r\n\r\n      let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\r\n      let stop = false; //stopping criterion flag.\r\n      while (!stop) {\r\n        // do...while using flags to keep it consistent with my matlab implementation\r\n\r\n        //D-orthogonalize against previous eigenvectors\r\n        let uk = uhk.slice();\r\n        for (let l = 0; l < k; l++) {\r\n          let ul = u[l]; //extract the l-th eigen vector\r\n\r\n          //Calculate (uk'.D.ul)/(ul'.D.ul)\r\n          let top_ = 0;\r\n          let bottom = 0;\r\n          for (let vmi = 0; vmi < uk.length; vmi++) {\r\n            top_ += uk[vmi] * D[vmi] * ul[vmi];\r\n            bottom += ul[vmi] * D[vmi] * ul[vmi];\r\n          }\r\n          const ratio = top_ / bottom;\r\n\r\n          //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\r\n          for (let vsi = 0; vsi < uk.length; vsi++) {\r\n            uk[vsi] = uk[vsi] - ratio * ul[vsi];\r\n          }\r\n        }\r\n\r\n        //multiply with .5(I+D^-1 A)\r\n        for (let i = 0; i < uhk.length; i++) {\r\n          uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\r\n        }\r\n\r\n        uhk = normalize(uhk);\r\n\r\n        itt_count = itt_count + 1;\r\n        stop = (itt_count > 100) | !(dot(uhk, uk) < 1 - this._epsilon);\r\n      }\r\n      u[k] = uhk.slice();\r\n    }\r\n\r\n    //discard the first eigenvector which should be [ones].\r\n    // var v = new Array(u.length);\r\n    // for (var i=0; i < u.length; i++) {\r\n    //     v[i] = new Array(u[i].length);\r\n    //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\r\n    // }\r\n    const x = normalize2(u[1]);\r\n    const y = normalize2(u[2]);\r\n    this._nodes.forEach(function(node, i) {\r\n      node.x = x[i];\r\n      node.y = y[i];\r\n    });\r\n    return this._options;\r\n  }\r\n}\r\n\r\nfunction deg(graph) {\r\n  //Calculate the degree of each node from the graph matrix.\r\n  let d = zeros(graph.length);\r\n\r\n  //degree of node i is the sum of the weights of all edges connected to it.\r\n  for (let i = 0; i < graph.length; i++) {\r\n    let node_degree = 0;\r\n    for (let j = 0; j < graph[i].length; j++) {\r\n      node_degree += graph[i][j];\r\n    }\r\n    d[i] = node_degree + 1;\r\n  }\r\n\r\n  return d;\r\n}\r\n\r\nfunction dot(a, b) {\r\n  //inner product of two vectors\r\n  let d = 0;\r\n  for (let i = 0; i < a.length; i++) {\r\n    d += a[i] * b[i];\r\n  }\r\n  return d;\r\n}\r\n\r\nfunction euclideanDistance(coordinates) {\r\n  //calculate the euclidean distance between two points/vectors.\r\n  // used for normalization.\r\n  let d = 0;\r\n\r\n  for (let i = 0; i < coordinates.length; i++) {\r\n    d += Math.pow(coordinates[i], 2);\r\n  }\r\n  return Math.sqrt(d);\r\n}\r\n\r\nfunction normalize(arr) {\r\n  //normalizes a vector = arr/||arr||\r\n  const d = euclideanDistance(arr);\r\n  let narr = new Array(arr.length);\r\n  for (let i = 0; i < arr.length; i++) {\r\n    narr[i] = arr[i] / d;\r\n  }\r\n\r\n  return narr;\r\n}\r\n\r\nfunction rand(n) {\r\n  //create a vector of length n and fill with random numbers.\r\n  let arr = new Array(n);\r\n  for (let i = 0; i < n; i++) arr[i] = Math.random();\r\n  return arr;\r\n}\r\n\r\nfunction add(a, b) {\r\n  let c = new Array(a.length);\r\n  for (let i = 0; i < a.length; i++) {\r\n    c[i] = new Array(a[i].length);\r\n    for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\r\n  }\r\n  return c;\r\n}\r\n\r\nfunction symmetricRandMatrix(n, ulim) {\r\n  let mat = new Array(n);\r\n  for (let i = 0; i < n; i++) {\r\n    mat[i] = new Array(n);\r\n    mat[i][i] = 0;\r\n  }\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = i + 1; j < n; j++) {\r\n      mat[i][j] = ulim * Math.random();\r\n      mat[j][i] = mat[i][j];\r\n    }\r\n  }\r\n  return mat;\r\n}\r\n\r\nfunction zeros(n) {\r\n  //create a vector filled with zeros\r\n  let arr = new Array(n);\r\n  for (let i = 0; i < n; i++) arr[i] = 0;\r\n  return arr;\r\n}\r\n\r\nfunction ones(n) {\r\n  //create a vector filled with ones\r\n  let arr = new Array(n);\r\n  for (let i = 0; i < n; i++) arr[i] = 1;\r\n  return arr;\r\n}\r\n\r\nfunction normalize2(x) {\r\n  let maxx = Math.max.apply(null, x.map(Math.abs));\r\n  let minx = Math.min.apply(null, x);\r\n  for (let i = 0; i < x.length; ++i) {\r\n    x[i] = 0.1 + (x[i] - minx) / ((maxx - minx) * 1.25);\r\n  }\r\n  return x;\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport { degrees } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // mode: fill_segment or alternate_segment\r\n  // wiggle segment (cycles and amplitude)\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      starting_angle: Math.PI / 2,\r\n      radius: 0.05, // internal radious without nodes\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n      nlines: 5,\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n  apply() {\r\n    let nd = degrees(this._nodes, this._edges);\r\n    const nodes_segment = Math.ceil(this._nodes.length / this._options.nlines);\r\n    const segment = 0.05 - this._options.radius;\r\n    const step = segment / nodes_segment;\r\n    const angle = (2 * Math.PI) / this._options.nlines;\r\n    const sangle = this._options.starting_angle;\r\n    const radius = this._options.radius;\r\n    let j = 0;\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      let ii = nd.nodes[i].index;\r\n      this._nodes[ii].x =\r\n        0.05 +\r\n        (radius + step * (i - j * nodes_segment)) *\r\n          Math.cos(angle * j + sangle);\r\n      this._nodes[ii].y =\r\n        0.05 +\r\n        (radius + step * (i - j * nodes_segment)) *\r\n          Math.sin(angle * j + sangle);\r\n      j = Math.floor(i / nodes_segment);\r\n    }\r\n    let od = [];\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      let ii = nd.nodes[i].index;\r\n      od.push(this._nodes[ii]);\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n","import ccNetViz_utils from '../utils';\r\nimport { degrees } from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n  apply() {\r\n    let nd = degrees(this._nodes, this._edges);\r\n    const sq = Math.sqrt(this._nodes.length);\r\n    const reminder = sq - Math.floor(sq);\r\n    if (reminder > 0) var nnodes = Math.floor(sq) + 1;\r\n    else var nnodes = sq;\r\n    const step = 1 / nnodes;\r\n\r\n    const nlines = this._nodes.length / nnodes;\r\n    const reminder2 = nlines - Math.floor(nlines);\r\n    if (reminder2 > 0) var nlines2 = Math.floor(nlines) + 1;\r\n    else var nlines2 = nlines;\r\n    const stepy = 1 / (nlines2 - 2);\r\n    for (let i = 0; i < this._nodes.length; ++i) {\r\n      let j = Math.floor(i / (nnodes + 1));\r\n      this._nodes[nd.nodes[i].index].x = step * (i - j * (nnodes + 1));\r\n      this._nodes[nd.nodes[i].index].y = stepy * j;\r\n      this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n","import { degrees } from './utils';\r\nimport ccNetViz_utils from '../utils';\r\n\r\nexport default class {\r\n  // the hubs are on the first half of the sinusoid period\r\n  // the intermediary are on the second half\r\n  // and the periphery are on the upper straight line\r\n  // further versions should enable the choice of other\r\n  // fractions of hubs, intermediary and peripheral vertices\r\n  // or the Erdös sectioning.\r\n  // maybe also let the user set the endpoints of the periphery segment\r\n  constructor(nodes, edges, layout_options) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    let defaults = {\r\n      margin: 0.05,\r\n      direction: 'left-right',\r\n      hubs: 0.1, // fraction of hubs\r\n      intermediary: 0.2, // fraction of intermediary\r\n      method: 'fixed_fractions', // or \"erdos_sectioning\"\r\n    };\r\n    ccNetViz_utils.extend(defaults, layout_options);\r\n    this._options = defaults;\r\n  }\r\n  apply() {\r\n    let nd = degrees(this._nodes, this._edges);\r\n    const nhubs_intermediary = Math.floor(\r\n      this._nodes.length * (this._options.hubs + this._options.intermediary)\r\n    );\r\n    const nhubs = Math.floor(this._nodes.length * this._options.hubs);\r\n    const stepx1 = (1 - 2 * this._options.margin) / 2 / (nhubs - 1);\r\n    const steprad = Math.PI / (nhubs - 1);\r\n    let i = 0;\r\n    while (i < nhubs) {\r\n      if (nhubs > 1) {\r\n        this._nodes[nd.nodes[i].index].x = this._options.margin + stepx1 * i;\r\n        this._nodes[nd.nodes[i].index].y =\r\n          this._options.margin + 0.4 + 0.4 * Math.sin(i * steprad);\r\n      } else {\r\n        this._nodes[nd.nodes[i].index].x = (1 - 2 * this._options.margin) / 4;\r\n        this._nodes[nd.nodes[i].index].y = this._options.margin + 0.4 + 0.4;\r\n      }\r\n      ++i;\r\n    }\r\n    const nintermediary = nhubs_intermediary - nhubs;\r\n    const steprad2 = Math.PI / nintermediary;\r\n    const stepx2 = (1 - 2 * this._options.margin) / 2 / nintermediary;\r\n    i = 0;\r\n    while (i < nintermediary) {\r\n      this._nodes[nd.nodes[i + nhubs].index].x = 0.5 + stepx2 * (i + 1);\r\n      this._nodes[nd.nodes[i + nhubs].index].y =\r\n        this._options.margin +\r\n        0.4 +\r\n        0.4 * Math.sin(Math.PI + (i + 1) * steprad2);\r\n      ++i;\r\n    }\r\n    const p0 = [0.85, 0.75];\r\n    const p1 = [0.4, 1 - this._options.margin];\r\n    const nperipheral = this._nodes.length - nhubs_intermediary;\r\n    const stepxx = (p1[0] - p0[0]) / (nperipheral - 1);\r\n    const stepy = (p1[1] - p0[1]) / (nperipheral - 1);\r\n    i = 0;\r\n    while (i < nperipheral) {\r\n      this._nodes[nd.nodes[i + nhubs_intermediary].index].x =\r\n        p0[0] + stepxx * i;\r\n      this._nodes[nd.nodes[i + nhubs_intermediary].index].y = p0[1] + stepy * i;\r\n      ++i;\r\n    }\r\n    return this._options;\r\n  }\r\n}\r\n","import layoutForce from './force';\r\nimport layoutRandom from './random';\r\nimport layoutCircular from './circular';\r\nimport layoutTree from './tree';\r\nimport layoutTreeT from './treeT';\r\nimport layoutHierarchical from './hierarchical';\r\nimport layoutHierarchical2 from './hierarchical2';\r\nimport layoutSpectral from './spectral';\r\nimport layoutSpectral2 from './spectral2';\r\nimport layoutHive from './hive';\r\nimport layoutGrid from './grid';\r\nimport layoutVersinus from './versinus';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  static get force() {\r\n    return layoutForce;\r\n  }\r\n  static get random() {\r\n    return layoutRandom;\r\n  }\r\n  static get circular() {\r\n    return layoutCircular;\r\n  }\r\n  static get tree() {\r\n    return layoutTree;\r\n  }\r\n  static get tree2() {\r\n    return layoutTreeT;\r\n  }\r\n  static get hierarchical() {\r\n    return layoutHierarchical;\r\n  }\r\n  static get hierarchical2() {\r\n    return layoutHierarchical2;\r\n  }\r\n  static get spectral() {\r\n    return layoutSpectral;\r\n  }\r\n  static get spectral2() {\r\n    return layoutSpectral2;\r\n  }\r\n  static get hive() {\r\n    return layoutHive;\r\n  }\r\n  static get grid() {\r\n    return layoutGrid;\r\n  }\r\n  static get versinus() {\r\n    return layoutVersinus;\r\n  }\r\n\r\n  static normalize(nodes, dim, _options) {\r\n    let minX,\r\n      minY,\r\n      n = nodes.length;\r\n\r\n    if (dim) {\r\n      minX = dim.minX;\r\n      minY = dim.minY;\r\n    } else {\r\n      let maxX = -Infinity;\r\n      let maxY = -Infinity;\r\n      minX = minY = Infinity;\r\n\r\n      for (let i = 0; i < n; i++) {\r\n        let o = nodes[i];\r\n        maxX = Math.max(maxX, o.x);\r\n        maxY = Math.max(maxY, o.y);\r\n        minX = Math.min(minX, o.x);\r\n        minY = Math.min(minY, o.y);\r\n      }\r\n\r\n      dim = {\r\n        maxX: maxX,\r\n        maxY: maxY,\r\n        minX: minX,\r\n        minY: minY,\r\n      };\r\n    }\r\n    const factor = 1 - 2 * _options.margin;\r\n    let scX =\r\n      minX !== dim.maxX ? factor / (dim.maxX - minX) : ((minX -= 0.5), 1);\r\n    let scY =\r\n      minY !== dim.maxY ? factor / (dim.maxY - minY) : ((minY -= 0.5), 1);\r\n\r\n    const direction = _options.direction;\r\n    switch (direction) {\r\n      case 'left-right':\r\n        for (let i = 0; i < n; ++i) {\r\n          let o = nodes[i];\r\n          o.x = scX * (o.x - minX) + _options.margin;\r\n          o.y = scY * (o.y - minY) + _options.margin;\r\n        }\r\n        break;\r\n      case 'right-left':\r\n        for (let i = 0; i < n; ++i) {\r\n          let o = nodes[i];\r\n          o.x = 1 - (scX * (o.x - minX) + _options.margin);\r\n          o.y = scY * (o.y - minY) + _options.margin;\r\n        }\r\n        break;\r\n      case 'top-down':\r\n        for (let i = 0; i < n; ++i) {\r\n          let o = nodes[i];\r\n          const foo = 1 - scX * (o.x - minX) + _options.margin;\r\n          o.x = scY * (o.y - minY) + _options.margin;\r\n          o.y = foo;\r\n        }\r\n        break;\r\n      case 'bottom-up':\r\n        for (let i = 0; i < nodes.length; ++i) {\r\n          let o = nodes[i];\r\n          const foo = scX * (o.x - minX) + _options.margin;\r\n          o.x = scY * (o.y - minY) + _options.margin;\r\n          o.y = foo;\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error(\r\n          \"directions can be only 'left-right' (default), 'right-left', 'top-down' or 'bottom-up'\"\r\n        );\r\n    }\r\n    return dim; // any use for this return? Should we remove it?\r\n  }\r\n}\r\n","/*\r\n (c) 2015, Vladimir Agafonkin\r\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\r\n https://github.com/mourner/rbush\r\n*/\r\n\r\n\r\nfunction rbush(maxEntries, format) {\r\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\r\n\r\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n    this._maxEntries = Math.max(4, maxEntries || 9);\r\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n\r\n    if (format) {\r\n        this._initFormat(format);\r\n    }\r\n\r\n    this.clear();\r\n}\r\n\r\nrbush.prototype = {\r\n\r\n    all: function () {\r\n        return this._all(this.data, []);\r\n    },\r\n\r\n    search: function (bbox) {\r\n\r\n        var node = this.data,\r\n            result = [],\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return result;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf) result.push(child);\r\n                    else if (contains(bbox, childBBox)) this._all(child, result);\r\n                    else nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    collides: function (bbox) {\r\n\r\n        var node = this.data,\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return false;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf || contains(bbox, childBBox)) return true;\r\n                    nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    load: function (data) {\r\n        if (!(data && data.length)) return this;\r\n\r\n        if (data.length < this._minEntries) {\r\n            for (var i = 0, len = data.length; i < len; i++) {\r\n                this.insert(data[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // recursively build the tree with the given data from stratch using OMT algorithm\r\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n        if (!this.data.children.length) {\r\n            // save as is if tree is empty\r\n            this.data = node;\r\n\r\n        } else if (this.data.height === node.height) {\r\n            // split root if trees have the same height\r\n            this._splitRoot(this.data, node);\r\n\r\n        } else {\r\n            if (this.data.height < node.height) {\r\n                // swap trees if inserted one is bigger\r\n                var tmpNode = this.data;\r\n                this.data = node;\r\n                node = tmpNode;\r\n            }\r\n\r\n            // insert the small tree into the large tree at appropriate level\r\n            this._insert(node, this.data.height - node.height - 1, true);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    insert: function (item) {\r\n        if (item) this._insert(item, this.data.height - 1);\r\n        return this;\r\n    },\r\n\r\n    clear: function () {\r\n        this.data = {\r\n            children: [],\r\n            height: 1,\r\n            bbox: empty(),\r\n            leaf: true\r\n        };\r\n        return this;\r\n    },\r\n\r\n    remove: function (item) {\r\n        if (!item) return this;\r\n\r\n        var node = this.data,\r\n            bbox = this.toBBox(item),\r\n            path = [],\r\n            indexes = [],\r\n            i, parent, index, goingUp;\r\n\r\n        // depth-first iterative tree traversal\r\n        while (node || path.length) {\r\n\r\n            if (!node) { // go up\r\n                node = path.pop();\r\n                parent = path[path.length - 1];\r\n                i = indexes.pop();\r\n                goingUp = true;\r\n            }\r\n\r\n            if (node.leaf) { // check current node\r\n                index = node.children.indexOf(item);\r\n\r\n                if (index !== -1) {\r\n                    // item found, remove the item and condense tree upwards\r\n                    node.children.splice(index, 1);\r\n                    path.push(node);\r\n                    this._condense(path);\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\r\n                path.push(node);\r\n                indexes.push(i);\r\n                i = 0;\r\n                parent = node;\r\n                node = node.children[0];\r\n\r\n            } else if (parent) { // go right\r\n                i++;\r\n                node = parent.children[i];\r\n                goingUp = false;\r\n\r\n            } else node = null; // nothing found\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    toBBox: function (item) { return item; },\r\n\r\n    compareMinX: function (a, b) { return a[0] - b[0]; },\r\n    compareMinY: function (a, b) { return a[1] - b[1]; },\r\n\r\n    toJSON: function () { return this.data; },\r\n\r\n    fromJSON: function (data) {\r\n        this.data = data;\r\n        return this;\r\n    },\r\n\r\n    _all: function (node, result) {\r\n        var nodesToSearch = [];\r\n        while (node) {\r\n            if (node.leaf) result.push.apply(result, node.children);\r\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\r\n\r\n            node = nodesToSearch.pop();\r\n        }\r\n        return result;\r\n    },\r\n\r\n    _build: function (items, left, right, height) {\r\n\r\n        var N = right - left + 1,\r\n            M = this._maxEntries,\r\n            node;\r\n\r\n        if (N <= M) {\r\n            // reached leaf level; return leaf\r\n            node = {\r\n                children: items.slice(left, right + 1),\r\n                height: 1,\r\n                bbox: null,\r\n                leaf: true\r\n            };\r\n            calcBBox(node, this.toBBox);\r\n            return node;\r\n        }\r\n\r\n        if (!height) {\r\n            // target height of the bulk-loaded tree\r\n            height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n            // target number of root entries to maximize storage utilization\r\n            M = Math.ceil(N / Math.pow(M, height - 1));\r\n        }\r\n\r\n        node = {\r\n            children: [],\r\n            height: height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        // split the items into M mostly square tiles\r\n\r\n        var N2 = Math.ceil(N / M),\r\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\r\n            i, j, right2, right3;\r\n\r\n        multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n        for (i = left; i <= right; i += N1) {\r\n\r\n            right2 = Math.min(i + N1 - 1, right);\r\n\r\n            multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n            for (j = i; j <= right2; j += N2) {\r\n\r\n                right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                // pack each entry recursively\r\n                node.children.push(this._build(items, j, right3, height - 1));\r\n            }\r\n        }\r\n\r\n        calcBBox(node, this.toBBox);\r\n\r\n        return node;\r\n    },\r\n\r\n    _chooseSubtree: function (bbox, node, level, path) {\r\n\r\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\r\n\r\n        while (true) {\r\n            path.push(node);\r\n\r\n            if (node.leaf || path.length - 1 === level) break;\r\n\r\n            minArea = minEnlargement = Infinity;\r\n\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n                child = node.children[i];\r\n                area = bboxArea(child.bbox);\r\n                enlargement = enlargedArea(bbox, child.bbox) - area;\r\n\r\n                // choose entry with the least area enlargement\r\n                if (enlargement < minEnlargement) {\r\n                    minEnlargement = enlargement;\r\n                    minArea = area < minArea ? area : minArea;\r\n                    targetNode = child;\r\n\r\n                } else if (enlargement === minEnlargement) {\r\n                    // otherwise choose one with the smallest area\r\n                    if (area < minArea) {\r\n                        minArea = area;\r\n                        targetNode = child;\r\n                    }\r\n                }\r\n            }\r\n\r\n            node = targetNode || node.children[0];\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    _insert: function (item, level, isNode) {\r\n\r\n        var toBBox = this.toBBox,\r\n            bbox = isNode ? item.bbox : toBBox(item),\r\n            insertPath = [];\r\n\r\n        // find the best node for accommodating the item, saving all nodes along the path too\r\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n        // put the item into the node\r\n        node.children.push(item);\r\n        extend(node.bbox, bbox);\r\n\r\n        // split on node overflow; propagate upwards if necessary\r\n        while (level >= 0) {\r\n            if (insertPath[level].children.length > this._maxEntries) {\r\n                this._split(insertPath, level);\r\n                level--;\r\n            } else break;\r\n        }\r\n\r\n        // adjust bboxes along the insertion path\r\n        this._adjustParentBBoxes(bbox, insertPath, level);\r\n    },\r\n\r\n    // split overflowed node into two\r\n    _split: function (insertPath, level) {\r\n\r\n        var node = insertPath[level],\r\n            M = node.children.length,\r\n            m = this._minEntries;\r\n\r\n        this._chooseSplitAxis(node, m, M);\r\n\r\n        var splitIndex = this._chooseSplitIndex(node, m, M);\r\n\r\n        var newNode = {\r\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\r\n            height: node.height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        if (node.leaf) newNode.leaf = true;\r\n\r\n        calcBBox(node, this.toBBox);\r\n        calcBBox(newNode, this.toBBox);\r\n\r\n        if (level) insertPath[level - 1].children.push(newNode);\r\n        else this._splitRoot(node, newNode);\r\n    },\r\n\r\n    _splitRoot: function (node, newNode) {\r\n        // split root node\r\n        this.data = {\r\n            children: [node, newNode],\r\n            height: node.height + 1,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n        calcBBox(this.data, this.toBBox);\r\n    },\r\n\r\n    _chooseSplitIndex: function (node, m, M) {\r\n\r\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\r\n\r\n        minOverlap = minArea = Infinity;\r\n\r\n        for (i = m; i <= M - m; i++) {\r\n            bbox1 = distBBox(node, 0, i, this.toBBox);\r\n            bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n            overlap = intersectionArea(bbox1, bbox2);\r\n            area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n            // choose distribution with minimum overlap\r\n            if (overlap < minOverlap) {\r\n                minOverlap = overlap;\r\n                index = i;\r\n\r\n                minArea = area < minArea ? area : minArea;\r\n\r\n            } else if (overlap === minOverlap) {\r\n                // otherwise choose distribution with minimum area\r\n                if (area < minArea) {\r\n                    minArea = area;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    },\r\n\r\n    // sorts node children by the best axis for split\r\n    _chooseSplitAxis: function (node, m, M) {\r\n\r\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\r\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\r\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\r\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n        // if total distributions margin value is minimal for x, sort by minX,\r\n        // otherwise it's already sorted by minY\r\n        if (xMargin < yMargin) node.children.sort(compareMinX);\r\n    },\r\n\r\n    // total margin of all possible split distributions where each node is at least m full\r\n    _allDistMargin: function (node, m, M, compare) {\r\n\r\n        node.children.sort(compare);\r\n\r\n        var toBBox = this.toBBox,\r\n            leftBBox = distBBox(node, 0, m, toBBox),\r\n            rightBBox = distBBox(node, M - m, M, toBBox),\r\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\r\n            i, child;\r\n\r\n        for (i = m; i < M - m; i++) {\r\n            child = node.children[i];\r\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(leftBBox);\r\n        }\r\n\r\n        for (i = M - m - 1; i >= m; i--) {\r\n            child = node.children[i];\r\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(rightBBox);\r\n        }\r\n\r\n        return margin;\r\n    },\r\n\r\n    _adjustParentBBoxes: function (bbox, path, level) {\r\n        // adjust bboxes along the given tree path\r\n        for (var i = level; i >= 0; i--) {\r\n            extend(path[i].bbox, bbox);\r\n        }\r\n    },\r\n\r\n    _condense: function (path) {\r\n        // go through the path, removing empty nodes and updating bboxes\r\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\r\n            if (path[i].children.length === 0) {\r\n                if (i > 0) {\r\n                    siblings = path[i - 1].children;\r\n                    siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                } else this.clear();\r\n\r\n            } else calcBBox(path[i], this.toBBox);\r\n        }\r\n    },\r\n\r\n    _initFormat: function (format) {\r\n        // data format (minX, minY, maxX, maxY accessors)\r\n\r\n        // uses eval-type function compilation instead of just accepting a toBBox function\r\n        // because the algorithms are very sensitive to sorting functions performance,\r\n        // so they should be dead simple and without inner calls\r\n\r\n        var compareArr = ['return a', ' - b', ';'];\r\n\r\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\r\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\r\n\r\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\r\n    }\r\n};\r\n\r\n\r\n// calculate node's bbox from bboxes of its children\r\nfunction calcBBox(node, toBBox) {\r\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\r\n}\r\n\r\n// min bounding rectangle of node children from k to p-1\r\nfunction distBBox(node, k, p, toBBox) {\r\n    var bbox = empty();\r\n\r\n    for (var i = k, child; i < p; i++) {\r\n        child = node.children[i];\r\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\r\n    }\r\n\r\n    return bbox;\r\n}\r\n\r\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\r\n\r\nfunction extend(a, b) {\r\n    a[0] = Math.min(a[0], b[0]);\r\n    a[1] = Math.min(a[1], b[1]);\r\n    a[2] = Math.max(a[2], b[2]);\r\n    a[3] = Math.max(a[3], b[3]);\r\n    return a;\r\n}\r\n\r\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\r\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\r\n\r\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\r\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\r\n\r\nfunction enlargedArea(a, b) {\r\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\r\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\r\n}\r\n\r\nfunction intersectionArea(a, b) {\r\n    var minX = Math.max(a[0], b[0]),\r\n        minY = Math.max(a[1], b[1]),\r\n        maxX = Math.min(a[2], b[2]),\r\n        maxY = Math.min(a[3], b[3]);\r\n\r\n    return Math.max(0, maxX - minX) *\r\n           Math.max(0, maxY - minY);\r\n}\r\n\r\nfunction contains(a, b) {\r\n    return a[0] <= b[0] &&\r\n           a[1] <= b[1] &&\r\n           b[2] <= a[2] &&\r\n           b[3] <= a[3];\r\n}\r\n\r\nfunction intersects(a, b) {\r\n    return b[0] <= a[2] &&\r\n           b[1] <= a[3] &&\r\n           b[2] >= a[0] &&\r\n           b[3] >= a[1];\r\n}\r\n\r\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n// combines selection algorithm with binary divide & conquer approach\r\n\r\nfunction multiSelect(arr, left, right, n, compare) {\r\n    var stack = [left, right],\r\n        mid;\r\n\r\n    while (stack.length) {\r\n        right = stack.pop();\r\n        left = stack.pop();\r\n\r\n        if (right - left <= n) continue;\r\n\r\n        mid = left + Math.ceil((right - left) / n / 2) * n;\r\n        select(arr, left, right, mid, compare);\r\n\r\n        stack.push(left, mid, mid, right);\r\n    }\r\n}\r\n\r\n// Floyd-Rivest selection algorithm:\r\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\r\nfunction select(arr, left, right, k, compare) {\r\n    var n, i, z, s, sd, newLeft, newRight, t, j;\r\n\r\n    while (right > left) {\r\n        if (right - left > 600) {\r\n            n = right - left + 1;\r\n            i = k - left + 1;\r\n            z = Math.log(n);\r\n            s = 0.5 * Math.exp(2 * z / 3);\r\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\r\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\r\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\r\n            select(arr, newLeft, newRight, k, compare);\r\n        }\r\n\r\n        t = arr[k];\r\n        i = left;\r\n        j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (compare(arr[i], t) < 0) i++;\r\n            while (compare(arr[j], t) > 0) j--;\r\n        }\r\n\r\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nexport default rbush;","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// refer edge to edge example\r\n//  each edge if\r\n//  i) from node to node, has source and edge both node\r\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\r\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\r\n\r\n export default class {\r\n  static edgeSource(e) {\r\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\r\n      let s = this.edgeSource(e.source);\r\n      let t = this.edgeTarget(e.source);\r\n      return {\r\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\r\n              y: (s.y+t.y)/2, //middle of y-coordinate\r\n              uniqid: e.uniqid, \r\n              index: e.index, \r\n              is_edge: true, \r\n              e: e.source\r\n      };\r\n    }\r\n    \r\n    return e.source;\r\n  }\r\n\r\n  static edgeTarget (e) {\r\n    if(e.target.source){\r\n      //target is edge\r\n      let s = this.edgeSource(e.target);\r\n      let t = this.edgeTarget(e.target);\r\n      \r\n      return {\r\n              x: (s.x+t.x)/2,\r\n              y: (s.y+t.y)/2,\r\n              uniqid: e.uniqid,\r\n              index: e.index,\r\n              is_edge: true,\r\n              e: e.target\r\n      };\r\n    }\r\n\r\n    return e.target;\r\n  }\r\n\r\n  static getCurveShift (e, r){\r\n      r = r || {};\r\n      r.x = r.y = r.cx = r.cy = 0;\r\n      if(!e)\r\n        return r;\r\n      if(e.t && e.t >= 1){\t//curve or circle\r\n        if(e.t >= 2){ //circle\r\n          let s = this.edgeSource(e);\r\n          let d = s.y < 0.5 ? 1 : -1;\r\n\r\n          r.cx = d * 1.25;\r\n          r.cy = 0;\r\n        }else{\r\n          let se = this.edgeSource(e);\r\n          let te = this.edgeTarget(e);\r\n\r\n          r.x = se.x - te.x;\r\n          r.y = se.y - te.y;\r\n        }\r\n      }\r\n      return r;\r\n  }\r\n};","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nconst EPS = Number.EPSILON || 1e-14;\r\n\r\n\r\n\r\n\r\n//solving cube analyticaly for bezier curves\r\nfunction cuberoot(x) {\r\n    const y = Math.pow(Math.abs(x), 1/3);\r\n    return x < 0 ? -y : y;\r\n}\r\n\r\nfunction solveCubic(a, b, c, d) {\r\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\r\n        a = b; b = c; c = d;\r\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\r\n            a = b; b = c;\r\n            if (Math.abs(a) < 1e-8) // Degenerate case\r\n                return [];\r\n            return [-b/a];\r\n        }\r\n\r\n        const D = b*b - 4*a*c;\r\n        if (Math.abs(D) < 1e-8)\r\n            return [-b/(2*a)];\r\n        else if (D > 0)\r\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\r\n        return [];\r\n    }\r\n\r\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\r\n    const p = (3*a*c - b*b)/(3*a*a);\r\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\r\n    let roots;\r\n\r\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\r\n        roots = [cuberoot(-q)];\r\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\r\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\r\n    } else {\r\n        const D = q*q/4 + p*p*p/27;\r\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\r\n            roots = [-1.5*q/p, 3*q/p];\r\n        } else if (D > 0) {             // Only one real root\r\n            const u = cuberoot(-q/2 - Math.sqrt(D));\r\n            roots = [u - p/(3*u)];\r\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\r\n            const u = 2*Math.sqrt(-p/3);\r\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\r\n            const k = 2*Math.PI/3;\r\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\r\n        }\r\n    }\r\n\r\n    // Convert back from depressed cubic\r\n    for (let i = 0; i < roots.length; i++)\r\n        roots[i] -= b/(3*a);\r\n\r\n    return roots;\r\n}\r\n\r\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\r\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\r\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\r\n  \r\n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\r\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\r\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\r\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\r\n    \r\n  const eqresult = solveCubic(A,B,C,D);\r\n  \r\n  \r\n  //loop through all possible solitions to find out which point is the nearest\r\n  let mindist = Infinity;\r\n  for(let i = 0; i < eqresult.length; i++){\r\n    const t = eqresult[i];\r\n    \r\n    if(t < 0 || t > 1)\r\n      continue;\r\n    \r\n    //point at bezier curve\r\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\r\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\r\n    \r\n    const dist = distance2(x,y,px,py);\r\n    if(dist < mindist)\r\n      mindist = dist;\r\n    \r\n  }\r\n  \r\n  return mindist;\r\n}\r\n\r\n/*\r\n * @param v - array of with points [x1,y1,x2,y2 .... ]\r\n * @return array representing bounding box [x1,y1,x2,y2]\r\n */\r\nfunction getBBFromPoints(v){\r\n  let xmin = Infinity;\r\n  let xmax = -xmin;\r\n  let ymin = Infinity;\r\n  let ymax = -ymin;\r\n  \r\n  //x of points - even indexes in array \r\n  for(let i = 0; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < xmin) xmin = val;\r\n    if(val > xmax) xmax = val;\r\n  }\r\n  \r\n  //y of points - odd indexes in array \r\n  for(let i = 1; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < ymin) ymin = val;\r\n    if(val > ymax) ymax = val;\r\n  }\r\n\r\n  return [xmin, ymin, xmax, ymax];\r\n}\r\n\r\n//distance from point to point\r\nfunction distance2(x1,y1,x2,y2){\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n//distance from point to line\r\nfunction pDistance2(x, y, x1, y1, x2, y2) {\r\n  const A = x - x1;\r\n  const B = y - y1;\r\n  const C = x2 - x1;\r\n  const D = y2 - y1;\r\n\r\n  const dot = A * C + B * D;\r\n  const len_sq = C * C + D * D;\r\n  let param = -1;\r\n  if (len_sq != 0) //in case of 0 length line\r\n      param = dot / len_sq;\r\n\r\n  let xx, yy;\r\n\r\n  if (param < 0) {\r\n    xx = x1;\r\n    yy = y1;\r\n  }\r\n  else if (param > 1) {\r\n    xx = x2;\r\n    yy = y2;\r\n  }\r\n  else {\r\n    xx = x1 + param * C;\r\n    yy = y1 + param * D;\r\n  }\r\n\r\n  return distance2(x,y,xx,yy);\r\n}\r\n\r\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\r\n{\r\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\r\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\r\n\r\n    if( d == 0 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let r = q / d;\r\n\r\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\r\n    let s = q / d;\r\n\r\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction pointInRect(px,py, x1, y1, x2, y2){\r\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\r\n}\r\n\r\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\r\n  return p1x <= r2x &&\r\n          p1y <= r2y &&\r\n          p2x >= r1x &&\r\n          p2y >= r1y;\r\n}\r\n\r\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nfunction eq(a,b){\r\n  return a >= b-EPS && a <= b+EPS;\r\n}\r\n\r\nfunction neq(a,b){\r\n  return !eq(a,b);\r\n}\r\n\r\n\r\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\r\n  if(t < 0 || t > 1)\r\n    return false;\r\n  \r\n  if(neq(v-s,0)){\r\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\r\n    if(x < 0 || x > 1)\r\n      return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\r\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\r\n\r\n    let t;\r\n    \r\n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\r\n    if(neq(tden, 0)){\r\n      if(neq(q-r, 0)){\r\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\r\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\r\n        if(sq >= 0){\r\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\r\n  \r\n          t = (t1-0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n  \r\n          t = (t1+0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\r\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\r\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\r\n      t = t/(2*tden);\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\r\n      t = (2*e-f-v)/(2*(e-f));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\r\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\r\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\r\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    const centerx = (r1x+r2x)/2;\r\n    const centery = (r1y+r2y)/2;\r\n    \r\n    const diffx = r1x-r2x;\r\n    const diffy = r1y-r2y;\r\n    \r\n    //performance optimalization based on distance\r\n    let diff2xy = diffx*diffx + diffy*diffy;\r\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\r\n    if(dist2*4 > diff2xy)\r\n      return false;\r\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\r\n      return true;\r\n\r\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nexport {\r\n        EPS, \r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      };\r\n","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport ccNetViz_utils from '../utils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\nimport {\r\n        EPS,\r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      } from './geomtools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nlet ct = {};\r\nfunction getEdgeShift(context, screensize, e, ct){\r\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\r\n  \r\n  \r\n  //compute all transformations made in the vertex shader\r\n  let ctx,cty,citx,city;\r\n  \r\n  ctx = -ct.y;\r\n  cty = ct.x * context.aspect2;\r\n  \r\n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\r\n  \r\n  if(eq(len2, 0)){\r\n    ctx = 0;\r\n    cty = 0;\r\n  }else{\r\n    let len = Math.sqrt(len2);\r\n    ctx *= context.curveExc * 0.25 * screensize / len;\r\n    cty *= context.curveExc * 0.25 * screensize / len;\r\n  }\r\n\r\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\r\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\r\n  citx = -ct.cy * 0.5 * sizex;\r\n  city = ct.cx * 0.5 * sizey;\r\n  \r\n  ct.x = ctx + citx;\r\n  ct.y = cty + city;\r\n}\r\n\r\nclass Node{\r\n  constructor(n){\r\n    this.e = n;\r\n  };\r\n  get isNode(){\r\n    return true;\r\n  };\r\n  getBBox(){\r\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2){\r\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context){\r\n    return distance2(x,y,this.e.x,this.e.y);\r\n  };\r\n}\r\n\r\nclass Label{\r\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\r\n    this.e = n;\r\n    this.pos = textpos;\r\n    this.style = style;\r\n    this.fontSize = fontSize;\r\n    this.isSDF = isSDF;\r\n    this.getLabelSize = getLabelSize;\r\n  };\r\n  get isLabel(){\r\n    return true;\r\n  };\r\n  getTextPos(context,size){\r\n    let x = this.e.x;\r\n    let y = this.e.y;\r\n    \r\n    let x1,y1,x2,y2;\r\n    x1 = x2 = x;\r\n    y1 = y2 = y;\r\n    \r\n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\r\n\r\n    let fontScale = wantedSize / this.fontSize;\r\n    if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    let step = (edge, x) => (x < edge ? 0 : 1);\r\n\r\n\r\n    const offset = 0.5 * context.nodeSize;    \r\n    const MAX =  10.;\r\n    const MIN = -10.;\r\n    let bbox = [MAX, MAX, MIN, MIN];\r\n    \r\n    \r\n    this.pos.forEach((c) => {\r\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\r\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\r\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\r\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\r\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\r\n      \r\n      bbox[0] = Math.min(x1,bbox[0]);\r\n      bbox[1] = Math.min(y1,bbox[1]);\r\n      bbox[2] = Math.max(x2,bbox[2]);\r\n      bbox[3] = Math.max(y2,bbox[3]);\r\n    });\r\n    \r\n    return bbox;\r\n  };\r\n  getBBox(context){\r\n    let bb = this.getTextPos(context,1);\r\n    bb[0] = Math.min(bb[0],this.e.x);\r\n    bb[1] = Math.min(bb[1],this.e.y);\r\n    bb[2] = Math.max(bb[2],this.e.x);\r\n    bb[3] = Math.max(bb[3],this.e.y);\r\n    return bb;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2,context,size){\r\n    let t = this.getTextPos(context,size);\r\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let t = this.getTextPos(context, size);\r\n\r\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\r\n      return 0;\r\n    \r\n    //minimum from distance from corners or distance from borders\r\n    return Math.min(\r\n      distance2(t[0],t[1]),\r\n      distance2(t[2],t[3]),\r\n      distance2(t[0],t[3]),\r\n      distance2(t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\r\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\r\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \r\n    );\r\n  };\r\n}\r\n\r\nclass Line{\r\n  constructor(l){\r\n    this.e = l;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getPoints(context, size){\r\n    let x1,y1,x2,y2;\r\n    \r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n    \r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y;\r\n    \r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    return [x1,y1,x2,y2];\r\n  };\r\n  getBBox(context, size){\r\n    let p = this.getPoints(context, size);\r\n    \r\n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\r\n  };\r\n}\r\n\r\nclass Circle{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, screensize){\r\n    let x1,y1,s;\r\n    s = ccNetViz_geomutils.edgeSource(this.e);\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n\r\n    let size = 2.5 * context.nodeSize * screensize;\r\n    let xsize = size / context.width / 2;\r\n    let ysize = size / context.height / 2;\r\n\r\n    let d = s.y < 0.5 ? 1 : -1;\r\n\r\n    getEdgeShift(context, screensize, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    \r\n    return [\r\n      x1,\r\n      y1,\r\n      x1 + xsize*1,\r\n      y1 + ysize*d,\r\n      x1,\r\n      y1 + ysize*1.25*d,\r\n      x1 - xsize*1,\r\n      y1 + ysize*d\r\n    ];\r\n  };\r\n  getBBox(context, size){\r\n    let v = this.getBezierPoints(context, size);\r\n    \r\n    return getBBFromPoints(v);\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context,size);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y,context,size){\r\n    let v = this.getBezierPoints(context,size);\r\n\r\n    //circle is just 2 bezier curves :)\r\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\r\n\r\n    return Math.min(d1,d2);\r\n  };\r\n}\r\n\r\nclass Curve{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, size, normalize){\r\n    let x1,x2,y1,y2;\r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y; \r\n    \r\n    let d = normalize(s, t);\r\n    \r\n    let n2 = d.y;\r\n    let n3 = context.aspect2*-d.x;\r\n\r\n    let x = context.width * n2;\r\n    let y = context.height* n3;\r\n    let l = Math.sqrt(x*x+y*y)*2;\r\n\r\n    n2 *= context.curveExc*size/l;\r\n    n3 *= context.curveExc*size/l;\r\n\r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    let ret = [\r\n      x1,\r\n      y1,\r\n      (x1+x2)/2 + n2,\r\n      (y1+y2)/2 + n3,\r\n      x2,\r\n      y2\r\n    ];\r\n    return ret;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\r\n  };\r\n  getBBox(context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return getBBFromPoints(v);\r\n  };\r\n  dist2(x,y, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n  };\r\n}\r\n\r\n\r\nfunction sortByDistances(e1, e2){\r\n  return e1.dist2 - e2.dist2;\r\n}\r\n\r\n\r\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\r\n\r\nexport default class spatialIndex{\r\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\r\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\r\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\r\n    \r\n    this.texts = texts;\r\n    this.normalize = normalize;\r\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\r\n    let i = 0, d = [];\r\n\r\n    let addEntity = (e, d, i) => {\r\n      d[i] = e.getBBox(c, size, normalize);\r\n      d[i].push(e);\r\n      return e;\r\n    };\r\n    \r\n    nodes.forEach((n) => {\r\n      t.nodes.push(addEntity(new Node(n), d, i++));\r\n    });\r\n\r\n    lines.forEach((l) => {\r\n      t.lines.push(addEntity(new Line(l), d, i++));\r\n    });\r\n\r\n    circles.forEach((c) => {\r\n      t.circles.push(addEntity(new Circle(c), d, i++));\r\n    });\r\n    \r\n    curves.forEach((c) => {\r\n      t.curves.push(addEntity(new Curve(c), d, i++));\r\n    });\r\n\r\n\r\n    let sd = {};\r\n    let sdi = {};\r\n\r\n\r\n    //labels position could differ by style >> must partition by it\r\n    for(let style in nodesParts){\r\n      let nodes = nodesParts[style];\r\n\r\n\r\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\r\n      let textEngine = texts.getEngine(ns.font);\r\n      textEngine.setFont(ns.font);\r\n      const fontSize = textEngine.fontSize;\r\n      const isSDF = textEngine.isSDF;\r\n\r\n      let sd_n = (sd[style] || (sd[style] = []));\r\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\r\n\r\n      //biggest size in which the text is shown\r\n      c.size = getLabelHideScreen(c, ns.label || {});\r\n      nodes.forEach((n) => {\r\n        let textpos = textEngine.get(n.label, n.x, n.y);\r\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\r\n      });\r\n\r\n      sdi[style] = sdi_n;\r\n    }\r\n\r\n    this.rbushtree_s = {};\r\n    for(let style in sd){\r\n        let rb = this.rbushtree_s[style] = rbush();\r\n        rb.load(sd[style]);\r\n    }\r\n\r\n    //tree initialization\r\n    this.rbushtree = rbush();\r\n    this.rbushtree.load(d);\r\n    \r\n    \r\n    //restore the size of scale (loosen outer the upper bound)\r\n    c.size = oldsize;\r\n  }\r\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\r\n    if(nodes && e.isNode){\r\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(edges && e.isEdge){\r\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(labels && e.isLabel){\r\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n  }\r\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\r\n    if(x1 > x2){\r\n      let p = x1;\r\n      x1 = x2;\r\n      x2 = p;\r\n    }\r\n    if(y1 > y2){\r\n      let p = y1;\r\n      y1 = y2;\r\n      y2 = p;\r\n    }\r\n\r\n    \r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let x = (x1+x2)/2;\r\n    let y = (y1+y2)/2;\r\n\r\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n    \r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;    \r\n  }\r\n  find(context, x,y, radius, size, nodes, edges, labels){\r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let xradius = radius;\r\n    let yradius = radius;\r\n\r\n    let radius2 = radius*radius;\r\n\r\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(dist2 > radius2)\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n\r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  update(context, t, i, v){\r\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\r\n    let size = 1;\r\n\r\n    this.rbushtree.remove(this.types[t][i]);\r\n\r\n    let e = new tConst[t](v);\r\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\r\n    arr.push(e);\r\n\r\n    this.rbushtree.insert(this.types[t][i] = arr);\r\n  }\r\n}","const normalize = (a, b) => {\r\n  let x = b.x - a.x;\r\n  let y = b.y - a.y;\r\n  let sc = 1 / Math.sqrt(x * x + y * y);\r\n  return { x: sc * x, y: sc * y };\r\n};\r\n\r\nexport { normalize };\r\n","import linear from './linear.glsl';\r\nimport sinIn from './sin-in.glsl';\r\nimport sinOut from './sin-out.glsl';\r\nimport sinInOut from './sin-inout.glsl';\r\nimport expIn from './exp-in.glsl';\r\nimport expOut from './exp-out.glsl';\r\nimport expInOut from './exp-inout.glsl';\r\nimport bounceIn from './bounce-in.glsl';\r\nimport bounceOut from './bounce-out.glsl';\r\nimport bounceInOut from './bounce-inout.glsl';\r\nimport circularIn from './circular-in.glsl';\r\nimport circularOut from './circular-out.glsl';\r\nimport circularInOut from './circular-inout.glsl';\r\nimport quadIn from './quad-in.glsl';\r\nimport quadOut from './quad-out.glsl';\r\nimport quadInOut from './quad-inout.glsl';\r\nimport cubicIn from './cubic-in.glsl';\r\nimport cubicOut from './cubic-out.glsl';\r\nimport cubicInOut from './cubic-inout.glsl';\r\nimport quartIn from './quart-in.glsl';\r\nimport quartOut from './quart-out.glsl';\r\nimport quartInOut from './quart-inout.glsl';\r\nimport quintIn from './quint-in.glsl';\r\nimport quintOut from './quint-out.glsl';\r\nimport quintInOut from './quint-inout.glsl';\r\n\r\nconst easeFunctions = {\r\n    'linear': linear,\r\n    'sin-in': sinIn,\r\n    'sin-out': sinOut,\r\n    'sin-inout': sinInOut,\r\n    'exp-in': expIn,\r\n    'exp-out': expOut,\r\n    'exp-inout': expInOut,\r\n    'bounce-in': bounceIn,\r\n    'bounce-out': bounceOut,\r\n    'bounce-inout': bounceInOut,\r\n    'circular-in': circularIn,\r\n    'circular-out': circularOut,\r\n    'circular-inout': circularInOut,\r\n    'quad-in': quadIn,\r\n    'quad-out': quadOut,\r\n    'quad-inout': quadInOut,\r\n    'cubic-in': cubicIn,\r\n    'cubic-out': cubicOut,\r\n    'cubic-inout': cubicInOut,\r\n    'quart-in': quartIn,\r\n    'quart-out': quartOut,\r\n    'quart-inout': quartInOut,\r\n    'quint-in': quintIn,\r\n    'quint-out': quintOut,\r\n    'quint-inout': quintInOut,\r\n}\r\n\r\nexport {\r\n    easeFunctions,\r\n}","export default \"float ease(float t) {\\r\\n  return t;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin(t * HALF_PI);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return -0.5 * (cos(PI * t) - 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 || t == 1.0\\r\\n    ? t\\r\\n    : t < 0.5\\r\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\r\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return 1.0 - bounceOut(1.0 - t);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\r\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 - sqrt(1.0 - t * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return sqrt((2.0 - t) * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\r\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return -t * (t - 2.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  float f = t - 1.0;\\r\\n  return f * f * f + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 4.0 * t * t * t\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 4.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 5.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 + (pow(t - 1.0, 5.0)); // NOTE: fix original bug '-' -> '+'\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +16.0 * pow(t, 5.0)\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0; // NOTE: fix original bug, no '-'\\r\\n}\\r\\n\"","export default \"attribute vec2 curveShift;\\r\\nvec4 getShiftCurve(void) {\\r\\n  vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\\r\\n  float length = length(screen * shiftN);\\r\\n  return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\\r\\n}\\r\\nattribute vec2 circleShift;\\r\\nvec4 getShiftCircle(void) { return vec4(size * circleShift, 0, 0); }\"","export default \"precision mediump float;\\r\\nuniform float type;\\r\\nuniform float animateType;\\r\\nuniform vec4 color;\\r\\nuniform vec4 animateColor;\\r\\nuniform float animateSpeed;\\r\\nvarying vec2 n;\\r\\nvarying float v_time;\\r\\nvarying vec2 v_startPos;\\r\\nvarying vec2 v_endPos;\\r\\nvarying vec2 v_screen;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nuniform float lineSize;\\r\\n\"","export default \"float isAnimateCovered() {\\r\\n  vec2 pos = gl_FragCoord.xy;\\r\\n  vec2 viewport = 2. * v_screen;\\r\\n  float maxLen = length(viewport);\\r\\n  vec2 startPos = viewport * v_startPos;\\r\\n  vec2 endPos = viewport * v_endPos;\\r\\n  float totalLen = distance(startPos, endPos);\\r\\n  float len = distance(pos, startPos);\\r\\n  // float r = 300.;\\r\\n  float r =\\r\\n      ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * totalLen;\\r\\n  // float r = 0.5 * totalLen;\\r\\n  float draw = 1. - step(r, len);\\r\\n  return draw;\\r\\n}\\r\\n\\r\\nfloat isAnimateCoveredGradient() {\\r\\n  vec2 pos = gl_FragCoord.xy;\\r\\n  vec2 viewport = 2. * v_screen;\\r\\n  float maxLen = length(viewport);\\r\\n  vec2 startPos = viewport * v_startPos;\\r\\n  vec2 endPos = viewport * v_endPos;\\r\\n  float totalLen = distance(startPos, endPos);\\r\\n  float len = distance(pos, startPos);\\r\\n  float gradLen = 180.; // TODO: can config\\r\\n  float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) *\\r\\n            (totalLen + gradLen / 2.); // NOTE: use 0.2 as a proper factor\\r\\n  // float r = 0.5 * totalLen;\\r\\n  float draw = fract(smoothstep(r - gradLen, r, len));\\r\\n  return draw;\\r\\n}\\r\\n\\r\\nfloat isAnimateCoveredDoubleGradient() {\\r\\n  vec2 pos = gl_FragCoord.xy;\\r\\n  vec2 viewport = 2. * v_screen;\\r\\n  float maxLen = length(viewport);\\r\\n  vec2 startPos = viewport * v_startPos;\\r\\n  vec2 endPos = viewport * v_endPos;\\r\\n  float totalLen = distance(startPos, endPos);\\r\\n  float len = distance(pos, startPos);\\r\\n  float gradLen = 90.; // TODO: can config\\r\\n  float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) *\\r\\n            (totalLen + gradLen / 2.); // NOTE: use 0.2 as a proper factor\\r\\n\\r\\n  float draw = (1. - step(r, len)) * fract(smoothstep(r - gradLen, r, len)) +\\r\\n               (1. - step(r + gradLen, len)) * step(r, len) *\\r\\n                   (1. - fract(smoothstep(r, r + gradLen, len)));\\r\\n  return draw;\\r\\n}\"","export default \"void main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineSize * 5.0));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  // line animate types\\r\\n  if (animateType >= 2.5) {\\r\\n    gl_FragColor = isAnimateCoveredDoubleGradient() * animateColor +\\r\\n                   (1. - isAnimateCoveredDoubleGradient()) * color;\\r\\n  } else if (animateType >= 1.5) {\\r\\n    gl_FragColor = isAnimateCoveredGradient() * animateColor +\\r\\n                   (1. - isAnimateCoveredGradient()) * color;\\r\\n  } else if (animateType >= 0.5) {\\r\\n    gl_FragColor =\\r\\n        isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\\r\\n  } else {\\r\\n    gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\\r\\n  }\\r\\n}\"","export default \"#extension GL_OES_standard_derivatives : enable\\r\\n#ifdef GL_ES\\r\\nprecision highp float;\\r\\n#endif\\r\\nuniform float width;\\r\\nuniform vec4 color;\\r\\nuniform float type;\\r\\nuniform float lineStepSize;\\r\\nuniform float lineSize;\\r\\nvarying vec2 c;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nvoid main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineStepSize * lineSize));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  vec2 px = dFdx(c);\\r\\n  vec2 py = dFdy(c);\\r\\n  float fx = 2.0 * c.x * px.x - px.y;\\r\\n  float fy = 2.0 * c.y * py.x - py.y;\\r\\n  float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\\r\\n  float alpha = 1.0 - abs(sd) / width;\\r\\n  if (alpha < 0.0)\\r\\n    discard;\\r\\n  gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\\r\\n}\"","import vsLabelsShader from './vsLabelsShader.glsl';\r\nimport vsLabelsBackgroundShader from './vsLabelsBackgroundShader.glsl';\r\nimport vsLabelsBorder from './vsLabelsBorder.glsl';\r\nimport fsLabelsBackgroundShader from './fsLabelsBackgroundShader.glsl';\r\nimport fsLabelsBorder from './fsLabelsBorder.glsl';\r\n\r\nimport vsLineHead from './vsLineHead.glsl';\r\nimport vsLineMain from './vsLineMain.glsl';\r\nimport getShiftFuncs from './getShiftFuncs.glsl';\r\n\r\nimport { easeFunctions } from '../easeFunctions';\r\nimport fsLineHead from './fsLineHead.glsl';\r\nimport fsLineAnimateFuncs from './fsLineAnimateFuncs.glsl';\r\nimport fsLineMain from './fsLineMain.glsl';\r\nimport fsLineBasic from './fsLineBasic.glsl';\r\n\r\nimport fsColorTexture from './fsColorTexture.glsl';\r\nimport fsVarColorTexture from './fsVarColorTexture.glsl';\r\nimport fsLabelTexture from './fsLabelTexture.glsl';\r\n\r\nimport fsCurve from './fsCurve.glsl';\r\n\r\nimport vsCurveHead from './vsCurveHead.glsl';\r\nimport vsCurveMain from './vsCurveMain.glsl';\r\nimport vsCircleHead from './vsCircleHead.glsl';\r\nimport vsCircleMain from './vsCircleMain.glsl';\r\n\r\nimport vsNode from './vsNode.glsl';\r\nimport vsNodeColored from './vsNodeColored.glsl';\r\n\r\nimport vsLineArrowHead from './vsLineArrowHead.glsl';\r\nimport vsLineArrowMain from './vsLineArrowMain.glsl';\r\nimport vsCurveArrowHead from './vsCurveArrowHead.glsl';\r\nimport vsCurveArrowMain from './vsCurveArrowMain.glsl';\r\nimport vsCircleArrowHead from './vsCircleArrowHead.glsl';\r\nimport vsCircleArrowMain from './vsCircleArrowMain.glsl';\r\n\r\nconst vsLine = [vsLineHead, getShiftFuncs, vsLineMain].join('\\n');\r\nconst vsCurve = [vsCurveHead, getShiftFuncs, vsCurveMain].join('\\n');\r\nconst vsCircle = [vsCircleHead, getShiftFuncs, vsCircleMain].join('\\n');\r\n\r\nconst vsLineArrow = [vsLineArrowHead, getShiftFuncs, vsLineArrowMain].join(\r\n  '\\n'\r\n);\r\nconst vsCurveArrow = [vsCurveArrowHead, getShiftFuncs, vsCurveArrowMain].join(\r\n  '\\n'\r\n);\r\nconst vsCircleArrow = [\r\n  vsCircleArrowHead,\r\n  getShiftFuncs,\r\n  vsCircleArrowMain,\r\n].join('\\n');\r\n\r\nconst easeFunctionPart = ease => {\r\n  return `${easeFunctions[ease ? ease : 'linear']}`;\r\n};\r\n\r\nconst fsLineAnimate = ease => {\r\n  return [\r\n    fsLineHead,\r\n    easeFunctionPart(ease),\r\n    fsLineAnimateFuncs,\r\n    fsLineMain,\r\n  ].join('\\n');\r\n};\r\n\r\nconst elementShaders = {\r\n  vsLine,\r\n  fsLineAnimate,\r\n  fsLineBasic,\r\n  fsColorTexture,\r\n  fsVarColorTexture,\r\n  vsLabelsShader,\r\n  fsLabelTexture,\r\n  vsLabelsBackgroundShader,\r\n  vsLabelsBorder,\r\n  fsLabelsBackgroundShader,\r\n  fsLabelsBorder,\r\n  fsCurve,\r\n  vsCurve,\r\n  fsCircle: fsCurve,\r\n  vsCircle,\r\n  vsNode,\r\n  vsNodeColored,\r\n  vsLineArrow,\r\n  vsCurveArrow,\r\n  vsCircleArrow,\r\n};\r\n\r\nexport { elementShaders };\r\n","export default \"precision mediump float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 lengthSoFar;\\r\\nattribute vec2 startPos;\\r\\nattribute vec2 endPos;\\r\\nuniform float time;\\r\\nuniform float exc;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform vec2 width;\\r\\nuniform mat4 transform;\\r\\nvarying float v_time;\\r\\nvarying vec2 v_startPos;\\r\\nvarying vec2 v_endPos;\\r\\nvarying vec2 v_screen;\\r\\nvarying vec2 n;\\r\\nvarying vec2 v_lengthSoFar;\\r\\n\"","export default \"void main(void) {\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() +\\r\\n                vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\\r\\n\\r\\n  vec4 p = transform * vec4(lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n  v_time = time;\\r\\n  v_startPos = startPos;\\r\\n  v_endPos = endPos;\\r\\n  v_screen = screen;\\r\\n\\r\\n  n = normal;\\r\\n}\\r\\n\"","export default \"precision highp float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 curve;\\r\\nattribute vec2 lengthSoFar;\\r\\nuniform vec2 size;\\r\\nuniform float exc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nvarying vec2 c;\"","export default \"void main(void) {\\r\\n  vec2 n = vec2(normal.x, aspect2 * normal.y);\\r\\n  float length = length(screen * n);\\r\\n  n = length == 0.0 ? vec2(0, 0) : n / length;\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  c = curve;\\r\\n\\r\\n  vec4 p = transform * vec4(lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n}\"","export default \"precision highp float;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nattribute vec2 curve;\\r\\nattribute vec2 lengthSoFar;\\r\\nuniform float exc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform float aspect;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 c;\\r\\nvarying vec2 v_lengthSoFar;\"","export default \"void main(void) {\\r\\n  gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  c = curve;\\r\\n\\r\\n  vec4 p = transform * vec4(size * lengthSoFar, 0, 0);\\r\\n  v_lengthSoFar = vec2(p.x, p.y / aspect);\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float exc;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = direction / length(screen * direction);\\r\\n  vec2 v = vec2(u.y, -aspect2 * u.x);\\r\\n  v = v / length(screen * v);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4(arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n               arrowsize.y * textureCoord.y * u - offset * offsetMul * u,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform float exc;\\r\\nuniform float cexc;\\r\\nuniform vec2 screen;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\\r\\n  u = normalize(direction - cexc * u / length(screen * u));\\r\\n  u = u / length(screen * u);\\r\\n  vec2 v = vec2(u.y, -aspect2 * u.x);\\r\\n  v = v / length(screen * v);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4(arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n               arrowsize.y * textureCoord.y * u - offset * offsetMul * u,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 direction;\\r\\nattribute vec2 textureCoord;\\r\\nattribute float offsetMul;\\r\\nuniform float offset;\\r\\nuniform vec2 arrowsize;\\r\\nuniform vec2 size;\\r\\nuniform vec2 screen;\\r\\nuniform float exc;\\r\\nuniform float aspect2;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\"","export default \"void main(void) {\\r\\n  vec2 u = direction;\\r\\n  vec2 v = vec2(direction.y, -direction.x);\\r\\n  gl_Position =\\r\\n      getShiftCurve() + getShiftCircle() +\\r\\n      vec4((arrowsize.x * (0.5 - textureCoord.x) * v -\\r\\n            arrowsize.y * textureCoord.y * u - offset * offsetMul * u) /\\r\\n               screen,\\r\\n           0, 0) +\\r\\n      transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform float type;\\r\\nuniform vec4 color;\\r\\nvarying vec2 n;\\r\\nvarying vec2 v_lengthSoFar;\\r\\nuniform float lineSize;\\r\\nvoid main(void) {\\r\\n  float part = abs(fract(length(v_lengthSoFar) * lineSize * 5.0));\\r\\n\\r\\n  // line types\\r\\n  if (type >= 2.5) { // 3.0 dotted\\r\\n    part = fract(part * 3.0);\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  } else if (type >= 1.5) { // 2.0 - chain dotted\\r\\n    if (part < 0.15)\\r\\n      discard;\\r\\n    if (part > 0.30 && part < 0.45)\\r\\n      discard;\\r\\n  } else if (type >= 0.5) { // 1.0 - dashed\\r\\n    if (part < 0.5)\\r\\n      discard;\\r\\n  }\\r\\n\\r\\n  gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform vec4 color;\\r\\nuniform sampler2D texture;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform sampler2D texture;\\r\\nvarying vec2 tc;\\r\\nvarying vec4 c;\\r\\nvoid main(void) {\\r\\n   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 relative;\\r\\nattribute vec2 textureCoord;\\r\\nuniform float offset;\\r\\nuniform vec2 scale;\\r\\nuniform float fontScale;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\\r\\n   tc = textureCoord;\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform lowp sampler2D texture;\\r\\nuniform mediump vec4 color;\\r\\nuniform mediump float height_font;\\r\\nuniform float type;\\r\\nuniform float buffer;\\r\\nuniform float boldness;\\r\\nfloat gamma = 4.0 * 1.4142 * boldness / height_font;\\r\\nvarying mediump vec2 tc;\\r\\nvoid main() {\\r\\n  if(type > 0.5){  //SDF\\r\\n    float tx=texture2D(texture, tc).a;\\r\\n    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\\r\\n    gl_FragColor=vec4(color.rgb, a*color.a);\\r\\n  }else{ //NORMAL FONT\\r\\n    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\\r\\n  }\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 relative;\\r\\nuniform vec2 scale;\\r\\nuniform mat4 transform;\\r\\nuniform float fontScale;\\r\\nuniform float offset;\\r\\nvoid main(void) {\\r\\n   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\\r\\n}\\r\\n\"","export default \"precision mediump float;\\r\\nattribute vec2 relative;\\r\\nattribute vec2 position;\\r\\nattribute vec2 normal;\\r\\nuniform vec2 width;\\r\\nuniform mat4 transform;\\r\\nuniform float fontScale;\\r\\nuniform float offset;\\r\\nuniform vec2 scale;\\r\\nvarying vec2 n;\\r\\nvoid main(void) {\\r\\n   vec4 pos = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\\r\\n  gl_Position =  vec4(width * normal, 0, 0) + pos;\\r\\n  n = normal;\\r\\n}\"","export default \"precision mediump float;\\r\\nuniform vec4 backgroundColor;\\r\\nvoid main() {\\r\\n   gl_FragColor = vec4(backgroundColor.r, backgroundColor.g, backgroundColor.b,1);\\r\\n}\\r\\n      \\r\\n     \"","export default \"precision mediump float;\\r\\nuniform vec4 borderColor;\\r\\nvarying vec2 n;\\r\\nvoid main() { \\r\\n  gl_FragColor = vec4(borderColor.r, borderColor.g, borderColor.b, borderColor.a-length(n));\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 textureCoord;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvoid main(void) {\\r\\n  gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n}\"","export default \"attribute vec2 position;\\r\\nattribute vec2 textureCoord;\\r\\nattribute vec4 color;\\r\\nuniform vec2 size;\\r\\nuniform mat4 transform;\\r\\nvarying vec2 tc;\\r\\nvarying vec4 c;\\r\\nvoid main(void) {\\r\\n  gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) +\\r\\n                transform * vec4(position, 0, 1);\\r\\n  tc = textureCoord;\\r\\n  c = color;\\r\\n}\"","class BaseShape {\r\n  constructor() {\r\n    this._primitive = null;\r\n  }\r\n  getPrimitive() {\r\n    return this._primitive;\r\n  }\r\n}\r\n\r\nclass BaseShapeManager {\r\n  constructor() {\r\n    this._filler = null;\r\n  }\r\n\r\n  getFiller() {\r\n    return this._filler;\r\n  }\r\n}\r\n\r\nexport { BaseShape, BaseShapeManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_geomutils from '../../geomutils';\r\nimport { normalize } from '../util';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\n\r\nconst getEdgeStyleSize = c => {\r\n  return c.width / 120;\r\n  /*      let avsize = (c.width + c.height)/2;\r\n    let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\r\n    //koef 1 for 150 size and 1.4 for 300 size\r\n    return c.width/(130*koef);\r\n*/\r\n};\r\n\r\nconst stylesTransl = {\r\n  line: 0,\r\n  dashed: 1,\r\n  'chain-dotted': 2,\r\n  dotted: 3,\r\n};\r\nconst getEdgeType = t => {\r\n  if (t !== undefined) {\r\n    t = stylesTransl[t];\r\n  }\r\n\r\n  if (t === undefined || typeof t !== 'number') {\r\n    t = 0;\r\n  }\r\n\r\n  return t;\r\n};\r\n\r\nconst animateStylesTransl = {\r\n  none: 0,\r\n  basic: 1,\r\n  gradient: 2,\r\n  'double-gradient': 3,\r\n};\r\nconst getEdgeAnimateType = t => {\r\n  if (t !== undefined) {\r\n    t = animateStylesTransl[t];\r\n  }\r\n\r\n  if (t === undefined || typeof t !== 'number') {\r\n    t = 0;\r\n  }\r\n\r\n  return t;\r\n};\r\n\r\nclass Line extends BaseShape {\r\n  constructor(gl, edgeStyle) {\r\n    super();\r\n    const hasAnimation =\r\n      !!edgeStyle.animateType && edgeStyle.animateType !== 'none';\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsLine,\r\n      elementShaders.fsLineAnimate(edgeStyle.animateEase),\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        gl.uniform2f(\r\n          uniforms.width,\r\n          c.style.width / c.width,\r\n          c.style.width / c.height\r\n        );\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n\r\n        if (hasAnimation) {\r\n          gl.uniform1f(\r\n            uniforms.animateType,\r\n            getEdgeAnimateType(c.style.animateType)\r\n          );\r\n          gl.uniform1f(uniforms.animateSpeed, c.style.animateSpeed);\r\n          ccNetViz_gl.uniformColor(\r\n            gl,\r\n            uniforms.animateColor,\r\n            c.style.animateColor\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass Curve extends BaseShape {\r\n  constructor(gl, edgeStyle) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsCurve,\r\n      elementShaders.fsCurve,\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform1f(uniforms.width, c.style.width);\r\n        gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass Circle extends BaseShape {\r\n  constructor(gl, edgeStyle) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      null,\r\n      elementShaders.vsCircle,\r\n      elementShaders.fsCircle,\r\n      c => {\r\n        let uniforms = c.shader.uniforms;\r\n        uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n        gl.uniform1f(uniforms.width, c.style.width);\r\n        gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n        gl.uniform2f(uniforms.screen, c.width, c.height);\r\n        let size = 2.5 * c.nodeSize;\r\n        uniforms.size &&\r\n          gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n        gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n        gl.uniform1f(uniforms.aspect, c.aspect);\r\n        uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5 / 3);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nconst setVerticeCurveShift = (v, iV, s, t) => {\r\n  let ct1 = {},\r\n    ct2 = {};\r\n  let csx, csy, ctx, cty, cisx, cisy, sisy, citx, city;\r\n  ccNetViz_geomutils.getCurveShift(t.e, ct1);\r\n  ctx = ct1.x;\r\n  cty = ct1.y;\r\n  citx = ct1.cx;\r\n  city = ct1.cy;\r\n\r\n  ccNetViz_geomutils.getCurveShift(s.e, ct2);\r\n  csx = ct2.x;\r\n  csy = ct2.y;\r\n  cisx = ct2.cx;\r\n  cisy = ct2.cy;\r\n\r\n  v.curveShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.curveShift,\r\n      iV,\r\n      -csy,\r\n      csx,\r\n      -csy,\r\n      csx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx\r\n    );\r\n  v.circleShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.circleShift,\r\n      iV,\r\n      -cisy,\r\n      cisx,\r\n      -cisy,\r\n      cisx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx\r\n    );\r\n};\r\n\r\nclass EdgeManager extends BaseShapeManager {\r\n  constructor() {\r\n    super();\r\n    this._filler = {\r\n      lines: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let dx = s.x - t.x;\r\n          let dy = s.y - t.y;\r\n          let d = normalize(s, t);\r\n\r\n          setVerticeCurveShift(v, iV, s, t);\r\n\r\n          ccNetViz_primitive.vertices(\r\n            v.position,\r\n            iV,\r\n            s.x,\r\n            s.y,\r\n            s.x,\r\n            s.y,\r\n            t.x,\r\n            t.y,\r\n            t.x,\r\n            t.y\r\n          );\r\n          ccNetViz_primitive.vertices(\r\n            v.lengthSoFar,\r\n            iV,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            dx,\r\n            dy,\r\n            dx,\r\n            dy\r\n          );\r\n          ccNetViz_primitive.vertices(\r\n            v.normal,\r\n            iV,\r\n            -d.y,\r\n            d.x,\r\n            d.y,\r\n            -d.x,\r\n            d.y,\r\n            -d.x,\r\n            -d.y,\r\n            d.x\r\n          );\r\n\r\n          // NOTE: edge animation set from style\r\n          const hasEdgeAnimation =\r\n            !!style.animateType && style.animateType !== 'none';\r\n          if (hasEdgeAnimation) {\r\n            // when do edge animation, shader need to know the startPos and endPos\r\n            ccNetViz_primitive.vertices(\r\n              v.startPos,\r\n              iV,\r\n              s.x,\r\n              s.y,\r\n              s.x,\r\n              s.y,\r\n              s.x,\r\n              s.y,\r\n              s.x,\r\n              s.y\r\n            );\r\n            ccNetViz_primitive.vertices(\r\n              v.endPos,\r\n              iV,\r\n              t.x,\r\n              t.y,\r\n              t.x,\r\n              t.y,\r\n              t.x,\r\n              t.y,\r\n              t.x,\r\n              t.y\r\n            );\r\n          }\r\n\r\n          ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        },\r\n      }),\r\n      curves: style => ({\r\n        numVertices: 3,\r\n        numIndices: 3,\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let dx = s.x - t.x;\r\n          let dy = s.y - t.y;\r\n          let d = normalize(s, t);\r\n\r\n          setVerticeCurveShift(v, iV, s, t);\r\n\r\n          ccNetViz_primitive.vertices(\r\n            v.position,\r\n            iV,\r\n            s.x,\r\n            s.y,\r\n            0.5 * (t.x + s.x),\r\n            0.5 * (t.y + s.y),\r\n            t.x,\r\n            t.y\r\n          );\r\n          ccNetViz_primitive.vertices(\r\n            v.lengthSoFar,\r\n            iV,\r\n            0,\r\n            0,\r\n            dx / 2,\r\n            dy / 2,\r\n            dx,\r\n            dy\r\n          );\r\n          ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\r\n          ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\r\n          ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\r\n        },\r\n      }),\r\n      circles: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let d = s.y < 0.5 ? 1 : -1;\r\n\r\n          let xdiff1 = 0;\r\n          let ydiff1 = 0;\r\n          let xdiff2 = 1;\r\n          let ydiff2 = d;\r\n          let xdiff3 = 2;\r\n          let ydiff3 = 1.25 * d;\r\n          let xdiff4 = 3;\r\n          let ydiff4 = 1.5 * d;\r\n\r\n          setVerticeCurveShift(v, iV, s, s);\r\n\r\n          ccNetViz_primitive.vertices(\r\n            v.position,\r\n            iV,\r\n            s.x,\r\n            s.y,\r\n            s.x,\r\n            s.y,\r\n            s.x,\r\n            s.y,\r\n            s.x,\r\n            s.y\r\n          );\r\n          ccNetViz_primitive.vertices(\r\n            v.lengthSoFar,\r\n            iV,\r\n            xdiff1,\r\n            ydiff1,\r\n            xdiff2,\r\n            ydiff2,\r\n            xdiff3,\r\n            ydiff3,\r\n            xdiff4,\r\n            ydiff4\r\n          );\r\n          ccNetViz_primitive.vertices(\r\n            v.normal,\r\n            iV,\r\n            0,\r\n            0,\r\n            1,\r\n            d,\r\n            0,\r\n            1.25 * d,\r\n            -1,\r\n            d\r\n          );\r\n          ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\r\n          ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        },\r\n      }),\r\n    };\r\n  }\r\n}\r\n\r\nexport { Line, Curve, Circle, EdgeManager };\r\n","import { BaseShape, BaseShapeManager } from './baseShape';\r\nimport ccNetViz_primitive from '../../primitive';\r\nimport { elementShaders } from '../../shaders';\r\nimport ccNetViz_gl from '../../gl';\r\n\r\nclass Node extends BaseShape {\r\n  constructor(gl, nodeStyle, getNodeSize) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      null,\r\n      elementShaders.vsNode,\r\n      elementShaders.fsColorTexture,\r\n      c => {\r\n        let size = getNodeSize(c);\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass NodeColored extends BaseShape {\r\n  constructor(gl, nodeStyle, getNodeSize) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      null,\r\n      elementShaders.vsNodeColored,\r\n      elementShaders.fsVarColorTexture,\r\n      c => {\r\n        let size = getNodeSize(c);\r\n        let uniforms = c.shader.uniforms;\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclass NodeManager extends BaseShapeManager {\r\n  constructor() {\r\n    super();\r\n    this._filler = style => ({\r\n      set: (v, e, iV, iI) => {\r\n        let x = e.x;\r\n        let y = e.y;\r\n        ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n        if (v.color) {\r\n          let c = e.color;\r\n          ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\r\n        }\r\n        ccNetViz_primitive.quad(v.indices, iV, iI);\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport { Node, NodeColored, NodeManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_geomutils from '../../geomutils';\r\nimport { normalize } from '../util';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\n\r\nconst shaderparams = { attribute: { offsetMul: 1 } };\r\n\r\nconst bindEdgeArrows = (gl, view, getSize, getEdgesCnt) => {\r\n  return c => {\r\n    let size = getSize(c, c.style, getEdgesCnt(), 0.2);\r\n    if (!size) return true;\r\n\r\n    let uniforms = c.shader.uniforms;\r\n    gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n    gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\r\n    gl.uniform1f(uniforms.exc, c.curveExc);\r\n    uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\r\n    if (uniforms.size) {\r\n      size = 2.5 * c.nodeSize;\r\n      uniforms.size &&\r\n        gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n    }\r\n    gl.uniform2f(uniforms.screen, c.width, c.height);\r\n    gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n    ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n  };\r\n};\r\n\r\nlet dx = Math.cos(0.9);\r\nlet dy = Math.sin(0.9);\r\nlet ct = {};\r\n\r\nconst set = (v, e, s, t, iV, iI, dx, dy) => {\r\n  let tx = t.x;\r\n  let ty = t.y;\r\n\r\n  let offsetMul;\r\n  let ctx, cty, citx, city;\r\n\r\n  ccNetViz_geomutils.getCurveShift(t.e, ct);\r\n  ctx = ct.x;\r\n  cty = ct.y;\r\n  citx = ct.cx;\r\n  city = ct.cy;\r\n\r\n  if (t.is_edge) {\r\n    //if target is edge, disable node offset for arrow\r\n    //normal of that edge\r\n    offsetMul = 0;\r\n  } else {\r\n    offsetMul = 1;\r\n  }\r\n  v.curveShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.curveShift,\r\n      iV,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx,\r\n      -cty,\r\n      ctx\r\n    );\r\n  v.circleShift &&\r\n    ccNetViz_primitive.vertices(\r\n      v.circleShift,\r\n      iV,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx,\r\n      -city,\r\n      citx\r\n    );\r\n\r\n  ccNetViz_primitive.singles(\r\n    v.offsetMul,\r\n    iV,\r\n    offsetMul,\r\n    offsetMul,\r\n    offsetMul,\r\n    offsetMul\r\n  );\r\n  ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\r\n  ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\r\n  ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n  ccNetViz_primitive.quad(v.indices, iV, iI);\r\n};\r\n\r\nclass LineArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsLineArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass CurveArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsCurveArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass CircleArrow extends BaseShape {\r\n  constructor(gl, view, edgeStyle, getSize, getEdgesCnt) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      edgeStyle,\r\n      'arrow',\r\n      elementShaders.vsCircleArrow,\r\n      elementShaders.fsColorTexture,\r\n      bindEdgeArrows(gl, view, getSize, getEdgesCnt),\r\n      shaderparams\r\n    );\r\n  }\r\n}\r\n\r\nclass EdgeArrowManager extends BaseShapeManager {\r\n  constructor() {\r\n    super();\r\n    this._filler = {\r\n      lineArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let d = normalize(s, t);\r\n          set(v, e, s, t, iV, iI, d.x, d.y);\r\n        },\r\n      }),\r\n      curveArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let s = ccNetViz_geomutils.edgeSource(e);\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\r\n        },\r\n      }),\r\n      circleArrows: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let t = ccNetViz_geomutils.edgeTarget(e);\r\n          let s = t;\r\n          return set(\r\n            v,\r\n            e,\r\n            s,\r\n            t,\r\n            iV,\r\n            iI,\r\n            t.x < 0.5 ? dx : -dx,\r\n            t.y < 0.5 ? -dy : dy\r\n          );\r\n        },\r\n      }),\r\n    };\r\n  }\r\n}\r\n\r\nexport { LineArrow, CurveArrow, CircleArrow, EdgeArrowManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_color from '../../color';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\n\r\nlet getLabelType = (f, texts) => {\r\n  if (texts.isSDF(f)) return 1;\r\n  return 0;\r\n};\r\n\r\nlet bindLabels = (\r\n  is_outline,\r\n  gl,\r\n  getNodeSize,\r\n  getLabelSize,\r\n  texts,\r\n  backgroundColor,\r\n  context\r\n) => {\r\n  return c => {\r\n    if (!getNodeSize(c)) return true;\r\n\r\n    let l = c.style.label;\r\n    let f = l.font;\r\n    let uniforms = c.shader.uniforms;\r\n\r\n    gl.uniform1f(uniforms.type, getLabelType(f, texts));\r\n    //            gl.uniform1f(uniforms.type, 0);\r\n\r\n    let textEngine = texts.getEngine(f);\r\n    textEngine.setFont(f);\r\n\r\n    let fontScale = 1.0;\r\n    let sdfSize = textEngine.fontSize;\r\n    let wantedSize = textEngine.isSDF\r\n      ? getLabelSize(context, l || {})\r\n      : sdfSize;\r\n    if (wantedSize === 0) {\r\n      fontScale = 0;\r\n    }\r\n\r\n    let opts = {};\r\n    if (wantedSize && sdfSize) {\r\n      fontScale *= wantedSize / sdfSize;\r\n    }\r\n\r\n    if (is_outline && !textEngine.isSDF)\r\n      //discardAll\r\n      fontScale = 0;\r\n\r\n    gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\r\n    gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1);\r\n    gl.uniform1f(uniforms.fontScale, fontScale);\r\n    gl.uniform1f(uniforms.height_font, sdfSize);\r\n    gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n    gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n\r\n    let color;\r\n    if (is_outline && f)\r\n      color = new ccNetViz_color(f.outlineColor || backgroundColor);\r\n    else color = c.style.color;\r\n    ccNetViz_gl.uniformColor(gl, uniforms.color, color);\r\n  };\r\n};\r\n\r\nclass Label extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor,\r\n    context\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsShader,\r\n      elementShaders.fsLabelTexture,\r\n      bindLabels(\r\n        false,\r\n        gl,\r\n        getNodeSize,\r\n        getLabelSize,\r\n        texts,\r\n        backgroundColor,\r\n        context\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nclass LabelOutline extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor,\r\n    context\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsShader,\r\n      elementShaders.fsLabelTexture,\r\n      bindLabels(\r\n        true,\r\n        gl,\r\n        getNodeSize,\r\n        getLabelSize,\r\n        texts,\r\n        backgroundColor,\r\n        context\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nclass LabelManager extends BaseShapeManager {\r\n  constructor(texts) {\r\n    super();\r\n    this._filler = style => {\r\n      return (function(style) {\r\n        let textEngine = texts.getEngine(style.font);\r\n\r\n        textEngine.setFont(style.font);\r\n\r\n        return {\r\n          set: (v, e, iV, iI) => {\r\n            var x = e.x;\r\n            var y = e.y;\r\n\r\n            var ret = false;\r\n            var parts = textEngine.get(e.label || '', x, y, () => {\r\n              ret = true;\r\n            });\r\n            for (var i = 0; i < parts.length; i++, iV += 4, iI += 6) {\r\n              // parts is the array of characters, character description and position w.r.t node\r\n              let c = parts[i];\r\n              //position of the node\r\n              ccNetViz_primitive.vertices(\r\n                v.position,\r\n                iV,\r\n                x,\r\n                y,\r\n                x,\r\n                y,\r\n                x,\r\n                y,\r\n                x,\r\n                y\r\n              );\r\n              //position of the vertices of box of label to be rendered\r\n              if (i == 0) {\r\n                // bring the center of box of character to the center of node (incase if you are wondering\r\n                // why not c.width/2 and c.height/2 , it's because for c.width/2, it will exactly coincide with\r\n                // center of node, so some of the node labels could go out of canvas)\r\n                //UPDATE : for x<=0.5 , we need to bring to centre of node for new labelBackground shader\r\n                var boxMinusX = x <= 0.5 ? c.width / 2 : c.width / 3;\r\n                var boxMinusY = c.height / 3;\r\n              }\r\n              ccNetViz_primitive.vertices(\r\n                v.relative,\r\n                iV,\r\n                c.dx - boxMinusX,\r\n                c.dy - boxMinusY,\r\n                c.width + c.dx - boxMinusX,\r\n                c.dy - boxMinusY,\r\n                c.width + c.dx - boxMinusX,\r\n                c.height + c.dy - boxMinusY,\r\n                c.dx - boxMinusX,\r\n                c.height + c.dy - boxMinusY\r\n              );\r\n              // position of characters in atlas\r\n              if (v.textureCoord) {\r\n                ccNetViz_primitive.vertices(\r\n                  v.textureCoord,\r\n                  iV,\r\n                  c.left,\r\n                  c.bottom,\r\n                  c.right,\r\n                  c.bottom,\r\n                  c.right,\r\n                  c.top,\r\n                  c.left,\r\n                  c.top\r\n                );\r\n              }\r\n              ccNetViz_primitive.quad(v.indices, iV, iI);\r\n            }\r\n            return ret;\r\n          },\r\n          size: (v, e) => {\r\n            return textEngine.steps(e.label || '');\r\n          },\r\n        };\r\n      })(style);\r\n    };\r\n  }\r\n}\r\n\r\nexport { Label, LabelOutline, LabelManager };\r\n","import ccNetViz_primitive from '../../primitive';\r\nimport ccNetViz_gl from '../../gl';\r\nimport ccNetViz_color from '../../color';\r\nimport { elementShaders } from '../../shaders';\r\nimport { BaseShape, BaseShapeManager } from './baseShape';\r\nimport { normalize } from '../util';\r\n\r\nconst bindLabelParams = (\r\n  gl,\r\n  texts,\r\n  getLabelSize,\r\n  context,\r\n  is_background,\r\n  is_border\r\n) => {\r\n  return c => {\r\n    let uniforms = c.shader.uniforms;\r\n    let l = c.style.label;\r\n    let f = l.font;\r\n    let textEngine = texts.getEngine(f);\r\n    textEngine.setFont(f);\r\n    let fontScale = 1.0;\r\n    let sdfSize = textEngine.fontSize;\r\n    let wantedSize = textEngine.isSDF\r\n      ? getLabelSize(context, l || {})\r\n      : sdfSize;\r\n    if (wantedSize === 0) {\r\n      fontScale = 0;\r\n    }\r\n    if (wantedSize && sdfSize) {\r\n      fontScale *= wantedSize / sdfSize;\r\n    }\r\n    gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n    gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n    gl.uniform1f(uniforms.fontScale, fontScale);\r\n\r\n    //depends whether background or border is being filled\r\n    if (is_background) {\r\n      let backgroundColor = new ccNetViz_color(\r\n        l.backgroundColor || backgroundColor\r\n      );\r\n      ccNetViz_gl.uniformColor(gl, uniforms.backgroundColor, backgroundColor);\r\n    }\r\n\r\n    if (is_border) {\r\n      let borderWidth = 5;\r\n      gl.uniform2f(uniforms.width, borderWidth / 1000, borderWidth / 1000);\r\n      let borderColor = new ccNetViz_color(l.borderColor || 'rgb(0,0,0)');\r\n      ccNetViz_gl.uniformColor(gl, uniforms.borderColor, borderColor);\r\n    }\r\n  };\r\n};\r\n// TODO: make this function simpler to understand\r\nconst getLabelVertices = (texts, font, label, x, y) => {\r\n  let textEngine = texts.getEngine(font);\r\n  textEngine.setFont(font);\r\n  let ret = false;\r\n  let parts = textEngine.get(label || '', x, y, () => {\r\n    ret = true;\r\n  });\r\n  // c denotes the character having the max dx position, it's basically for finding the highest word length\r\n  let c = 0;\r\n  let height = 0;\r\n  // finding max dx and dy\r\n\r\n  for (let i = 0; i < parts.length; i++) {\r\n    c = Math.abs(parts[c].dx) > Math.abs(parts[i].dx) ? c : i;\r\n    height = height > Math.abs(parts[i].dy) ? height : Math.abs(parts[i].dy);\r\n  }\r\n\r\n  // height refers to max dy\r\n  // endPosX and startPosX calculation requires clear understanding of alignText function in sdf.js\r\n  let endPosX =\r\n    x <= 0.5\r\n      ? Math.abs(parts[c].dx) + parts[c].advance\r\n      : -Math.abs(parts[c].dx);\r\n  let startPosX = x <= 0.5 ? -5 : +5;\r\n  height = y <= 0.5 ? height + parts[c].height / 3 : -height;\r\n  return { startPosX: startPosX, endPosX: endPosX, height: height };\r\n};\r\n\r\nclass LabelsBackground extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getLabelSize,\r\n    texts,\r\n    context,\r\n    is_background,\r\n    is_border\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsBackgroundShader,\r\n      elementShaders.fsLabelsBackgroundShader,\r\n      bindLabelParams(gl, texts, getLabelSize, context, true, false)\r\n    );\r\n  }\r\n}\r\n\r\nclass LabelsBorder extends BaseShape {\r\n  constructor(\r\n    gl,\r\n    nodeStyle,\r\n    getLabelSize,\r\n    texts,\r\n    context,\r\n    is_background,\r\n    is_border\r\n  ) {\r\n    super();\r\n    this._primitive = new ccNetViz_primitive(\r\n      gl,\r\n      nodeStyle,\r\n      'label',\r\n      elementShaders.vsLabelsBorder,\r\n      elementShaders.fsLabelsBorder,\r\n      bindLabelParams(gl, texts, getLabelSize, context, false, true)\r\n    );\r\n  }\r\n}\r\nclass LabelsBackgroundManager extends BaseShapeManager {\r\n  constructor(texts) {\r\n    super();\r\n    this._filler = {\r\n      // set background\r\n      background: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let x = e.x;\r\n          let y = e.y;\r\n          let rect = getLabelVertices(texts, style.font, e.label, x, y);\r\n\r\n          ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n          ccNetViz_primitive.vertices(\r\n            v.relative,\r\n            iV,\r\n            rect.startPosX,\r\n            0,\r\n            rect.endPosX,\r\n            0,\r\n            rect.endPosX,\r\n            rect.height,\r\n            rect.startPosX,\r\n            rect.height\r\n          );\r\n          ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        },\r\n      }),\r\n\r\n      // sets borders\r\n      border: style => ({\r\n        set: (v, e, iV, iI) => {\r\n          let x = e.x;\r\n          let y = e.y;\r\n          let rect = getLabelVertices(texts, style.font, e.label, x, y);\r\n\r\n          let labelVertices = [\r\n            // first and last vertices are same\r\n            rect.startPosX,\r\n            rect.height,\r\n            rect.startPosX,\r\n            0,\r\n            rect.endPosX,\r\n            0,\r\n            rect.endPosX,\r\n            rect.height,\r\n            rect.startPosX,\r\n            rect.height,\r\n          ];\r\n          // rectangle vertices plotting\r\n          for (let i = 2; i < labelVertices.length; i += 2, iV += 4, iI += 6) {\r\n            let s = { x: labelVertices[i], y: labelVertices[i + 1] };\r\n            let t = { x: labelVertices[i - 2], y: labelVertices[i - 1] };\r\n            // normalization same as drawing edges\r\n            let d = normalize(s, t);\r\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n            ccNetViz_primitive.vertices(\r\n              v.relative,\r\n              iV,\r\n              s.x,\r\n              s.y,\r\n              s.x,\r\n              s.y,\r\n              t.x,\r\n              t.y,\r\n              t.x,\r\n              t.y\r\n            );\r\n            ccNetViz_primitive.vertices(\r\n              v.normal,\r\n              iV,\r\n              -d.y,\r\n              d.x,\r\n              d.y,\r\n              -d.x,\r\n              d.y,\r\n              -d.x,\r\n              -d.y,\r\n              d.x\r\n            );\r\n            ccNetViz_primitive.quad(v.indices, iV, iI);\r\n          }\r\n        },\r\n\r\n        size: (v, e) => {\r\n          return 4;\r\n        },\r\n      }),\r\n    };\r\n  }\r\n}\r\n\r\nexport { LabelsBackground, LabelsBorder, LabelsBackgroundManager };\r\n","import ccNetViz_gl from '../gl';\r\nimport ccNetViz_primitive from '../primitive';\r\nimport ccNetViz_layout from '../layout/index';\r\nimport { partitionByStyle } from '../primitiveTools';\r\nimport ccNetViz_spatialSearch from '../spatialSearch/spatialSearch';\r\nimport { Line, Curve, Circle, EdgeManager } from './shapes/edge';\r\nimport { Node, NodeColored, NodeManager } from './shapes/node';\r\nimport {\r\n  LineArrow,\r\n  CurveArrow,\r\n  CircleArrow,\r\n  EdgeArrowManager,\r\n} from './shapes/edgeArrow';\r\nimport { Label, LabelOutline, LabelManager } from './shapes/labels';\r\nimport {\r\n  LabelsBackground,\r\n  LabelsBackgroundManager,\r\n  LabelsBorder,\r\n} from './shapes/labelsBackground';\r\nimport { normalize } from './util';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n * \tDavid Tichy\r\n * \tAleš Saska - http://alessaska.cz/\r\n */\r\n\r\nexport default function(\r\n  canvas,\r\n  context,\r\n  view,\r\n  gl,\r\n  textures,\r\n  files,\r\n  texts,\r\n  events,\r\n  options,\r\n  backgroundColor,\r\n  nodeStyle,\r\n  edgeStyle,\r\n  getSize,\r\n  getNodeSize,\r\n  getLabelSize,\r\n  getLabelHideSize,\r\n  getNodesCnt,\r\n  getEdgesCnt,\r\n  onRedraw,\r\n  onLoad\r\n) {\r\n  getNodesCnt =\r\n    getNodesCnt ||\r\n    (() => {\r\n      return this.nodes.length;\r\n    });\r\n  getEdgesCnt =\r\n    getEdgesCnt ||\r\n    (() => {\r\n      return this.edges.length;\r\n    });\r\n\r\n  this.redraw = onRedraw || (() => {});\r\n\r\n  options = options || {};\r\n  options.styles = options.styles || {};\r\n\r\n  const labelManager = new LabelManager(texts);\r\n  const labelsFiller = labelManager.getFiller();\r\n\r\n  const labelsBackgroundManager = new LabelsBackgroundManager(texts);\r\n  const labelsBackgroundFiller = labelsBackgroundManager.getFiller();\r\n\r\n  const edgeArrowManager = new EdgeArrowManager();\r\n  const arrowFiller = edgeArrowManager.getFiller();\r\n\r\n  const edgeManager = new EdgeManager();\r\n  const edgesFiller = edgeManager.getFiller();\r\n\r\n  const nodeManager = new NodeManager();\r\n  const nodesFiller = nodeManager.getFiller();\r\n\r\n  this.getCurrentSpatialSearch = context => {\r\n    if (spatialSearch === undefined) {\r\n      spatialSearch = new ccNetViz_spatialSearch(\r\n        context,\r\n        texts,\r\n        options,\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        [],\r\n        {},\r\n        normalize,\r\n        nodeStyle,\r\n        getLabelSize,\r\n        getLabelHideSize\r\n      );\r\n    }\r\n    return spatialSearch;\r\n  };\r\n\r\n  this.remove = () => {};\r\n\r\n  let edgeTypes;\r\n  let edgePoses;\r\n\r\n  let spatialSearch = undefined;\r\n\r\n  //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\r\n  let set_end = (layout, layout_options) => {\r\n    let enableLazyRedraw = false;\r\n    let reset = p => {\r\n      if (enableLazyRedraw)\r\n        this.set(this.nodes, this.edges, layout, layout_options);\r\n    };\r\n    files.onLoad(reset);\r\n    textures.onLoad(reset);\r\n    enableLazyRedraw = true;\r\n  };\r\n\r\n  this.set = function(nodes, edges, layout, layout_options) {\r\n    removedNodes = 0;\r\n    removedEdges = 0;\r\n\r\n    this.nodes = nodes = nodes || [];\r\n    this.edges = edges = edges ? [].concat(edges) : [];\r\n\r\n    spatialSearch = undefined;\r\n\r\n    let lines = [],\r\n      curves = [],\r\n      circles = [];\r\n\r\n    //tanslate indexes into node objects\r\n    for (let i = 0; i < edges.length; i++) {\r\n      let e = edges[i];\r\n      if (typeof e.source == 'number') e.source = nodes[e.source];\r\n\r\n      if (typeof e.target == 'number') e.target = nodes[e.target];\r\n    }\r\n\r\n    let init = () => {\r\n      let getIndex = e => {\r\n        return e.uniqid || -e.index || -e.nidx;\r\n      };\r\n\r\n      // NOTE: here init\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        nodes[i].index = i;\r\n      }\r\n\r\n      for (let i = 0, j = nodes.length + 10; i < edges.length; i++, j++) {\r\n        edges[i].nidx = j;\r\n      }\r\n\r\n      edgeTypes = [];\r\n      edgePoses = new Uint32Array(edges.length);\r\n      const dummysd = { k: '_', kArrow: '_', d: [] };\r\n      const circlesd = { k: 'circles', kArrow: 'circleArrows', d: circles };\r\n      const linesd = { k: 'lines', kArrow: 'lineArrows', d: lines };\r\n      const curvesd = { k: 'curves', kArrow: 'curveArrows', d: curves };\r\n\r\n      if (extensions.OES_standard_derivatives) {\r\n        let map = {};\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          (map[si] || (map[si] = {}))[ti] = true;\r\n        }\r\n\r\n        //enable the \"curve\" feature\r\n        const is_bidirectional_overlap = options.bidirectional === 'overlap';\r\n\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let target,\r\n            e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          let t = dummysd;\r\n          if (si === ti) {\r\n            e.t = 2; //circle\r\n            target = circles;\r\n            t = circlesd;\r\n          } else {\r\n            let m = map[ti];\r\n            if (m && m[si] && !is_bidirectional_overlap) {\r\n              e.t = 1; //curve\r\n              target = curves;\r\n              t = curvesd;\r\n            } else {\r\n              e.t = 0; //line\r\n              target = lines;\r\n              t = linesd;\r\n            }\r\n          }\r\n          edgeTypes.push(t);\r\n          edgePoses[i] = t.d.length;\r\n          target.push(e);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n\r\n          const si = getIndex(e.source);\r\n          const ti = getIndex(e.target);\r\n\r\n          let t = dummysd;\r\n          if (si !== ti) {\r\n            t = linesd;\r\n            e.t = 0;\r\n            lines.push(e);\r\n          }\r\n          edgeTypes.push(t);\r\n          edgePoses[i] = t.d.length;\r\n        }\r\n      }\r\n    };\r\n\r\n    init();\r\n\r\n    let nodesParts = partitionByStyle(nodes);\r\n    let circlesParts = partitionByStyle(circles);\r\n    let linesParts = partitionByStyle(lines);\r\n    let curvesParts = partitionByStyle(curves);\r\n\r\n    this.getCurrentSpatialSearch = context => {\r\n      if (spatialSearch === undefined) {\r\n        spatialSearch = new ccNetViz_spatialSearch(\r\n          context,\r\n          texts,\r\n          options,\r\n          nodes,\r\n          nodesParts,\r\n          lines,\r\n          linesParts,\r\n          curves,\r\n          curvesParts,\r\n          circles,\r\n          circlesParts,\r\n          normalize,\r\n          nodeStyle,\r\n          getLabelSize,\r\n          getLabelHideSize\r\n        );\r\n      }\r\n      return spatialSearch;\r\n    };\r\n\r\n    if (typeof layout === 'string') {\r\n      var options_ = new ccNetViz_layout[layout](\r\n        nodes,\r\n        edges,\r\n        layout_options\r\n      ).apply();\r\n    } else if (typeof layout === 'function') {\r\n      var options_ = new layout(nodes, edges, layout_options).apply();\r\n    } else if (typeof layout === 'number') {\r\n      throw new Error(\r\n        'The layout can only be a string or a function or a class'\r\n      );\r\n    }\r\n\r\n    layout && ccNetViz_layout.normalize(nodes, undefined, options_);\r\n\r\n    /*\r\n    layout &&\r\n      new ccNetViz_layout[layout](nodes, edges, layout_options).apply() &&\r\n      ccNetViz_layout.normalize(nodes);\r\n      */\r\n\r\n    if (!gl) return;\r\n\r\n    let tryInitPrimitives = () => {\r\n      var isDirty = false;\r\n\r\n      let defaultAdder = (section, addSection) => {\r\n        if (typeof section.style.texture === 'string')\r\n          section.style.texture = textures.get(\r\n            gl,\r\n            section.style.texture,\r\n            addSection\r\n          );\r\n        else addSection();\r\n      };\r\n      let labelAdder = (section, addSection) => {\r\n        var slf = (section.style.label || {}).font || {};\r\n        let textEngine = texts.getEngine(slf);\r\n        section.style.texture = textEngine.getTexture(slf, addSection);\r\n      };\r\n\r\n      let is;\r\n      is = nodes.length && !nodes[0].color;\r\n      isDirty =\r\n        isDirty ||\r\n        scene.nodes.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          is ? nodes : [],\r\n          is ? nodesParts : {},\r\n          nodesFiller\r\n        );\r\n      is = nodes.length && nodes[0].color;\r\n      isDirty =\r\n        isDirty ||\r\n        scene.nodesColored.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          is ? nodes : [],\r\n          is ? nodesParts : {},\r\n          nodesFiller\r\n        );\r\n      if (nodeStyle.label) {\r\n        texts.clear();\r\n        if (!nodeStyle.label.backgroundColor) {\r\n          isDirty =\r\n            isDirty ||\r\n            scene.labelsOutline.set(\r\n              gl,\r\n              options.styles,\r\n              labelAdder,\r\n              nodes,\r\n              nodesParts,\r\n              labelsFiller\r\n            );\r\n        }\r\n        isDirty =\r\n          isDirty ||\r\n          scene.labels.set(\r\n            gl,\r\n            options.styles,\r\n            labelAdder,\r\n            nodes,\r\n            nodesParts,\r\n            labelsFiller\r\n          );\r\n        texts.bind();\r\n      }\r\n      if (nodeStyle.label && nodeStyle.label.backgroundColor) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.labelsBackground.set(\r\n            gl,\r\n            options.styles,\r\n            labelAdder,\r\n            nodes,\r\n            nodesParts,\r\n            labelsBackgroundFiller.background\r\n          );\r\n      }\r\n\r\n      if (nodeStyle.label && nodeStyle.label.borderColor) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.labelsBorder.set(\r\n            gl,\r\n            options.styles,\r\n            labelAdder,\r\n            nodes,\r\n            nodesParts,\r\n            labelsBackgroundFiller.border\r\n          );\r\n      }\r\n\r\n      isDirty =\r\n        isDirty ||\r\n        scene.lines.set(\r\n          gl,\r\n          options.styles,\r\n          defaultAdder,\r\n          lines,\r\n          linesParts,\r\n          edgesFiller.lines\r\n        );\r\n\r\n      if (extensions.OES_standard_derivatives) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.curves.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            curves,\r\n            curvesParts,\r\n            edgesFiller.curves\r\n          );\r\n        isDirty =\r\n          isDirty ||\r\n          scene.circles.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            circles,\r\n            circlesParts,\r\n            edgesFiller.circles\r\n          );\r\n      }\r\n\r\n      if (edgeStyle.arrow) {\r\n        isDirty =\r\n          isDirty ||\r\n          scene.lineArrows.set(\r\n            gl,\r\n            options.styles,\r\n            defaultAdder,\r\n            lines,\r\n            linesParts,\r\n            arrowFiller.lineArrows\r\n          );\r\n\r\n        if (extensions.OES_standard_derivatives) {\r\n          isDirty =\r\n            isDirty ||\r\n            scene.curveArrows.set(\r\n              gl,\r\n              options.styles,\r\n              defaultAdder,\r\n              curves,\r\n              curvesParts,\r\n              arrowFiller.curveArrows\r\n            );\r\n\r\n          isDirty =\r\n            isDirty ||\r\n            scene.circleArrows.set(\r\n              gl,\r\n              options.styles,\r\n              defaultAdder,\r\n              circles,\r\n              circlesParts,\r\n              arrowFiller.circleArrows\r\n            );\r\n        }\r\n      }\r\n\r\n      return isDirty;\r\n    };\r\n\r\n    while (tryInitPrimitives()); //loop until they are not dirty\r\n    set_end(layout, layout_options);\r\n  };\r\n\r\n  this.update = function(element, attribute, data) {\r\n    if (!gl) return;\r\n    scene[element].update(gl, attribute, data, function(style) {\r\n      return {\r\n        set: function(v, e, iV) {\r\n          return ccNetViz_primitive.colors(v, iV, e, e, e, e);\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  this.find = (x, y, dist, nodes, edges, labels) => {\r\n    return this.getCurrentSpatialSearch(context).find(\r\n      context,\r\n      x,\r\n      y,\r\n      dist,\r\n      view.size,\r\n      nodes,\r\n      edges,\r\n      labels\r\n    );\r\n  };\r\n\r\n  this.findArea = (x1, y1, x2, y2, nodes, edges, labels) => {\r\n    return this.getCurrentSpatialSearch(context).findArea(\r\n      context,\r\n      x1,\r\n      y1,\r\n      x2,\r\n      y2,\r\n      view.size,\r\n      nodes,\r\n      edges,\r\n      labels\r\n    );\r\n  };\r\n\r\n  this.updateNode = (n, i) => {\r\n    this.nodes[i] = n;\r\n\r\n    if (spatialSearch) spatialSearch.update(context, 'nodes', i, n);\r\n\r\n    if (!gl) return;\r\n\r\n    (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(\r\n      gl,\r\n      n,\r\n      i,\r\n      nodesFiller\r\n    );\r\n    scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\r\n    scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\r\n  };\r\n\r\n  this.updateEdge = (e, i) => {\r\n    let t = edgeTypes[i];\r\n    let pos = edgePoses[i];\r\n\r\n    t.d[pos] = this.edges[i] = e;\r\n\r\n    if (spatialSearch) spatialSearch.update(context, t.k, pos, e);\r\n\r\n    if (!gl) return;\r\n\r\n    scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\r\n    if (edgeStyle.arrow)\r\n      scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\r\n  };\r\n\r\n  let removedNodes = 0;\r\n  let removedEdges = 0;\r\n\r\n  const freenode = { x: -1, y: -1, title: '' };\r\n  this.removeNodeAtPos = pos => {\r\n    if (this.nodes[pos] === freenode) {\r\n      return;\r\n    }\r\n\r\n    removedNodes++;\r\n    this.updateNode(freenode, pos);\r\n  };\r\n\r\n  const freeedge = { source: { x: -1, y: -1 }, target: { x: -1, y: -1 } };\r\n  this.removeEdgeAtPos = pos => {\r\n    if (this.edges[pos] === freeedge) {\r\n      return;\r\n    }\r\n\r\n    removedEdges++;\r\n\r\n    this.updateEdge(freeedge, pos);\r\n  };\r\n\r\n  this.getVisibleNodes = () => {\r\n    if (removedNodes <= 0) return this.nodes;\r\n\r\n    let r = [];\r\n    this.nodes.forEach(n => {\r\n      if (n !== freenode) r.push(n);\r\n    });\r\n    return r;\r\n  };\r\n\r\n  this.getVisibleEdges = () => {\r\n    if (removedEdges <= 0) return this.edges;\r\n\r\n    let r = [];\r\n    this.edges.forEach(n => {\r\n      if (n !== freeedge) r.push(n);\r\n    });\r\n    return r;\r\n  };\r\n\r\n  this.cntShownNodes = () => {\r\n    return this.nodes.length - removedNodes;\r\n  };\r\n\r\n  this.cntShownEdges = () => {\r\n    return this.edges.length - removedEdges;\r\n  };\r\n\r\n  this.nodes = [];\r\n  this.edges = [];\r\n\r\n  let extensions = gl\r\n    ? ccNetViz_gl.initExtensions(gl, 'OES_standard_derivatives')\r\n    : {};\r\n  let scene = (this.scene = createScene.call(this));\r\n\r\n  if (!gl) {\r\n    let loadCalled = false;\r\n    options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad();\r\n    return this;\r\n  }\r\n\r\n  // NOTE: split to different file and use getPrimitive to get webgl element\r\n  const lineEdge = new Line(gl, edgeStyle);\r\n  scene.add('lines', lineEdge.getPrimitive());\r\n\r\n  if (extensions.OES_standard_derivatives) {\r\n    const curveEdge = new Curve(gl, edgeStyle);\r\n    scene.add('curves', curveEdge.getPrimitive());\r\n\r\n    const circleEdge = new Circle(gl, edgeStyle);\r\n    scene.add('circles', circleEdge.getPrimitive());\r\n  }\r\n\r\n  if (edgeStyle.arrow) {\r\n    const lineArrow = new LineArrow(gl, view, edgeStyle, getSize, getEdgesCnt);\r\n    scene.add('lineArrows', lineArrow.getPrimitive());\r\n\r\n    if (extensions.OES_standard_derivatives) {\r\n      const curveArrow = new CurveArrow(\r\n        gl,\r\n        view,\r\n        edgeStyle,\r\n        getSize,\r\n        getEdgesCnt\r\n      );\r\n      scene.add('curveArrows', curveArrow.getPrimitive());\r\n      const circleArrow = new CircleArrow(\r\n        gl,\r\n        view,\r\n        edgeStyle,\r\n        getSize,\r\n        getEdgesCnt\r\n      );\r\n      scene.add('circleArrows', circleArrow.getPrimitive());\r\n    }\r\n  }\r\n\r\n  const node = new Node(gl, nodeStyle, getNodeSize);\r\n  scene.add('nodes', node.getPrimitive());\r\n  const nodeColored = new NodeColored(gl, nodeStyle, getNodeSize);\r\n  scene.add('nodesColored', nodeColored.getPrimitive());\r\n\r\n  if (nodeStyle.label && nodeStyle.label.backgroundColor) {\r\n    const labelsBackground = new LabelsBackground(\r\n      gl,\r\n      nodeStyle,\r\n      getLabelSize,\r\n      texts,\r\n      context\r\n    );\r\n    scene.add('labelsBackground', labelsBackground.getPrimitive());\r\n  }\r\n\r\n  if (nodeStyle.label && nodeStyle.label.borderColor) {\r\n    const labelsBorder = new LabelsBorder(\r\n      gl,\r\n      nodeStyle,\r\n      getLabelSize,\r\n      texts,\r\n      context\r\n    );\r\n    scene.add('labelsBorder', labelsBorder.getPrimitive());\r\n  }\r\n\r\n  const labelOutline = new LabelOutline(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor,\r\n    context\r\n  );\r\n  nodeStyle.label && scene.add('labelsOutline', labelOutline.getPrimitive());\r\n\r\n  const label = new Label(\r\n    gl,\r\n    nodeStyle,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    texts,\r\n    backgroundColor,\r\n    context\r\n  );\r\n  nodeStyle.label && scene.add('labels', label.getPrimitive(), backgroundColor);\r\n\r\n  if (options.onLoad) {\r\n    let styles = options.styles;\r\n    for (let p in styles) {\r\n      let s = styles[p];\r\n\r\n      s.texture && textures.get(gl, s.texture, onLoad);\r\n      s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\r\n    }\r\n  }\r\n\r\n  function createScene() {\r\n    return {\r\n      elements: [],\r\n      add: (name, e) => {\r\n        scene[name] = e;\r\n        scene.elements.push(e);\r\n      },\r\n    };\r\n  }\r\n}\r\n","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\n// this file creates webGL type textures of images example custom.html\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad, 5)];\r\n    this._textures = {}; //already converted to textures\r\n    this._pending = {}; //pending images \r\n    this._n = 0;  //counts pending images to be converted to textures\r\n  }\r\n\r\n  get(gl, img, action, options) { \r\n      var p = this._pending[img];\r\n      var t = this._textures[img];\r\n\r\n      \r\n      // TODO : add explanation about if-else statements below\r\n      if (p) {\r\n          p.push(action);\r\n      }\r\n      else if (t) {\r\n          action && action();\r\n      }\r\n\r\n      // if image is neither in this._pending array nor nor in already converted this._textures array\r\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\r\n      // and remove it from pending + add it to textures\r\n      \r\n      else {\r\n          p = this._pending[img] = [action];\r\n          this._n++;\r\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\r\n              p.forEach(a => a && a());\r\n              delete this._pending[img];\r\n              \r\n              --this._n || this._load.forEach(l => l());\r\n          }, options);\r\n      }\r\n      return t;\r\n  }\r\n\r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n\r\n}","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\r\n    this._files = {};\r\n    this._pending = {};\r\n    this._n = 0;\r\n  }\r\n  \r\n  _transformFile(data, dataType) {\r\n    if(dataType === 'json')\r\n      return JSON.parse(data);\r\n    return data;    \r\n  }\r\n  \r\n  get(url) {\r\n    return this._files[url];\r\n  }\r\n\r\n  /*\r\n   * @param type {\r\n   *   url: 'url of file',\r\n   *   success: callback\r\n   *   dataType \"text\" || \"json\"\r\n   * }\r\n   */\r\n  load(url, action, dataType) {\r\n    let p = this._pending[url];\r\n    let f = this._files[url];\r\n\r\n    if (p) {\r\n        p.push(action);\r\n    }\r\n    else if (f) {\r\n        action && action();\r\n    }\r\n    else {\r\n      p = this._pending[url] = [action];\r\n      this._n++;\r\n\r\n      ccNetViz_utils.ajax(url, (data) => {\r\n        this._files[url] = this._transformFile(data,dataType);\r\n        p.forEach(a => a && a(this._files[url]));\r\n        delete this._pending[url];\r\n        --this._n || this._load.forEach(l => l());\r\n      }, dataType=='arraybuffer'?dataType:undefined);\r\n    }\r\n    return f;\r\n  }\r\n  \r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n  \r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(gl, files, textures) {\r\n    this._gl = gl;\r\n    this._size = 1024;\r\n\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.width = this._canvas.height = this._size;\r\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\r\n    this._canvas.style.display = 'none';\r\n    this._el = document.body.appendChild(this._canvas);\r\n\r\n    this._context = this._canvas.getContext('2d');\r\n    this._context.fillStyle = 'white';\r\n    this._context.textAlign = 'left';\r\n    this._context.textBaseline = 'top';\r\n\r\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\r\n\r\n    this.texture = this._gl.createTexture();\r\n  }\r\n\r\n  clear() {\r\n    this._rendered = {};\r\n    this._context.clearRect(0, 0, this._size, this._size);\r\n    this._height = this._x = this._y = 0;\r\n  }\r\n\r\n  setFont(font) {\r\n    var fontstr = font ? font.size + 'px ' + font.type : '15px arial';\r\n    if (typeof this._rendered === 'undefined') this._rendered = {};\r\n    this._rendered[fontstr] = this._texts = this._rendered[fontstr] || {};\r\n    this._context.font = fontstr;\r\n    this._x = 0;\r\n    this._y += this._height;\r\n    this._height = font ? font.size + 1 : NaN;\r\n  }\r\n\r\n  get fontSize() {\r\n    return this._height - 1;\r\n  }\r\n\r\n  getTexture(style, onLoad) {\r\n    onLoad();\r\n    return this.texture;\r\n  }\r\n\r\n  _getText(text) {\r\n    let result = this._texts[text];\r\n    if (!result) {\r\n      let width = this._context.measureText(text).width;\r\n      if (this._x + width > this._size) {\r\n        this._x = 0;\r\n        this._y += this._height;\r\n      }\r\n      this._context.fillText(text, this._x, this._y);\r\n      this._texts[text] = result = {\r\n        width: width,\r\n        height: this._height,\r\n        left: this._x / this._size,\r\n        right: (this._x + width) / this._size,\r\n        top: this._y / this._size,\r\n        bottom: (this._y + this._height) / this._size,\r\n      };\r\n      this._x += width;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  get(text, x, y) {\r\n    let c = this._getText(text);\r\n\r\n    let dx = x <= 0.5 ? 0 : -c.width;\r\n    let dy = y <= 0.5 ? 0 : -c.height;\r\n\r\n    return [\r\n      {\r\n        width: c.width,\r\n        height: c.height,\r\n        left: c.left,\r\n        right: c.right,\r\n        top: c.top,\r\n        bottom: c.bottom,\r\n        dx: dx,\r\n        dy: dy,\r\n      },\r\n    ];\r\n  }\r\n\r\n  steps(text) {\r\n    return 1;\r\n  }\r\n\r\n  bind() {\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\r\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    this._gl.texParameteri(\r\n      this._gl.TEXTURE_2D,\r\n      this._gl.TEXTURE_MAG_FILTER,\r\n      this._gl.NEAREST\r\n    );\r\n    this._gl.texParameteri(\r\n      this._gl.TEXTURE_2D,\r\n      this._gl.TEXTURE_MIN_FILTER,\r\n      this._gl.NEAREST\r\n    );\r\n    this._gl.texImage2D(\r\n      this._gl.TEXTURE_2D,\r\n      0,\r\n      this._gl.RGBA,\r\n      this._gl.RGBA,\r\n      this._gl.UNSIGNED_BYTE,\r\n      this._canvas\r\n    );\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\r\n  }\r\n\r\n  remove() {\r\n    this._context && this._el.parentNode.removeChild(this._el);\r\n  }\r\n}\r\n","'use strict';\r\n\r\nimport ShelfPack from 'shelf-pack';\r\n\r\n// size of the spritesheet generated in pixels\r\nconst DEFAULT_SIZE = 1024;\r\n\r\n// multiplication factor by which spritesheet can grow, if shelfpack is full\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// max size to contain all the characters in the spritesheet\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\nconst MAX_SIZE = 2048;\r\n\r\nexport default class GlyphAtlas {\r\n    constructor(gl, resetCache) {\r\n\r\n        // setting width to default\r\n        this.width = DEFAULT_SIZE;\r\n\r\n        // setting height to default\r\n        this.height = DEFAULT_SIZE;\r\n\r\n        // resets cached glyphs in sdf.js before making resize() call\r\n        this._resetCache = resetCache;\r\n\r\n        // creating an empty spritesheet to pack glyphs\r\n        this.bin = new ShelfPack(this.width, this.height);\r\n\r\n        /**\r\n         * stores information coordinate about character\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": {\r\n         *      id, x, y, h, w, maxh, maxw, ref_count\r\n         *  }\r\n         */\r\n        this.index = {};\r\n\r\n        /**\r\n         * stores list of character ids available in atlas.js\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": [\"charid\"]\r\n         */\r\n        this.ids = {};\r\n\r\n        // webgl rendering context\r\n        this.gl = gl;\r\n\r\n        // initialized to empty Uint8Array buffer to store texture data\r\n        this.data = new Uint8Array(this.width * this.height);\r\n    }\r\n\r\n\r\n    // refreshes texture of characters when updateTexture() is called\r\n    _createTexture() {\r\n        //\r\n        this.dirty = false;\r\n\r\n        // standard creation of webgl texture\r\n        let gl = this.gl;\r\n        let texture = gl.createTexture();\r\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n        /**\r\n         * pixelStorei() (Func): specifies the pixel storage modes\r\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\r\n         */\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n        // standard interpolation Filters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D, // target: A two-dimensional texture\r\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\r\n            gl.ALPHA, // internalFormat: only reads the alpha component\r\n            this.width, // width\r\n            this.height, // height\r\n            0, // border\r\n            gl.ALPHA, // format\r\n            gl.UNSIGNED_BYTE, // type\r\n            this.data // ImageData object\r\n        );\r\n\r\n\r\n        // Unbinding the buffer channel\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        // returning so formed texture\r\n        return texture;\r\n    }\r\n\r\n    // utility function that returns list of glyphs added\r\n    getGlyphs() {\r\n        const glyphs = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!glyphs[name]) glyphs[name] = [];\r\n            glyphs[name].push(id);\r\n        }\r\n        return glyphs;\r\n    }\r\n\r\n    // utility function that returns list of rects added\r\n    getRects() {\r\n        const rects = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!rects[name]) rects[name] = {};\r\n            rects[name][id] = this.index[key];\r\n        }\r\n        return rects;\r\n    }\r\n\r\n    // main function of the module called from sdf.js\r\n    addGlyph(\r\n        id, // character id\r\n        name, // name of the font - \"fontstrong#range.pbf\"\r\n        glyph, // glyph object from sdf.js\r\n        buffer, // padding around glyph\r\n        fontSize,\r\n        markDirty //\r\n    ) {\r\n        if (!glyph) return null;\r\n\r\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\r\n        const key = `${name}#${glyph.id}`;\r\n\r\n        // if key is present in index and not present in ids then add it in ids\r\n        if (this.index[key]) {\r\n            if (this.ids[key].indexOf(id) < 0) {\r\n                this.ids[key].push(id);\r\n            }\r\n            return this.index[key];\r\n        }\r\n\r\n        const bufferedWidth = glyph.width + buffer * 2;\r\n        const bufferedHeight = glyph.height + buffer * 2;\r\n\r\n        // Add a 1px border around every image.\r\n        // 'padding' variable is basically border\r\n        // buffer variable is basically padding\r\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\r\n        // const padding = 12;\r\n        let packWidth = bufferedWidth + 2 * padding;\r\n        let packHeight = bufferedHeight + 2 * padding;\r\n\r\n        // Increase to next number divisible by 4, but at least 1.\r\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\r\n        packWidth += (4 - packWidth % 4);\r\n        packHeight += (4 - packHeight % 4);\r\n\r\n        let rect = this.bin.packOne(packWidth, packHeight);\r\n\r\n        // if the current size is not sufficient to contain all the characters in the texture\r\n        // then, expand (resize) it\r\n        if (!rect) {\r\n            this.resize();\r\n            rect = this.bin.packOne(packWidth, packHeight);\r\n            // if markDirty callback was passed then execute it\r\n            markDirty && markDirty();\r\n        }\r\n\r\n        // if still not found then there is some problem, simply return null to indicate problem\r\n        if (!rect) {\r\n            return null;\r\n        }\r\n\r\n\r\n        this.index[key] = rect;\r\n        this.ids[key] = [id];\r\n\r\n        // if bitmap corresponding to the glyph object exists then, add the glyph\r\n        if (glyph.bitmap) {\r\n            const target = this.data;\r\n            const source = glyph.bitmap;\r\n            for (let y = 0; y < bufferedHeight; y++) {\r\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\r\n                const y2 = bufferedWidth * y;\r\n                for (let x = 0; x < bufferedWidth; x++) {\r\n                    target[y1 + x] = source[y2 + x];\r\n                }\r\n            }\r\n        }\r\n        this.dirty = true;\r\n        return rect;\r\n    }\r\n\r\n    // expands the size of the texture if all the characters were not contained in default size\r\n    resize() {\r\n        const prevWidth = this.width;\r\n        const prevHeight = this.height;\r\n\r\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\r\n\r\n        if (this._texture) {\r\n            if (this.gl) {\r\n                this.gl.deleteTexture(this._texture);\r\n            }\r\n            this._texture = null;\r\n        }\r\n\r\n        this.width *= SIZE_GROWTH_RATE;\r\n        this.height *= SIZE_GROWTH_RATE;\r\n        this.bin.resize(this.width, this.height);\r\n\r\n        const buf = new ArrayBuffer(this.width * this.height);\r\n        for (let i = 0; i < prevHeight; i++) {\r\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\r\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\r\n            dst.set(src);\r\n        }\r\n        this.data = new Uint8Array(buf);\r\n        this._resetCache();\r\n    }\r\n\r\n    bind(gl) {\r\n    }\r\n\r\n    // getter of texture from GlyphAtlas object\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    updateTexture() {\r\n        let gl = this.gl;\r\n        if (!this._texture) {\r\n            this._texture = this._createTexture();\r\n        }\r\n\r\n        // if dirty functionality is true then:\r\n        if (this.dirty) {\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n            // specifies a sub - rectangle of the current texture\r\n            gl.texSubImage2D(\r\n                gl.TEXTURE_2D,\r\n                0,\r\n                0,\r\n                0,\r\n                this.width,\r\n                this.height,\r\n                gl.ALPHA,\r\n                gl.UNSIGNED_BYTE,\r\n                this.data\r\n            );\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            this.dirty = false;\r\n        }\r\n        return this._texture;\r\n    }\r\n};\r\n","/* Algorithm to trim the glyph and add padding to it */\r\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\r\n// Slicing the extra columns\r\n// Adding buffer space on the sides\r\n\r\nexport default class {\r\n    constructor(buffer) {\r\n        if (buffer == undefined) this.buffer = 0;\r\n        else this.buffer = buffer;\r\n    }\r\n    \r\n    // find lb and rb of single row\r\n    _findRowBounds(a) { // a == array\r\n        let lb = 0, // left bound of individual row\r\n            rb = 0; // right bound of individual row\r\n        \r\n        const threshold = 170;\r\n            \r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] > threshold) {\r\n                lb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!lb) lb = a.length;\r\n\r\n        for (let i = a.length; i > -1; i--) {\r\n            if (a[i] > threshold) {\r\n                rb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!rb) rb = -1;\r\n\r\n        return [lb, rb];\r\n    }\r\n\r\n    _findGlyphBounds(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n        let currentRow = [];\r\n\r\n        let lbs = [], // row left bounds\r\n            rbs = []; // row right bounds    \r\n        let lb = -1,\r\n            rb = glyphData.length;\r\n        \r\n        // iterate through every row\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            // slice out the array\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            var res = this._findRowBounds(currentRow);\r\n            lbs.push(res[0]);\r\n            rbs.push(res[1]);\r\n        }\r\n\r\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\r\n        lb = Math.min(...lbs);\r\n        rb = Math.max(...rbs);\r\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\r\n        return [lb, rb];\r\n    }\r\n\r\n    process(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n\r\n        const bounds = this._findGlyphBounds(glyph);\r\n        const lb = bounds[0];\r\n        const rb = bounds[1];\r\n\r\n        const buffer = this.buffer;\r\n        // const buffer = 20;\r\n        // const buffer = 1;\r\n        // const buffer = 0;\r\n\r\n        var newData = [];\r\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\r\n        var newWidth = (rb - lb + 1) + buffer * 2;\r\n        // var newWidth = (rb - lb + 1);\r\n\r\n        // iterate through every row\r\n        let currentRow = [];\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\r\n            newData.push(\r\n                // 255,\r\n                ...bufferCol, //returns array of zeros\r\n                ...currentRow.slice(lb, rb + 1),\r\n                ...bufferCol, //returns array of zeros\r\n                // 255,\r\n            );\r\n        }\r\n\r\n        // JS passes objects by reference. Therefore,\r\n        glyph.bitmap = new Uint8ClampedArray(newData);\r\n        glyph.width = newWidth;\r\n        glyph.advance = newWidth;\r\n    }    \r\n    \r\n} // ends class","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n  constructor(fontStyle) {\r\n    // Member variables for configurations for font-style and box of the font\r\n    const textSize = 23;\r\n    this.fontSize = Math.round(textSize / 4) * 4;\r\n    // Whitespace buffer around a glyph in pixels\r\n    //TODO : Add more information about this.buffer\r\n    this.buffer = this.fontSize / 8;\r\n    // How many pixels around the glyph shape to use for encoding distance. Bigger radius can have more halo effect.\r\n    // Refer http://www.supergeotek.com/SP_ENG_HTML/label.htm for halo effect\r\n    this.radius = this.fontSize / 3;\r\n    this.cutoff = 0.25;\r\n    this.strokeText = fontStyle.strokeText || false;\r\n    this.fontFamily = fontStyle.family || 'sans-serif';\r\n    // this.fontFamily = 'sans-serif';\r\n    // this.fontFamily = 'vedana';\r\n    // this.fontFamily = 'arial';\r\n    this.fontWeight = fontStyle.weight || 'normal';\r\n    // this.fontWeight = 'normal';\r\n    // this.fontWeight = 'bold';\r\n    // Size of one box of character\r\n    let size = (this.size = this.fontSize + this.buffer * 2);\r\n\r\n    // Member varaibles for single canvas element on which single character is to be drawn\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.width = this.canvas.height = size;\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.ctx.font =\r\n      this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n    this.ctx.textBaseline = 'middle';\r\n    this.ctx.fillStyle = 'black';\r\n\r\n    // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n    this.middle = Math.round(\r\n      (size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1)\r\n    );\r\n\r\n    // Member variables for temp arrays required for the distance transform\r\n    this.gridOuter = new Float64Array(size * size);\r\n    this.gridInner = new Float64Array(size * size);\r\n    this.f = new Float64Array(size);\r\n    this.z = new Float64Array(size + 1);\r\n    this.v = new Uint16Array(size);\r\n\r\n    // Glyph Trimmer\r\n    this.trimmer = new Trimmer(0);\r\n    this.count = 1;\r\n  }\r\n\r\n  // Convert alpha-only to RGBA so we can use convenient\r\n  // `putImageData` for building the composite bitmap\r\n\r\n  _makeRGBAImageData(alphaChannel, width, height) {\r\n    let imageData = this.ctx.createImageData(width, height);\r\n    let data = imageData.data;\r\n    for (let i = 0; i < alphaChannel.length; i++) {\r\n      data[4 * i + 0] = alphaChannel[i];\r\n      data[4 * i + 1] = alphaChannel[i];\r\n      data[4 * i + 2] = alphaChannel[i];\r\n      data[4 * i + 3] = 255;\r\n    }\r\n    return imageData;\r\n  }\r\n\r\n  // Returns the alpha channel for a single character\r\n  draw(char) {\r\n    // Clear the area and draw the glyph\r\n    this.ctx.clearRect(0, 0, this.size, this.size);\r\n    this.strokeText\r\n      ? this.ctx.strokeText(char, this.buffer, this.middle)\r\n      : this.ctx.fillText(char, this.buffer, this.middle);\r\n    let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n    let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n      this.gridOuter[i] =\r\n        a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n      this.gridInner[i] =\r\n        a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n    }\r\n\r\n    this._edt(this.gridOuter, this.size, this.size, this.f, this.v, this.z);\r\n    this._edt(this.gridInner, this.size, this.size, this.f, this.v, this.z);\r\n\r\n    for (let i = 0; i < this.size * this.size; i++) {\r\n      var d = Math.sqrt(this.gridOuter[i]) - Math.sqrt(this.gridInner[i]);\r\n      alphaChannel[i] = Math.max(\r\n        0,\r\n        Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff)))\r\n      );\r\n    }\r\n\r\n    const glyph = {\r\n      id: char.charCodeAt(0),\r\n      bitmap: alphaChannel,\r\n      left: 0,\r\n      top: 0,\r\n      width: this.size,\r\n      height: this.size,\r\n      advance: 4, // width\r\n    };\r\n\r\n    if (glyph.id !== 32) {\r\n      this.trimmer.process(glyph);\r\n    }\r\n\r\n    // TODO: Delete this debugging code\r\n    if (glyph.id == 65 && this.count) {\r\n      const glyphData = glyph.bitmap;\r\n      const numCols = glyph.width;\r\n      let t = [];\r\n      // iterate through every row\r\n      for (let i = 0; i < glyphData.length; i += numCols) {\r\n        // slice out the array\r\n        t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n      }\r\n      this.count--;\r\n    }\r\n    return glyph;\r\n  }\r\n\r\n  // 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n\r\n  _edt(data, width, height, f, v, z) {\r\n    for (var x = 0; x < width; x++)\r\n      this._edt1d(data, x, width, height, f, v, z);\r\n    for (var y = 0; y < height; y++)\r\n      this._edt1d(data, y * width, 1, width, f, v, z);\r\n  }\r\n\r\n  // 1D squared distance transform\r\n\r\n  _edt1d(grid, offset, stride, length, f, v, z) {\r\n    var q, k, s, r;\r\n    v[0] = 0;\r\n    z[0] = -INF;\r\n    z[1] = INF;\r\n\r\n    for (q = 0; q < length; q++) f[q] = grid[offset + q * stride];\r\n\r\n    for (q = 1, k = 0, s = 0; q < length; q++) {\r\n      do {\r\n        r = v[k];\r\n        s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\r\n      } while (s <= z[k--]);\r\n\r\n      k += 2;\r\n      v[k] = q;\r\n      z[k] = s;\r\n      z[k + 1] = INF;\r\n    }\r\n\r\n    for (q = 0, k = 0; q < length; q++) {\r\n      while (z[k + 1] < q) k++;\r\n      r = v[k];\r\n      grid[offset + q * stride] = f[r] + (q - r) * (q - r);\r\n    }\r\n  }\r\n}\r\n","import GlyphAtlas from './atlas';\r\nimport SpriteGenerator from './spriteGenerator';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: Aleš Saska\r\n */\r\n\r\n// A simplified representation of the glyph containing only the properties needed for shaping.\r\nclass SimpleGlyph {\r\n  constructor(glyph, rect, buffer, style) {\r\n    const padding = 1;\r\n    this.advance = glyph.advance;\r\n    this.left = glyph.left - buffer - padding;\r\n    this.top = glyph.top + buffer + padding;\r\n    this.rect = rect;\r\n  }\r\n}\r\n\r\n// Multiplication factor by which the size will grow\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// Size in which we try to contian the glyphs\r\nconst DEFAULT_SIZE = 512;\r\n\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\n// Maybe the maximum size allowed of the atlas\r\nconst MAX_SIZE = 2048;\r\n\r\n// Class for the text engine\r\n\r\n// invoked only when main configuration object, the \"font\" is mentioned and\r\n// the proper link to the font file is present\r\nexport default class {\r\n  // new text engine object takes 3 arguments\r\n  // 1. gl = Webgl context\r\n  // 2. files = File object programmed in src/dataSources/files.js\r\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\r\n\r\n  constructor(gl, files, textures) {\r\n    // Defines the dimensions of the texture\r\n    this.width = DEFAULT_SIZE;\r\n    this.height = DEFAULT_SIZE;\r\n\r\n    // Does nothing. Required in default.js text engine\r\n    this.clear();\r\n\r\n    // _files contains the file object of the glyph obtained via protobuf\r\n    this._files = files;\r\n\r\n    // Webgl Rendering context\r\n    this._gl = gl;\r\n\r\n    // Atlas object programmed in src/texts/sdf/atlas.js\r\n    this.atlas = new GlyphAtlas(this._gl, () => {\r\n      this._cachedGlyphs = {};\r\n    });\r\n\r\n    // For every char_id, contains position, properties and buffer data\r\n    this._glyphs = {};\r\n\r\n    // For every char_id, contains position and properties\r\n    this._rects = {};\r\n\r\n    // glyphs that are cached from previous draw call of label for next one\r\n    this._cachedGlyphs = {};\r\n  }\r\n\r\n  // returns if we are using SDF TextEngine or not\r\n  get isSDF() {\r\n    return true;\r\n  }\r\n\r\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\r\n  clear() {}\r\n\r\n  /**\r\n   * style = object: {\r\n   *   pbf: <url to the font file on the server>\r\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\r\n   * }\r\n   */\r\n  setFont(style) {\r\n    // curFont => current_font\r\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\r\n    this.fontStyle = style;\r\n    this.curFont = JSON.stringify(style);\r\n  }\r\n\r\n  // FontSize is fixed and hardcoded i.e. 24\r\n  get fontSize() {\r\n    return 24;\r\n  }\r\n\r\n  getWidthAndHeight(text, fontStyle, markDirty) {\r\n    let wordWidth = 0;\r\n    let width = 0;\r\n    let height = 0;\r\n    let widthArray = [];\r\n    const horiBearingX = 3;\r\n    //replaces the multiple space characters in the text with a single space\r\n    text = text.replace(/\\s+/g, ' ');\r\n    for (let i = 0; i < text.length; i++) {\r\n      const char = this._getChar(text[i], fontStyle, markDirty);\r\n      const rect = char.rect || {};\r\n\r\n      // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\r\n      //decide the height and then max of them is taken each time to have a max height that fits each char\r\n\r\n      height = Math.max(height, rect.h - char.top);\r\n      wordWidth += text[i] === ' ' ? 0 : char.advance + horiBearingX;\r\n      // highest word length would be selected as the width\r\n      if (text[i] === ' ' || i == text.length - 1) {\r\n        width = wordWidth > width ? wordWidth : width;\r\n        widthArray.push(wordWidth);\r\n        wordWidth = 0;\r\n      }\r\n    }\r\n    return { width: width, height: height, widthArray: widthArray };\r\n  }\r\n\r\n  getTexture(fontStyle, onLoad) {\r\n    // init with first most-used ASCII chars\r\n    for (let i = 0; i < 128; i++) {\r\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\r\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\r\n      this._getChar(String.fromCharCode(i), fontStyle);\r\n    }\r\n    onLoad && onLoad.apply(this, arguments);\r\n\r\n    // by calling this._getChar, we have updated the texture in this.atlas object\r\n    // following we are returning the updated object\r\n    // TODO: this code is not intuitive, we can write better\r\n    return this.atlas.texture;\r\n  }\r\n  _getCharArray(charArray, char, height, dx, dy, markDirty) {\r\n    const rect = char.rect || {};\r\n    // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\r\n    charArray.push({\r\n      width: rect.w,\r\n      height: rect.h,\r\n      left: rect.x / this.atlas.width, //position in atlas\r\n      right: (rect.x + rect.w) / this.atlas.width, //position in atlas\r\n      bottom: (rect.y + rect.h) / this.atlas.height,\r\n      top: rect.y / this.atlas.height,\r\n      dx: dx,\r\n      dy: dy + char.top + (height - rect.h),\r\n      advance: char.advance,\r\n    });\r\n\r\n    return charArray;\r\n  }\r\n  // function to align text left, right or center\r\n  alignText(\r\n    alignment,\r\n    text,\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    markDirty,\r\n    widthArray,\r\n    wordWidth,\r\n    fontStyle\r\n  ) {\r\n    // x and y are the clipspace co-ordinates between 0 and 1\r\n    // dx and dy shifts the position of label w.r.t possibly node\r\n    // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\r\n\r\n    const textArray = text.split(' ');\r\n    let dx = 0;\r\n\r\n    // dy positioned so that if y< 0.5 i.e. for lower half of canvas it's length should increase dynamically\r\n    // so that it characters don't go outside of canvas, also for y>0.5 , it's constant at a particular height\r\n    // so that it for y===1 it doesn't go beyond the canvas\r\n\r\n    let dy = y <= 0.5 ? (height / 3) * (textArray.length - 1) : -height / 3;\r\n    // \"ret\" must be the return object. \"ret\" is always the return object\r\n    let ret = [];\r\n\r\n    switch (alignment) {\r\n      case 'right':\r\n        for (var i = 0; i < textArray.length; i++) {\r\n          dx = x <= 0.5 ? 0 : -width;\r\n\r\n          // logic here is wordWidth is the max length of word in the wordArray, so if we subtract\r\n          // width of the word we are currently iterating on and then set dx as given below, we\r\n          // will get the exact position from where to start\r\n\r\n          dx += wordWidth - widthArray[i];\r\n          text = textArray[i];\r\n          for (var j = 0; j < text.length; j++) {\r\n            const char = this._getChar(text[j], fontStyle, markDirty);\r\n            let horiBearingX = 3;\r\n            dx += horiBearingX;\r\n            // get array of characters\r\n            ret = this._getCharArray(ret, char, height, dx, dy, markDirty);\r\n            dx += char.advance;\r\n          }\r\n          dy = dy - Math.floor(height / 3);\r\n        }\r\n        break;\r\n\r\n      case 'center':\r\n        for (var i = 0; i < textArray.length; i++) {\r\n          dx = x <= 0.5 ? 0 : -width;\r\n          dx += (wordWidth - widthArray[i]) / 2;\r\n          text = textArray[i];\r\n          for (var j = 0; j < text.length; j++) {\r\n            const char = this._getChar(text[j], fontStyle, markDirty);\r\n            let horiBearingX = 3;\r\n            dx += horiBearingX;\r\n            ret = this._getCharArray(ret, char, height, dx, dy, markDirty);\r\n\r\n            dx += char.advance;\r\n          }\r\n          dy = dy - Math.floor(height / 3);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        dx = x <= 0.5 ? 0 : -width;\r\n\r\n        for (var i = 0; i < text.length; i++) {\r\n          // changing line here when it encounters any whitespace character\r\n\r\n          if (text[i] === ' ' && (i != 0 || i != text.length - 1)) {\r\n            dx = x <= 0.5 ? 0 : -width;\r\n            dy = dy - Math.floor(height / 3);\r\n          } else {\r\n            const char = this._getChar(text[i], fontStyle, markDirty);\r\n            const rect = char.rect || {};\r\n            let horiBearingX = 3;\r\n            dx += horiBearingX;\r\n            ret = this._getCharArray(ret, char, height, dx, dy, markDirty);\r\n            dx += char.advance; // advancce is the width of the character\r\n          }\r\n        }\r\n    }\r\n    return ret;\r\n  }\r\n  /**\r\n   * Updates the 'texture' member variable of this.atlas object\r\n   *\r\n   * markDirty = ??? callback to be called if the size of the texture is resized\r\n   */\r\n  _getChar(character, fontStyle, markDirty) {\r\n    // curFont is same as style.pbf defined above\r\n    // TODO: We are doing this too many times in this code. Find a better mech.\r\n    const font = this.curFont;\r\n    const spriteGenerator = new SpriteGenerator(fontStyle);\r\n    // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\r\n    // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\r\n\r\n    const glyphID = character.charCodeAt(0);\r\n\r\n    // Padding around the glyph\r\n    const buffer = 0;\r\n\r\n    const cache = this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {});\r\n    const glyph =\r\n      (cache[glyphID] && cache[glyphID].glyph) ||\r\n      spriteGenerator.draw(character);\r\n\r\n    const fontSize = spriteGenerator.fontSize;\r\n\r\n    if (!this._rects[font]) this._rects[font] = {};\r\n    let rect = (this._rects[font][character] = this.atlas.addGlyph(\r\n      glyphID, // character id\r\n      this.curFont, // contains url of the font file on server\r\n      glyph, // glyph object\r\n      buffer, // padding\r\n      fontSize, // fontSize\r\n      markDirty // callback function to be called if texture resizes\r\n    ));\r\n    return (\r\n      cache[glyphID] || (cache[glyphID] = new SimpleGlyph(glyph, rect, buffer))\r\n    );\r\n  }\r\n\r\n  get(text, x, y, markDirty) {\r\n    const fontStyle = this.fontStyle;\r\n    let alignment = fontStyle.alignment;\r\n\r\n    //replaces the multiple space characters in the text with a single space\r\n    text = text.replace(/\\s+/g, ' ');\r\n\r\n    let widthAndHeightObj = this.getWidthAndHeight(text, fontStyle, markDirty);\r\n    let height = widthAndHeightObj.height;\r\n    let width = widthAndHeightObj.width;\r\n    let widthArray = widthAndHeightObj.widthArray;\r\n\r\n    let ret = this.alignText(\r\n      alignment,\r\n      text,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      markDirty,\r\n      widthArray,\r\n      width,\r\n      fontStyle\r\n    );\r\n    return ret;\r\n  }\r\n\r\n  steps(text) {\r\n    return text.length;\r\n  }\r\n\r\n  bind() {\r\n    this.atlas.updateTexture(this._gl);\r\n  }\r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nimport ccNetViz_defaultTexts  from './default';\r\nimport ccNetViz_sdfTexts      from './sdf/sdf';\r\nimport ccNetViz_utils         from '../utils';\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n\r\n    this._modules = {\r\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\r\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\r\n    };\r\n  }\r\n\r\n  clear() {\r\n    for(let k in this._modules){\r\n      this._modules[k].clear();\r\n    }\r\n  }\r\n  \r\n  isSDF(font){\r\n    if(ccNetViz_utils.isObject(font)){\r\n      if(font.type === 'sdf'){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  getEngine(font) {\r\n    if(this.isSDF(font)){\r\n      return this._modules.sdf;\r\n    }\r\n    return this._modules.default;\r\n  }\r\n\r\n  bind () {\r\n    for(let k in this._modules){\r\n      this._modules[k].bind();\r\n    }\r\n  }\r\n  \r\n  remove () {\r\n    for(let k in this._modules){\r\n      this._modules[k].remove && this._modules[k].remove();\r\n    }\r\n  }\r\n\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(){\r\n    this._enable = true;\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n      let timeout, args, context, timestamp, result;\r\n\r\n      let later = () => {\r\n          let last = Date.now - timestamp;\r\n\r\n          if (last < wait && last > 0) {\r\n              timeout = setTimeout(later, wait - last);\r\n          } else {\r\n              timeout = null;\r\n              if (!immediate) {\r\n                  if(this._enable){\r\n                    result = func.apply(context, args);\r\n                  }\r\n                  if (!timeout) context = args = null;\r\n              }\r\n          }\r\n      };\r\n\r\n      return () => {\r\n          context = this;\r\n          args = arguments;\r\n          timestamp = Date.now;\r\n          let callNow = immediate && !timeout;\r\n          if (!timeout) timeout = setTimeout(later, wait);\r\n          if (callNow) {\r\n              if(this._enable){\r\n                result = func.apply(context, args);\r\n              }\r\n              context = args = null;\r\n          }\r\n\r\n          return result;\r\n      };\r\n  }\r\n  \r\n  disable(){\r\n    this._enable = false;\r\n  }\r\n};","import geomutils from './geomutils';\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska\r\n */\r\n\r\n\r\nfunction pushUnique(arr, e){\r\n  if(arr.indexOf(e) >= 0)\r\n    return;\r\n  arr.push(e);\r\n}\r\n\r\nexport default class {\r\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\r\n    this._layers = layers;\r\n    this._insertTempLayer = insertTempLayer;\r\n\r\n    this._draw = draw;\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._checkUniqId = checkUniqId;\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n\r\n    //create support structures\r\n    this._nPos = {};\r\n    this._ePos = {};\r\n    this._eDirs = {};\r\n\r\n    nodes.forEach((n, i) => {\r\n      this._nPos[n.uniqid] = i;\r\n      this._eDirs[n.uniqid] = {};\r\n    });\r\n    \r\n    edges.forEach((e, i) => {\r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      let si = s.uniqid || s.__uniqid;\r\n      let ti = t.uniqid || t.__uniqid;\r\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\r\n      this._ePos[e.uniqid] = i;\r\n    });\r\n    \r\n    this._actualTempNodes = [];\r\n    this._actualTempEdges = [];\r\n  }\r\n  _doRemoveNodes(nodes){\r\n    nodes.forEach((n) => {\r\n      if(n.uniqid === undefined)\r\n        return;\r\n      \r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._nPos[n.uniqid];\r\n        this._layers.main.removeNodeAtPos(pos);\r\n        delete this._nPos[n.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempNodes.length; i++){\r\n          if(this._actualTempNodes[i] === n){\r\n            this._actualTempNodes.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      n.__uniqid = n.uniqid;\r\n      delete n.uniqid;\r\n    });\r\n  }\r\n  _doRemoveEdges(edges){\r\n    edges.forEach((e) => {\r\n      if(e.uniqid === undefined)\r\n        return;\r\n      \r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\r\n      \r\n      if(this._ePos[e.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._ePos[e.uniqid];\r\n        this._layers.main.removeEdgeAtPos(pos);\r\n        delete this._ePos[e.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempEdges.length; i++){\r\n          if(this._actualTempEdges[i] === e){\r\n            this._actualTempEdges.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n\r\n      }\r\n      \r\n      e.__uniqid = e.uniqid;\r\n      delete e.uniqid;\r\n    });\r\n  }\r\n  _doAddEdges(){\r\n    this._toAddEdges.forEach((e) => {\r\n      //already added in main graph\r\n      if(\r\n        this._ePos[e.uniqid] !== undefined\r\n      ){\r\n        this._doRemoveEdges([e]);\r\n      }\r\n      \r\n      if(e.uniqid !== undefined){\r\n        console.error(e);\r\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(e);\r\n      \r\n      //add this node into temporary chart\r\n      \r\n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\r\n      pushUnique(this._actualTempEdges, e);\r\n    });\r\n  }\r\n  _doAddNodes(nodes){\r\n    this._toAddNodes.forEach((n) => {\r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        this._doRemoveNodes([n]);\r\n      }\r\n      \r\n      //already added\r\n      if(n.uniqid !== undefined){\r\n        console.error(n);\r\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(n);\r\n      \r\n      this._eDirs[n.uniqid] = {};\r\n\r\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\r\n      pushUnique(this._actualTempNodes, n);\r\n    });\r\n  }\r\n  addEdge(e){\r\n    let s = geomutils.edgeSource(e);\r\n    let t = geomutils.edgeTarget(e);\r\n    \r\n    let tid = t.uniqid || t.__uniqid;\r\n    let sid = s.uniqid || s.__uniqid;\r\n    \r\n    if((this._eDirs[sid] || {})[tid]){\r\n      //this edge was already added >> remove it\r\n      this._doRemoveEdges([e]);\r\n    }\r\n    \r\n    if((this._eDirs[tid] || {})[sid]){\r\n      //must remove line and add two curves\r\n      \r\n      this._toAddEdges.push(this._eDirs[tid][sid]);\r\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\r\n\r\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\r\n      \r\n      return this;\r\n    }\r\n\r\n    this._toAddEdges.push(e);\r\n    return this;\r\n  }\r\n  addNode(n){\r\n    this._toAddNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeNode(n){\r\n    this._toRemoveNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeEdge(e){\r\n    this._toRemoveEdges.push(e);\r\n    return this;\r\n  }\r\n  applyChanges(){\r\n    \r\n    //nothing to do\r\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\r\n      return this;\r\n    \r\n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\r\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\r\n    \r\n    this._doRemoveEdges(this._toRemoveEdges);\r\n    this._doRemoveNodes(this._toRemoveNodes);\r\n    this._doAddNodes();\r\n    this._doAddEdges();\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n    \r\n    this._insertTempLayer();\r\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\r\n\r\n    this._draw();\r\n    \r\n    return this;\r\n  }\r\n};","import ccNetViz_layer from './layer/index';\r\nimport ccNetViz_layout from './layout/index';\r\nimport ccNetViz_gl from './gl';\r\nimport ccNetViz_color from './color';\r\nimport ccNetViz_utils from './utils';\r\nimport ccNetViz_textures from './dataSources/textures';\r\nimport ccNetViz_files from './dataSources/files';\r\nimport ccNetViz_texts from './texts/texts';\r\nimport ccNetViz_lazyEvents from './lazyEvents';\r\nimport ccNetViz_interactivityBatch from './interactivityBatch';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\r\nimport { getPartitionStyle } from './primitiveTools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n *  David Tichy\r\n *    Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\nlet sCanvas = document.createElement('canvas');\r\nfunction getContext(canvas) {\r\n  let attributes = { depth: false, antialias: false };\r\n  let gl =\r\n    canvas.getContext('webgl', attributes) ||\r\n    canvas.getContext('experimental-webgl', attributes);\r\n\r\n  return gl;\r\n}\r\n\r\nvar lastUniqId = 0;\r\n\r\nfunction checkUniqId(el) {\r\n  if (el.__uniqid !== undefined) {\r\n    el.uniqid = el.__uniqid;\r\n    delete el.__uniqid;\r\n  } else if (el.uniqid === undefined) {\r\n    el.uniqid = ++lastUniqId;\r\n  }\r\n}\r\n\r\nfunction mergeArrays(a, b, cmp) {\r\n  let r = [];\r\n  r.length = a.length + b.length;\r\n\r\n  let i = 0,\r\n    j = 0,\r\n    k = 0;\r\n\r\n  while (i < a.length && j < b.length) {\r\n    if (cmp(a[i], b[j]) < 0) r[k++] = a[i++];\r\n    else r[k++] = b[j++];\r\n  }\r\n\r\n  while (i < a.length) r[k++] = a[i++];\r\n\r\n  while (j < b.length) r[k++] = b[j++];\r\n\r\n  return r;\r\n}\r\n\r\nvar ccNetViz = function(canvas, options) {\r\n  let self = this;\r\n  canvas = canvas || sCanvas;\r\n  let backgroundStyle = (options.styles.background =\r\n    options.styles.background || {});\r\n  let backgroundColor = new ccNetViz_color(\r\n    backgroundStyle.color || 'rgb(255, 255, 255)'\r\n  );\r\n\r\n  let removed = false;\r\n  let setted = false;\r\n\r\n  let nodeStyle = (options.styles.node = options.styles.node || {});\r\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\r\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\r\n  nodeStyle.color = nodeStyle.color || 'rgb(255, 255, 255)';\r\n\r\n  if (nodeStyle.label) {\r\n    let s = nodeStyle.label;\r\n    s.color = s.color || 'rgb(120, 120, 120)';\r\n    s.font = s.font || { type: 'Arial, Helvetica, sans-serif', size: 11 };\r\n  }\r\n\r\n  let edgeStyle = (options.styles.edge = options.styles.edge || { arrow: {} });\r\n  edgeStyle.width = edgeStyle.width || 1;\r\n  edgeStyle.color = edgeStyle.color || 'rgb(204, 204, 204)';\r\n  edgeStyle.animateColor = edgeStyle.animateColor || 'rgb(240, 80, 120)';\r\n  edgeStyle.animateSpeed = edgeStyle.animateSpeed || 1.0;\r\n\r\n  let onLoad = () => {\r\n    if (!options.onLoad || options.onLoad()) {\r\n      this.draw(true);\r\n    }\r\n  };\r\n\r\n  if (edgeStyle.arrow) {\r\n    if (typeof edgeStyle.arrow.texture !== 'undefined') {\r\n      let s = edgeStyle.arrow;\r\n      s.minSize = s.minSize != null ? s.minSize : 6;\r\n      s.maxSize = s.maxSize || 12;\r\n      s.aspect = 1;\r\n    }\r\n  }\r\n\r\n  let events = new ccNetViz_lazyEvents();\r\n  let layers = {};\r\n  let view, gl, drawFunc, textures, files, texts;\r\n  let context = {};\r\n\r\n  this.cntShownNodes = () => {\r\n    let n = 0;\r\n    for (var k in layers) n += layers[k].cntShownNodes();\r\n    return n;\r\n  };\r\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\r\n\r\n  this.cntShownEdges = () => {\r\n    let e = 0;\r\n    for (var k in layers) e += layers[k].cntShownEdges();\r\n    return e;\r\n  };\r\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\r\n\r\n  let onRedraw = events.debounce(() => {\r\n    self.draw.call(self);\r\n    return false;\r\n  }, 5);\r\n\r\n  function checkRemoved() {\r\n    if (removed) {\r\n      console.error('Cannot call any function on graph after remove()');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let nodes, edges;\r\n\r\n  function insertTempLayer() {\r\n    if (layers.temp) return;\r\n    layers.temp = new ccNetViz_layer(\r\n      canvas,\r\n      context,\r\n      view,\r\n      gl,\r\n      textures,\r\n      files,\r\n      texts,\r\n      events,\r\n      options,\r\n      backgroundColor,\r\n      nodeStyle,\r\n      edgeStyle,\r\n      getSize,\r\n      getNodeSize,\r\n      getLabelSize,\r\n      getLabelHideSize,\r\n      getNodesCnt,\r\n      getEdgesCnt,\r\n      onRedraw,\r\n      onLoad\r\n    );\r\n  }\r\n\r\n  let batch = undefined;\r\n  function getBatch() {\r\n    if (!batch)\r\n      batch = new ccNetViz_interactivityBatch(\r\n        layers,\r\n        insertTempLayer,\r\n        drawFunc,\r\n        nodes,\r\n        edges,\r\n        checkUniqId\r\n      );\r\n    return batch;\r\n  }\r\n\r\n  this.set = (n, e, layout, layout_options = {}) => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes = n || [];\r\n    edges = e || [];\r\n\r\n    nodes.forEach(checkUniqId);\r\n    edges.forEach(checkUniqId);\r\n\r\n    let promises = [];\r\n    if (typeof ccNetVizPlugins !== 'undefined') {\r\n      if (typeof ccNetVizPlugins.node !== 'undefined')\r\n        promises = ccNetVizPlugins.node.Integration(options, self).shapes;\r\n      if (typeof ccNetVizPlugins.arrow !== 'undefined')\r\n        promises = promises.concat(\r\n          ccNetVizPlugins.arrow.Integration(options, self).shapes\r\n        );\r\n    }\r\n\r\n    Promise.all(promises.map(item => item.config)).then(c => {\r\n      c.map((item, index) => {\r\n        if (item.plugin === 'arrow') {\r\n          options.styles[promises[index].name].arrow = item;\r\n        } else {\r\n          options.styles[promises[index].name] = item;\r\n        }\r\n      });\r\n      layers.temp && layers.temp.set([], [], layout, layout_options);\r\n      layers.main.set(nodes, edges, layout, layout_options);\r\n    });\r\n\r\n    //reset batch\r\n    batch = undefined;\r\n    setted = true;\r\n    return this;\r\n  };\r\n\r\n  //make all dynamic changes static\r\n  this.reflow = () => {\r\n    if (checkRemoved()) return;\r\n\r\n    getBatch().applyChanges();\r\n\r\n    //nodes and edges in dynamic chart are actual\r\n    let n = layers.main.getVisibleNodes();\r\n    if (layers.temp) n = n.concat(layers.temp.getVisibleNodes());\r\n\r\n    let e = layers.main.getVisibleEdges();\r\n    if (layers.temp) e = e.concat(layers.temp.getVisibleEdges());\r\n\r\n    this.set(n, e);\r\n    this.draw();\r\n  };\r\n\r\n  this.removeNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().removeNode(n);\r\n    return this;\r\n  };\r\n  this.removeEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().removeEdge(e);\r\n    return this;\r\n  };\r\n  this.addEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().addEdge(e);\r\n    return this;\r\n  };\r\n  this.addNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().addNode(n);\r\n    return this;\r\n  };\r\n  this.updateNode = n => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    return this.removeNode(n).addNode(n);\r\n  };\r\n  this.updateEdge = e => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    return this.removeEdge(e).addEdge(e);\r\n  };\r\n  this.applyChanges = () => {\r\n    if (checkRemoved()) {\r\n      return this;\r\n    }\r\n    getBatch().applyChanges();\r\n    return this;\r\n  };\r\n\r\n  this.addEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.addEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.addNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.addNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.removeEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.removeEdge(e);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.removeNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.removeNode(n);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.updateNodes = nodes => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes.forEach(n => {\r\n      this.updateNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.updateEdges = edges => {\r\n    if (checkRemoved()) return this;\r\n\r\n    edges.forEach(e => {\r\n      this.updateEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  let getSize = (c, s, n, sc) => {\r\n    let result = (sc * Math.sqrt((c.width * c.height) / (n + 1))) / view.size;\r\n    if (s) {\r\n      let min = s.size ? s.size : s.minSize;\r\n      let max = s.size ? s.size : s.maxSize;\r\n\r\n      result = max ? Math.min(max, result) : result;\r\n      if (result < s.hideSize) return 0;\r\n      result = min ? Math.max(min, result) : result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\r\n  let getLabelSize = (c, s) => getSize(c, s.font, getNodesCnt(), 0.25);\r\n\r\n  let getLabelHideSize = (c, s) => {\r\n    if (s) {\r\n      const sc = 0.25;\r\n      let n = layers.main.cntShownNodes(); //lower bound\r\n      let t = sc * Math.sqrt((c.width * c.height) / (n + 1));\r\n\r\n      let vs;\r\n      if (s.hideSize) {\r\n        vs = t / s.hideSize;\r\n        if (s.maxSize) vs = Math.min(vs, t / s.maxSize);\r\n        return vs;\r\n      }\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  let offset = 0.5 * nodeStyle.maxSize;\r\n\r\n  this.draw = silent => {\r\n    if (silent && (removed || !setted)) return;\r\n    if (checkRemoved()) return;\r\n\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n    let aspect = width / height;\r\n    let o = view.size === 1 ? offset : 0;\r\n    let ox = o / width;\r\n    let oy = o / height;\r\n\r\n    context.transform = ccNetViz_gl.ortho(\r\n      view.x - ox,\r\n      view.x + view.size + ox,\r\n      view.y - oy,\r\n      view.y + view.size + oy,\r\n      -1,\r\n      1\r\n    );\r\n    context.offsetX = ox;\r\n    context.offsetY = oy;\r\n    context.width = 0.5 * width;\r\n    context.height = 0.5 * height;\r\n    context.aspect2 = aspect * aspect;\r\n    context.aspect = aspect;\r\n    context.count = getNodesCnt();\r\n\r\n    //bad hack because we use different size for curveExc and for nodeSize :(\r\n    if (context.style) delete context.style;\r\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\r\n    context.style = nodeStyle;\r\n    context.nodeSize = getNodeSize(context);\r\n\r\n    gl && gl.viewport(0, 0, width, height);\r\n\r\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    const startTime = Date.now();\r\n    let drawNums = 0;\r\n\r\n    const drawOnce = () => {\r\n      for (let i = 0; i < layers.main.scene.elements.length; i++) {\r\n        layers.main.scene.elements[i].draw(context);\r\n        layers.temp && layers.temp.scene.elements[i].draw(context);\r\n      }\r\n    };\r\n    const drawLoop = () => {\r\n      context.renderTime = (Date.now() - startTime) / 1000.0;\r\n      drawOnce();\r\n      drawNums++;\r\n      this.fps = drawNums / context.renderTime; // TODO: number overflow\r\n      requestAnimationFrame(drawLoop);\r\n    };\r\n\r\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\r\n      drawLoop();\r\n    } else {\r\n      drawOnce();\r\n    }\r\n  };\r\n  drawFunc = this.draw.bind(this);\r\n\r\n  this.getScreenCoords = function(conf) {\r\n    if (checkRemoved()) return;\r\n    let ret = {};\r\n    let rect = canvas.getBoundingClientRect();\r\n    if (conf.x !== undefined)\r\n      ret.x =\r\n        ((conf.x - view.x + context.offsetX) /\r\n          (view.size + 2 * context.offsetX)) *\r\n          canvas.width +\r\n        rect.left;\r\n    if (conf.y !== undefined)\r\n      ret.y =\r\n        (1 -\r\n          (conf.y - view.y + context.offsetY) /\r\n            (view.size + 2 * context.offsetY)) *\r\n          canvas.height +\r\n        rect.top;\r\n    return ret;\r\n  };\r\n\r\n  this.getLayerCoords = function(conf) {\r\n    if (checkRemoved()) return;\r\n\r\n    let ret = {};\r\n\r\n    ['x', 'x1', 'x2'].forEach(k => {\r\n      if (conf[k] !== undefined) {\r\n        let x = conf[k];\r\n        x =\r\n          (x / canvas.width) * (view.size + 2 * context.offsetX) -\r\n          context.offsetX +\r\n          view.x;\r\n        ret[k] = x;\r\n      }\r\n    });\r\n\r\n    ['y', 'y1', 'y2'].forEach(k => {\r\n      if (conf[k] !== undefined) {\r\n        let y = conf[k];\r\n        y =\r\n          (1 - y / canvas.height) * (view.size + 2 * context.offsetY) -\r\n          context.offsetY +\r\n          view.y;\r\n        ret[k] = y;\r\n      }\r\n    });\r\n\r\n    if (conf.radius !== undefined) {\r\n      let dist = conf.radius;\r\n\r\n      let disth = dist / canvas.height;\r\n      let distw = dist / canvas.width;\r\n      dist = Math.max(disth, distw) * view.size;\r\n\r\n      ret.radius = dist;\r\n    }\r\n\r\n    return ret;\r\n  };\r\n\r\n  let findMerge = function(funcname, args) {\r\n    if (checkRemoved() || !gl) return;\r\n\r\n    let f1 = layers.main[funcname].apply(layers.main, args);\r\n\r\n    if (!layers.temp) return f1;\r\n\r\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\r\n\r\n    let r = {};\r\n    for (let key in f1) {\r\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\r\n        return e1.dist2 - e2.dist2;\r\n      });\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  this.find = function() {\r\n    return findMerge('find', arguments);\r\n  };\r\n  this.findArea = function() {\r\n    return findMerge('findArea', arguments);\r\n  };\r\n\r\n  this.getTextPosition = n => {\r\n    if (checkRemoved() || !gl) return;\r\n\r\n    const offset = 0.5 * context.nodeSize;\r\n    const offsety = (2.0 * (n.y <= 0.5 ? 0 : 1) - 1.0) * offset;\r\n\r\n    let ns = getPartitionStyle(options.styles[n.style], nodeStyle, 'label');\r\n    let textEngine = texts.getEngine(ns.font);\r\n    textEngine.setFont(ns.font);\r\n\r\n    let wantedSize = textEngine.isSDF\r\n      ? getLabelSize(context, ns.label || {})\r\n      : textEngine.fontSize;\r\n    let fontScale = wantedSize / textEngine.fontSize;\r\n    if (wantedSize === 0) {\r\n      fontScale = 0;\r\n    }\r\n\r\n    return {\r\n      offsetY: offsety,\r\n      fontScale: fontScale,\r\n      chars: textEngine.get(n.label, n.x, n.y),\r\n    };\r\n  };\r\n\r\n  let addEvts = (el, evts) => {\r\n    for (var k in evts || {}) {\r\n      evts[k] &&\r\n        el.addEventListener(k, evts[k], { passive: options.passiveEvts });\r\n    }\r\n  };\r\n\r\n  let removeEvts = (el, evts) => {\r\n    for (var k in evts || {}) {\r\n      evts[k] && el.removeEventListener(k, evts[k]);\r\n    }\r\n  };\r\n\r\n  let onDownThis = onMouseDown.bind(this);\r\n\r\n  const onWheelThis = onWheel.bind(this);\r\n\r\n  let zoomevts;\r\n  addEvts(\r\n    canvas,\r\n    (zoomevts = {\r\n      mousedown: onDownThis,\r\n      touchstart: onDownThis,\r\n      wheel: onWheelThis,\r\n      contextmenu: options.onContextMenu,\r\n    })\r\n  );\r\n\r\n  this.remove = () => {\r\n    if (checkRemoved()) return;\r\n\r\n    for (var k in layers) {\r\n      layers[k].remove();\r\n    }\r\n\r\n    if (gl) {\r\n      gl.viewport(0, 0, context.width * 2, context.height * 2);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\r\n      gl_lose && gl_lose.loseContext();\r\n    }\r\n\r\n    removeEvts(canvas, zoomevts);\r\n\r\n    events.disable();\r\n    texts && texts.remove();\r\n\r\n    removed = true;\r\n  };\r\n\r\n  let last_view = {};\r\n  function checkChangeViewport() {\r\n    let is_change = false;\r\n    if (last_view) {\r\n      for (let k in view) {\r\n        if (last_view[k] !== view[k]) is_change = true;\r\n      }\r\n    }\r\n    ccNetViz_utils.extend(last_view, view);\r\n\r\n    if (is_change) {\r\n      options.onChangeViewport && options.onChangeViewport(view);\r\n    }\r\n  }\r\n\r\n  function onContextMenu(e) {}\r\n\r\n  function onWheel(e) {\r\n    let rect = canvas.getBoundingClientRect();\r\n\r\n    if (!options.passiveEvts) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    let oldsize, oldx, oldy;\r\n\r\n    // Mouse coordinates\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    const radius = 10;\r\n\r\n    // if no timer found i.e. we are not in continuous phase\r\n    // we are calculating the focus variables again\r\n    if (!onWheel.continuosZoom) {\r\n      onWheel.startView = { size: view.size, x: view.x, y: view.y };\r\n\r\n      const lCoords = this.getLayerCoords({\r\n        x1: mouseX - radius,\r\n        y1: mouseY - radius,\r\n        x2: mouseX + radius,\r\n        y2: mouseY - radius,\r\n      });\r\n      const searchNodes = this.findArea(\r\n        lCoords.x1,\r\n        lCoords.y1,\r\n        lCoords.x2,\r\n        lCoords.y2,\r\n        true\r\n      );\r\n      // if node found beneath mouse_ptr, zooming_focus is the center of that node\r\n      if (searchNodes.nodes.length) {\r\n        let node = searchNodes.nodes[0];\r\n        let focus = this.getScreenCoords({\r\n          x: node.node.x,\r\n          y: node.node.y,\r\n        });\r\n        onWheel.focusX = focus.x;\r\n        onWheel.focusY = focus.y;\r\n      }\r\n      // else, it is the window co-ords of the mouse_ptr\r\n      else {\r\n        onWheel.focusX = mouseX;\r\n        onWheel.focusY = mouseY;\r\n      }\r\n      onWheel.oldX = view.x;\r\n      onWheel.oldY = view.y;\r\n      onWheel.oldSize = view.size;\r\n\r\n      if (onWheel.continuosZoom) clearTimeout(onWheel.continuosZoom);\r\n\r\n      oldx = view.x;\r\n      oldy = view.y;\r\n    }\r\n    onWheel.continuosZoom = setTimeout(() => {\r\n      onWheel.continuosZoom = undefined;\r\n    }, 200);\r\n\r\n    let size = Math.min(\r\n      1.0,\r\n      view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY)\r\n    );\r\n    let delta = size - onWheel.oldSize;\r\n\r\n    view.size = size;\r\n    view.x = Math.max(\r\n      0,\r\n      Math.min(1 - size, onWheel.oldX - (delta * onWheel.focusX) / canvas.width)\r\n    );\r\n    view.y = Math.max(\r\n      0,\r\n      Math.min(\r\n        1 - size,\r\n        onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)\r\n      )\r\n    );\r\n\r\n    if (options.onZoom && options.onZoom(view) === false) {\r\n      view.size = oldsize;\r\n      view.x = oldx;\r\n      view.y = oldy;\r\n      return;\r\n    }\r\n\r\n    checkChangeViewport();\r\n\r\n    this.draw();\r\n  }\r\n\r\n  let lastUpTime = 0;\r\n  function onMouseDown(downe) {\r\n    if (downe.which !== 1) return; //catch only 1 - left mouse button\r\n\r\n    let parseTouchEvts = e => {\r\n      if (!e.touches) return e;\r\n\r\n      let x = 0,\r\n        y = 0;\r\n      for (let i = 0; i < e.touches.length; i++) {\r\n        x += e.touches[i].clientX;\r\n        y += e.touches[i].clientY;\r\n      }\r\n      e.clientX = x / e.touches.length;\r\n      e.clientY = y / e.touches.length;\r\n\r\n      return e;\r\n    };\r\n\r\n    downe = parseTouchEvts(downe);\r\n\r\n    let width = canvas.width / view.size;\r\n    let height = canvas.height / view.size;\r\n    let sx = downe.clientX;\r\n    let sy = downe.clientY;\r\n    let dx = view.x + sx / width;\r\n    let dy = sy / height - view.y;\r\n    let od = options.onDrag;\r\n    let dragged, custom;\r\n    let panning = true;\r\n    let zooming = false;\r\n    let evts;\r\n\r\n    let origdist;\r\n    if ((downe.touches || []).length === 2) {\r\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX,\r\n        my = downe.touches[0].clientY - downe.touches[1].clientY;\r\n      origdist = Math.sqrt(mx * mx + my * my);\r\n      zooming = true;\r\n    }\r\n\r\n    let drag = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if (e.touches && e.touches.length != 1) panning = false;\r\n\r\n      if (dragged) {\r\n        if (panning) {\r\n          if (custom) {\r\n            od.drag && od.drag(e);\r\n          } else {\r\n            view.x = Math.max(\r\n              0,\r\n              Math.min(1 - view.size, dx - e.clientX / width)\r\n            );\r\n            view.y = Math.max(\r\n              0,\r\n              Math.min(1 - view.size, e.clientY / height - dy)\r\n            );\r\n            checkChangeViewport();\r\n            this.draw();\r\n          }\r\n        }\r\n      } else {\r\n        let x, y;\r\n        if (e.touches && e.touches.length > 0) {\r\n          x = e.touches[0].clientX;\r\n          y = e.touches[0].clientY;\r\n        } else {\r\n          x = e.clientX;\r\n          y = e.clientY;\r\n        }\r\n\r\n        let mx = x - sx;\r\n        let my = y - sy;\r\n\r\n        if (mx * mx + my * my > 8) {\r\n          dragged = true;\r\n          custom = od && od.start(downe);\r\n          custom && od.drag && od.drag(e);\r\n        }\r\n      }\r\n      if (!options.passiveEvts) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    let up = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      custom && od.stop && od.stop(e);\r\n\r\n      if (!dragged) {\r\n        options.onClick && options.onClick(e);\r\n\r\n        if (new Date().getTime() - lastUpTime < 250) {\r\n          options.onDblClick && options.onDblClick(e);\r\n          lastUpTime = 0;\r\n        } else {\r\n          lastUpTime = new Date().getTime();\r\n        }\r\n      }\r\n\r\n      removeEvts(window, evts);\r\n    };\r\n\r\n    let zoom = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if (e.touches && e.touches.length == 2) {\r\n        let mx = e.touches[0].clientX - e.touches[1].clientX,\r\n          my = e.touches[0].clientY - e.touches[1].clientY;\r\n        let dist = Math.sqrt(mx * mx + my * my);\r\n        e.deltaY = -(dist - origdist) * 5;\r\n        onWheelThis(e);\r\n        origdist = dist;\r\n      }\r\n    };\r\n\r\n    addEvts(\r\n      window,\r\n      (evts = {\r\n        mouseup: up,\r\n        touchend: up,\r\n        touchcancel: up,\r\n        mousemove: zooming ? zoom : drag,\r\n        touchmove: zooming ? zoom : drag,\r\n      })\r\n    );\r\n  }\r\n\r\n  this.image = function() {\r\n    if (checkRemoved()) return;\r\n\r\n    return canvas.toDataURL();\r\n  };\r\n\r\n  this.resize = function() {\r\n    if (checkRemoved()) return;\r\n\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n  };\r\n\r\n  this.getViewport = function() {\r\n    return view;\r\n  };\r\n\r\n  this.setViewport = function(v) {\r\n    if (checkRemoved()) return;\r\n\r\n    ccNetViz_utils.extend(view, v);\r\n\r\n    checkChangeViewport();\r\n  };\r\n\r\n  this.resetView = () => this.setViewport({ size: 1, x: 0, y: 0 });\r\n\r\n  //expose these methods from layer into this class\r\n  ['update'].forEach(function(method) {\r\n    (function(method, self) {\r\n      self[method] = function() {\r\n        let args = arguments;\r\n        for (let k in layers) {\r\n          let l = layers[k];\r\n          l[method].apply(l, args);\r\n        }\r\n        return self;\r\n      };\r\n    })(method, self);\r\n  });\r\n\r\n  if ((gl = getContext(canvas))) {\r\n    gl.clearColor(\r\n      backgroundColor.r,\r\n      backgroundColor.g,\r\n      backgroundColor.b,\r\n      backgroundColor.a\r\n    );\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n    gl.enable(gl.BLEND);\r\n  }\r\n\r\n  view = { size: 1, x: 0, y: 0 };\r\n\r\n  this.resize();\r\n\r\n  textures = new ccNetViz_textures(events, onLoad);\r\n  files = new ccNetViz_files(events, onLoad);\r\n  texts = gl && new ccNetViz_texts(gl, files, textures);\r\n  layers.main = new ccNetViz_layer(\r\n    canvas,\r\n    context,\r\n    view,\r\n    gl,\r\n    textures,\r\n    files,\r\n    texts,\r\n    events,\r\n    options,\r\n    backgroundColor,\r\n    nodeStyle,\r\n    edgeStyle,\r\n    getSize,\r\n    getNodeSize,\r\n    getLabelSize,\r\n    getLabelHideSize,\r\n    getNodesCnt,\r\n    getEdgesCnt,\r\n    onRedraw,\r\n    onLoad\r\n  );\r\n\r\n  if (!gl) console.warn('Cannot initialize WebGL context');\r\n};\r\n\r\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\r\n\r\nccNetViz.color = ccNetViz_color;\r\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\r\nccNetViz.layout = ccNetViz_layout;\r\nccNetViz.color = ccNetViz_color;\r\n\r\nwindow.ccNetViz = ccNetViz;\r\nexport default ccNetViz;\r\n","import ccNetViz from './ccNetViz';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// this file is used when we have more than 1 layer , goto example multi level\r\n\r\nvar ccNetVizMultiLevel = function(canvas, options) {\r\n  var vizScreen = new ccNetViz(canvas, options);\r\n  var vizLayout;\r\n  var vizLayoutOptions;\r\n\r\n  var history = [];\r\n  var curlevel = {};\r\n\r\n  var onContextMenu, onClick;\r\n\r\n  //right click >> go back\r\n  canvas.addEventListener(\r\n    'contextmenu',\r\n    (onContextMenu = function(e) {\r\n      if (history.length > 0) {\r\n        var histel = history.pop();\r\n        //currently shown level\r\n        curlevel = histel;\r\n\r\n        vizScreen.set(curlevel.nodes, curlevel.edges);\r\n        vizScreen.draw();\r\n      }\r\n\r\n      e.preventDefault();\r\n    })\r\n  );\r\n\r\n  canvas.addEventListener(\r\n    'click',\r\n    (onClick = function(e) {\r\n      var bb = canvas.getBoundingClientRect();\r\n      var x = e.clientX - bb.left;\r\n      var y = e.clientY - bb.top;\r\n      var radius = 5;\r\n\r\n      var lCoords = vizScreen.getLayerCoords({ radius: radius, x: x, y: y });\r\n      var result = vizScreen.find(\r\n        lCoords.x,\r\n        lCoords.y,\r\n        lCoords.radius,\r\n        true,\r\n        false\r\n      );\r\n      if (result.nodes.length > 0) {\r\n        var node = result.nodes[0].node;\r\n\r\n        var layout = node.layout || vizLayout;\r\n        if (node.__computedLayout) {\r\n          //it is not nessesary to recompute layout if it was yet computed on this subgraph\r\n          layout = undefined;\r\n        } else {\r\n          //we store that layout was once computed for this subgraph\r\n          node.__computedLayout = true;\r\n        }\r\n\r\n        if (node.nodes && node.edges) {\r\n          var insidenodes = node.nodes;\r\n          var insideedges = node.edges;\r\n\r\n          history.push(curlevel);\r\n          curlevel = { nodes: insidenodes, edges: insideedges };\r\n\r\n          vizScreen.set(curlevel.nodes, curlevel.edges, layout);\r\n          vizScreen.draw();\r\n        }\r\n      }\r\n    })\r\n  );\r\n\r\n  ////TODO: Add interactivity functions into this class\r\n\r\n  this.remove = function() {\r\n    canvas.removeEventListener('contextmenu', onContextMenu);\r\n    canvas.removeEventListener('click', onClick);\r\n    vizScreen.remove();\r\n  };\r\n\r\n  this.set = function(nodes, edges, layout, layout_options) {\r\n    curlevel = { nodes: nodes, edges: edges };\r\n    history = [];\r\n\r\n    vizLayout = layout;\r\n    vizScreen.set.apply(vizScreen, arguments);\r\n  };\r\n  // apply the functions to the layer\r\n  var exposeMethods = [\r\n    'find',\r\n    'findArea',\r\n    'getLayerCoords',\r\n    'draw',\r\n    'resetView',\r\n    'setViewport',\r\n    'update',\r\n    'resetView',\r\n  ];\r\n  var self = this;\r\n  exposeMethods.forEach(function(method) {\r\n    (function(method, self) {\r\n      self[method] = function() {\r\n        return vizScreen[method].apply(vizScreen, arguments);\r\n      };\r\n    })(method, self);\r\n  });\r\n};\r\n\r\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\r\nexport default ccNetViz;\r\nexport { ccNetVizMultiLevel };\r\n"],"sourceRoot":""}