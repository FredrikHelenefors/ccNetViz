{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js","webpack:///./node_modules/ml-matrix/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","cbk","XMLHttpRequest","onreadystatechange","readyState","status","response","responseText","responseType","open","send","toString","endsWith","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","_color","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Color","_classCallCheck","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","context","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","width","height","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x1","y1","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","size","wantedSize","label","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","default","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","remove","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","_ccNetViz","ccNetVizMultiLevel","canvas","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","sCanvas","document","createElement","getContext","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","_this","backgroundStyle","background","backgroundColor","removed","setted","minSize","maxSize","edgeStyle","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","main","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","scene","elements","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","Date","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","redraw","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","is_bidirectional_overlap","bidirectional","init","isDirty","defaultAdder","labelAdder","is","enableLazyRedraw","reset","section","addSection","texture","slf","getTexture","nodesColored","labelsOutline","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","f","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","_gl","defaultAttr","Shader","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","_quadTree","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x0","y0","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","mini","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","display","_el","body","appendChild","_context","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","SimpleGlyph","glyph","advance","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","addGlyph","char","h","w","updateTexture","_shelfPack","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","Bin","maxw","maxh","refcount","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","allocFreebin","allocShelf","alloc","unref","factory","_glyphTrimmer","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","now","callNow","_geomutils","pushUnique","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","lib_es6","input","src_default","TypeError","ml_array_min_lib_es6","ml_array_rescale_lib_es6","output","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","isArray","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","previousColumn","isEchelonForm","checked","isReducedEchelonForm","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B","__webpack_exports__"],"mappings":"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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n/**\n * @class\n * @classdesc Describes color properties that could be given to the shader.\n * @member {number} r\n * @member {number} g\n * @member {number} b\n * @member {number} a\n */\n\n\nexport default class Color {\n    constructor(color) {\n\n        // Default value for red, blue and green.\n        // Black color is rendered.\n        this.r = this.g = this.b = 0;\n        this.a = 1;\n\n        if (color instanceof Color) {\n            this.r = color.r;\n            this.g = color.g;\n            this.b = color.b;\n            this.a = color.a;\n        } else if (arguments.length >= 3) {\n\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\n            // Aplha value is optional.\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n            arguments.length > 3 && (this.a = arguments[3]);\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\n            // Aplha value is optional.\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n            this.a = get(color[4]);\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 255;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n            let get = v => parseInt(v, 10) / 100;\n\n            this.r = get(color[1]);\n            this.g = get(color[2]);\n            this.b = get(color[3]);\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n\n            // color is of the form '#23ff74'.\n            color = parseInt(color.substring(1), 16);\n\n            // Converts to range [0,1] by using bitwise operator.\n            this.r = (color >> 16 & 255) / 255;\n            this.g = (color >> 8 & 255) / 255;\n            this.b = (color & 255) / 255;\n        }\n    }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\n//import layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n/*  static get hierarchical2(){\n    return layoutHierarchical2;\n  }*/\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options={}) => {\n    if(checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    layers.temp && layers.temp.set([], [], layout, layout_options);\n    layers.main.set(nodes, edges, layout, layout_options);\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let i = 0; i < layers.main.scene.elements.length; i++){\n      layers.main.scene.elements[i].draw(context);\n      layers.temp && layers.temp.scene.elements[i].draw(context);\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  const onWheelThis = onWheel.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheelThis,\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\n\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;\n","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                //enable the \"curve\" feature\n                const is_bidirectional_overlap = options.bidirectional === 'overlap';\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si] && is_bidirectional_overlap){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n            \"precision mediump float;\",\n            \"attribute vec2 position;\",\n            \"attribute vec2 normal;\",\n            \"attribute vec2 lengthSoFar;\",\n            \"uniform float exc;\",\n            \"uniform vec2 size;\",\n            \"uniform vec2 screen;\",\n            \"uniform float aspect2;\",\n            \"uniform float aspect;\",\n            \"uniform vec2 width;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\"\n            ].concat(getShiftFuncs).concat([\n            \"void main(void) {\",\n            \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n            \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n            \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n            \"   n = normal;\",\n            \"}\"\n        ]), [\n            \"precision mediump float;\",\n            \"uniform float type;\",\n            \"uniform vec4 color;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\",\n            \"uniform float lineSize;\",\n            \"void main(void) {\",\n            \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n\t    ].concat(lineTypes).concat([\n            \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n            \"}\"\n        ]), c => {\n            let uniforms = c.shader.uniforms;\n            uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            let size = 2.5 * c.nodeSize;\n            uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            gl.uniform1f(uniforms.aspect, c.aspect);\n            gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n            gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            let point;\n            if (point = node.point) {\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      \n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\n     //decide the height and then max of them is taken each time to have a max height that fits each char\n\n      height = Math.max(height, rect.h - char.top);\n\n      // addiding const horiBearingx and char.advance wo get the total width of label\n\n      width += char.advance + horiBearingX;\n    }\n\n    \n   // x and y are the clipspace co-ordinates between 0 and 1\n   // dx and dy shifts the position of label w.r.t possibly node\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n      \n      dx += horiBearingX;\n\n      // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class LuDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\r\n * @param {Matrix} matrix\r\n */\r\nexport default class LuDecomposition {\r\n  constructor(matrix) {\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n\r\n    var lu = matrix.clone();\r\n    var rows = lu.rows;\r\n    var columns = lu.columns;\r\n    var pivotVector = new Array(rows);\r\n    var pivotSign = 1;\r\n    var i, j, k, p, s, t, v;\r\n    var LUcolj, kmax;\r\n\r\n    for (i = 0; i < rows; i++) {\r\n      pivotVector[i] = i;\r\n    }\r\n\r\n    LUcolj = new Array(rows);\r\n\r\n    for (j = 0; j < columns; j++) {\r\n      for (i = 0; i < rows; i++) {\r\n        LUcolj[i] = lu.get(i, j);\r\n      }\r\n\r\n      for (i = 0; i < rows; i++) {\r\n        kmax = Math.min(i, j);\r\n        s = 0;\r\n        for (k = 0; k < kmax; k++) {\r\n          s += lu.get(i, k) * LUcolj[k];\r\n        }\r\n        LUcolj[i] -= s;\r\n        lu.set(i, j, LUcolj[i]);\r\n      }\r\n\r\n      p = j;\r\n      for (i = j + 1; i < rows; i++) {\r\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\r\n          p = i;\r\n        }\r\n      }\r\n\r\n      if (p !== j) {\r\n        for (k = 0; k < columns; k++) {\r\n          t = lu.get(p, k);\r\n          lu.set(p, k, lu.get(j, k));\r\n          lu.set(j, k, t);\r\n        }\r\n\r\n        v = pivotVector[p];\r\n        pivotVector[p] = pivotVector[j];\r\n        pivotVector[j] = v;\r\n\r\n        pivotSign = -pivotSign;\r\n      }\r\n\r\n      if (j < rows && lu.get(j, j) !== 0) {\r\n        for (i = j + 1; i < rows; i++) {\r\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.LU = lu;\r\n    this.pivotVector = pivotVector;\r\n    this.pivotSign = pivotSign;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isSingular() {\r\n    var data = this.LU;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      if (data[j][j] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var lu = this.LU;\r\n    var rows = lu.rows;\r\n\r\n    if (rows !== value.rows) {\r\n      throw new Error('Invalid matrix dimensions');\r\n    }\r\n    if (this.isSingular()) {\r\n      throw new Error('LU matrix is singular');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\r\n    var columns = lu.columns;\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < columns; k++) {\r\n      for (i = k + 1; i < columns; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= lu[k][k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * lu[i][k];\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get determinant() {\r\n    var data = this.LU;\r\n    if (!data.isSquare()) {\r\n      throw new Error('Matrix must be square');\r\n    }\r\n    var determinant = this.pivotSign;\r\n    var col = data.columns;\r\n    for (var j = 0; j < col; j++) {\r\n      determinant *= data[j][j];\r\n    }\r\n    return determinant;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i > j) {\r\n          X[i][j] = data[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = 1;\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var data = this.LU;\r\n    var rows = data.rows;\r\n    var columns = data.columns;\r\n    var X = new Matrix(rows, columns);\r\n    for (var i = 0; i < rows; i++) {\r\n      for (var j = 0; j < columns; j++) {\r\n        if (i <= j) {\r\n          X[i][j] = data[i][j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get pivotPermutationVector() {\r\n    return this.pivotVector.slice();\r\n  }\r\n}\r\n","export function hypotenuse(a, b) {\r\n  var r = 0;\r\n  if (Math.abs(a) > Math.abs(b)) {\r\n    r = b / a;\r\n    return Math.abs(a) * Math.sqrt(1 + r * r);\r\n  }\r\n  if (b !== 0) {\r\n    r = a / b;\r\n    return Math.abs(b) * Math.sqrt(1 + r * r);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getFilled2DArray(rows, columns, value) {\r\n  var array = new Array(rows);\r\n  for (var i = 0; i < rows; i++) {\r\n    array[i] = new Array(columns);\r\n    for (var j = 0; j < columns; j++) {\r\n      array[i][j] = value;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class SingularValueDecomposition\r\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\r\n * @param {Matrix} value\r\n * @param {object} [options]\r\n * @param {boolean} [options.computeLeftSingularVectors=true]\r\n * @param {boolean} [options.computeRightSingularVectors=true]\r\n * @param {boolean} [options.autoTranspose=false]\r\n */\r\nexport default class SingularValueDecomposition {\r\n  constructor(value, options = {}) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n\r\n    const {\r\n      computeLeftSingularVectors = true,\r\n      computeRightSingularVectors = true,\r\n      autoTranspose = false\r\n    } = options;\r\n\r\n    var wantu = Boolean(computeLeftSingularVectors);\r\n    var wantv = Boolean(computeRightSingularVectors);\r\n\r\n    var swapped = false;\r\n    var a;\r\n    if (m < n) {\r\n      if (!autoTranspose) {\r\n        a = value.clone();\r\n        // eslint-disable-next-line no-console\r\n        console.warn(\r\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\r\n        );\r\n      } else {\r\n        a = value.transpose();\r\n        m = a.rows;\r\n        n = a.columns;\r\n        swapped = true;\r\n        var aux = wantu;\r\n        wantu = wantv;\r\n        wantv = aux;\r\n      }\r\n    } else {\r\n      a = value.clone();\r\n    }\r\n\r\n    var nu = Math.min(m, n);\r\n    var ni = Math.min(m + 1, n);\r\n    var s = new Array(ni);\r\n    var U = getFilled2DArray(m, nu, 0);\r\n    var V = getFilled2DArray(n, n, 0);\r\n\r\n    var e = new Array(n);\r\n    var work = new Array(m);\r\n\r\n    var si = new Array(ni);\r\n    for (let i = 0; i < ni; i++) si[i] = i;\r\n\r\n    var nct = Math.min(m - 1, n);\r\n    var nrt = Math.max(0, Math.min(n - 2, m));\r\n    var mrc = Math.max(nct, nrt);\r\n\r\n    for (let k = 0; k < mrc; k++) {\r\n      if (k < nct) {\r\n        s[k] = 0;\r\n        for (let i = k; i < m; i++) {\r\n          s[k] = hypotenuse(s[k], a[i][k]);\r\n        }\r\n        if (s[k] !== 0) {\r\n          if (a[k][k] < 0) {\r\n            s[k] = -s[k];\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            a[i][k] /= s[k];\r\n          }\r\n          a[k][k] += 1;\r\n        }\r\n        s[k] = -s[k];\r\n      }\r\n\r\n      for (let j = k + 1; j < n; j++) {\r\n        if (k < nct && s[k] !== 0) {\r\n          let t = 0;\r\n          for (let i = k; i < m; i++) {\r\n            t += a[i][k] * a[i][j];\r\n          }\r\n          t = -t / a[k][k];\r\n          for (let i = k; i < m; i++) {\r\n            a[i][j] += t * a[i][k];\r\n          }\r\n        }\r\n        e[j] = a[k][j];\r\n      }\r\n\r\n      if (wantu && k < nct) {\r\n        for (let i = k; i < m; i++) {\r\n          U[i][k] = a[i][k];\r\n        }\r\n      }\r\n\r\n      if (k < nrt) {\r\n        e[k] = 0;\r\n        for (let i = k + 1; i < n; i++) {\r\n          e[k] = hypotenuse(e[k], e[i]);\r\n        }\r\n        if (e[k] !== 0) {\r\n          if (e[k + 1] < 0) {\r\n            e[k] = 0 - e[k];\r\n          }\r\n          for (let i = k + 1; i < n; i++) {\r\n            e[i] /= e[k];\r\n          }\r\n          e[k + 1] += 1;\r\n        }\r\n        e[k] = -e[k];\r\n        if (k + 1 < m && e[k] !== 0) {\r\n          for (let i = k + 1; i < m; i++) {\r\n            work[i] = 0;\r\n          }\r\n          for (let i = k + 1; i < m; i++) {\r\n            for (let j = k + 1; j < n; j++) {\r\n              work[i] += e[j] * a[i][j];\r\n            }\r\n          }\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = -e[j] / e[k + 1];\r\n            for (let i = k + 1; i < m; i++) {\r\n              a[i][j] += t * work[i];\r\n            }\r\n          }\r\n        }\r\n        if (wantv) {\r\n          for (let i = k + 1; i < n; i++) {\r\n            V[i][k] = e[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    let p = Math.min(n, m + 1);\r\n    if (nct < n) {\r\n      s[nct] = a[nct][nct];\r\n    }\r\n    if (m < p) {\r\n      s[p - 1] = 0;\r\n    }\r\n    if (nrt + 1 < p) {\r\n      e[nrt] = a[nrt][p - 1];\r\n    }\r\n    e[p - 1] = 0;\r\n\r\n    if (wantu) {\r\n      for (let j = nct; j < nu; j++) {\r\n        for (let i = 0; i < m; i++) {\r\n          U[i][j] = 0;\r\n        }\r\n        U[j][j] = 1;\r\n      }\r\n      for (let k = nct - 1; k >= 0; k--) {\r\n        if (s[k] !== 0) {\r\n          for (let j = k + 1; j < nu; j++) {\r\n            let t = 0;\r\n            for (let i = k; i < m; i++) {\r\n              t += U[i][k] * U[i][j];\r\n            }\r\n            t = -t / U[k][k];\r\n            for (let i = k; i < m; i++) {\r\n              U[i][j] += t * U[i][k];\r\n            }\r\n          }\r\n          for (let i = k; i < m; i++) {\r\n            U[i][k] = -U[i][k];\r\n          }\r\n          U[k][k] = 1 + U[k][k];\r\n          for (let i = 0; i < k - 1; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n        } else {\r\n          for (let i = 0; i < m; i++) {\r\n            U[i][k] = 0;\r\n          }\r\n          U[k][k] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (wantv) {\r\n      for (let k = n - 1; k >= 0; k--) {\r\n        if (k < nrt && e[k] !== 0) {\r\n          for (let j = k + 1; j < n; j++) {\r\n            let t = 0;\r\n            for (let i = k + 1; i < n; i++) {\r\n              t += V[i][k] * V[i][j];\r\n            }\r\n            t = -t / V[k + 1][k];\r\n            for (let i = k + 1; i < n; i++) {\r\n              V[i][j] += t * V[i][k];\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < n; i++) {\r\n          V[i][k] = 0;\r\n        }\r\n        V[k][k] = 1;\r\n      }\r\n    }\r\n\r\n    var pp = p - 1;\r\n    var iter = 0;\r\n    var eps = Number.EPSILON;\r\n    while (p > 0) {\r\n      let k, kase;\r\n      for (k = p - 2; k >= -1; k--) {\r\n        if (k === -1) {\r\n          break;\r\n        }\r\n        const alpha =\r\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\r\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\r\n          e[k] = 0;\r\n          break;\r\n        }\r\n      }\r\n      if (k === p - 2) {\r\n        kase = 4;\r\n      } else {\r\n        let ks;\r\n        for (ks = p - 1; ks >= k; ks--) {\r\n          if (ks === k) {\r\n            break;\r\n          }\r\n          let t =\r\n            (ks !== p ? Math.abs(e[ks]) : 0) +\r\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\r\n          if (Math.abs(s[ks]) <= eps * t) {\r\n            s[ks] = 0;\r\n            break;\r\n          }\r\n        }\r\n        if (ks === k) {\r\n          kase = 3;\r\n        } else if (ks === p - 1) {\r\n          kase = 1;\r\n        } else {\r\n          kase = 2;\r\n          k = ks;\r\n        }\r\n      }\r\n\r\n      k++;\r\n\r\n      switch (kase) {\r\n        case 1: {\r\n          let f = e[p - 2];\r\n          e[p - 2] = 0;\r\n          for (let j = p - 2; j >= k; j--) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            if (j !== k) {\r\n              f = -sn * e[j - 1];\r\n              e[j - 1] = cs * e[j - 1];\r\n            }\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][p - 1];\r\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 2: {\r\n          let f = e[k - 1];\r\n          e[k - 1] = 0;\r\n          for (let j = k; j < p; j++) {\r\n            let t = hypotenuse(s[j], f);\r\n            let cs = s[j] / t;\r\n            let sn = f / t;\r\n            s[j] = t;\r\n            f = -sn * e[j];\r\n            e[j] = cs * e[j];\r\n            if (wantu) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][k - 1];\r\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 3: {\r\n          const scale = Math.max(\r\n            Math.abs(s[p - 1]),\r\n            Math.abs(s[p - 2]),\r\n            Math.abs(e[p - 2]),\r\n            Math.abs(s[k]),\r\n            Math.abs(e[k])\r\n          );\r\n          const sp = s[p - 1] / scale;\r\n          const spm1 = s[p - 2] / scale;\r\n          const epm1 = e[p - 2] / scale;\r\n          const sk = s[k] / scale;\r\n          const ek = e[k] / scale;\r\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\r\n          const c = sp * epm1 * (sp * epm1);\r\n          let shift = 0;\r\n          if (b !== 0 || c !== 0) {\r\n            if (b < 0) {\r\n              shift = 0 - Math.sqrt(b * b + c);\r\n            } else {\r\n              shift = Math.sqrt(b * b + c);\r\n            }\r\n            shift = c / (b + shift);\r\n          }\r\n          let f = (sk + sp) * (sk - sp) + shift;\r\n          let g = sk * ek;\r\n          for (let j = k; j < p - 1; j++) {\r\n            let t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            let cs = f / t;\r\n            let sn = g / t;\r\n            if (j !== k) {\r\n              e[j - 1] = t;\r\n            }\r\n            f = cs * s[j] + sn * e[j];\r\n            e[j] = cs * e[j] - sn * s[j];\r\n            g = sn * s[j + 1];\r\n            s[j + 1] = cs * s[j + 1];\r\n            if (wantv) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = cs * V[i][j] + sn * V[i][j + 1];\r\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\r\n                V[i][j] = t;\r\n              }\r\n            }\r\n            t = hypotenuse(f, g);\r\n            if (t === 0) t = Number.MIN_VALUE;\r\n            cs = f / t;\r\n            sn = g / t;\r\n            s[j] = t;\r\n            f = cs * e[j] + sn * s[j + 1];\r\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\r\n            g = sn * e[j + 1];\r\n            e[j + 1] = cs * e[j + 1];\r\n            if (wantu && j < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = cs * U[i][j] + sn * U[i][j + 1];\r\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\r\n                U[i][j] = t;\r\n              }\r\n            }\r\n          }\r\n          e[p - 2] = f;\r\n          iter = iter + 1;\r\n          break;\r\n        }\r\n        case 4: {\r\n          if (s[k] <= 0) {\r\n            s[k] = s[k] < 0 ? -s[k] : 0;\r\n            if (wantv) {\r\n              for (let i = 0; i <= pp; i++) {\r\n                V[i][k] = -V[i][k];\r\n              }\r\n            }\r\n          }\r\n          while (k < pp) {\r\n            if (s[k] >= s[k + 1]) {\r\n              break;\r\n            }\r\n            let t = s[k];\r\n            s[k] = s[k + 1];\r\n            s[k + 1] = t;\r\n            if (wantv && k < n - 1) {\r\n              for (let i = 0; i < n; i++) {\r\n                t = V[i][k + 1];\r\n                V[i][k + 1] = V[i][k];\r\n                V[i][k] = t;\r\n              }\r\n            }\r\n            if (wantu && k < m - 1) {\r\n              for (let i = 0; i < m; i++) {\r\n                t = U[i][k + 1];\r\n                U[i][k + 1] = U[i][k];\r\n                U[i][k] = t;\r\n              }\r\n            }\r\n            k++;\r\n          }\r\n          iter = 0;\r\n          p--;\r\n          break;\r\n        }\r\n        // no default\r\n      }\r\n    }\r\n\r\n    if (swapped) {\r\n      var tmp = V;\r\n      V = U;\r\n      U = tmp;\r\n    }\r\n\r\n    this.m = m;\r\n    this.n = n;\r\n    this.s = s;\r\n    this.U = U;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var x = svd.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    var Y = value;\r\n    var e = this.threshold;\r\n    var scols = this.s.length;\r\n    var Ls = Matrix.zeros(scols, scols);\r\n\r\n    for (let i = 0; i < scols; i++) {\r\n      if (Math.abs(this.s[i]) <= e) {\r\n        Ls[i][i] = 0;\r\n      } else {\r\n        Ls[i][i] = 1 / this.s[i];\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n    var V = this.rightSingularVectors;\r\n\r\n    var VL = V.mmul(Ls);\r\n    var vrows = V.rows;\r\n    var urows = U.length;\r\n    var VLU = Matrix.zeros(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < scols; k++) {\r\n          sum += VL[i][k] * U[j][k];\r\n        }\r\n        VLU[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return VLU.mmul(Y);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Array<number>} value\r\n   * @return {Matrix}\r\n   */\r\n  solveForDiagonal(value) {\r\n    return this.solve(Matrix.diag(value));\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\r\n   * var svd = SingularValueDecomposition(A);\r\n   * var inverseA = svd.inverse();\r\n   * @return {Matrix} - The approximation of the inverse of the matrix\r\n   */\r\n  inverse() {\r\n    var V = this.V;\r\n    var e = this.threshold;\r\n    var vrows = V.length;\r\n    var vcols = V[0].length;\r\n    var X = new Matrix(vrows, this.s.length);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < vcols; j++) {\r\n        if (Math.abs(this.s[j]) > e) {\r\n          X[i][j] = V[i][j] / this.s[j];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    var U = this.U;\r\n\r\n    var urows = U.length;\r\n    var ucols = U[0].length;\r\n    var Y = new Matrix(vrows, urows);\r\n\r\n    for (let i = 0; i < vrows; i++) {\r\n      for (let j = 0; j < urows; j++) {\r\n        let sum = 0;\r\n        for (let k = 0; k < ucols; k++) {\r\n          sum += X[i][k] * U[j][k];\r\n        }\r\n        Y[i][j] = sum;\r\n      }\r\n    }\r\n\r\n    return Y;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get condition() {\r\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get norm2() {\r\n    return this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rank() {\r\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\r\n    var r = 0;\r\n    var s = this.s;\r\n    for (var i = 0, ii = s.length; i < ii; i++) {\r\n      if (s[i] > tol) {\r\n        r++;\r\n      }\r\n    }\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get diagonal() {\r\n    return this.s;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {number}\r\n   */\r\n  get threshold() {\r\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get leftSingularVectors() {\r\n    if (!Matrix.isMatrix(this.U)) {\r\n      this.U = new Matrix(this.U);\r\n    }\r\n    return this.U;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get rightSingularVectors() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    return Matrix.diag(this.s);\r\n  }\r\n}\r\n","import Matrix from './matrix';\r\n\r\n/**\r\n * @private\r\n * Check that a row index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkRowIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.rows : matrix.rows - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Row index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that a column index is not out of bounds\r\n * @param {Matrix} matrix\r\n * @param {number} index\r\n * @param {boolean} [outer]\r\n */\r\nexport function checkColumnIndex(matrix, index, outer) {\r\n  var max = outer ? matrix.columns : matrix.columns - 1;\r\n  if (index < 0 || index > max) {\r\n    throw new RangeError('Column index out of range');\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkRowVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.columns) {\r\n    throw new RangeError(\r\n      'vector size must be the same as the number of columns'\r\n    );\r\n  }\r\n  return vector;\r\n}\r\n\r\n/**\r\n * @private\r\n * Check that the provided vector is an array with the right length\r\n * @param {Matrix} matrix\r\n * @param {Array|Matrix} vector\r\n * @return {Array}\r\n * @throws {RangeError}\r\n */\r\nexport function checkColumnVector(matrix, vector) {\r\n  if (vector.to1DArray) {\r\n    vector = vector.to1DArray();\r\n  }\r\n  if (vector.length !== matrix.rows) {\r\n    throw new RangeError('vector size must be the same as the number of rows');\r\n  }\r\n  return vector;\r\n}\r\n\r\nexport function checkIndices(matrix, rowIndices, columnIndices) {\r\n  return {\r\n    row: checkRowIndices(matrix, rowIndices),\r\n    column: checkColumnIndices(matrix, columnIndices)\r\n  };\r\n}\r\n\r\nexport function checkRowIndices(matrix, rowIndices) {\r\n  if (typeof rowIndices !== 'object') {\r\n    throw new TypeError('unexpected type for row indices');\r\n  }\r\n\r\n  var rowOut = rowIndices.some((r) => {\r\n    return r < 0 || r >= matrix.rows;\r\n  });\r\n\r\n  if (rowOut) {\r\n    throw new RangeError('row indices are out of range');\r\n  }\r\n\r\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\r\n\r\n  return rowIndices;\r\n}\r\n\r\nexport function checkColumnIndices(matrix, columnIndices) {\r\n  if (typeof columnIndices !== 'object') {\r\n    throw new TypeError('unexpected type for column indices');\r\n  }\r\n\r\n  var columnOut = columnIndices.some((c) => {\r\n    return c < 0 || c >= matrix.columns;\r\n  });\r\n\r\n  if (columnOut) {\r\n    throw new RangeError('column indices are out of range');\r\n  }\r\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\r\n\r\n  return columnIndices;\r\n}\r\n\r\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\r\n  if (arguments.length !== 5) {\r\n    throw new RangeError('expected 4 arguments');\r\n  }\r\n  checkNumber('startRow', startRow);\r\n  checkNumber('endRow', endRow);\r\n  checkNumber('startColumn', startColumn);\r\n  checkNumber('endColumn', endColumn);\r\n  if (\r\n    startRow > endRow ||\r\n    startColumn > endColumn ||\r\n    startRow < 0 ||\r\n    startRow >= matrix.rows ||\r\n    endRow < 0 ||\r\n    endRow >= matrix.rows ||\r\n    startColumn < 0 ||\r\n    startColumn >= matrix.columns ||\r\n    endColumn < 0 ||\r\n    endColumn >= matrix.columns\r\n  ) {\r\n    throw new RangeError('Submatrix indices are out of range');\r\n  }\r\n}\r\n\r\nexport function getRange(from, to) {\r\n  var arr = new Array(to - from + 1);\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] = from + i;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function sumByRow(matrix) {\r\n  var sum = Matrix.zeros(matrix.rows, 1);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumByColumn(matrix) {\r\n  var sum = Matrix.zeros(1, matrix.columns);\r\n  for (var i = 0; i < matrix.rows; ++i) {\r\n    for (var j = 0; j < matrix.columns; ++j) {\r\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\r\n    }\r\n  }\r\n  return sum;\r\n}\r\n\r\nexport function sumAll(matrix) {\r\n  var v = 0;\r\n  for (var i = 0; i < matrix.rows; i++) {\r\n    for (var j = 0; j < matrix.columns; j++) {\r\n      v += matrix.get(i, j);\r\n    }\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction checkNumber(name, value) {\r\n  if (typeof value !== 'number') {\r\n    throw new TypeError(`${name} must be a number`);\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class BaseView extends AbstractMatrix() {\r\n  constructor(matrix, rows, columns) {\r\n    super();\r\n    this.matrix = matrix;\r\n    this.rows = rows;\r\n    this.columns = columns;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixRowView extends BaseView {\r\n  constructor(matrix, row) {\r\n    super(matrix, 1, matrix.columns);\r\n    this.row = row;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.row, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.row, columnIndex);\r\n  }\r\n}\r\n","import { checkRange } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSubView extends BaseView {\r\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\r\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\r\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\r\n    this.startRow = startRow;\r\n    this.startColumn = startColumn;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex,\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.startRow + rowIndex,\r\n      this.startColumn + columnIndex\r\n    );\r\n  }\r\n}\r\n","import { checkIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices, columnIndices) {\r\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\r\n    super(matrix, indices.row.length, indices.column.length);\r\n    this.rowIndices = indices.row;\r\n    this.columnIndices = indices.column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex],\r\n      value\r\n    );\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(\r\n      this.rowIndices[rowIndex],\r\n      this.columnIndices[columnIndex]\r\n    );\r\n  }\r\n}\r\n","import { checkRowIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixRowSelectionView extends BaseView {\r\n  constructor(matrix, rowIndices) {\r\n    rowIndices = checkRowIndices(matrix, rowIndices);\r\n    super(matrix, rowIndices.length, matrix.columns);\r\n    this.rowIndices = rowIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\r\n  }\r\n}\r\n","import { checkColumnIndices } from '../util';\r\n\r\nimport BaseView from './base';\r\n\r\nexport default class MatrixColumnSelectionView extends BaseView {\r\n  constructor(matrix, columnIndices) {\r\n    columnIndices = checkColumnIndices(matrix, columnIndices);\r\n    super(matrix, matrix.rows, columnIndices.length);\r\n    this.columnIndices = columnIndices;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixColumnView extends BaseView {\r\n  constructor(matrix, column) {\r\n    super(matrix, matrix.rows, 1);\r\n    this.column = column;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.column, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex) {\r\n    return this.matrix.get(rowIndex, this.column);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipRowView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\r\n  }\r\n}\r\n","import BaseView from './base';\r\n\r\nexport default class MatrixFlipColumnView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.rows, matrix.columns);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\r\n  }\r\n}\r\n","import rescale from 'ml-array-rescale';\r\n\r\nimport LuDecomposition from './dc/lu';\r\nimport SvDecomposition from './dc/svd';\r\nimport {\r\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\r\n  checkRange, checkIndices,\r\n  sumByRow, sumByColumn, sumAll\r\n} from './util';\r\nimport MatrixTransposeView from './views/transpose';\r\nimport MatrixRowView from './views/row';\r\nimport MatrixSubView from './views/sub';\r\nimport MatrixSelectionView from './views/selection';\r\nimport MatrixRowSelectionView from './views/rowSelection';\r\nimport MatrixColumnSelectionView from './views/columnSelection';\r\nimport MatrixColumnView from './views/column';\r\nimport MatrixFlipRowView from './views/flipRow';\r\nimport MatrixFlipColumnView from './views/flipColumn';\r\n\r\nexport default function AbstractMatrix(superCtor) {\r\n  if (superCtor === undefined) superCtor = Object;\r\n\r\n  /**\r\n   * Real matrix\r\n   * @class Matrix\r\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\r\n   * 2D array containing the data or Matrix instance to clone\r\n   * @param {number} [nColumns] - Number of columns of the new matrix\r\n   */\r\n  class Matrix extends superCtor {\r\n    static get [Symbol.species]() {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Constructs a Matrix with the chosen dimensions from a 1D array\r\n     * @param {number} newRows - Number of rows\r\n     * @param {number} newColumns - Number of columns\r\n     * @param {Array} newData - A 1D array containing data for the matrix\r\n     * @return {Matrix} - The new matrix\r\n     */\r\n    static from1DArray(newRows, newColumns, newData) {\r\n      var length = newRows * newColumns;\r\n      if (length !== newData.length) {\r\n        throw new RangeError('Data length does not match given dimensions');\r\n      }\r\n      var newMatrix = new this(newRows, newColumns);\r\n      for (var row = 0; row < newRows; row++) {\r\n        for (var column = 0; column < newColumns; column++) {\r\n          newMatrix.set(row, column, newData[row * newColumns + column]);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a row vector, a matrix with only one row.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static rowVector(newData) {\r\n      var vector = new this(1, newData.length);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(0, i, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates a column vector, a matrix with only one column.\r\n         * @param {Array} newData - A 1D array containing data for the vector\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static columnVector(newData) {\r\n      var vector = new this(newData.length, 1);\r\n      for (var i = 0; i < newData.length; i++) {\r\n        vector.set(i, 0, newData[i]);\r\n      }\r\n      return vector;\r\n    }\r\n\r\n    /**\r\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static empty(rows, columns) {\r\n      return new this(rows, columns);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to zero.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static zeros(rows, columns) {\r\n      return this.empty(rows, columns).fill(0);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be set to one.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @return {Matrix} - The new matrix\r\n         */\r\n    static ones(rows, columns) {\r\n      return this.empty(rows, columns).fill(1);\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be randomly set.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static rand(rows, columns, rng) {\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          matrix.set(i, j, rng());\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a matrix with the given dimensions. Values will be random integers.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} columns - Number of columns\r\n         * @param {number} [maxValue=1000] - Maximum value\r\n         * @param {function} [rng=Math.random] - Random number generator\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    static randInt(rows, columns, maxValue, rng) {\r\n      if (maxValue === undefined) maxValue = 1000;\r\n      if (rng === undefined) rng = Math.random;\r\n      var matrix = this.empty(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          var value = Math.floor(rng() * maxValue);\r\n          matrix.set(i, j, value);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\r\n         * @param {number} rows - Number of rows\r\n         * @param {number} [columns=rows] - Number of columns\r\n         * @param {number} [value=1] - Value to fill the diagonal with\r\n         * @return {Matrix} - The new identity matrix\r\n         */\r\n    static eye(rows, columns, value) {\r\n      if (columns === undefined) columns = rows;\r\n      if (value === undefined) value = 1;\r\n      var min = Math.min(rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, value);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Creates a diagonal matrix based on the given array.\r\n         * @param {Array} data - Array containing the data for the diagonal\r\n         * @param {number} [rows] - Number of rows (Default: data.length)\r\n         * @param {number} [columns] - Number of columns (Default: rows)\r\n         * @return {Matrix} - The new diagonal matrix\r\n         */\r\n    static diag(data, rows, columns) {\r\n      var l = data.length;\r\n      if (rows === undefined) rows = l;\r\n      if (columns === undefined) columns = rows;\r\n      var min = Math.min(l, rows, columns);\r\n      var matrix = this.zeros(rows, columns);\r\n      for (var i = 0; i < min; i++) {\r\n        matrix.set(i, i, data[i]);\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static min(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\r\n         * @param {Matrix} matrix1\r\n         * @param {Matrix} matrix2\r\n         * @return {Matrix}\r\n         */\r\n    static max(matrix1, matrix2) {\r\n      matrix1 = this.checkMatrix(matrix1);\r\n      matrix2 = this.checkMatrix(matrix2);\r\n      var rows = matrix1.rows;\r\n      var columns = matrix1.columns;\r\n      var result = new this(rows, columns);\r\n      for (var i = 0; i < rows; i++) {\r\n        for (var j = 0; j < columns; j++) {\r\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Check that the provided value is a Matrix and tries to instantiate one if not\r\n         * @param {*} value - The value to check\r\n         * @return {Matrix}\r\n         */\r\n    static checkMatrix(value) {\r\n      return Matrix.isMatrix(value) ? value : new this(value);\r\n    }\r\n\r\n    /**\r\n         * Returns true if the argument is a Matrix, false otherwise\r\n         * @param {*} value - The value to check\r\n         * @return {boolean}\r\n         */\r\n    static isMatrix(value) {\r\n      return (value != null) && (value.klass === 'Matrix');\r\n    }\r\n\r\n    /**\r\n         * @prop {number} size - The number of elements in the matrix.\r\n         */\r\n    get size() {\r\n      return this.rows * this.columns;\r\n    }\r\n\r\n    /**\r\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\r\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\r\n         * @return {Matrix} this\r\n         */\r\n    apply(callback) {\r\n      if (typeof callback !== 'function') {\r\n        throw new TypeError('callback must be a function');\r\n      }\r\n      var ii = this.rows;\r\n      var jj = this.columns;\r\n      for (var i = 0; i < ii; i++) {\r\n        for (var j = 0; j < jj; j++) {\r\n          callback.call(this, i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new 1D array filled row by row with the matrix values\r\n         * @return {Array}\r\n         */\r\n    to1DArray() {\r\n      var array = new Array(this.size);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          array[i * this.columns + j] = this.get(i, j);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n         * Returns a 2D array containing a copy of the data\r\n         * @return {Array}\r\n         */\r\n    to2DArray() {\r\n      var copy = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        copy[i] = new Array(this.columns);\r\n        for (var j = 0; j < this.columns; j++) {\r\n          copy[i][j] = this.get(i, j);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row\r\n         */\r\n    isRowVector() {\r\n      return this.rows === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one column\r\n         */\r\n    isColumnVector() {\r\n      return this.columns === 1;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has one row or one column\r\n         */\r\n    isVector() {\r\n      return (this.rows === 1) || (this.columns === 1);\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix has the same number of rows and columns\r\n         */\r\n    isSquare() {\r\n      return this.rows === this.columns;\r\n    }\r\n\r\n    /**\r\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\r\n         */\r\n    isSymmetric() {\r\n      if (this.isSquare()) {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j <= i; j++) {\r\n            if (this.get(i, j) !== this.get(j, i)) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n          * @return true if the matrix is in echelon form\r\n          */\r\n    isEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isEchelonForm;\r\n    }\r\n\r\n    /**\r\n             * @return true if the matrix is in reduced echelon form\r\n             */\r\n    isReducedEchelonForm() {\r\n      let i = 0;\r\n      let j = 0;\r\n      let previousColumn = -1;\r\n      let isReducedEchelonForm = true;\r\n      let checked = false;\r\n      while ((i < this.rows) && (isReducedEchelonForm)) {\r\n        j = 0;\r\n        checked = false;\r\n        while ((j < this.columns) && (checked === false)) {\r\n          if (this.get(i, j) === 0) {\r\n            j++;\r\n          } else if ((this.get(i, j) === 1) && (j > previousColumn)) {\r\n            checked = true;\r\n            previousColumn = j;\r\n          } else {\r\n            isReducedEchelonForm = false;\r\n            checked = true;\r\n          }\r\n        }\r\n        for (let k = j + 1; k < this.rows; k++) {\r\n          if (this.get(i, k) !== 0) {\r\n            isReducedEchelonForm = false;\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n      return isReducedEchelonForm;\r\n    }\r\n\r\n    /**\r\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @param {number} value - The new value for the element\r\n         * @return {Matrix} this\r\n         */\r\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\r\n      throw new Error('set method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\r\n         * @abstract\r\n         * @param {number} rowIndex - Index of the row\r\n         * @param {number} columnIndex - Index of the column\r\n         * @return {number}\r\n         */\r\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\r\n      throw new Error('get method is unimplemented');\r\n    }\r\n\r\n    /**\r\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\r\n         * rows of the matrix, and colRep times the number of columns of the matrix\r\n         * @param {number} rowRep - Number of times the rows should be repeated\r\n         * @param {number} colRep - Number of times the columns should be re\r\n         * @return {Matrix}\r\n         * @example\r\n         * var matrix = new Matrix([[1,2]]);\r\n         * matrix.repeat(2); // [[1,2],[1,2]]\r\n         */\r\n    repeat(rowRep, colRep) {\r\n      rowRep = rowRep || 1;\r\n      colRep = colRep || 1;\r\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\r\n      for (var i = 0; i < rowRep; i++) {\r\n        for (var j = 0; j < colRep; j++) {\r\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\r\n        }\r\n      }\r\n      return matrix;\r\n    }\r\n\r\n    /**\r\n         * Fills the matrix with a given value. All elements will be set to this value.\r\n         * @param {number} value - New value\r\n         * @return {Matrix} this\r\n         */\r\n    fill(value) {\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, value);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Negates the matrix. All elements will be multiplied by (-1)\r\n         * @return {Matrix} this\r\n         */\r\n    neg() {\r\n      return this.mulS(-1);\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Array}\r\n         */\r\n    getRow(index) {\r\n      checkRowIndex(this, index);\r\n      var row = new Array(this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        row[i] = this.get(index, i);\r\n      }\r\n      return row;\r\n    }\r\n\r\n    /**\r\n         * Returns a new row vector from the given row index\r\n         * @param {number} index - Row index\r\n         * @return {Matrix}\r\n         */\r\n    getRowVector(index) {\r\n      return this.constructor.rowVector(this.getRow(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a row at the given index\r\n         * @param {number} index - Row index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setRow(index, array) {\r\n      checkRowIndex(this, index);\r\n      array = checkRowVector(this, array);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two rows\r\n         * @param {number} row1 - First row index\r\n         * @param {number} row2 - Second row index\r\n         * @return {Matrix} this\r\n         */\r\n    swapRows(row1, row2) {\r\n      checkRowIndex(this, row1);\r\n      checkRowIndex(this, row2);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var temp = this.get(row1, i);\r\n        this.set(row1, i, this.get(row2, i));\r\n        this.set(row2, i, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a new array from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Array}\r\n         */\r\n    getColumn(index) {\r\n      checkColumnIndex(this, index);\r\n      var column = new Array(this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        column[i] = this.get(i, index);\r\n      }\r\n      return column;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column vector from the given column index\r\n         * @param {number} index - Column index\r\n         * @return {Matrix}\r\n         */\r\n    getColumnVector(index) {\r\n      return this.constructor.columnVector(this.getColumn(index));\r\n    }\r\n\r\n    /**\r\n         * Sets a column at the given index\r\n         * @param {number} index - Column index\r\n         * @param {Array|Matrix} array - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    setColumn(index, array) {\r\n      checkColumnIndex(this, index);\r\n      array = checkColumnVector(this, array);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, array[i]);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Swaps two columns\r\n         * @param {number} column1 - First column index\r\n         * @param {number} column2 - Second column index\r\n         * @return {Matrix} this\r\n         */\r\n    swapColumns(column1, column2) {\r\n      checkColumnIndex(this, column1);\r\n      checkColumnIndex(this, column2);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var temp = this.get(i, column1);\r\n        this.set(i, column1, this.get(i, column2));\r\n        this.set(i, column2, temp);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each row\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each row by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divRowVector(vector) {\r\n      vector = checkRowVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[j]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Adds the values of a vector to each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    addColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) + vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Subtracts the values of a vector from each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    subColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) - vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a vector with each column\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) * vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Divides the values of each column by those of a vector\r\n         * @param {Array|Matrix} vector - Array or vector\r\n         * @return {Matrix} this\r\n         */\r\n    divColumnVector(vector) {\r\n      vector = checkColumnVector(this, vector);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          this.set(i, j, this.get(i, j) / vector[i]);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a row with a scalar\r\n         * @param {number} index - Row index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulRow(index, value) {\r\n      checkRowIndex(this, index);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.set(index, i, this.get(index, i) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Multiplies the values of a column with a scalar\r\n         * @param {number} index - Column index\r\n         * @param {number} value\r\n         * @return {Matrix} this\r\n         */\r\n    mulColumn(index, value) {\r\n      checkColumnIndex(this, index);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.set(i, index, this.get(i, index) * value);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of the matrix\r\n         * @return {number}\r\n         */\r\n    max() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value\r\n         * @return {Array}\r\n         */\r\n    maxIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) > v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of the matrix\r\n         * @return {number}\r\n         */\r\n    min() {\r\n      var v = this.get(0, 0);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n          }\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value\r\n         * @return {Array}\r\n         */\r\n    minIndex() {\r\n      var v = this.get(0, 0);\r\n      var idx = [0, 0];\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          if (this.get(i, j) < v) {\r\n            v = this.get(i, j);\r\n            idx[0] = i;\r\n            idx[1] = j;\r\n          }\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    maxRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    maxRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) > v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {number}\r\n         */\r\n    minRow(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one row\r\n         * @param {number} row - Row index\r\n         * @return {Array}\r\n         */\r\n    minRowIndex(row) {\r\n      checkRowIndex(this, row);\r\n      var v = this.get(row, 0);\r\n      var idx = [row, 0];\r\n      for (var i = 1; i < this.columns; i++) {\r\n        if (this.get(row, i) < v) {\r\n          v = this.get(row, i);\r\n          idx[1] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    maxColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the maximum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    maxColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) > v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {number}\r\n         */\r\n    minColumn(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n        }\r\n      }\r\n      return v;\r\n    }\r\n\r\n    /**\r\n         * Returns the index of the minimum value of one column\r\n         * @param {number} column - Column index\r\n         * @return {Array}\r\n         */\r\n    minColumnIndex(column) {\r\n      checkColumnIndex(this, column);\r\n      var v = this.get(0, column);\r\n      var idx = [0, column];\r\n      for (var i = 1; i < this.rows; i++) {\r\n        if (this.get(i, column) < v) {\r\n          v = this.get(i, column);\r\n          idx[0] = i;\r\n        }\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    /**\r\n         * Returns an array containing the diagonal values of the matrix\r\n         * @return {Array}\r\n         */\r\n    diag() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var diag = new Array(min);\r\n      for (var i = 0; i < min; i++) {\r\n        diag[i] = this.get(i, i);\r\n      }\r\n      return diag;\r\n    }\r\n\r\n    /**\r\n         * Returns the sum by the argument given, if no argument given,\r\n         * it returns the sum of all elements of the matrix.\r\n         * @param {string} by - sum by 'row' or 'column'.\r\n         * @return {Matrix|number}\r\n         */\r\n    sum(by) {\r\n      switch (by) {\r\n        case 'row':\r\n          return sumByRow(this);\r\n        case 'column':\r\n          return sumByColumn(this);\r\n        default:\r\n          return sumAll(this);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns the mean of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    mean() {\r\n      return this.sum() / this.size;\r\n    }\r\n\r\n    /**\r\n         * Returns the product of all elements of the matrix\r\n         * @return {number}\r\n         */\r\n    prod() {\r\n      var prod = 1;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          prod *= this.get(i, j);\r\n        }\r\n      }\r\n      return prod;\r\n    }\r\n\r\n    /**\r\n         * Returns the norm of a matrix.\r\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\r\n         * @return {number}\r\n         */\r\n    norm(type = 'frobenius') {\r\n      var result = 0;\r\n      if (type === 'max') {\r\n        return this.max();\r\n      } else if (type === 'frobenius') {\r\n        for (var i = 0; i < this.rows; i++) {\r\n          for (var j = 0; j < this.columns; j++) {\r\n            result = result + this.get(i, j) * this.get(i, j);\r\n          }\r\n        }\r\n        return Math.sqrt(result);\r\n      } else {\r\n        throw new RangeError(`unknown norm type: ${type}`);\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\r\n         * @return {Matrix} this\r\n         */\r\n    cumulativeSum() {\r\n      var sum = 0;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          sum += this.get(i, j);\r\n          this.set(i, j, sum);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Computes the dot (scalar) product between the matrix and another\r\n         * @param {Matrix} vector2 vector\r\n         * @return {number}\r\n         */\r\n    dot(vector2) {\r\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\r\n      var vector1 = this.to1DArray();\r\n      if (vector1.length !== vector2.length) {\r\n        throw new RangeError('vectors do not have the same size');\r\n      }\r\n      var dot = 0;\r\n      for (var i = 0; i < vector1.length; i++) {\r\n        dot += vector1[i] * vector2[i];\r\n      }\r\n      return dot;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between this and other\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    mmul(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n      if (this.columns !== other.rows) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\r\n      }\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m, p);\r\n\r\n      var Bcolj = new Array(n);\r\n      for (var j = 0; j < p; j++) {\r\n        for (var k = 0; k < n; k++) {\r\n          Bcolj[k] = other.get(k, j);\r\n        }\r\n\r\n        for (var i = 0; i < m; i++) {\r\n          var s = 0;\r\n          for (k = 0; k < n; k++) {\r\n            s += this.get(i, k) * Bcolj[k];\r\n          }\r\n\r\n          result.set(i, j, s);\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    strassen2x2(other) {\r\n      var result = new this.constructor[Symbol.species](2, 2);\r\n      const a11 = this.get(0, 0);\r\n      const b11 = other.get(0, 0);\r\n      const a12 = this.get(0, 1);\r\n      const b12 = other.get(0, 1);\r\n      const a21 = this.get(1, 0);\r\n      const b21 = other.get(1, 0);\r\n      const a22 = this.get(1, 1);\r\n      const b22 = other.get(1, 1);\r\n\r\n      // Compute intermediate values.\r\n      const m1 = (a11 + a22) * (b11 + b22);\r\n      const m2 = (a21 + a22) * b11;\r\n      const m3 = a11 * (b12 - b22);\r\n      const m4 = a22 * (b21 - b11);\r\n      const m5 = (a11 + a12) * b22;\r\n      const m6 = (a21 - a11) * (b11 + b12);\r\n      const m7 = (a12 - a22) * (b21 + b22);\r\n\r\n      // Combine intermediate values into the output.\r\n      const c00 = m1 + m4 - m5 + m7;\r\n      const c01 = m3 + m5;\r\n      const c10 = m2 + m4;\r\n      const c11 = m1 - m2 + m3 + m6;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      return result;\r\n    }\r\n\r\n    strassen3x3(other) {\r\n      var result = new this.constructor[Symbol.species](3, 3);\r\n\r\n      const a00 = this.get(0, 0);\r\n      const a01 = this.get(0, 1);\r\n      const a02 = this.get(0, 2);\r\n      const a10 = this.get(1, 0);\r\n      const a11 = this.get(1, 1);\r\n      const a12 = this.get(1, 2);\r\n      const a20 = this.get(2, 0);\r\n      const a21 = this.get(2, 1);\r\n      const a22 = this.get(2, 2);\r\n\r\n      const b00 = other.get(0, 0);\r\n      const b01 = other.get(0, 1);\r\n      const b02 = other.get(0, 2);\r\n      const b10 = other.get(1, 0);\r\n      const b11 = other.get(1, 1);\r\n      const b12 = other.get(1, 2);\r\n      const b20 = other.get(2, 0);\r\n      const b21 = other.get(2, 1);\r\n      const b22 = other.get(2, 2);\r\n\r\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\r\n      const m2 = (a00 - a10) * (-b01 + b11);\r\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\r\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\r\n      const m5 = (a10 + a11) * (-b00 + b01);\r\n      const m6 = a00 * b00;\r\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\r\n      const m8 = (-a00 + a20) * (b02 - b12);\r\n      const m9 = (a20 + a21) * (-b00 + b02);\r\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\r\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\r\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\r\n      const m13 = (a02 - a22) * (b11 - b21);\r\n      const m14 = a02 * b20;\r\n      const m15 = (a21 + a22) * (-b20 + b21);\r\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\r\n      const m17 = (a02 - a12) * (b12 - b22);\r\n      const m18 = (a11 + a12) * (-b20 + b22);\r\n      const m19 = a01 * b10;\r\n      const m20 = a12 * b21;\r\n      const m21 = a10 * b02;\r\n      const m22 = a20 * b01;\r\n      const m23 = a22 * b22;\r\n\r\n      const c00 = m6 + m14 + m19;\r\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\r\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\r\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\r\n      const c11 = m2 + m4 + m5 + m6 + m20;\r\n      const c12 = m14 + m16 + m17 + m18 + m21;\r\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\r\n      const c21 = m12 + m13 + m14 + m15 + m22;\r\n      const c22 = m6 + m7 + m8 + m9 + m23;\r\n\r\n      result.set(0, 0, c00);\r\n      result.set(0, 1, c01);\r\n      result.set(0, 2, c02);\r\n      result.set(1, 0, c10);\r\n      result.set(1, 1, c11);\r\n      result.set(1, 2, c12);\r\n      result.set(2, 0, c20);\r\n      result.set(2, 1, c21);\r\n      result.set(2, 2, c22);\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\r\n         * @param {Matrix} y\r\n         * @return {Matrix}\r\n         */\r\n    mmulStrassen(y) {\r\n      var x = this.clone();\r\n      var r1 = x.rows;\r\n      var c1 = x.columns;\r\n      var r2 = y.rows;\r\n      var c2 = y.columns;\r\n      if (c1 !== r2) {\r\n        // eslint-disable-next-line no-console\r\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\r\n      }\r\n\r\n      // Put a matrix into the top left of a matrix of zeros.\r\n      // `rows` and `cols` are the dimensions of the output matrix.\r\n      function embed(mat, rows, cols) {\r\n        var r = mat.rows;\r\n        var c = mat.columns;\r\n        if ((r === rows) && (c === cols)) {\r\n          return mat;\r\n        } else {\r\n          var resultat = Matrix.zeros(rows, cols);\r\n          resultat = resultat.setSubMatrix(mat, 0, 0);\r\n          return resultat;\r\n        }\r\n      }\r\n\r\n\r\n      // Make sure both matrices are the same size.\r\n      // This is exclusively for simplicity:\r\n      // this algorithm can be implemented with matrices of different sizes.\r\n\r\n      var r = Math.max(r1, r2);\r\n      var c = Math.max(c1, c2);\r\n      x = embed(x, r, c);\r\n      y = embed(y, r, c);\r\n\r\n      // Our recursive multiplication function.\r\n      function blockMult(a, b, rows, cols) {\r\n        // For small matrices, resort to naive multiplication.\r\n        if (rows <= 512 || cols <= 512) {\r\n          return a.mmul(b); // a is equivalent to this\r\n        }\r\n\r\n        // Apply dynamic padding.\r\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\r\n          a = embed(a, rows + 1, cols + 1);\r\n          b = embed(b, rows + 1, cols + 1);\r\n        } else if (rows % 2 === 1) {\r\n          a = embed(a, rows + 1, cols);\r\n          b = embed(b, rows + 1, cols);\r\n        } else if (cols % 2 === 1) {\r\n          a = embed(a, rows, cols + 1);\r\n          b = embed(b, rows, cols + 1);\r\n        }\r\n\r\n        var halfRows = parseInt(a.rows / 2, 10);\r\n        var halfCols = parseInt(a.columns / 2, 10);\r\n        // Subdivide input matrices.\r\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\r\n\r\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\r\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\r\n\r\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\r\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\r\n\r\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\r\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\r\n\r\n        // Compute intermediate values.\r\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\r\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\r\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\r\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\r\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\r\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\r\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\r\n\r\n        // Combine intermediate values into the output.\r\n        var c11 = Matrix.add(m1, m4);\r\n        c11.sub(m5);\r\n        c11.add(m7);\r\n        var c12 = Matrix.add(m3, m5);\r\n        var c21 = Matrix.add(m2, m4);\r\n        var c22 = Matrix.sub(m1, m2);\r\n        c22.add(m3);\r\n        c22.add(m6);\r\n\r\n        // Crop output to the desired size (undo dynamic padding).\r\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\r\n        resultat = resultat.setSubMatrix(c11, 0, 0);\r\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\r\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\r\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\r\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\r\n      }\r\n      return blockMult(x, y, r, c);\r\n    }\r\n\r\n    /**\r\n         * Returns a row-by-row scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The scaled matrix\r\n         */\r\n    scaleRows(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        var scaled = rescale(this.getRow(i), { min, max });\r\n        newMatrix.setRow(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a new column-by-column scaled matrix\r\n         * @param {number} [min=0] - Minimum scaled value\r\n         * @param {number} [max=1] - Maximum scaled value\r\n         * @return {Matrix} - The new scaled matrix\r\n         * @example\r\n         * var matrix = new Matrix([[1,2],[-1,0]]);\r\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\r\n         */\r\n    scaleColumns(min, max) {\r\n      min = min === undefined ? 0 : min;\r\n      max = max === undefined ? 1 : max;\r\n      if (min >= max) {\r\n        throw new RangeError('min should be strictly smaller than max');\r\n      }\r\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\r\n      for (var i = 0; i < this.columns; i++) {\r\n        var scaled = rescale(this.getColumn(i), {\r\n          min: min,\r\n          max: max\r\n        });\r\n        newMatrix.setColumn(i, scaled);\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n\r\n    /**\r\n         * Returns the Kronecker product (also known as tensor product) between this and other\r\n         * See https://en.wikipedia.org/wiki/Kronecker_product\r\n         * @param {Matrix} other\r\n         * @return {Matrix}\r\n         */\r\n    kroneckerProduct(other) {\r\n      other = this.constructor.checkMatrix(other);\r\n\r\n      var m = this.rows;\r\n      var n = this.columns;\r\n      var p = other.rows;\r\n      var q = other.columns;\r\n\r\n      var result = new this.constructor[Symbol.species](m * p, n * q);\r\n      for (var i = 0; i < m; i++) {\r\n        for (var j = 0; j < n; j++) {\r\n          for (var k = 0; k < p; k++) {\r\n            for (var l = 0; l < q; l++) {\r\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Transposes the matrix and returns a new one containing the result\r\n         * @return {Matrix}\r\n         */\r\n    transpose() {\r\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\r\n      for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n          result.set(j, i, this.get(i, j));\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n         * Sorts the rows (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortRows(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.rows; i++) {\r\n        this.setRow(i, this.getRow(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Sorts the columns (in place)\r\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\r\n         * @return {Matrix} this\r\n         */\r\n    sortColumns(compareFunction) {\r\n      if (compareFunction === undefined) compareFunction = compareNumbers;\r\n      for (var i = 0; i < this.columns; i++) {\r\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix\r\n         * @param {number} startRow - First row index\r\n         * @param {number} endRow - Last row index\r\n         * @param {number} startColumn - First column index\r\n         * @param {number} endColumn - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrix(startRow, endRow, startColumn, endColumn) {\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\r\n      for (var i = startRow; i <= endRow; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of row indices\r\n         * @param {Array} indices - Array containing the row indices\r\n         * @param {number} [startColumn = 0] - First column index\r\n         * @param {number} [endColumn = this.columns-1] - Last column index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixRow(indices, startColumn, endColumn) {\r\n      if (startColumn === undefined) startColumn = 0;\r\n      if (endColumn === undefined) endColumn = this.columns - 1;\r\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startColumn; j <= endColumn; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.rows) {\r\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns a subset of the matrix based on an array of column indices\r\n         * @param {Array} indices - Array containing the column indices\r\n         * @param {number} [startRow = 0] - First row index\r\n         * @param {number} [endRow = this.rows-1] - Last row index\r\n         * @return {Matrix}\r\n         */\r\n    subMatrixColumn(indices, startRow, endRow) {\r\n      if (startRow === undefined) startRow = 0;\r\n      if (endRow === undefined) endRow = this.rows - 1;\r\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\r\n        throw new RangeError('Argument out of range');\r\n      }\r\n\r\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\r\n      for (var i = 0; i < indices.length; i++) {\r\n        for (var j = startRow; j <= endRow; j++) {\r\n          if (indices[i] < 0 || indices[i] >= this.columns) {\r\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\r\n          }\r\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Set a part of the matrix to the given sub-matrix\r\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\r\n         * @param {number} startRow - The index of the first row to set\r\n         * @param {number} startColumn - The index of the first column to set\r\n         * @return {Matrix}\r\n         */\r\n    setSubMatrix(matrix, startRow, startColumn) {\r\n      matrix = this.constructor.checkMatrix(matrix);\r\n      var endRow = startRow + matrix.rows - 1;\r\n      var endColumn = startColumn + matrix.columns - 1;\r\n      checkRange(this, startRow, endRow, startColumn, endColumn);\r\n      for (var i = 0; i < matrix.rows; i++) {\r\n        for (var j = 0; j < matrix.columns; j++) {\r\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n         * Return a new matrix based on a selection of rows and columns\r\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\r\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\r\n         * @return {Matrix} The new matrix\r\n         */\r\n    selection(rowIndices, columnIndices) {\r\n      var indices = checkIndices(this, rowIndices, columnIndices);\r\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\r\n      for (var i = 0; i < indices.row.length; i++) {\r\n        var rowIndex = indices.row[i];\r\n        for (var j = 0; j < indices.column.length; j++) {\r\n          var columnIndex = indices.column[j];\r\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n\r\n    /**\r\n         * Returns the trace of the matrix (sum of the diagonal elements)\r\n         * @return {number}\r\n         */\r\n    trace() {\r\n      var min = Math.min(this.rows, this.columns);\r\n      var trace = 0;\r\n      for (var i = 0; i < min; i++) {\r\n        trace += this.get(i, i);\r\n      }\r\n      return trace;\r\n    }\r\n\r\n    /*\r\n         Matrix views\r\n         */\r\n\r\n    /**\r\n         * Returns a view of the transposition of the matrix\r\n         * @return {MatrixTransposeView}\r\n         */\r\n    transposeView() {\r\n      return new MatrixTransposeView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row vector with the given index\r\n         * @param {number} row - row index of the vector\r\n         * @return {MatrixRowView}\r\n         */\r\n    rowView(row) {\r\n      checkRowIndex(this, row);\r\n      return new MatrixRowView(this, row);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column vector with the given index\r\n         * @param {number} column - column index of the vector\r\n         * @return {MatrixColumnView}\r\n         */\r\n    columnView(column) {\r\n      checkColumnIndex(this, column);\r\n      return new MatrixColumnView(this, column);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the row axis\r\n         * @return {MatrixFlipRowView}\r\n         */\r\n    flipRowView() {\r\n      return new MatrixFlipRowView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the matrix flipped in the column axis\r\n         * @return {MatrixFlipColumnView}\r\n         */\r\n    flipColumnView() {\r\n      return new MatrixFlipColumnView(this);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of a submatrix giving the index boundaries\r\n         * @param {number} startRow - first row index of the submatrix\r\n         * @param {number} endRow - last row index of the submatrix\r\n         * @param {number} startColumn - first column index of the submatrix\r\n         * @param {number} endColumn - last column index of the submatrix\r\n         * @return {MatrixSubView}\r\n         */\r\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\r\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the cross of the row indices and the column indices\r\n         * @example\r\n         * // resulting vector is [[2], [2]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\r\n         * @param {Array<number>} rowIndices\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixSelectionView}\r\n         */\r\n    selectionView(rowIndices, columnIndices) {\r\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the row indices\r\n         * @example\r\n         * // resulting vector is [[1,2,3], [1,2,3]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\r\n         * @param {Array<number>} rowIndices\r\n         * @return {MatrixRowSelectionView}\r\n         */\r\n    rowSelectionView(rowIndices) {\r\n      return new MatrixRowSelectionView(this, rowIndices);\r\n    }\r\n\r\n    /**\r\n         * Returns a view of the column indices\r\n         * @example\r\n         * // resulting vector is [[2, 2], [5, 5]]\r\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\r\n         * @param {Array<number>} columnIndices\r\n         * @return {MatrixColumnSelectionView}\r\n         */\r\n    columnSelectionView(columnIndices) {\r\n      return new MatrixColumnSelectionView(this, columnIndices);\r\n    }\r\n\r\n\r\n    /**\r\n        * Calculates and returns the determinant of a matrix as a Number\r\n        * @example\r\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\r\n        * @return {number}\r\n        */\r\n    det() {\r\n      if (this.isSquare()) {\r\n        var a, b, c, d;\r\n        if (this.columns === 2) {\r\n          // 2 x 2 matrix\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(1, 0);\r\n          d = this.get(1, 1);\r\n\r\n          return a * d - (b * c);\r\n        } else if (this.columns === 3) {\r\n          // 3 x 3 matrix\r\n          var subMatrix0, subMatrix1, subMatrix2;\r\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\r\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\r\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\r\n          a = this.get(0, 0);\r\n          b = this.get(0, 1);\r\n          c = this.get(0, 2);\r\n\r\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\r\n        } else {\r\n          // general purpose determinant using the LU decomposition\r\n          return new LuDecomposition(this).determinant;\r\n        }\r\n      } else {\r\n        throw Error('Determinant can only be calculated for a square matrix.');\r\n      }\r\n    }\r\n\r\n    /**\r\n         * Returns inverse of a matrix if it exists or the pseudoinverse\r\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\r\n         * @return {Matrix} the (pseudo)inverted matrix.\r\n         */\r\n    pseudoInverse(threshold) {\r\n      if (threshold === undefined) threshold = Number.EPSILON;\r\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\r\n\r\n      var U = svdSolution.leftSingularVectors;\r\n      var V = svdSolution.rightSingularVectors;\r\n      var s = svdSolution.diagonal;\r\n\r\n      for (var i = 0; i < s.length; i++) {\r\n        if (Math.abs(s[i]) > threshold) {\r\n          s[i] = 1.0 / s[i];\r\n        } else {\r\n          s[i] = 0.0;\r\n        }\r\n      }\r\n\r\n      // convert list to diagonal\r\n      s = this.constructor[Symbol.species].diag(s);\r\n      return V.mmul(s.mmul(U.transposeView()));\r\n    }\r\n\r\n    /**\r\n         * Creates an exact and independent copy of the matrix\r\n         * @return {Matrix}\r\n         */\r\n    clone() {\r\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\r\n      for (var row = 0; row < this.rows; row++) {\r\n        for (var column = 0; column < this.columns; column++) {\r\n          newMatrix.set(row, column, this.get(row, column));\r\n        }\r\n      }\r\n      return newMatrix;\r\n    }\r\n  }\r\n\r\n  Matrix.prototype.klass = 'Matrix';\r\n\r\n  function compareNumbers(a, b) {\r\n    return a - b;\r\n  }\r\n\r\n  /*\r\n     Synonyms\r\n     */\r\n\r\n  Matrix.random = Matrix.rand;\r\n  Matrix.diagonal = Matrix.diag;\r\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\r\n  Matrix.identity = Matrix.eye;\r\n  Matrix.prototype.negate = Matrix.prototype.neg;\r\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\r\n  Matrix.prototype.determinant = Matrix.prototype.det;\r\n\r\n  /*\r\n     Add dynamically instance and static methods for mathematical operations\r\n     */\r\n\r\n  var inplaceOperator = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var inplaceOperatorScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% value);\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceOperatorMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticOperator = `\r\n(function %name%(matrix, value) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(value);\r\n})\r\n`;\r\n\r\n  var inplaceMethod = `\r\n(function %name%() {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethod = `\r\n(function %name%(matrix) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%();\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithArgs = `\r\n(function %name%(%args%) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), %args%));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var staticMethodWithArgs = `\r\n(function %name%(matrix, %args%) {\r\n    var newMatrix = new this[Symbol.species](matrix);\r\n    return newMatrix.%name%(%args%);\r\n})\r\n`;\r\n\r\n\r\n  var inplaceMethodWithOneArgScalar = `\r\n(function %name%S(value) {\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), value));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n  var inplaceMethodWithOneArgMatrix = `\r\n(function %name%M(matrix) {\r\n    matrix = this.constructor.checkMatrix(matrix);\r\n    if (this.rows !== matrix.rows ||\r\n        this.columns !== matrix.columns) {\r\n        throw new RangeError('Matrices dimensions must be equal');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n        for (var j = 0; j < this.columns; j++) {\r\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\r\n        }\r\n    }\r\n    return this;\r\n})\r\n`;\r\n\r\n  var inplaceMethodWithOneArg = `\r\n(function %name%(value) {\r\n    if (typeof value === 'number') return this.%name%S(value);\r\n    return this.%name%M(value);\r\n})\r\n`;\r\n\r\n  var staticMethodWithOneArg = staticMethodWithArgs;\r\n\r\n  var operators = [\r\n    // Arithmetic operators\r\n    ['+', 'add'],\r\n    ['-', 'sub', 'subtract'],\r\n    ['*', 'mul', 'multiply'],\r\n    ['/', 'div', 'divide'],\r\n    ['%', 'mod', 'modulus'],\r\n    // Bitwise operators\r\n    ['&', 'and'],\r\n    ['|', 'or'],\r\n    ['^', 'xor'],\r\n    ['<<', 'leftShift'],\r\n    ['>>', 'signPropagatingRightShift'],\r\n    ['>>>', 'rightShift', 'zeroFillRightShift']\r\n  ];\r\n\r\n  var i;\r\n  var eval2 = eval; // eslint-disable-line no-eval\r\n  for (var operator of operators) {\r\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\r\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\r\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\r\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\r\n    for (i = 1; i < operator.length; i++) {\r\n      Matrix.prototype[operator[i]] = inplaceOp;\r\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\r\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\r\n      Matrix[operator[i]] = staticOp;\r\n    }\r\n  }\r\n\r\n  var methods = [['~', 'not']];\r\n\r\n  [\r\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\r\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\r\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\r\n  ].forEach(function (mathMethod) {\r\n    methods.push([`Math.${mathMethod}`, mathMethod]);\r\n  });\r\n\r\n  for (var method of methods) {\r\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\r\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\r\n    for (i = 1; i < method.length; i++) {\r\n      Matrix.prototype[method[i]] = inplaceMeth;\r\n      Matrix[method[i]] = staticMeth;\r\n    }\r\n  }\r\n\r\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\r\n\r\n  for (var methodWithArg of methodsWithArgs) {\r\n    var args = 'arg0';\r\n    for (i = 1; i < methodWithArg[1]; i++) {\r\n      args += `, arg${i}`;\r\n    }\r\n    if (methodWithArg[1] !== 1) {\r\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\r\n        name: methodWithArg[2],\r\n        method: methodWithArg[0],\r\n        args: args\r\n      }));\r\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\r\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\r\n      }\r\n    } else {\r\n      var tmplVar = {\r\n        name: methodWithArg[2],\r\n        args: args,\r\n        method: methodWithArg[0]\r\n      };\r\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\r\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\r\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\r\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\r\n      for (i = 2; i < methodWithArg.length; i++) {\r\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\r\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\r\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\r\n        Matrix[methodWithArg[i]] = staticMethod2;\r\n      }\r\n    }\r\n  }\r\n\r\n  function fillTemplateFunction(template, values) {\r\n    for (var value in values) {\r\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\r\n    }\r\n    return template;\r\n  }\r\n\r\n  return Matrix;\r\n}\r\n","import AbstractMatrix from './abstractMatrix';\r\nimport {\r\n  checkColumnIndex,\r\n  checkColumnVector,\r\n  checkRowIndex,\r\n  checkRowVector\r\n} from './util';\r\n\r\nexport default class Matrix extends AbstractMatrix(Array) {\r\n  constructor(nRows, nColumns) {\r\n    var i;\r\n    if (arguments.length === 1 && typeof nRows === 'number') {\r\n      return new Array(nRows);\r\n    }\r\n    if (Matrix.isMatrix(nRows)) {\r\n      return nRows.clone();\r\n    } else if (Number.isInteger(nRows) && nRows > 0) {\r\n      // Create an empty matrix\r\n      super(nRows);\r\n      if (Number.isInteger(nColumns) && nColumns > 0) {\r\n        for (i = 0; i < nRows; i++) {\r\n          this[i] = new Array(nColumns);\r\n        }\r\n      } else {\r\n        throw new TypeError('nColumns must be a positive integer');\r\n      }\r\n    } else if (Array.isArray(nRows)) {\r\n      // Copy the values from the 2D array\r\n      const matrix = nRows;\r\n      nRows = matrix.length;\r\n      nColumns = matrix[0].length;\r\n      if (typeof nColumns !== 'number' || nColumns === 0) {\r\n        throw new TypeError(\r\n          'Data must be a 2D array with at least one element'\r\n        );\r\n      }\r\n      super(nRows);\r\n      for (i = 0; i < nRows; i++) {\r\n        if (matrix[i].length !== nColumns) {\r\n          throw new RangeError('Inconsistent array dimensions');\r\n        }\r\n        this[i] = [].concat(matrix[i]);\r\n      }\r\n    } else {\r\n      throw new TypeError(\r\n        'First argument must be a positive number or an array'\r\n      );\r\n    }\r\n    this.rows = nRows;\r\n    this.columns = nColumns;\r\n    return this;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this[rowIndex][columnIndex];\r\n  }\r\n\r\n  /**\r\n   * Removes a row from the given index\r\n   * @param {number} index - Row index\r\n   * @return {Matrix} this\r\n   */\r\n  removeRow(index) {\r\n    checkRowIndex(this, index);\r\n    if (this.rows === 1) {\r\n      throw new RangeError('A matrix cannot have less than one row');\r\n    }\r\n    this.splice(index, 1);\r\n    this.rows -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a row at the given index\r\n   * @param {number} [index = this.rows] - Row index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addRow(index, array) {\r\n    if (array === undefined) {\r\n      array = index;\r\n      index = this.rows;\r\n    }\r\n    checkRowIndex(this, index, true);\r\n    array = checkRowVector(this, array, true);\r\n    this.splice(index, 0, array);\r\n    this.rows += 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes a column from the given index\r\n   * @param {number} index - Column index\r\n   * @return {Matrix} this\r\n   */\r\n  removeColumn(index) {\r\n    checkColumnIndex(this, index);\r\n    if (this.columns === 1) {\r\n      throw new RangeError('A matrix cannot have less than one column');\r\n    }\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 1);\r\n    }\r\n    this.columns -= 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a column at the given index\r\n   * @param {number} [index = this.columns] - Column index\r\n   * @param {Array|Matrix} array - Array or vector\r\n   * @return {Matrix} this\r\n   */\r\n  addColumn(index, array) {\r\n    if (typeof array === 'undefined') {\r\n      array = index;\r\n      index = this.columns;\r\n    }\r\n    checkColumnIndex(this, index, true);\r\n    array = checkColumnVector(this, array);\r\n    for (var i = 0; i < this.rows; i++) {\r\n      this[i].splice(index, 0, array[i]);\r\n    }\r\n    this.columns += 1;\r\n    return this;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix1D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix1D\r\n   * @param {Array<number>} data\r\n   * @param {object} [options]\r\n   * @param {object} [options.rows = 1]\r\n   */\r\n  constructor(data, options = {}) {\r\n    const { rows = 1 } = options;\r\n\r\n    if (data.length % rows !== 0) {\r\n      throw new Error('the data length is not divisible by the number of rows');\r\n    }\r\n    super();\r\n    this.rows = rows;\r\n    this.columns = data.length / rows;\r\n    this.data = data;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    this.data[index] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    var index = this._calculateIndex(rowIndex, columnIndex);\r\n    return this.data[index];\r\n  }\r\n\r\n  _calculateIndex(row, column) {\r\n    return row * this.columns + column;\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import AbstractMatrix from '../abstractMatrix';\r\nimport Matrix from '../matrix';\r\n\r\nexport default class WrapperMatrix2D extends AbstractMatrix() {\r\n  /**\r\n   * @class WrapperMatrix2D\r\n   * @param {Array<Array<number>>} data\r\n   */\r\n  constructor(data) {\r\n    super();\r\n    this.data = data;\r\n    this.rows = data.length;\r\n    this.columns = data[0].length;\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.data[rowIndex][columnIndex] = value;\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.data[rowIndex][columnIndex];\r\n  }\r\n\r\n  static get [Symbol.species]() {\r\n    return Matrix;\r\n  }\r\n}\r\n","import WrapperMatrix1D from './WrapperMatrix1D';\r\nimport WrapperMatrix2D from './WrapperMatrix2D';\r\n\r\n/**\r\n * @param {Array<Array<number>>|Array<number>} array\r\n * @param {object} [options]\r\n * @param {object} [options.rows = 1]\r\n * @return {WrapperMatrix1D|WrapperMatrix2D}\r\n */\r\nexport function wrap(array, options) {\r\n  if (Array.isArray(array)) {\r\n    if (array[0] && Array.isArray(array[0])) {\r\n      return new WrapperMatrix2D(array);\r\n    } else {\r\n      return new WrapperMatrix1D(array, options);\r\n    }\r\n  } else {\r\n    throw new Error('the argument is not an array');\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse } from './util';\r\n\r\n/**\r\n * @class QrDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class QrDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var qr = value.clone();\r\n    var m = value.rows;\r\n    var n = value.columns;\r\n    var rdiag = new Array(n);\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      var nrm = 0;\r\n      for (i = k; i < m; i++) {\r\n        nrm = hypotenuse(nrm, qr.get(i, k));\r\n      }\r\n      if (nrm !== 0) {\r\n        if (qr.get(k, k) < 0) {\r\n          nrm = -nrm;\r\n        }\r\n        for (i = k; i < m; i++) {\r\n          qr.set(i, k, qr.get(i, k) / nrm);\r\n        }\r\n        qr.set(k, k, qr.get(k, k) + 1);\r\n        for (j = k + 1; j < n; j++) {\r\n          s = 0;\r\n          for (i = k; i < m; i++) {\r\n            s += qr.get(i, k) * qr.get(i, j);\r\n          }\r\n          s = -s / qr.get(k, k);\r\n          for (i = k; i < m; i++) {\r\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\r\n          }\r\n        }\r\n      }\r\n      rdiag[k] = -nrm;\r\n    }\r\n\r\n    this.QR = qr;\r\n    this.Rdiag = rdiag;\r\n  }\r\n\r\n  /**\r\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\r\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\r\n   * var qr = QrDecomposition(A);\r\n   * var x = qr.solve(b);\r\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\r\n   * @return {Matrix} - The vector x\r\n   */\r\n  solve(value) {\r\n    value = Matrix.checkMatrix(value);\r\n\r\n    var qr = this.QR;\r\n    var m = qr.rows;\r\n\r\n    if (value.rows !== m) {\r\n      throw new Error('Matrix row dimensions must agree');\r\n    }\r\n    if (!this.isFullRank()) {\r\n      throw new Error('Matrix is rank deficient');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var X = value.clone();\r\n    var n = qr.columns;\r\n    var i, j, k, s;\r\n\r\n    for (k = 0; k < n; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        s = 0;\r\n        for (i = k; i < m; i++) {\r\n          s += qr[i][k] * X[i][j];\r\n        }\r\n        s = -s / qr[k][k];\r\n        for (i = k; i < m; i++) {\r\n          X[i][j] += s * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n    for (k = n - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        X[k][j] /= this.Rdiag[k];\r\n      }\r\n      for (i = 0; i < k; i++) {\r\n        for (j = 0; j < count; j++) {\r\n          X[i][j] -= X[k][j] * qr[i][k];\r\n        }\r\n      }\r\n    }\r\n\r\n    return X.subMatrix(0, n - 1, 0, count - 1);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isFullRank() {\r\n    var columns = this.QR.columns;\r\n    for (var i = 0; i < columns; i++) {\r\n      if (this.Rdiag[i] === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get upperTriangularMatrix() {\r\n    var qr = this.QR;\r\n    var n = qr.columns;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        if (i < j) {\r\n          X[i][j] = qr[i][j];\r\n        } else if (i === j) {\r\n          X[i][j] = this.Rdiag[i];\r\n        } else {\r\n          X[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get orthogonalMatrix() {\r\n    var qr = this.QR;\r\n    var rows = qr.rows;\r\n    var columns = qr.columns;\r\n    var X = new Matrix(rows, columns);\r\n    var i, j, k, s;\r\n\r\n    for (k = columns - 1; k >= 0; k--) {\r\n      for (i = 0; i < rows; i++) {\r\n        X[i][k] = 0;\r\n      }\r\n      X[k][k] = 1;\r\n      for (j = k; j < columns; j++) {\r\n        if (qr[k][k] !== 0) {\r\n          s = 0;\r\n          for (i = k; i < rows; i++) {\r\n            s += qr[i][k] * X[i][j];\r\n          }\r\n\r\n          s = -s / qr[k][k];\r\n\r\n          for (i = k; i < rows; i++) {\r\n            X[i][j] += s * qr[i][k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n","import LuDecomposition from './dc/lu';\r\nimport QrDecomposition from './dc/qr';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\nimport { Matrix, WrapperMatrix2D } from './index';\r\n\r\n/**\r\n * Computes the inverse of a Matrix\r\n * @param {Matrix} matrix\r\n * @param {boolean} [useSVD=false]\r\n * @return {Matrix}\r\n */\r\nexport function inverse(matrix, useSVD = false) {\r\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(matrix).inverse();\r\n  } else {\r\n    return solve(matrix, Matrix.eye(matrix.rows));\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {Matrix} leftHandSide\r\n * @param {Matrix} rightHandSide\r\n * @param {boolean} [useSVD = false]\r\n * @return {Matrix}\r\n */\r\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\r\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\r\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\r\n  if (useSVD) {\r\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\r\n  } else {\r\n    return leftHandSide.isSquare()\r\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\r\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\r\n  }\r\n}\r\n","import max from 'ml-array-max';\r\n\r\nimport Matrix from './matrix';\r\nimport SingularValueDecomposition from './dc/svd';\r\n\r\n// function used by rowsDependencies\r\nfunction xrange(n, exception) {\r\n  var range = [];\r\n  for (var i = 0; i < n; i++) {\r\n    if (i !== exception) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  return range;\r\n}\r\n\r\n// function used by rowsDependencies\r\nfunction dependenciesOneRow(\r\n  error,\r\n  matrix,\r\n  index,\r\n  thresholdValue = 10e-10,\r\n  thresholdError = 10e-10\r\n) {\r\n  if (error > thresholdError) {\r\n    return new Array(matrix.rows + 1).fill(0);\r\n  } else {\r\n    var returnArray = matrix.addRow(index, [0]);\r\n    for (var i = 0; i < returnArray.rows; i++) {\r\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\r\n        returnArray.set(i, 0, 0);\r\n      }\r\n    }\r\n    return returnArray.to1DArray();\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a matrix which represents the dependencies between rows.\r\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\r\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\r\n * @param {Matrix} matrix\r\n * @param {Object} [options] includes thresholdValue and thresholdError.\r\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\r\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\r\n * @return {Matrix} the matrix which represents the dependencies between rows.\r\n */\r\n\r\nexport function linearDependencies(matrix, options = {}) {\r\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\r\n\r\n  var n = matrix.rows;\r\n  var results = new Matrix(n, n);\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var b = Matrix.columnVector(matrix.getRow(i));\r\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\r\n    var svd = new SingularValueDecomposition(Abis);\r\n    var x = svd.solve(b);\r\n    var error = max(\r\n      Matrix.sub(b, Abis.mmul(x))\r\n        .abs()\r\n        .to1DArray()\r\n    );\r\n    results.setRow(\r\n      i,\r\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\r\n    );\r\n  }\r\n  return results;\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\nimport { hypotenuse, getFilled2DArray } from './util';\r\n\r\n/**\r\n * @class EigenvalueDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\r\n * @param {Matrix} matrix\r\n * @param {object} [options]\r\n * @param {boolean} [options.assumeSymmetric=false]\r\n */\r\nexport default class EigenvalueDecomposition {\r\n  constructor(matrix, options = {}) {\r\n    const { assumeSymmetric = false } = options;\r\n\r\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\r\n    if (!matrix.isSquare()) {\r\n      throw new Error('Matrix is not a square matrix');\r\n    }\r\n\r\n    var n = matrix.columns;\r\n    var V = getFilled2DArray(n, n, 0);\r\n    var d = new Array(n);\r\n    var e = new Array(n);\r\n    var value = matrix;\r\n    var i, j;\r\n\r\n    var isSymmetric = false;\r\n    if (assumeSymmetric) {\r\n      isSymmetric = true;\r\n    } else {\r\n      isSymmetric = matrix.isSymmetric();\r\n    }\r\n\r\n    if (isSymmetric) {\r\n      for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n          V[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      tred2(n, e, d, V);\r\n      tql2(n, e, d, V);\r\n    } else {\r\n      var H = getFilled2DArray(n, n, 0);\r\n      var ort = new Array(n);\r\n      for (j = 0; j < n; j++) {\r\n        for (i = 0; i < n; i++) {\r\n          H[i][j] = value.get(i, j);\r\n        }\r\n      }\r\n      orthes(n, H, ort, V);\r\n      hqr2(n, e, d, V, H);\r\n    }\r\n\r\n    this.n = n;\r\n    this.e = e;\r\n    this.d = d;\r\n    this.V = V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get realEigenvalues() {\r\n    return this.d;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Array<number>}\r\n   */\r\n  get imaginaryEigenvalues() {\r\n    return this.e;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get eigenvectorMatrix() {\r\n    if (!Matrix.isMatrix(this.V)) {\r\n      this.V = new Matrix(this.V);\r\n    }\r\n    return this.V;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get diagonalMatrix() {\r\n    var n = this.n;\r\n    var e = this.e;\r\n    var d = this.d;\r\n    var X = new Matrix(n, n);\r\n    var i, j;\r\n    for (i = 0; i < n; i++) {\r\n      for (j = 0; j < n; j++) {\r\n        X[i][j] = 0;\r\n      }\r\n      X[i][i] = d[i];\r\n      if (e[i] > 0) {\r\n        X[i][i + 1] = e[i];\r\n      } else if (e[i] < 0) {\r\n        X[i][i - 1] = e[i];\r\n      }\r\n    }\r\n    return X;\r\n  }\r\n}\r\n\r\nfunction tred2(n, e, d, V) {\r\n  var f, g, h, i, j, k, hh, scale;\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n  }\r\n\r\n  for (i = n - 1; i > 0; i--) {\r\n    scale = 0;\r\n    h = 0;\r\n    for (k = 0; k < i; k++) {\r\n      scale = scale + Math.abs(d[k]);\r\n    }\r\n\r\n    if (scale === 0) {\r\n      e[i] = d[i - 1];\r\n      for (j = 0; j < i; j++) {\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n        V[j][i] = 0;\r\n      }\r\n    } else {\r\n      for (k = 0; k < i; k++) {\r\n        d[k] /= scale;\r\n        h += d[k] * d[k];\r\n      }\r\n\r\n      f = d[i - 1];\r\n      g = Math.sqrt(h);\r\n      if (f > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      e[i] = scale * g;\r\n      h = h - f * g;\r\n      d[i - 1] = f - g;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] = 0;\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        V[j][i] = f;\r\n        g = e[j] + V[j][j] * f;\r\n        for (k = j + 1; k <= i - 1; k++) {\r\n          g += V[k][j] * d[k];\r\n          e[k] += V[k][j] * f;\r\n        }\r\n        e[j] = g;\r\n      }\r\n\r\n      f = 0;\r\n      for (j = 0; j < i; j++) {\r\n        e[j] /= h;\r\n        f += e[j] * d[j];\r\n      }\r\n\r\n      hh = f / (h + h);\r\n      for (j = 0; j < i; j++) {\r\n        e[j] -= hh * d[j];\r\n      }\r\n\r\n      for (j = 0; j < i; j++) {\r\n        f = d[j];\r\n        g = e[j];\r\n        for (k = j; k <= i - 1; k++) {\r\n          V[k][j] -= f * e[k] + g * d[k];\r\n        }\r\n        d[j] = V[i - 1][j];\r\n        V[i][j] = 0;\r\n      }\r\n    }\r\n    d[i] = h;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    V[n - 1][i] = V[i][i];\r\n    V[i][i] = 1;\r\n    h = d[i + 1];\r\n    if (h !== 0) {\r\n      for (k = 0; k <= i; k++) {\r\n        d[k] = V[k][i + 1] / h;\r\n      }\r\n\r\n      for (j = 0; j <= i; j++) {\r\n        g = 0;\r\n        for (k = 0; k <= i; k++) {\r\n          g += V[k][i + 1] * V[k][j];\r\n        }\r\n        for (k = 0; k <= i; k++) {\r\n          V[k][j] -= g * d[k];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (k = 0; k <= i; k++) {\r\n      V[k][i + 1] = 0;\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < n; j++) {\r\n    d[j] = V[n - 1][j];\r\n    V[n - 1][j] = 0;\r\n  }\r\n\r\n  V[n - 1][n - 1] = 1;\r\n  e[0] = 0;\r\n}\r\n\r\nfunction tql2(n, e, d, V) {\r\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\r\n\r\n  for (i = 1; i < n; i++) {\r\n    e[i - 1] = e[i];\r\n  }\r\n\r\n  e[n - 1] = 0;\r\n\r\n  var f = 0;\r\n  var tst1 = 0;\r\n  var eps = Number.EPSILON;\r\n\r\n  for (l = 0; l < n; l++) {\r\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\r\n    m = l;\r\n    while (m < n) {\r\n      if (Math.abs(e[m]) <= eps * tst1) {\r\n        break;\r\n      }\r\n      m++;\r\n    }\r\n\r\n    if (m > l) {\r\n      iter = 0;\r\n      do {\r\n        iter = iter + 1;\r\n\r\n        g = d[l];\r\n        p = (d[l + 1] - g) / (2 * e[l]);\r\n        r = hypotenuse(p, 1);\r\n        if (p < 0) {\r\n          r = -r;\r\n        }\r\n\r\n        d[l] = e[l] / (p + r);\r\n        d[l + 1] = e[l] * (p + r);\r\n        dl1 = d[l + 1];\r\n        h = g - d[l];\r\n        for (i = l + 2; i < n; i++) {\r\n          d[i] -= h;\r\n        }\r\n\r\n        f = f + h;\r\n\r\n        p = d[m];\r\n        c = 1;\r\n        c2 = c;\r\n        c3 = c;\r\n        el1 = e[l + 1];\r\n        s = 0;\r\n        s2 = 0;\r\n        for (i = m - 1; i >= l; i--) {\r\n          c3 = c2;\r\n          c2 = c;\r\n          s2 = s;\r\n          g = c * e[i];\r\n          h = c * p;\r\n          r = hypotenuse(p, e[i]);\r\n          e[i + 1] = s * r;\r\n          s = e[i] / r;\r\n          c = p / r;\r\n          p = c * d[i] - s * g;\r\n          d[i + 1] = h + s * (c * g + s * d[i]);\r\n\r\n          for (k = 0; k < n; k++) {\r\n            h = V[k][i + 1];\r\n            V[k][i + 1] = s * V[k][i] + c * h;\r\n            V[k][i] = c * V[k][i] - s * h;\r\n          }\r\n        }\r\n\r\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\r\n        e[l] = s * p;\r\n        d[l] = c * p;\r\n      } while (Math.abs(e[l]) > eps * tst1);\r\n    }\r\n    d[l] = d[l] + f;\r\n    e[l] = 0;\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    k = i;\r\n    p = d[i];\r\n    for (j = i + 1; j < n; j++) {\r\n      if (d[j] < p) {\r\n        k = j;\r\n        p = d[j];\r\n      }\r\n    }\r\n\r\n    if (k !== i) {\r\n      d[k] = d[i];\r\n      d[i] = p;\r\n      for (j = 0; j < n; j++) {\r\n        p = V[j][i];\r\n        V[j][i] = V[j][k];\r\n        V[j][k] = p;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction orthes(n, H, ort, V) {\r\n  var low = 0;\r\n  var high = n - 1;\r\n  var f, g, h, i, j, m;\r\n  var scale;\r\n\r\n  for (m = low + 1; m <= high - 1; m++) {\r\n    scale = 0;\r\n    for (i = m; i <= high; i++) {\r\n      scale = scale + Math.abs(H[i][m - 1]);\r\n    }\r\n\r\n    if (scale !== 0) {\r\n      h = 0;\r\n      for (i = high; i >= m; i--) {\r\n        ort[i] = H[i][m - 1] / scale;\r\n        h += ort[i] * ort[i];\r\n      }\r\n\r\n      g = Math.sqrt(h);\r\n      if (ort[m] > 0) {\r\n        g = -g;\r\n      }\r\n\r\n      h = h - ort[m] * g;\r\n      ort[m] = ort[m] - g;\r\n\r\n      for (j = m; j < n; j++) {\r\n        f = 0;\r\n        for (i = high; i >= m; i--) {\r\n          f += ort[i] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (i = m; i <= high; i++) {\r\n          H[i][j] -= f * ort[i];\r\n        }\r\n      }\r\n\r\n      for (i = 0; i <= high; i++) {\r\n        f = 0;\r\n        for (j = high; j >= m; j--) {\r\n          f += ort[j] * H[i][j];\r\n        }\r\n\r\n        f = f / h;\r\n        for (j = m; j <= high; j++) {\r\n          H[i][j] -= f * ort[j];\r\n        }\r\n      }\r\n\r\n      ort[m] = scale * ort[m];\r\n      H[m][m - 1] = scale * g;\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (j = 0; j < n; j++) {\r\n      V[i][j] = i === j ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  for (m = high - 1; m >= low + 1; m--) {\r\n    if (H[m][m - 1] !== 0) {\r\n      for (i = m + 1; i <= high; i++) {\r\n        ort[i] = H[i][m - 1];\r\n      }\r\n\r\n      for (j = m; j <= high; j++) {\r\n        g = 0;\r\n        for (i = m; i <= high; i++) {\r\n          g += ort[i] * V[i][j];\r\n        }\r\n\r\n        g = g / ort[m] / H[m][m - 1];\r\n        for (i = m; i <= high; i++) {\r\n          V[i][j] += g * ort[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hqr2(nn, e, d, V, H) {\r\n  var n = nn - 1;\r\n  var low = 0;\r\n  var high = nn - 1;\r\n  var eps = Number.EPSILON;\r\n  var exshift = 0;\r\n  var norm = 0;\r\n  var p = 0;\r\n  var q = 0;\r\n  var r = 0;\r\n  var s = 0;\r\n  var z = 0;\r\n  var iter = 0;\r\n  var i, j, k, l, m, t, w, x, y;\r\n  var ra, sa, vr, vi;\r\n  var notlast, cdivres;\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      d[i] = H[i][i];\r\n      e[i] = 0;\r\n    }\r\n\r\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\r\n      norm = norm + Math.abs(H[i][j]);\r\n    }\r\n  }\r\n\r\n  while (n >= low) {\r\n    l = n;\r\n    while (l > low) {\r\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\r\n      if (s === 0) {\r\n        s = norm;\r\n      }\r\n      if (Math.abs(H[l][l - 1]) < eps * s) {\r\n        break;\r\n      }\r\n      l--;\r\n    }\r\n\r\n    if (l === n) {\r\n      H[n][n] = H[n][n] + exshift;\r\n      d[n] = H[n][n];\r\n      e[n] = 0;\r\n      n--;\r\n      iter = 0;\r\n    } else if (l === n - 1) {\r\n      w = H[n][n - 1] * H[n - 1][n];\r\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\r\n      q = p * p + w;\r\n      z = Math.sqrt(Math.abs(q));\r\n      H[n][n] = H[n][n] + exshift;\r\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\r\n      x = H[n][n];\r\n\r\n      if (q >= 0) {\r\n        z = p >= 0 ? p + z : p - z;\r\n        d[n - 1] = x + z;\r\n        d[n] = d[n - 1];\r\n        if (z !== 0) {\r\n          d[n] = x - w / z;\r\n        }\r\n        e[n - 1] = 0;\r\n        e[n] = 0;\r\n        x = H[n][n - 1];\r\n        s = Math.abs(x) + Math.abs(z);\r\n        p = x / s;\r\n        q = z / s;\r\n        r = Math.sqrt(p * p + q * q);\r\n        p = p / r;\r\n        q = q / r;\r\n\r\n        for (j = n - 1; j < nn; j++) {\r\n          z = H[n - 1][j];\r\n          H[n - 1][j] = q * z + p * H[n][j];\r\n          H[n][j] = q * H[n][j] - p * z;\r\n        }\r\n\r\n        for (i = 0; i <= n; i++) {\r\n          z = H[i][n - 1];\r\n          H[i][n - 1] = q * z + p * H[i][n];\r\n          H[i][n] = q * H[i][n] - p * z;\r\n        }\r\n\r\n        for (i = low; i <= high; i++) {\r\n          z = V[i][n - 1];\r\n          V[i][n - 1] = q * z + p * V[i][n];\r\n          V[i][n] = q * V[i][n] - p * z;\r\n        }\r\n      } else {\r\n        d[n - 1] = x + p;\r\n        d[n] = x + p;\r\n        e[n - 1] = z;\r\n        e[n] = -z;\r\n      }\r\n\r\n      n = n - 2;\r\n      iter = 0;\r\n    } else {\r\n      x = H[n][n];\r\n      y = 0;\r\n      w = 0;\r\n      if (l < n) {\r\n        y = H[n - 1][n - 1];\r\n        w = H[n][n - 1] * H[n - 1][n];\r\n      }\r\n\r\n      if (iter === 10) {\r\n        exshift += x;\r\n        for (i = low; i <= n; i++) {\r\n          H[i][i] -= x;\r\n        }\r\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\r\n        x = y = 0.75 * s;\r\n        w = -0.4375 * s * s;\r\n      }\r\n\r\n      if (iter === 30) {\r\n        s = (y - x) / 2;\r\n        s = s * s + w;\r\n        if (s > 0) {\r\n          s = Math.sqrt(s);\r\n          if (y < x) {\r\n            s = -s;\r\n          }\r\n          s = x - w / ((y - x) / 2 + s);\r\n          for (i = low; i <= n; i++) {\r\n            H[i][i] -= s;\r\n          }\r\n          exshift += s;\r\n          x = y = w = 0.964;\r\n        }\r\n      }\r\n\r\n      iter = iter + 1;\r\n\r\n      m = n - 2;\r\n      while (m >= l) {\r\n        z = H[m][m];\r\n        r = x - z;\r\n        s = y - z;\r\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\r\n        q = H[m + 1][m + 1] - z - r - s;\r\n        r = H[m + 2][m + 1];\r\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n        p = p / s;\r\n        q = q / s;\r\n        r = r / s;\r\n        if (m === l) {\r\n          break;\r\n        }\r\n        if (\r\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\r\n          eps *\r\n            (Math.abs(p) *\r\n              (Math.abs(H[m - 1][m - 1]) +\r\n                Math.abs(z) +\r\n                Math.abs(H[m + 1][m + 1])))\r\n        ) {\r\n          break;\r\n        }\r\n        m--;\r\n      }\r\n\r\n      for (i = m + 2; i <= n; i++) {\r\n        H[i][i - 2] = 0;\r\n        if (i > m + 2) {\r\n          H[i][i - 3] = 0;\r\n        }\r\n      }\r\n\r\n      for (k = m; k <= n - 1; k++) {\r\n        notlast = k !== n - 1;\r\n        if (k !== m) {\r\n          p = H[k][k - 1];\r\n          q = H[k + 1][k - 1];\r\n          r = notlast ? H[k + 2][k - 1] : 0;\r\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\r\n          if (x !== 0) {\r\n            p = p / x;\r\n            q = q / x;\r\n            r = r / x;\r\n          }\r\n        }\r\n\r\n        if (x === 0) {\r\n          break;\r\n        }\r\n\r\n        s = Math.sqrt(p * p + q * q + r * r);\r\n        if (p < 0) {\r\n          s = -s;\r\n        }\r\n\r\n        if (s !== 0) {\r\n          if (k !== m) {\r\n            H[k][k - 1] = -s * x;\r\n          } else if (l !== m) {\r\n            H[k][k - 1] = -H[k][k - 1];\r\n          }\r\n\r\n          p = p + s;\r\n          x = p / s;\r\n          y = q / s;\r\n          z = r / s;\r\n          q = q / p;\r\n          r = r / p;\r\n\r\n          for (j = k; j < nn; j++) {\r\n            p = H[k][j] + q * H[k + 1][j];\r\n            if (notlast) {\r\n              p = p + r * H[k + 2][j];\r\n              H[k + 2][j] = H[k + 2][j] - p * z;\r\n            }\r\n\r\n            H[k][j] = H[k][j] - p * x;\r\n            H[k + 1][j] = H[k + 1][j] - p * y;\r\n          }\r\n\r\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\r\n            p = x * H[i][k] + y * H[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * H[i][k + 2];\r\n              H[i][k + 2] = H[i][k + 2] - p * r;\r\n            }\r\n\r\n            H[i][k] = H[i][k] - p;\r\n            H[i][k + 1] = H[i][k + 1] - p * q;\r\n          }\r\n\r\n          for (i = low; i <= high; i++) {\r\n            p = x * V[i][k] + y * V[i][k + 1];\r\n            if (notlast) {\r\n              p = p + z * V[i][k + 2];\r\n              V[i][k + 2] = V[i][k + 2] - p * r;\r\n            }\r\n\r\n            V[i][k] = V[i][k] - p;\r\n            V[i][k + 1] = V[i][k + 1] - p * q;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (norm === 0) {\r\n    return;\r\n  }\r\n\r\n  for (n = nn - 1; n >= 0; n--) {\r\n    p = d[n];\r\n    q = e[n];\r\n\r\n    if (q === 0) {\r\n      l = n;\r\n      H[n][n] = 1;\r\n      for (i = n - 1; i >= 0; i--) {\r\n        w = H[i][i] - p;\r\n        r = 0;\r\n        for (j = l; j <= n; j++) {\r\n          r = r + H[i][j] * H[j][n];\r\n        }\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          s = r;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\r\n            t = (x * s - z * r) / q;\r\n            H[i][n] = t;\r\n            H[i + 1][n] =\r\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\r\n          }\r\n\r\n          t = Math.abs(H[i][n]);\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (q < 0) {\r\n      l = n - 1;\r\n\r\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\r\n        H[n - 1][n - 1] = q / H[n][n - 1];\r\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\r\n      } else {\r\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\r\n        H[n - 1][n - 1] = cdivres[0];\r\n        H[n - 1][n] = cdivres[1];\r\n      }\r\n\r\n      H[n][n - 1] = 0;\r\n      H[n][n] = 1;\r\n      for (i = n - 2; i >= 0; i--) {\r\n        ra = 0;\r\n        sa = 0;\r\n        for (j = l; j <= n; j++) {\r\n          ra = ra + H[i][j] * H[j][n - 1];\r\n          sa = sa + H[i][j] * H[j][n];\r\n        }\r\n\r\n        w = H[i][i] - p;\r\n\r\n        if (e[i] < 0) {\r\n          z = w;\r\n          r = ra;\r\n          s = sa;\r\n        } else {\r\n          l = i;\r\n          if (e[i] === 0) {\r\n            cdivres = cdiv(-ra, -sa, w, q);\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n          } else {\r\n            x = H[i][i + 1];\r\n            y = H[i + 1][i];\r\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\r\n            vi = (d[i] - p) * 2 * q;\r\n            if (vr === 0 && vi === 0) {\r\n              vr =\r\n                eps *\r\n                norm *\r\n                (Math.abs(w) +\r\n                  Math.abs(q) +\r\n                  Math.abs(x) +\r\n                  Math.abs(y) +\r\n                  Math.abs(z));\r\n            }\r\n            cdivres = cdiv(\r\n              x * r - z * ra + q * sa,\r\n              x * s - z * sa - q * ra,\r\n              vr,\r\n              vi\r\n            );\r\n            H[i][n - 1] = cdivres[0];\r\n            H[i][n] = cdivres[1];\r\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\r\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\r\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\r\n            } else {\r\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\r\n              H[i + 1][n - 1] = cdivres[0];\r\n              H[i + 1][n] = cdivres[1];\r\n            }\r\n          }\r\n\r\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\r\n          if (eps * t * t > 1) {\r\n            for (j = i; j <= n; j++) {\r\n              H[j][n - 1] = H[j][n - 1] / t;\r\n              H[j][n] = H[j][n] / t;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < nn; i++) {\r\n    if (i < low || i > high) {\r\n      for (j = i; j < nn; j++) {\r\n        V[i][j] = H[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (j = nn - 1; j >= low; j--) {\r\n    for (i = low; i <= high; i++) {\r\n      z = 0;\r\n      for (k = low; k <= Math.min(j, high); k++) {\r\n        z = z + V[i][k] * H[k][j];\r\n      }\r\n      V[i][j] = z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cdiv(xr, xi, yr, yi) {\r\n  var r, d;\r\n  if (Math.abs(yr) > Math.abs(yi)) {\r\n    r = yi / yr;\r\n    d = yr + r * yi;\r\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\r\n  } else {\r\n    r = yr / yi;\r\n    d = yi + r * yr;\r\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\r\n  }\r\n}\r\n","import { Matrix, WrapperMatrix2D } from '../index';\r\n\r\n/**\r\n * @class CholeskyDecomposition\r\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\r\n * @param {Matrix} value\r\n */\r\nexport default class CholeskyDecomposition {\r\n  constructor(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n    if (!value.isSymmetric()) {\r\n      throw new Error('Matrix is not symmetric');\r\n    }\r\n\r\n    var a = value;\r\n    var dimension = a.rows;\r\n    var l = new Matrix(dimension, dimension);\r\n    var positiveDefinite = true;\r\n    var i, j, k;\r\n\r\n    for (j = 0; j < dimension; j++) {\r\n      var Lrowj = l[j];\r\n      var d = 0;\r\n      for (k = 0; k < j; k++) {\r\n        var Lrowk = l[k];\r\n        var s = 0;\r\n        for (i = 0; i < k; i++) {\r\n          s += Lrowk[i] * Lrowj[i];\r\n        }\r\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\r\n        d = d + s * s;\r\n      }\r\n\r\n      d = a.get(j, j) - d;\r\n\r\n      positiveDefinite &= d > 0;\r\n      l[j][j] = Math.sqrt(Math.max(d, 0));\r\n      for (k = j + 1; k < dimension; k++) {\r\n        l[j][k] = 0;\r\n      }\r\n    }\r\n\r\n    if (!positiveDefinite) {\r\n      throw new Error('Matrix is not positive definite');\r\n    }\r\n\r\n    this.L = l;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Matrix} value\r\n   * @return {Matrix}\r\n   */\r\n  solve(value) {\r\n    value = WrapperMatrix2D.checkMatrix(value);\r\n\r\n    var l = this.L;\r\n    var dimension = l.rows;\r\n\r\n    if (value.rows !== dimension) {\r\n      throw new Error('Matrix dimensions do not match');\r\n    }\r\n\r\n    var count = value.columns;\r\n    var B = value.clone();\r\n    var i, j, k;\r\n\r\n    for (k = 0; k < dimension; k++) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = 0; i < k; i++) {\r\n          B[k][j] -= B[i][j] * l[k][i];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    for (k = dimension - 1; k >= 0; k--) {\r\n      for (j = 0; j < count; j++) {\r\n        for (i = k + 1; i < dimension; i++) {\r\n          B[k][j] -= B[i][j] * l[i][k];\r\n        }\r\n        B[k][j] /= l[k][k];\r\n      }\r\n    }\r\n\r\n    return B;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get lowerTriangularMatrix() {\r\n    return this.L;\r\n  }\r\n}\r\n","export { default, default as Matrix } from './matrix';\r\nexport { default as abstractMatrix } from './abstractMatrix';\r\n\r\nexport { wrap } from './wrap/wrap';\r\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\r\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\r\n\r\nexport { solve, inverse } from './decompositions';\r\nexport { linearDependencies } from './linearDependencies';\r\nexport {\r\n  default as SingularValueDecomposition,\r\n  default as SVD\r\n} from './dc/svd.js';\r\nexport {\r\n  default as EigenvalueDecomposition,\r\n  default as EVD\r\n} from './dc/evd.js';\r\nexport {\r\n  default as CholeskyDecomposition,\r\n  default as CHO\r\n} from './dc/cholesky.js';\r\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\r\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\r\n"],"sourceRoot":""}