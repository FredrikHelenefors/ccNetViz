{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./plugins/ccNetViz-node-plugins/shape.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hierarchical2.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./plugins/ccNetViz-node-plugins/main.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/ellipse.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/star.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/polygon.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/square.js","webpack:///./node_modules/ml-array-max/src/index.js","webpack:///./node_modules/ml-array-rescale/src/index.js","webpack:///./node_modules/ml-array-min/src/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Shape","config","instance","_classCallCheck","canvas","document","createElement","width","height","display","default","_preConf","_setCanvas","_setGradient","_draw","stroke","size","round","textureColor","minSize","maxSize","label","font","cursor","x0","y0","x1","y1","context","getContext","fillStyle","strokeStyle","lineWidth","lineJoin","_this","textureGradient","gradient","createLinearGradient","item","addColorStop","_this2","Promise","resolve","reject","toBlob","blob","assign","texture","URL","createObjectURL","remove","Color","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutHierarchical2","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","wantedSize","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","_main","sCanvas","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","backgroundStyle","background","backgroundColor","removed","setted","edgeStyle","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","nodePlugin","then","main","shapes","pluginConfig","f","shape","toConfig","err","Polygon","Star","spikes","spike","Ellipse","ellipse","radiusX","radiusY","Square","square","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","scene","elements","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","Date","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","mousedown","touchstart","wheel","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","redraw","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","isOrphan","orphan","components","current_component","unvisited","orphans","max_layer","maybe_more","lowest_layer","child_found","sep","parent_found","parent_","component","max_nodes_layer","index_offset","vertical_nodes","current_layer","initializeComponent","candidates","layerNodes","initHierarchy","separateOrphans","unvisitedNodes","findRoots","maybe_mode","placeAdditional","layer_val","placeOrphans","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","_el","body","appendChild","_context","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","advance","char","h","w","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","now","callNow","pushUnique","_layers","_insertTempLayer","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","_Shape","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","beginPath","inset","theta","center","lineTo","closePath","degree","src_max","input","isArray","rescale","TypeError","output","currentMin","src_min","currentMax","RangeError","minValue","autoMinMax","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","export default class Shape {\n  constructor(config, instance) {\n    this.config = config;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.canvas.style.display = 'none';\n    this.default = {};\n\n    this._preConf();\n    this._setCanvas();\n    this._setGradient();\n    this._draw();\n  }\n\n  // Before the drawing; when the config is existed override the default config.\n  _preConf() {\n    // Default config\n    this.default = {\n      stroke: {\n        color: \"#ffffff\",\n        size: 0.00000001,\n        round: false\n      },\n      textureColor: \"#2257a4\",\n      size: 20,\n      minSize: 6,\n      maxSize: 16,\n      label: {\n        color: \"rgb(120, 120, 120)\",\n        font: { type: \"Arial, Helvetica, sans-serif\", size: 11 }\n      }\n    };\n\n    if (typeof this.config !== \"undefined\") {\n\n      // Stroke configuration\n      if (typeof this.config.stroke !== \"undefined\") {\n        this.config.stroke.size = this.config.stroke.size || this.default.stroke.size;\n        this.config.stroke.color = this.config.stroke.color || this.default.stroke.color;\n        this.config.stroke.round = this.config.stroke.round || this.default.stroke.round;\n      } else {\n        this.config.stroke = this.default.stroke;\n      }\n\n      // Label configuration\n      if (typeof this.config.label !== \"undefined\") {\n        this.config.label.color = this.config.label.color || this.default.label.color;\n        this.config.label.font = this.config.label.font || this.default.label.font;\n      } else {\n        this.config.label = this.default.label;\n      }\n\n      this.config.size = this.config.size || this.default.size;\n      this.config.minSize = this.config.minSize || this.default.maxSize;\n      this.config.maxSize = this.config.maxSize || this.default.maxSize;\n      this.config.textureColor = this.config.textureColor || this.default.textureColor;\n\n    } else {\n      this.config = this.default;\n    }\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n  }\n\n  // Setting up the canvas width, height. Also, creating canvas context and colors.\n  _setCanvas() {\n    let cursor = {\n      x0: this.canvas.width,\n      y0: this.canvas.height,\n      x1: this.canvas.width + ((this.config.stroke.size * 2) + this.config.size),\n      y1: this.canvas.height + ((this.config.stroke.size * 2) + this.config.size)\n    };\n    this.canvas.width = cursor.x1;\n    this.canvas.height = cursor.y1;\n    this.context = this.canvas.getContext('2d');\n    this.context.fillStyle = this.config.textureColor;\n    this.context.strokeStyle = this.config.stroke.color;\n    this.context.lineWidth = this.config.stroke.size;\n    this.config.stroke.round ? this.context.lineJoin = \"round\" : false;\n  }\n\n  _setGradient() {\n    if (typeof this.config.textureGradient !== \"undefined\") {\n      let gradient = this.context.createLinearGradient(0, 0, this.canvas.width, 0);\n      this.config.textureGradient.map(item => {\n        gradient.addColorStop(item.x || 0, item.color || this.config.textureColor);\n      });\n      this.context.fillStyle = gradient;\n    }\n  }\n\n  _draw() {\n  }\n\n  // Canvas transform into the 0-1 range\n  t(size) {\n    return (this.config.stroke.size) + (this.config.size * size);\n  }\n\n  toConfig() {\n    return new Promise((resolve, reject) => {\n      this.canvas.toBlob(blob => {\n        resolve(Object.assign(\n          { texture: URL.createObjectURL(blob) },\n          this.config));\n        this.canvas.remove();\n      }, 'image/png');\n    });;\n  }\n}","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class Color{\n  constructor(color){\n    this.a = 1;\n\n    if (color instanceof Color){\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        this.a = color.a;\n    }\n    else if (arguments.length >= 3) {\n        this.r = arguments[0];\n        this.g = arguments[1];\n        this.b = arguments[2];\n        arguments.length > 3 && (this.a = arguments[3]);\n    }\n    else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n        this.a = get(color[4]);\n    }\n    else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 100;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n        color = parseInt(color.substring(1), 16);\n        this.r = (color >> 16 & 255) / 255;\n        this.g = (color >> 8 & 255) / 255;\n        this.b = (color & 255) / 255;\n    }\n    else {\n        this.r = this.g = this.b = 0;\n    }\n  }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\nimport layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n  static get hierarchical2(){\n    return layoutHierarchical2;\n  }\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\nimport {Ellipse, Star, Polygon, Square } from  \"../plugins/ccNetViz-node-plugins/main\"\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = nodePlugin();\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        options.styles[promises[index].name] = item;\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  /**\n  * ccNetViz-node-plugin integration. \n  * @return {Array} - Array of texture promises.\n  */\n  let nodePlugin = function () {\n    let shapes = [];\n\n    if (typeof options.styles !== \"undefined\") {\n\n      /**\n       * This function can create-manipulate a ccNetViz config with ccNetViz node, arrow plugins.\n       * @param {f} function - Shape factory.\n       * @param {shapes} Object - Shapes to be created.\n       * @param {type} String - Shape type.\n       * @return {Array} - Array of texture promises.\n       */\n      let pluginConfig = function (f, shapes, type) {\n        try {\n          let p = [];\n\n          shapes.map(shape => {\n            // Adding predefined styles.\n            if (typeof options.styles[shape.name] === \"undefined\") {\n              options.styles[shape.name] = f(shape);\n            } else {\n              // Overwriting existing predefined styles.\n              options.styles[shape.name] = f(Object.assign(shape, options.styles[shape.name]));\n            }\n          });\n\n          // Creating predefined and user-def styles.\n          for (let key in options.styles) {\n            let style = options.styles[key];\n            if (style.type === type) {\n              let shape = new f(style.config || style, self);\n              p.push({ config: shape.toConfig(), name: key });\n            }\n          }\n          return p;\n        } catch (err) {\n          console.error(err);\n          return [];\n        }\n      }\n\n      // Predefined shapes\n      if (typeof Polygon !== \"undefined\") {\n        let s = [\n          { name: 'triangle', edges: 3 },\n          { name: 'quadrilateral', edges: 4 },\n          { name: 'pentagon', edges: 5 },\n          { name: 'hexagon', edges: 6 },\n          { name: 'heptagon', edges: 7 },\n          { name: 'octagon', edges: 8 },\n          { name: 'nonagon', edges: 9 },\n          { name: 'decagon', edges: 9 }\n        ];\n        shapes = shapes.concat(pluginConfig(Polygon, s, 'Polygon'));\n      }\n\n      if (typeof Star !== \"undefined\") {\n        let s = [\n          { name: 'star', spikes: 7 }\n        ];\n        for (let spike = 3; spike <= 10; spike++) {\n          s.push({ name: `star-${spike}`, spikes: spike })\n        }\n        shapes = shapes.concat(pluginConfig(Star, s, 'Star'));\n      }\n\n      if (typeof Ellipse !== \"undefined\") {\n        let ellipse = pluginConfig(Ellipse, [{ name: 'circle' }, { name: 'ellipse', radiusX: 25, radiusY: 15 }], 'Ellipse');\n        shapes = shapes.concat(ellipse);\n      }\n\n      if (typeof Square !== \"undefined\") {\n        let square = pluginConfig(Square, [{ name: \"square\" }], \"Square\");\n        shapes = shapes.concat(square);\n      }\n    }\n    return shapes;\n  }\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let i = 0; i < layers.main.scene.elements.length; i++){\n      layers.main.scene.elements[i].draw(context);\n      layers.temp && layers.temp.scene.elements[i].draw(context);\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheel.bind(this),\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si]){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n            \"precision mediump float;\",\n            \"attribute vec2 position;\",\n            \"attribute vec2 normal;\",\n            \"attribute vec2 lengthSoFar;\",\n            \"uniform float exc;\",\n            \"uniform vec2 size;\",\n            \"uniform vec2 screen;\",\n            \"uniform float aspect2;\",\n            \"uniform float aspect;\",\n            \"uniform vec2 width;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\"\n            ].concat(getShiftFuncs).concat([\n            \"void main(void) {\",\n            \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n            \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n            \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n            \"   n = normal;\",\n            \"}\"\n        ]), [\n            \"precision mediump float;\",\n            \"uniform float type;\",\n            \"uniform vec4 color;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\",\n            \"uniform float lineSize;\",\n            \"void main(void) {\",\n            \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n\t    ].concat(lineTypes).concat([\n            \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n            \"}\"\n        ]), c => {\n            let uniforms = c.shader.uniforms;\n            uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            let size = 2.5 * c.nodeSize;\n            uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            gl.uniform1f(uniforms.aspect, c.aspect);\n            gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n            gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            if (point = node.point) {\n                let point;\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nfunction isOrphan(node){\n    let orphan = true;\n    for (let i=0; i<node.parents.length; ++i){\n        let parent_ = node.parents[i];\n        if (parent_ != node)\n            orphan = false;\n    }\n    for (let i=0; i<node.children.length; ++i){\n        let child = node.children[i];\n        if (child != node)\n            orphan = false;\n    }\n    return orphan;\n}\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n    this.components = {\"current_component\": 0, \"depth\": 1};\n    this.unvisited = nodes;\n  }\n  \n  initHierarchy(){\n      this._nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n  }\n\n  separateOrphans(){\n      let orphans = [];\n      let nodes = [];\n      for (let i=0; i< this._nodes.length; ++i){\n          let node = this._nodes[i];\n          if (isOrphan(node))\n              orphans.push(node);\n          else\n              nodes.push(node);\n      }\n      return orphans;\n  }\n\n  findRoots(nodes){\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      return roots;\n  }\n\n  placeOrphans(nodes, max_layer){\n      const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].y = this.alphay + i*stepy;\n          nodes[i].x = max_layer+1;\n      }\n      if (nodes.length > 0)\n          return max_layer+1;\n      else\n          return max_layer;\n  }\n\n  unvisitedNodes(){\n      let nodes = [];\n      let orphans = this.orphans;\n      this.unvisited.forEach(function(node){\n          if (node.visited == false && !(node in orphans))\n              nodes.push(node);\n      });\n      if (nodes.length != this.unvisited){\n          this.maybe_more = true;\n          this.unvisited = nodes;\n      } else this.maybe_more = false;\n  }\n\n  placeAdditional(){\n      // place non-visited nodes in between layers\n      let aux_layers = {};\n      let c = this.components[this.components.current_component];\n      let layers = c.layers;\n      for (let i=0; i<this.unvisited.length; ++i){\n          let node = this.unvisited[i];\n          let lowest_layer = this.components.depth;\n          let child_found = false;\n          for(let j=0; j<node.children.length; ++j){\n              let child = node.children[j];\n              if (child.visited == true){\n                  child_found = true;\n                  if(child.layer <= lowest_layer){ // child has to be visited to have a layer\n                      lowest_layer = child.layer;\n                  }\n                  break;\n              }\n          }\n          if (child_found){\n              node.visited = true;\n              // node.index = lowest_layer-sep;\n              if ( !((lowest_layer-sep) in layers))\n                  layers[lowest_layer-sep] = []\n              layers[lowest_layer-sep].push(node)\n          }\n          else {\n              let lowest_layer = max_layer;\n              let parent_found = false;\n              for(let j=0; j<node.parents.length; ++j){\n                  let parent_ = node.parents[j];\n                  if (parent_.visited == true){\n                      parent_found = true;\n                      if(parent_.layer <= lowest_layer){ // child has to be visited to have a layer\n                          lowest_layer = parent_.layer;\n                      }\n                  }\n              }\n              if (parent_found){\n                  node.visited = true;\n                  node.x = lowest_layer+sep;\n                  if ( !((lowest_layer+sep) in layers) )\n                      layers[lowest_layer+sep] = []\n                  layers[lowest_layer+sep].push(node)\n              }\n          }\n      }\n  }\n\n  initializeComponent(component){\n      this.components[component] = {};\n      this.components[component].max_nodes_layer = 0;\n      if (component > 0)\n          this.components[component].index_offset = this.components[component-1].vertical_nodes;\n      else\n          this.components[component].index_offset = 0;\n      this.components[component].current_layer = 1;\n      //this.components[component].layers = {\"nodes\": [], \"layer_value\": 1};\n      this.components[component].layers = {};\n      this.components[component].vertical_nodes = 0;\n  }\n\n  layerNodes(nodes){\n      if (!(this.components.current_component in this.components))\n          this.initializeComponent(this.components.current_component);\n      let c = this.components[this.components.current_component];\n      if (nodes.length > c.vertical_nodes)\n          c.vertical_nodes = nodes.length;\n      c.layers[c.current_layer] = [];\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].visited = true;\n          c.layers[c.current_layer].push(nodes[i]);\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let candidates = nodes[i].children;\n          for (let j=0; j < candidates.length; j++){\n              if (candidates[j].visited == false && !next_layer.includes(candidates[j])){\n                  next_layer.push(candidates[j]);\n              }\n          }\n      }\n      if (next_layer.length > 0){\n          c.current_layer++;\n          if (this.components.depth<c.current_layer)\n              this.components.depth = c.current_layer;\n          this.layerNodes(next_layer);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the second of these approaches.\n\n      this.initHierarchy();\n      this.orphans = this.separateOrphans();\n      this.unvisitedNodes();\n      while (this.unvisited.length > 0){\n          let roots = this.findRoots(this.unvisited);\n          this.layerNodes(roots);\n          this.unvisitedNodes(); // update unvisited nodes\n          this.maybe_mode = true;\n          while (this.maybe_more){\n              this.placeAdditional(); // place additional nodes linked to this component\n              this.unvisitedNodes(); // update unvisited nodes\n          }\n          this.components.current_component++;\n      }\n      this.components.vertical_nodes = 0;\n      for (let i=0; i<this.components.current_component; i++){\n          this.components.vertical_nodes += this.components[i].vertical_nodes;\n      }\n\n      // layerNodes should populate the dictionary this.components of components and aux variables:\n      // components[x] is a component, x is an integer\n      // components[x].vertical_nodes is the maximum number of nodes in a layer for the component\n      // components[x].layer[j] is the j-th layer on the component, j can be fractional\n      // components[x].index_offset is the number of nodes positioned in above components\n      // components.ncomponents is the number of components\n      // components.vertical_nodes is the sum of the max nodes in any layer of each component\n      // components.depth is the maximum number of layers\n\n      // each layer of tree xy = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(this.components.depth);\n      const stepy = (1-2*this.alphay)/(this.components.vertical_nodes);\n      for (let i=0; i<this.components.current_component; i++){\n          let component = this.components[i];\n          for (let layer_val in component.layers){\n              let layer = component.layers[layer_val];\n              if (layer.length == 1){\n                  let node = layer[0];\n                  node.x = this.alphax + stepx*layer_val;\n                  node.y = this.alphay + stepy*(component.index_offset + component.vertical_nodes/2);\n              } else {\n                  for (let k=0; k<layer.length; ++k){\n                      let node = layer[k];\n                      node.x = this.alphax + stepx*layer_val;\n                      node.y = this.alphay + stepy*(component.index_offset + k);\n                  }\n              }\n          }\n      }\n      this.placeOrphans(this.orphans);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      height = Math.max(height, rect.h - char.top);\n      width += char.advance + horiBearingX;\n    }\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n\n      dx += horiBearingX;\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import Ellipse from \"./shapes/ellipse\"\nimport Star from \"./shapes/star\"\nimport Polygon from \"./shapes/polygon\"\nimport Square from \"./shapes/square\"\n\nexport { Ellipse, Star, Polygon, Square }","import Shape from \"../shape\"\n\nlet Ellipse = (config, instance) => {\n  class Ellipse extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Ellipse';\n    }\n    _setCanvas() {\n      this.config.radiusX = this.config.radiusX || 16;\n      this.config.radiusY = this.config.radiusY || 16;\n\n      let cursor = {\n        x0: this.config.radiusX,\n        y0: this.config.radiusY,\n        x1: this.config.radiusX + ((this.config.stroke.size * 2) + this.config.radiusX),\n        y1: this.config.radiusY + ((this.config.stroke.size * 2) + this.config.radiusY)\n      };\n\n      if (cursor.x1 < cursor.y1) {\n        cursor.x1 = cursor.y1;\n      } else {\n        cursor.y1 = cursor.x1;\n      }\n\n      this.canvas.width = cursor.x1;\n      this.canvas.height = cursor.y1;\n      this.context = this.canvas.getContext('2d');\n      this.context.fillStyle = this.config.textureColor;\n      this.context.strokeStyle = this.config.stroke.color;\n      this.context.lineWidth = this.config.stroke.size;\n    }\n    _draw() {\n      this.context.ellipse(\n        (this.config.radiusX) + this.config.stroke.size,\n        (this.config.radiusY) + this.config.stroke.size,\n        this.config.radiusX,\n        this.config.radiusY, 0, 0, 2 * Math.PI);\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Ellipse(config, instance)\n}\n\nexport default Ellipse","import Shape from \"../shape\"\n\nlet Star = (config, instance) => {\n  class Star extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Star';\n    }\n    _draw() {\n      this.context.beginPath();\n      let spikes = this.config.spikes || 5;\n      let inset = this.config.inset || 2;\n      let radius = this.config.size / 2;\n\n      for (var i = 1; i <= spikes * 2; i++) {\n        let x, y;\n        let theta = i * (Math.PI * 2) / (spikes * 2);\n        let center = radius + this.config.stroke.size;\n\n        if (i % 2 == 0) {\n          x = center + (radius * Math.cos(theta));\n          y = center + (radius * Math.sin(theta));\n        } else {\n          x = center + ((radius / inset) * Math.cos(theta));\n          y = center + ((radius / inset) * Math.sin(theta));\n        }\n\n        this.context.lineTo(x, y);\n      }\n\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Star(config, instance)\n}\n\nexport default Star","import Shape from \"../shape\"\n\nlet Polygon = (config, instance) => {\n  class Polygon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Polygon';\n    }\n    _draw() {\n      this.context.beginPath();\n      let edges = this.config.edges || 3;\n      let degree = 360 / edges;\n      let radius = this.config.size / 2;\n\n      for (let i = 0; i < edges; i++) {\n        let theta = (degree * (i + 1)) * (Math.PI / 180);\n        let center = radius + this.config.stroke.size;\n\n        let x = center + (radius * Math.cos(theta));\n        let y = center + (radius * Math.sin(theta));\n        this.context.lineTo(x, y);\n      }\n\n\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Polygon(config, instance)\n}\n\nexport default Polygon","import Shape from \"../shape\"\n\nlet Square = (config, instance) => {\n  class Square extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Square';\n    }\n\n    _draw() {\n      this.context.beginPath();\n      this.context.lineTo(this.t(0), this.t(0));\n      this.context.lineTo(this.t(1), this.t(0));\n      this.context.lineTo(this.t(1), this.t(1));\n      this.context.lineTo(this.t(0), this.t(1));\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Square(config, instance)\n}\n\nexport default Square","/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function max(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var max = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] > max) max = input[i];\n    }\n    return max;\n}\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nexport default function rescale(input, options = {}) {\n    if (!Array.isArray(input)) {\n        throw new TypeError('input must be an array');\n    } else if (input.length === 0) {\n        throw new TypeError('input must not be empty');\n    }\n\n    let output;\n    if (options.output !== undefined) {\n        if (!Array.isArray(options.output)) {\n            throw new TypeError('output option must be an array if specified');\n        }\n        output = options.output;\n    } else {\n        output = new Array(input.length);\n    }\n\n    const currentMin = min(input);\n    const currentMax = max(input);\n\n    if (currentMin === currentMax) {\n        throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n    }\n\n    const {\n        min: minValue = options.autoMinMax ? currentMin : 0,\n        max: maxValue = options.autoMinMax ? currentMax : 1\n    } = options;\n\n    if (minValue >= maxValue) {\n        throw new RangeError('min option must be smaller than max option');\n    }\n\n    const factor = (maxValue - minValue) / (currentMax - currentMin);\n    for (var i = 0; i < input.length; i++) {\n        output[i] = (input[i] - currentMin) * factor + minValue;\n    }\n\n    return output;\n}\n","/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function min(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var min = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] < min) min = input[i];\n    }\n    return min;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}