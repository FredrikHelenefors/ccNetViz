{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./plugins/ccNetViz-node-plugins/shape.js","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hierarchical2.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./plugins/ccNetViz-node-plugins/main.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/circle.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/ellipse.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/triangle.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/rectangle.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/rhombus.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/pentagon.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/hexagon.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/heptagon.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/star.js","webpack:///./node_modules/ml-array-max/src/index.js","webpack:///./node_modules/ml-array-rescale/src/index.js","webpack:///./node_modules/ml-array-min/src/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shape","config","instance","_classCallCheck","this","canvas","document","createElement","width","height","style","display","default","_preConf","_setCanvas","_draw","stroke","color","size","textureColor","cursor","x0","y0","x1","y1","context","getContext","fillStyle","strokeStyle","lineWidth","body","appendChild","closePath","fill","_this","Promise","resolve","reject","toBlob","blob","assign","texture","URL","createObjectURL","remove","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Color","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutHierarchical2","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","wantedSize","label","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","_main","sCanvas","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","backgroundStyle","background","backgroundColor","removed","setted","minSize","maxSize","edgeStyle","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","nodePluginParser","then","main","circle","toConfig","ellipse","Ellipse","heptagon","Heptagon","hexagon","Hexagon","pentagon","Pentagon","rectangle","Rectangle","rhombus","Rhombus","star","Star","triangle","Triangle","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","scene","elements","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","Date","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","mousedown","touchstart","wheel","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","redraw","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","f","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","isOrphan","orphan","components","current_component","unvisited","orphans","max_layer","maybe_more","lowest_layer","child_found","sep","parent_found","parent_","component","max_nodes_layer","index_offset","vertical_nodes","current_layer","initializeComponent","candidates","layerNodes","initHierarchy","separateOrphans","unvisitedNodes","findRoots","maybe_mode","placeAdditional","layer_val","placeOrphans","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","_el","_context","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","advance","char","h","w","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","now","callNow","pushUnique","_layers","_insertTempLayer","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","_Shape","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","beginPath","arc","_get","moveTo","lineTo","src_max","input","isArray","rescale","TypeError","output","currentMin","src_min","currentMax","RangeError","minValue","autoMinMax","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export default class Shape {\n  constructor(config, instance) {\n    this.config = config;\n    if (typeof instance !== \"undefined\") {\n    }\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.canvas.style.display = 'none';\n    this.default = {};\n\n    this._preConf();\n    this._setCanvas();\n    this._draw();\n  }\n\n  // Before the drawing; when the config is existed override the default config.\n  _preConf() {\n    // Default config\n    this.default = {\n      stroke: {\n        color: \"#333333\",\n        size: 0,\n      },\n      textureColor: \"#999999\",\n      size: 16\n    };\n\n    if (typeof this.config !== \"undefined\") {\n      if (typeof this.config.stroke !== \"undefined\") {\n        this.config.stroke.size = this.config.stroke.size || this.default.stroke.size;\n        this.config.stroke.color = this.config.stroke.color || this.default.stroke.color;\n      } else {\n        this.config.stroke = this.default.stroke;\n      }\n      this.config.textureColor = this.config.textureColor || this.default.textureColor;\n      this.config.size = this.config.size || this.default.size;\n\n    } else {\n      this.config = this.default;\n    }\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n  }\n\n  // Setting up the canvas width, height. Also, creating canvas context and colors.\n  _setCanvas() {\n    let cursor = {\n      x0: this.canvas.width,\n      y0: this.canvas.height,\n      x1: this.canvas.width + ((this.config.stroke.size * 2) + this.config.size),\n      y1: this.canvas.height + ((this.config.stroke.size * 2) + this.config.size)\n    };\n    this.canvas.width = cursor.x1;\n    this.canvas.height = cursor.y1;\n    this.context = this.canvas.getContext('2d');\n    this.context.fillStyle = this.config.textureColor;\n    this.context.strokeStyle = this.config.stroke.color;\n    this.context.lineWidth = (this.config.stroke.size);\n    document.body.appendChild(this.canvas);\n  }\n\n  _draw() {\n    this.context.closePath();\n    this.context.stroke();\n    this.context.fill();\n  }\n\n  // Canvas transform into the 0-1 range\n  t(size) {\n    return (this.config.stroke.size) + (this.config.size * size);\n  }\n\n  toConfig() {\n    return new Promise((resolve, reject) => {\n      this.canvas.toBlob(blob => {\n        resolve(Object.assign(\n          { texture: URL.createObjectURL(blob) },\n          this.config));\n        this.canvas.remove();\n      }, 'image/png');\n    });;\n  }\n}","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class Color{\n  constructor(color){\n    this.a = 1;\n\n    if (color instanceof Color){\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        this.a = color.a;\n    }\n    else if (arguments.length >= 3) {\n        this.r = arguments[0];\n        this.g = arguments[1];\n        this.b = arguments[2];\n        arguments.length > 3 && (this.a = arguments[3]);\n    }\n    else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n        this.a = get(color[4]);\n    }\n    else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 100;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n        color = parseInt(color.substring(1), 16);\n        this.r = (color >> 16 & 255) / 255;\n        this.g = (color >> 8 & 255) / 255;\n        this.b = (color & 255) / 255;\n    }\n    else {\n        this.r = this.g = this.b = 0;\n    }\n  }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\nimport layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n  static get hierarchical2(){\n    return layoutHierarchical2;\n  }\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\nimport { Circle, Ellipse, Triangle, Rectangle, Rhombus, Pentagon, Hexagon, Heptagon, Star } from  \"../plugins/ccNetViz-node-plugins/main\"\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = nodePluginParser();\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        options.styles[promises[index].name] = item;\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  let nodePluginParser = function () {\n    let p = [];\n    if (typeof options.styles !== \"undefined\") {\n      for (let key in options.styles) {\n        let style = options.styles[key];\n\n        switch (style.type) {\n          case 'Circle':\n            let circle = new Circle(style.config, self)\n            p.push({ config: circle.toConfig(), name: key });\n            break;\n          case 'Ellipse':\n            let ellipse = new Ellipse(style.config, self)\n            p.push({ config: ellipse.toConfig(), name: key });\n            break;\n          case 'Heptagon':\n            let heptagon = new Heptagon(style.config, self)\n            p.push({ config: heptagon.toConfig(), name: key });\n            break;\n          case 'Hexagon':\n            let hexagon = new Hexagon(style.config, self)\n            p.push({ config: hexagon.toConfig(), name: key });\n            break;\n          case 'Pentagon':\n            let pentagon = new Pentagon(style.config, self)\n            p.push({ config: pentagon.toConfig(), name: key });\n            break;\n          case 'Rectangle':\n            let rectangle = new Rectangle(style.config, self)\n            p.push({ config: rectangle.toConfig(), name: key });\n            break;\n          case 'Rhombus':\n            let rhombus = new Rhombus(style.config, self)\n            p.push({ config: rhombus.toConfig(), name: key });\n            break;\n          case 'Star':\n            let star = new Star(style.config, self)\n            p.push({ config: star.toConfig(), name: key });\n            break;\n          case 'Triangle':\n            let triangle = new Triangle(style.config, self)\n            p.push({ config: triangle.toConfig(), name: key });\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    return p;\n  }\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let i = 0; i < layers.main.scene.elements.length; i++){\n      layers.main.scene.elements[i].draw(context);\n      layers.temp && layers.temp.scene.elements[i].draw(context);\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheel.bind(this),\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\n\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;\n","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si]){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n            \"precision mediump float;\",\n            \"attribute vec2 position;\",\n            \"attribute vec2 normal;\",\n            \"attribute vec2 lengthSoFar;\",\n            \"uniform float exc;\",\n            \"uniform vec2 size;\",\n            \"uniform vec2 screen;\",\n            \"uniform float aspect2;\",\n            \"uniform float aspect;\",\n            \"uniform vec2 width;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\"\n            ].concat(getShiftFuncs).concat([\n            \"void main(void) {\",\n            \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n            \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n            \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n            \"   n = normal;\",\n            \"}\"\n        ]), [\n            \"precision mediump float;\",\n            \"uniform float type;\",\n            \"uniform vec4 color;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\",\n            \"uniform float lineSize;\",\n            \"void main(void) {\",\n            \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n\t    ].concat(lineTypes).concat([\n            \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n            \"}\"\n        ]), c => {\n            let uniforms = c.shader.uniforms;\n            uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            let size = 2.5 * c.nodeSize;\n            uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            gl.uniform1f(uniforms.aspect, c.aspect);\n            gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n            gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            if (point = node.point) {\n                let point;\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nfunction isOrphan(node){\n    let orphan = true;\n    for (let i=0; i<node.parents.length; ++i){\n        let parent_ = node.parents[i];\n        if (parent_ != node)\n            orphan = false;\n    }\n    for (let i=0; i<node.children.length; ++i){\n        let child = node.children[i];\n        if (child != node)\n            orphan = false;\n    }\n    return orphan;\n}\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n    this.components = {\"current_component\": 0, \"depth\": 1};\n    this.unvisited = nodes;\n  }\n  \n  initHierarchy(){\n      this._nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n  }\n\n  separateOrphans(){\n      let orphans = [];\n      let nodes = [];\n      for (let i=0; i< this._nodes.length; ++i){\n          let node = this._nodes[i];\n          if (isOrphan(node))\n              orphans.push(node);\n          else\n              nodes.push(node);\n      }\n      return orphans;\n  }\n\n  findRoots(nodes){\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      return roots;\n  }\n\n  placeOrphans(nodes, max_layer){\n      const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].y = this.alphay + i*stepy;\n          nodes[i].x = max_layer+1;\n      }\n      if (nodes.length > 0)\n          return max_layer+1;\n      else\n          return max_layer;\n  }\n\n  unvisitedNodes(){\n      let nodes = [];\n      let orphans = this.orphans;\n      this.unvisited.forEach(function(node){\n          if (node.visited == false && !(node in orphans))\n              nodes.push(node);\n      });\n      if (nodes.length != this.unvisited){\n          this.maybe_more = true;\n          this.unvisited = nodes;\n      } else this.maybe_more = false;\n  }\n\n  placeAdditional(){\n      // place non-visited nodes in between layers\n      let aux_layers = {};\n      let c = this.components[this.components.current_component];\n      let layers = c.layers;\n      for (let i=0; i<this.unvisited.length; ++i){\n          let node = this.unvisited[i];\n          let lowest_layer = this.components.depth;\n          let child_found = false;\n          for(let j=0; j<node.children.length; ++j){\n              let child = node.children[j];\n              if (child.visited == true){\n                  child_found = true;\n                  if(child.layer <= lowest_layer){ // child has to be visited to have a layer\n                      lowest_layer = child.layer;\n                  }\n                  break;\n              }\n          }\n          if (child_found){\n              node.visited = true;\n              // node.index = lowest_layer-sep;\n              if ( !((lowest_layer-sep) in layers))\n                  layers[lowest_layer-sep] = []\n              layers[lowest_layer-sep].push(node)\n          }\n          else {\n              let lowest_layer = max_layer;\n              let parent_found = false;\n              for(let j=0; j<node.parents.length; ++j){\n                  let parent_ = node.parents[j];\n                  if (parent_.visited == true){\n                      parent_found = true;\n                      if(parent_.layer <= lowest_layer){ // child has to be visited to have a layer\n                          lowest_layer = parent_.layer;\n                      }\n                  }\n              }\n              if (parent_found){\n                  node.visited = true;\n                  node.x = lowest_layer+sep;\n                  if ( !((lowest_layer+sep) in layers) )\n                      layers[lowest_layer+sep] = []\n                  layers[lowest_layer+sep].push(node)\n              }\n          }\n      }\n  }\n\n  initializeComponent(component){\n      this.components[component] = {};\n      this.components[component].max_nodes_layer = 0;\n      if (component > 0)\n          this.components[component].index_offset = this.components[component-1].vertical_nodes;\n      else\n          this.components[component].index_offset = 0;\n      this.components[component].current_layer = 1;\n      //this.components[component].layers = {\"nodes\": [], \"layer_value\": 1};\n      this.components[component].layers = {};\n      this.components[component].vertical_nodes = 0;\n  }\n\n  layerNodes(nodes){\n      if (!(this.components.current_component in this.components))\n          this.initializeComponent(this.components.current_component);\n      let c = this.components[this.components.current_component];\n      if (nodes.length > c.vertical_nodes)\n          c.vertical_nodes = nodes.length;\n      c.layers[c.current_layer] = [];\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].visited = true;\n          c.layers[c.current_layer].push(nodes[i]);\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let candidates = nodes[i].children;\n          for (let j=0; j < candidates.length; j++){\n              if (candidates[j].visited == false && !next_layer.includes(candidates[j])){\n                  next_layer.push(candidates[j]);\n              }\n          }\n      }\n      if (next_layer.length > 0){\n          c.current_layer++;\n          if (this.components.depth<c.current_layer)\n              this.components.depth = c.current_layer;\n          this.layerNodes(next_layer);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the second of these approaches.\n\n      this.initHierarchy();\n      this.orphans = this.separateOrphans();\n      this.unvisitedNodes();\n      while (this.unvisited.length > 0){\n          let roots = this.findRoots(this.unvisited);\n          this.layerNodes(roots);\n          this.unvisitedNodes(); // update unvisited nodes\n          this.maybe_mode = true;\n          while (this.maybe_more){\n              this.placeAdditional(); // place additional nodes linked to this component\n              this.unvisitedNodes(); // update unvisited nodes\n          }\n          this.components.current_component++;\n      }\n      this.components.vertical_nodes = 0;\n      for (let i=0; i<this.components.current_component; i++){\n          this.components.vertical_nodes += this.components[i].vertical_nodes;\n      }\n\n      // layerNodes should populate the dictionary this.components of components and aux variables:\n      // components[x] is a component, x is an integer\n      // components[x].vertical_nodes is the maximum number of nodes in a layer for the component\n      // components[x].layer[j] is the j-th layer on the component, j can be fractional\n      // components[x].index_offset is the number of nodes positioned in above components\n      // components.ncomponents is the number of components\n      // components.vertical_nodes is the sum of the max nodes in any layer of each component\n      // components.depth is the maximum number of layers\n\n      // each layer of tree xy = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(this.components.depth);\n      const stepy = (1-2*this.alphay)/(this.components.vertical_nodes);\n      for (let i=0; i<this.components.current_component; i++){\n          let component = this.components[i];\n          for (let layer_val in component.layers){\n              let layer = component.layers[layer_val];\n              if (layer.length == 1){\n                  let node = layer[0];\n                  node.x = this.alphax + stepx*layer_val;\n                  node.y = this.alphay + stepy*(component.index_offset + component.vertical_nodes/2);\n              } else {\n                  for (let k=0; k<layer.length; ++k){\n                      let node = layer[k];\n                      node.x = this.alphax + stepx*layer_val;\n                      node.y = this.alphay + stepy*(component.index_offset + k);\n                  }\n              }\n          }\n      }\n      this.placeOrphans(this.orphans);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      height = Math.max(height, rect.h - char.top);\n      width += char.advance + horiBearingX;\n    }\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n\n      dx += horiBearingX;\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import Circle from \"./shapes/circle\"\nimport Ellipse from \"./shapes/ellipse\"\nimport Triangle from \"./shapes/triangle\"\nimport Rectangle from \"./shapes/rectangle\"\nimport Rhombus from \"./shapes/rhombus\"\nimport Pentagon from \"./shapes/pentagon\"\nimport Hexagon from \"./shapes/hexagon\"\nimport Heptagon from \"./shapes/heptagon\"\nimport Star from \"./shapes/star\"\n\n\nexport { Circle, Ellipse, Triangle, Rectangle, Rhombus, Pentagon, Hexagon, Heptagon, Star }","import Shape from \"../shape\"\n\nlet Circle = (config, instance) => {\n  class Circle extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Circle';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.arc(\n        (this.config.size / 2) + this.config.stroke.size,\n        (this.config.size / 2) + this.config.stroke.size,\n        this.config.size / 2, 0, 2 * Math.PI);\n      super._draw();\n    }\n  }\n  return new Circle(config, instance)\n}\n\nwindow.Circle = Circle;\nexport default Circle","import Shape from \"../shape\"\n\nlet Ellipse = (config, instance) => {\n  class Ellipse extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Ellipse';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.ellipse(\n        (this.config.size / 2) + this.config.stroke.size,\n        (this.config.size / 2) + this.config.stroke.size,\n        this.config.size / 2,\n        this.config.size / 4, Math.PI / 4, 0, 2 * Math.PI);\n      super._draw();\n    }\n  }\n  return new Ellipse(config, instance)\n}\n\nwindow.Ellipse = Ellipse;\nexport default Ellipse","import Shape from \"../shape\"\n\nlet Triangle = (config, instance) => {\n  class Triangle extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Triangle';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(1), this.t(1));\n      this.context.lineTo(this.t(0), this.t(1));\n      this.context.lineTo(this.t(0.5), this.t(0));\n      super._draw();\n    }\n  }\n  return new Triangle(config, instance)\n}\n\nwindow.Triangle = Triangle;\nexport default Triangle","import Shape from \"../shape\"\n\nlet Rectangle = (config, instance) => {\n  class Rectangle extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Rectangle';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0), this.t(0));\n      this.context.lineTo(this.t(0), this.t(1));\n      this.context.lineTo(this.t(1), this.t(1));\n      this.context.lineTo(this.t(1), this.t(0));\n      this.context.lineTo(this.t(0), this.t(0));\n      super._draw();\n    }\n  }\n  return new Rectangle(config, instance)\n}\n\nwindow.Rectangle = Rectangle;\nexport default Rectangle","import Shape from \"../shape\"\n\nlet Rhombus = (config, instance) => {\n  class Rhombus extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Rhombus';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(1), this.t(0.5));\n      this.context.lineTo(this.t(0.5), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.5));\n      this.context.lineTo(this.t(0.5), this.t(0));\n      super._draw();\n    }\n  }\n  return new Rhombus(config, instance)\n}\n\nwindow.Rhombus = Rhombus;\nexport default Rhombus","import Shape from \"../shape\"\n\nlet Pentagon = (config, instance) => {\n  class Pentagon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Pentagon';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(1), this.t(0.4));\n      this.context.lineTo(this.t(0.8), this.t(1));\n      this.context.lineTo(this.t(0.2), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.4));\n      this.context.lineTo(this.t(0.5), this.t(0));\n      super._draw();\n    }\n  }\n  return new Pentagon(config, instance)\n}\n\nwindow.Pentagon = Pentagon;\nexport default Pentagon","import Shape from \"../shape\"\n\nlet Hexagon = (config, instance) => {\n  class Hexagon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Hexagon';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.25), this.t(0));\n      this.context.lineTo(this.t(0.75), this.t(0.0));\n      this.context.lineTo(this.t(1), this.t(0.5));\n      this.context.lineTo(this.t(0.75), this.t(1));\n      this.context.lineTo(this.t(0.25), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.5));\n      this.context.lineTo(this.t(0.25), this.t(0));\n      super._draw();\n    }\n  }\n  return new Hexagon(config, instance)\n}\n\nwindow.Hexagon = Hexagon;\nexport default Hexagon","import Shape from \"../shape\"\n\nlet Heptagon = (config, instance) => {\n  class Heptagon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Heptagon';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(0.9), this.t(0.2));\n      this.context.lineTo(this.t(1), this.t(0.7));\n      this.context.lineTo(this.t(0.7), this.t(1));\n      this.context.lineTo(this.t(0.3), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.7));\n      this.context.lineTo(this.t(0.1), this.t(0.2));\n      this.context.lineTo(this.t(0.5), this.t(0));\n      super._draw();\n    }\n  }\n  return new Heptagon(config, instance)\n}\n\nwindow.Heptagon = Heptagon;\nexport default Heptagon","import Shape from \"../shape\"\n\nlet Star = (config, instance) => {\n  class Star extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Star';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(0.8), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.4));\n      this.context.lineTo(this.t(1), this.t(0.4));\n      this.context.lineTo(this.t(0.2), this.t(1));\n      super._draw();\n    }\n  }\n  return new Star(config, instance)\n}\n\nwindow.Star = Star;\nexport default Star","/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function max(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var max = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] > max) max = input[i];\n    }\n    return max;\n}\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nexport default function rescale(input, options = {}) {\n    if (!Array.isArray(input)) {\n        throw new TypeError('input must be an array');\n    } else if (input.length === 0) {\n        throw new TypeError('input must not be empty');\n    }\n\n    let output;\n    if (options.output !== undefined) {\n        if (!Array.isArray(options.output)) {\n            throw new TypeError('output option must be an array if specified');\n        }\n        output = options.output;\n    } else {\n        output = new Array(input.length);\n    }\n\n    const currentMin = min(input);\n    const currentMax = max(input);\n\n    if (currentMin === currentMax) {\n        throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n    }\n\n    const {\n        min: minValue = options.autoMinMax ? currentMin : 0,\n        max: maxValue = options.autoMinMax ? currentMax : 1\n    } = options;\n\n    if (minValue >= maxValue) {\n        throw new RangeError('min option must be smaller than max option');\n    }\n\n    const factor = (maxValue - minValue) / (currentMax - currentMin);\n    for (var i = 0; i < input.length; i++) {\n        output[i] = (input[i] - currentMin) * factor + minValue;\n    }\n\n    return output;\n}\n","/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function min(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var min = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] < min) min = input[i];\n    }\n    return min;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}