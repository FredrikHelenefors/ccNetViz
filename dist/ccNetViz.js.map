{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/shaders/index.js","webpack:///./src/shaders/easeFunctions/index.js","webpack:///./src/shaders/easeFunctions/linear.glsl","webpack:///./src/shaders/easeFunctions/sin-in.glsl","webpack:///./src/shaders/easeFunctions/sin-out.glsl","webpack:///./src/shaders/easeFunctions/sin-inout.glsl","webpack:///./src/shaders/easeFunctions/exp-in.glsl","webpack:///./src/shaders/easeFunctions/exp-out.glsl","webpack:///./src/shaders/easeFunctions/exp-inout.glsl","webpack:///./src/shaders/easeFunctions/bounce-in.glsl","webpack:///./src/shaders/easeFunctions/bounce-out.glsl","webpack:///./src/shaders/easeFunctions/bounce-inout.glsl","webpack:///./src/shaders/easeFunctions/circular-in.glsl","webpack:///./src/shaders/easeFunctions/circular-out.glsl","webpack:///./src/shaders/easeFunctions/circular-inout.glsl","webpack:///./src/shaders/easeFunctions/quad-in.glsl","webpack:///./src/shaders/easeFunctions/quad-out.glsl","webpack:///./src/shaders/easeFunctions/quad-inout.glsl","webpack:///./src/shaders/easeFunctions/cubic-in.glsl","webpack:///./src/shaders/easeFunctions/cubic-out.glsl","webpack:///./src/shaders/easeFunctions/cubic-inout.glsl","webpack:///./src/shaders/easeFunctions/quart-in.glsl","webpack:///./src/shaders/easeFunctions/quart-out.glsl","webpack:///./src/shaders/easeFunctions/quart-inout.glsl","webpack:///./src/shaders/easeFunctions/quint-in.glsl","webpack:///./src/shaders/easeFunctions/quint-out.glsl","webpack:///./src/shaders/easeFunctions/quint-inout.glsl","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","toString","endsWith","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","animateColor","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Color","_classCallCheck","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","context","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","width","height","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x1","y1","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","size","wantedSize","label","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","default","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","remove","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","canvas","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","sCanvas","document","createElement","getContext","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","_this","backgroundStyle","background","backgroundColor","removed","setted","minSize","maxSize","edgeStyle","arrow","animateSpeed","texture","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","ccNetVizPlugins","Integration","shapes","Promise","config","then","plugin","main","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","startTime","Date","now","drawOnce","scene","elements","animateType","drawLoop","renderTime","requestAnimationFrame","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","mousedown","touchstart","wheel","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","redraw","hasEdgeAnimation","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","boxMinusX","boxMinusY","relative","steps","labelsBackgroundFiller","endPosX","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","startPos","endPos","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","is_bidirectional_overlap","bidirectional","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","labelsBackground","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","animateStylesTransl","none","basic","gradient","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","easeFunctionPart","easeFunctions","animateEase","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","getEdgeAnimateType","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","f","sdfSize","scale","vsLabelsShader","bindLabels","is_outline","getLabelType","buffer","boldness","height_font","outlineColor","_shaders","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","time","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x0","y0","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_easeFunctions","linear","sin-in","sinIn","sin-out","sinOut","sin-inout","sinInOut","exp-in","expIn","exp-out","expOut","exp-inout","expInOut","bounce-in","bounceIn","bounce-out","bounceOut","bounce-inout","bounceInOut","circular-in","circularIn","circular-out","circularOut","circular-inout","circularInOut","quad-in","quadIn","quad-out","quadOut","quad-inout","quadInOut","cubic-in","cubicIn","cubic-out","cubicOut","cubic-inout","cubicInOut","quart-in","quartIn","quart-out","quartOut","quart-inout","quartInOut","quint-in","quintIn","quint-out","quintOut","quint-inout","quintInOut","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","display","_el","body","appendChild","_context","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","fontStyle","curFont","stringify","markDirty","wordWidth","widthArray","replace","char","_getChar","h","advance","String","fromCharCode","charArray","w","alignment","textArray","split","_getCharArray","character","spriteGenerator","SpriteGenerator","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","widthAndHeightObj","getWidthAndHeight","alignText","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","round","textSize","cutoff","strokeText","fontFamily","family","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","grid","stride","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","callNow","pushUnique","_layers","_insertTempLayer","_draw","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","lib_es6","input","src_default","TypeError","ml_array_min_lib_es6","ml_array_rescale_lib_es6","output","currentMin","currentMax","RangeError","_options$min","minValue","autoMinMax","_options$max","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","isArray","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"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cAAiB,WACpB,OAAOtB,EAAKpZ,MAAMC,OAASyoB,GAG7B,IAAIuC,EAAoB,SAACvtB,GACvB,OAAOA,EAAEgN,MAAO,KAQdwgB,GACFC,KAAQ,EACRC,OAAY,EACZC,eAAgB,EAChBC,OAAU,GAERC,EAAc,SAAChtB,GASjB,YARSoI,IAANpI,IACDA,EAAI2sB,EAAa3sB,SAGVoI,IAANpI,GAAgC,iBAANA,IAC3BA,EAAI,GAGCA,GAGLitB,GACFC,KAAQ,EACRC,MAAS,EACTC,SAAY,GAcdtkB,KAAKtH,SACLsH,KAAKrH,SAEL,IAAI+C,EAAaD,EAAK4a,UAAYkO,eAAe9oB,EAAI,+BACjDub,GAAQhX,KAAKgX,MAulBjB,WACI,OACIC,YACAuN,IAAK,SAACjuB,EAAMuC,GACRke,GAAMzgB,GAAQuC,EACdke,GAAMC,SAASzX,KAAK1G,MA5lBK3C,KAAK6J,MAEtCykB,IAAa,EACjB,IAAIhpB,EAAgF,OAA1EgB,EAAQD,SAAWioB,KAAeA,IAAa,IAAShoB,EAAQD,SAAiBwD,KAE3F,IAMM0kB,IACF,2BACA,sBACA,6BACA,mBACA,oBACA,kEACA,KAGEC,IACF,2BACA,kCACA,8BACA,qCACA,sBACA,wBACA,0BACA,uDACA,2BACA,gBACA,oBACA,yCACA,+DACA,+CACA,WACA,mEACA,MACA,KAaEC,IACF,sBACA,gCACA,gCACA,4BACA,iCACA,gDACA,4BACA,gCACA,QAaEC,IACF,kDACA,eACA,yBACA,SACA,uBACA,sBACA,sBACA,8BACA,0BACA,kBACA,8BACA,oBACA,4EACE1sB,OAAOysB,IAAWzsB,QACpB,wBACA,wBACA,yCACA,yCACA,6DACA,0CACA,+BACA,sEACA,MAIE2sB,IACF,6BACA,6BACA,+DACA,6CACA,oFACA,IACA,8BACA,8BACA,wCACA,KAGEC,IAAmB,GAClBC,gBAAczS,EAAU0S,YAAc1S,EAAU0S,YAAc,WAuPrE,GAlNIjlB,KAAKge,iBACLhH,GAAMwN,IAAI,QAAS,IAAIpG,UAAmB3iB,EAAI8W,EAAW,MACjD,2BACA,2BACA,yBACA,8BACA,2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2BACA,4BACA,+BACA,6BACA,wBACA,0BACA,qBACA,uBACA,qBACA,yBACA,0BACA,oBACEpa,OAAO2sB,IAAe3sB,QACxB,oBACA,sDACA,yCACA,iCACA,8MACA,wBACA,MACAusB,GAAgBltB,GAAMouB,KAG1BlqB,EAAWomB,2BACX9K,GAAMwN,IAAI,cAAe,IAAIpG,UAAmB3iB,EAAI8W,EAAW,SACvD,2BACA,4BACA,+BACA,6BACA,wBACA,0BACA,qBACA,qBACA,sBACA,uBACA,yBACA,0BACA,oBACEpa,OAAO2sB,IAAe3sB,QACxB,oBACA,oEACA,+DACA,iCACA,yCACA,iCACA,6MACA,wBACA,MACAusB,GAAgBltB,GAAMouB,KAE9B5O,GAAMwN,IAAI,eAAgB,IAAIpG,UAAmB3iB,EAAI8W,EAAW,SACxD,2BACA,4BACA,+BACA,6BACA,wBACA,0BACA,qBACA,uBACA,qBACA,yBACA,0BACA,oBACEpa,OAAO2sB,IAAe3sB,QACxB,oBACA,yBACA,+CACA,wNACA,wBACA,MACAusB,GAAgBltB,GAAMouB,MAKtC5O,GAAMwN,IAAI,QAAS,IAAIpG,UAAmB3iB,EAAIgM,EAAW,MACjD,2BACA,+BACA,qBACA,0BACA,mBACA,oBACA,0GACA,wBACA,KACDid,GAAgB,SAAAruB,GACf,IAAIuO,EAAOmP,EAAY1d,GACnB6uB,EAAW7uB,EAAE8uB,OAAOD,SACxBzpB,EAAG6pB,UAAUJ,EAAStgB,KAAMA,EAAOvO,EAAEgN,MAAOuB,EAAOvO,EAAEiN,QACrD+S,UAAYqP,aAAajqB,EAAIypB,EAAS/mB,MAAO9H,EAAEgJ,MAAMlB,UAG7D6Y,GAAMwN,IAAI,eAAgB,IAAIpG,UAAmB3iB,EAAIgM,EAAW,MACxD,2BACA,+BACA,wBACA,qBACA,0BACA,mBACA,kBACA,oBACA,0GACA,wBACA,gBACA,MA7bJ,2BACA,6BACA,mBACA,kBACA,oBACA,8DACA,KAwbsB,SAAApR,GAClB,IAAIuO,EAAOmP,EAAY1d,GACnB6uB,EAAW7uB,EAAE8uB,OAAOD,SACxBzpB,EAAG6pB,UAAUJ,E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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport function create2dArray (rows, columns) {\r\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\r\n}\r\n\r\nexport function degrees(nodes, edges) {\r\n  // should return ordered nodes and their degrees - high to low\r\n  let degrees = Array(nodes.length).fill(0);\r\n  edges.forEach(function(e) {\r\n      degrees[e.source.index] += 1;\r\n      degrees[e.target.index] += 1;\r\n  }); // check to see if not getting double of the degree in undirected graphs\r\n  //getting the order of nodes from highest to lowest degrees\r\n  let ordered_nodes = degrees.map(function(el, i) {\r\n      return { index: i, value: el };\r\n  });\r\n  ordered_nodes.sort(function(a, b) {\r\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\r\n  });\r\n  let ordered_degrees = ordered_nodes.map(function(el){\r\n      return degrees[el.index];\r\n  });\r\n  return { nodes: ordered_nodes,\r\n           degrees: ordered_degrees } ;\r\n}\r\n\r\nexport function getDepth(obj) {\r\n    let depth = 0;\r\n    if (obj.children) {\r\n        obj.children.forEach(function (d) {\r\n\t    if (d.depth_visited == true){\r\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\r\n\t    }\r\n\t    d.depth_visited = true;\r\n            let tmpDepth = getDepth(d);\r\n            if (tmpDepth > depth) {\r\n                depth = tmpDepth;\r\n            }\r\n        })\r\n    }\r\n    return 1 + depth;\r\n}\r\n\r\nexport function getRanges(n) {\r\n  n = Math.abs(n);\r\n  if(n <= 1){\r\n      return {\r\n        start: 0.5,\r\n        step: 1\r\n      };\r\n  }\r\n  let start = .05;\r\n  return {\r\n      start,\r\n      step: (1-2*start)/(n-1)\r\n  }\r\n}\r\n\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class Utils {\r\n  static extend(from){\r\n    for(var i = 1; i < arguments.length; i++){\r\n      for(var k in arguments[i]){\r\n        from[k] = arguments[i][k];\r\n      }\r\n    }\r\n    return from;\r\n  }\r\n  \r\n  static isObject (obj) {\r\n    return obj === Object(obj);\r\n  }\r\n  \r\n  static emptyObject(obj) {\r\n    if(!Utils.isObject(obj))\r\n      return false;\r\n\r\n    for(var k in obj)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  static ajax(url, callback, type){\r\n    var xmlhttp;\r\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\r\n    xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = (function(cbk){\r\n      return function(){\r\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\r\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\r\n        }\r\n      }\r\n    })(callback);\r\n    if(type) xmlhttp.responseType=type;\r\n    xmlhttp.open(\"GET\", url, true);\r\n    xmlhttp.send();\r\n  }\r\n\r\n};","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n // initialises webGL\r\n\r\nexport default class {\r\n  static initExtensions(gl) {\r\n      let extensions = gl.getSupportedExtensions();\r\n      let result = {};\r\n      for (let i = 1; i < arguments.length; i++) {\r\n          let e = arguments[i];\r\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\r\n      }\r\n      return result;\r\n  }\r\n  // compiles shader \r\n  \r\n  static createShader(gl, type, source) {\r\n      let result = gl.createShader(type);\r\n      gl.shaderSource(result, source);\r\n      gl.compileShader(result);\r\n\r\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\r\n          console.log(gl.getShaderInfoLog(result));\r\n          return null;\r\n      }\r\n      return result;\r\n  }\r\n\r\n// texture binding\r\n\r\n  static createTexture(gl, img, onLoad, options) {\r\n      let result = gl.createTexture();\r\n\r\n      let image = new Image();\r\n      \r\n      let load = () => {\r\n            image.onload = null;\r\n            gl.bindTexture(gl.TEXTURE_2D, result);\r\n\r\n            //refer article https://open.gl/textures\r\n\r\n            if((options || {}).sdf){\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }else{\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            onLoad && onLoad();\r\n      }\r\n\r\n      image.onload = load;\r\n      image.src = img;\r\n      image.naturalWidth && image.naturalHeight && load();\r\n      \r\n      result.image = image;\r\n      return result;\r\n  }\r\n\r\n  static uniformColor(gl, location, color) {\r\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\r\n  }\r\n\r\n  static ortho(left, right, bottom, top, near, far) {\r\n      let lr = 1 / (left - right),\r\n          bt = 1 / (bottom - top),\r\n          nf = 1 / (near - far);\r\n\r\n      let result = new Float32Array(16);\r\n      result[0] = -2 * lr;\r\n      result[1] = 0;\r\n      result[2] = 0;\r\n      result[3] = 0;\r\n      result[4] = 0;\r\n      result[5] = -2 * bt;\r\n      result[6] = 0;\r\n      result[7] = 0;\r\n      result[8] = 0;\r\n      result[9] = 0;\r\n      result[10] = 2 * nf;\r\n      result[11] = 0;\r\n      result[12] = (left + right) * lr;\r\n      result[13] = (top + bottom) * bt;\r\n      result[14] = (far + near) * nf;\r\n      result[15] = 1;\r\n      return result;\r\n  }\r\n};\r\n","import ccNetViz_color  from './color' ;\r\n\r\nfunction partitionByStyle(data){\r\n    let parts = {};\r\n    \r\n    let pN = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let el = data[i];\r\n        let part = parts[el.style] = parts[el.style] || [];\r\n        if(part.idx === undefined)\r\n          part.idx = [];\r\n        part.idx.push(i); \r\n\r\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\r\n        \r\n        part.push(el);\r\n    }\r\n    \r\n    return parts;\r\n}\r\n\r\nfunction getPartitionStyle(style, baseStyle, styleProperty){\r\n    let result = {};\r\n\r\n    let copy = s => {\r\n        if (s) for (let p in s) result[p] = s[p];\r\n    };\r\n\r\n    copy(baseStyle);\r\n    copy(style);\r\n\r\n    if (styleProperty) {\r\n        copy(baseStyle[styleProperty]);\r\n        style && copy(style[styleProperty]);\r\n    }\r\n    result.color = result.color && new ccNetViz_color(result.color);\r\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\r\n    return result;\r\n};\r\n\r\n\r\nexport {partitionByStyle, getPartitionStyle};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// refer edge to edge example\r\n//  each edge if\r\n//  i) from node to node, has source and edge both node\r\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\r\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\r\n\r\n export default class {\r\n  static edgeSource(e) {\r\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\r\n      let s = this.edgeSource(e.source);\r\n      let t = this.edgeTarget(e.source);\r\n      return {\r\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\r\n              y: (s.y+t.y)/2, //middle of y-coordinate\r\n              uniqid: e.uniqid, \r\n              index: e.index, \r\n              is_edge: true, \r\n              e: e.source\r\n      };\r\n    }\r\n    \r\n    return e.source;\r\n  }\r\n\r\n  static edgeTarget (e) {\r\n    if(e.target.source){\r\n      //target is edge\r\n      let s = this.edgeSource(e.target);\r\n      let t = this.edgeTarget(e.target);\r\n      \r\n      return {\r\n              x: (s.x+t.x)/2,\r\n              y: (s.y+t.y)/2,\r\n              uniqid: e.uniqid,\r\n              index: e.index,\r\n              is_edge: true,\r\n              e: e.target\r\n      };\r\n    }\r\n\r\n    return e.target;\r\n  }\r\n\r\n  static getCurveShift (e, r){\r\n      r = r || {};\r\n      r.x = r.y = r.cx = r.cy = 0;\r\n      if(!e)\r\n        return r;\r\n      if(e.t && e.t >= 1){\t//curve or circle\r\n        if(e.t >= 2){ //circle\r\n          let s = this.edgeSource(e);\r\n          let d = s.y < 0.5 ? 1 : -1;\r\n\r\n          r.cx = d * 1.25;\r\n          r.cy = 0;\r\n        }else{\r\n          let se = this.edgeSource(e);\r\n          let te = this.edgeTarget(e);\r\n\r\n          r.x = se.x - te.x;\r\n          r.y = se.y - te.y;\r\n        }\r\n      }\r\n      return r;\r\n  }\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n/**\r\n * @class\r\n * @classdesc Describes color properties that could be given to the shader.\r\n * @member {number} r\r\n * @member {number} g\r\n * @member {number} b\r\n * @member {number} a\r\n */\r\n\r\n\r\nexport default class Color {\r\n    constructor(color) {\r\n\r\n        // Default value for red, blue and green.\r\n        // Black color is rendered.\r\n        this.r = this.g = this.b = 0;\r\n        this.a = 1;\r\n\r\n        if (color instanceof Color) {\r\n            this.r = color.r;\r\n            this.g = color.g;\r\n            this.b = color.b;\r\n            this.a = color.a;\r\n        } else if (arguments.length >= 3) {\r\n\r\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\r\n            // Aplha value is optional.\r\n            this.r = arguments[0];\r\n            this.g = arguments[1];\r\n            this.b = arguments[2];\r\n            arguments.length > 3 && (this.a = arguments[3]);\r\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\r\n            // Aplha value is optional.\r\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n            this.a = get(color[4]);\r\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\r\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\r\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 100;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\r\n\r\n            // color is of the form '#23ff74'.\r\n            color = parseInt(color.substring(1), 16);\r\n\r\n            // Converts to range [0,1] by using bitwise operator.\r\n            this.r = (color >> 16 & 255) / 255;\r\n            this.g = (color >> 8 & 255) / 255;\r\n            this.b = (color & 255) / 255;\r\n        }\r\n    }\r\n};","import layoutForce from './force' ;\r\nimport layoutRandom from './random' ;\r\nimport layoutCircular from './circular' ;\r\nimport layoutTree from './tree' ;\r\nimport layoutTreeT from './treeT' ;\r\nimport layoutHierarchical from './hierarchical' ;\r\n//import layoutHierarchical2 from './hierarchical2' ;\r\nimport layoutSpectral from './spectral' ;\r\nimport layoutSpectral2 from './spectral2' ;\r\nimport layoutHive from './hive' ;\r\nimport layoutGrid from './grid' ;\r\nimport layoutVersinus from './versinus' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  static get force(){\r\n    return layoutForce;\r\n  }\r\n  static get random(){\r\n    return layoutRandom;\r\n  }\r\n  static get circular(){\r\n    return layoutCircular;\r\n  }\r\n  static get tree(){\r\n    return layoutTree;\r\n  }\r\n  static get tree2(){\r\n    return layoutTreeT;\r\n  }\r\n  static get hierarchical(){\r\n    return layoutHierarchical;\r\n  }\r\n/*  static get hierarchical2(){\r\n    return layoutHierarchical2;\r\n  }*/\r\n  static get spectral(){\r\n    return layoutSpectral;\r\n  }\r\n  static get spectral2(){\r\n    return layoutSpectral2;\r\n  }\r\n  static get hive(){\r\n    return layoutHive;\r\n  }\r\n  static get grid(){\r\n    return layoutGrid;\r\n  }static get versinus(){\r\n    return layoutVersinus;\r\n  }\r\n  \r\n  static normalize (nodes, dim) {\r\n    let minX, minY, n = nodes.length;\r\n    \r\n    if (dim) {\r\n        minX = dim.minX;\r\n        minY = dim.minY;\r\n    }\r\n    else {\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n        minX = minY = Infinity;\r\n        \r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            maxX = Math.max(maxX, o.x);\r\n            maxY = Math.max(maxY, o.y);\r\n            minX = Math.min(minX, o.x);\r\n            minY = Math.min(minY, o.y);\r\n        };\r\n        \r\n        dim = {\r\n            maxX: maxX,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            minY: minY\r\n        }\r\n    }\r\n\r\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\r\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        let o = nodes[i];\r\n        o.x = scX * (o.x - minX);\r\n        o.y = scY * (o.y - minY);\r\n    }\r\n    \r\n    return dim;\r\n  }\r\n  \r\n}\r\n","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport ccNetViz_utils from '../utils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\nimport {\r\n        EPS,\r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      } from './geomtools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nlet ct = {};\r\nfunction getEdgeShift(context, screensize, e, ct){\r\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\r\n  \r\n  \r\n  //compute all transformations made in the vertex shader\r\n  let ctx,cty,citx,city;\r\n  \r\n  ctx = -ct.y;\r\n  cty = ct.x * context.aspect2;\r\n  \r\n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\r\n  \r\n  if(eq(len2, 0)){\r\n    ctx = 0;\r\n    cty = 0;\r\n  }else{\r\n    let len = Math.sqrt(len2);\r\n    ctx *= context.curveExc * 0.25 * screensize / len;\r\n    cty *= context.curveExc * 0.25 * screensize / len;\r\n  }\r\n\r\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\r\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\r\n  citx = -ct.cy * 0.5 * sizex;\r\n  city = ct.cx * 0.5 * sizey;\r\n  \r\n  ct.x = ctx + citx;\r\n  ct.y = cty + city;\r\n}\r\n\r\nclass Node{\r\n  constructor(n){\r\n    this.e = n;\r\n  };\r\n  get isNode(){\r\n    return true;\r\n  };\r\n  getBBox(){\r\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2){\r\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context){\r\n    return distance2(x,y,this.e.x,this.e.y);\r\n  };\r\n}\r\n\r\nclass Label{\r\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\r\n    this.e = n;\r\n    this.pos = textpos;\r\n    this.style = style;\r\n    this.fontSize = fontSize;\r\n    this.isSDF = isSDF;\r\n    this.getLabelSize = getLabelSize;\r\n  };\r\n  get isLabel(){\r\n    return true;\r\n  };\r\n  getTextPos(context,size){\r\n    let x = this.e.x;\r\n    let y = this.e.y;\r\n    \r\n    let x1,y1,x2,y2;\r\n    x1 = x2 = x;\r\n    y1 = y2 = y;\r\n    \r\n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\r\n\r\n    let fontScale = wantedSize / this.fontSize;\r\n    if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    let step = (edge, x) => (x < edge ? 0 : 1);\r\n\r\n\r\n    const offset = 0.5 * context.nodeSize;    \r\n    const MAX =  10.;\r\n    const MIN = -10.;\r\n    let bbox = [MAX, MAX, MIN, MIN];\r\n    \r\n    \r\n    this.pos.forEach((c) => {\r\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\r\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\r\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\r\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\r\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\r\n      \r\n      bbox[0] = Math.min(x1,bbox[0]);\r\n      bbox[1] = Math.min(y1,bbox[1]);\r\n      bbox[2] = Math.max(x2,bbox[2]);\r\n      bbox[3] = Math.max(y2,bbox[3]);\r\n    });\r\n    \r\n    return bbox;\r\n  };\r\n  getBBox(context){\r\n    let bb = this.getTextPos(context,1);\r\n    bb[0] = Math.min(bb[0],this.e.x);\r\n    bb[1] = Math.min(bb[1],this.e.y);\r\n    bb[2] = Math.max(bb[2],this.e.x);\r\n    bb[3] = Math.max(bb[3],this.e.y);\r\n    return bb;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2,context,size){\r\n    let t = this.getTextPos(context,size);\r\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let t = this.getTextPos(context, size);\r\n\r\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\r\n      return 0;\r\n    \r\n    //minimum from distance from corners or distance from borders\r\n    return Math.min(\r\n      distance2(t[0],t[1]),\r\n      distance2(t[2],t[3]),\r\n      distance2(t[0],t[3]),\r\n      distance2(t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\r\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\r\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \r\n    );\r\n  };\r\n}\r\n\r\nclass Line{\r\n  constructor(l){\r\n    this.e = l;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getPoints(context, size){\r\n    let x1,y1,x2,y2;\r\n    \r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n    \r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y;\r\n    \r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    return [x1,y1,x2,y2];\r\n  };\r\n  getBBox(context, size){\r\n    let p = this.getPoints(context, size);\r\n    \r\n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\r\n  };\r\n}\r\n\r\nclass Circle{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, screensize){\r\n    let x1,y1,s;\r\n    s = ccNetViz_geomutils.edgeSource(this.e);\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n\r\n    let size = 2.5 * context.nodeSize * screensize;\r\n    let xsize = size / context.width / 2;\r\n    let ysize = size / context.height / 2;\r\n\r\n    let d = s.y < 0.5 ? 1 : -1;\r\n\r\n    getEdgeShift(context, screensize, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    \r\n    return [\r\n      x1,\r\n      y1,\r\n      x1 + xsize*1,\r\n      y1 + ysize*d,\r\n      x1,\r\n      y1 + ysize*1.25*d,\r\n      x1 - xsize*1,\r\n      y1 + ysize*d\r\n    ];\r\n  };\r\n  getBBox(context, size){\r\n    let v = this.getBezierPoints(context, size);\r\n    \r\n    return getBBFromPoints(v);\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context,size);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y,context,size){\r\n    let v = this.getBezierPoints(context,size);\r\n\r\n    //circle is just 2 bezier curves :)\r\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\r\n\r\n    return Math.min(d1,d2);\r\n  };\r\n}\r\n\r\nclass Curve{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, size, normalize){\r\n    let x1,x2,y1,y2;\r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y; \r\n    \r\n    let d = normalize(s, t);\r\n    \r\n    let n2 = d.y;\r\n    let n3 = context.aspect2*-d.x;\r\n\r\n    let x = context.width * n2;\r\n    let y = context.height* n3;\r\n    let l = Math.sqrt(x*x+y*y)*2;\r\n\r\n    n2 *= context.curveExc*size/l;\r\n    n3 *= context.curveExc*size/l;\r\n\r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    let ret = [\r\n      x1,\r\n      y1,\r\n      (x1+x2)/2 + n2,\r\n      (y1+y2)/2 + n3,\r\n      x2,\r\n      y2\r\n    ];\r\n    return ret;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\r\n  };\r\n  getBBox(context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return getBBFromPoints(v);\r\n  };\r\n  dist2(x,y, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n  };\r\n}\r\n\r\n\r\nfunction sortByDistances(e1, e2){\r\n  return e1.dist2 - e2.dist2;\r\n}\r\n\r\n\r\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\r\n\r\nexport default class spatialIndex{\r\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\r\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\r\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\r\n    \r\n    this.texts = texts;\r\n    this.normalize = normalize;\r\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\r\n    let i = 0, d = [];\r\n\r\n    let addEntity = (e, d, i) => {\r\n      d[i] = e.getBBox(c, size, normalize);\r\n      d[i].push(e);\r\n      return e;\r\n    };\r\n    \r\n    nodes.forEach((n) => {\r\n      t.nodes.push(addEntity(new Node(n), d, i++));\r\n    });\r\n\r\n    lines.forEach((l) => {\r\n      t.lines.push(addEntity(new Line(l), d, i++));\r\n    });\r\n\r\n    circles.forEach((c) => {\r\n      t.circles.push(addEntity(new Circle(c), d, i++));\r\n    });\r\n    \r\n    curves.forEach((c) => {\r\n      t.curves.push(addEntity(new Curve(c), d, i++));\r\n    });\r\n\r\n\r\n    let sd = {};\r\n    let sdi = {};\r\n\r\n\r\n    //labels position could differ by style >> must partition by it\r\n    for(let style in nodesParts){\r\n      let nodes = nodesParts[style];\r\n\r\n\r\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\r\n      let textEngine = texts.getEngine(ns.font);\r\n      textEngine.setFont(ns.font);\r\n      const fontSize = textEngine.fontSize;\r\n      const isSDF = textEngine.isSDF;\r\n\r\n      let sd_n = (sd[style] || (sd[style] = []));\r\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\r\n\r\n      //biggest size in which the text is shown\r\n      c.size = getLabelHideScreen(c, ns.label || {});\r\n      nodes.forEach((n) => {\r\n        let textpos = textEngine.get(n.label, n.x, n.y);\r\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\r\n      });\r\n\r\n      sdi[style] = sdi_n;\r\n    }\r\n\r\n    this.rbushtree_s = {};\r\n    for(let style in sd){\r\n        let rb = this.rbushtree_s[style] = rbush();\r\n        rb.load(sd[style]);\r\n    }\r\n\r\n    //tree initialization\r\n    this.rbushtree = rbush();\r\n    this.rbushtree.load(d);\r\n    \r\n    \r\n    //restore the size of scale (loosen outer the upper bound)\r\n    c.size = oldsize;\r\n  }\r\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\r\n    if(nodes && e.isNode){\r\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(edges && e.isEdge){\r\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(labels && e.isLabel){\r\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n  }\r\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\r\n    if(x1 > x2){\r\n      let p = x1;\r\n      x1 = x2;\r\n      x2 = p;\r\n    }\r\n    if(y1 > y2){\r\n      let p = y1;\r\n      y1 = y2;\r\n      y2 = p;\r\n    }\r\n\r\n    \r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let x = (x1+x2)/2;\r\n    let y = (y1+y2)/2;\r\n\r\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n    \r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;    \r\n  }\r\n  find(context, x,y, radius, size, nodes, edges, labels){\r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let xradius = radius;\r\n    let yradius = radius;\r\n\r\n    let radius2 = radius*radius;\r\n\r\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(dist2 > radius2)\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n\r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  update(context, t, i, v){\r\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\r\n    let size = 1;\r\n\r\n    this.rbushtree.remove(this.types[t][i]);\r\n\r\n    let e = new tConst[t](v);\r\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\r\n    arr.push(e);\r\n\r\n    this.rbushtree.insert(this.types[t][i] = arr);\r\n  }\r\n}","/*\r\n (c) 2015, Vladimir Agafonkin\r\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\r\n https://github.com/mourner/rbush\r\n*/\r\n\r\n\r\nfunction rbush(maxEntries, format) {\r\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\r\n\r\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n    this._maxEntries = Math.max(4, maxEntries || 9);\r\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n\r\n    if (format) {\r\n        this._initFormat(format);\r\n    }\r\n\r\n    this.clear();\r\n}\r\n\r\nrbush.prototype = {\r\n\r\n    all: function () {\r\n        return this._all(this.data, []);\r\n    },\r\n\r\n    search: function (bbox) {\r\n\r\n        var node = this.data,\r\n            result = [],\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return result;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf) result.push(child);\r\n                    else if (contains(bbox, childBBox)) this._all(child, result);\r\n                    else nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    collides: function (bbox) {\r\n\r\n        var node = this.data,\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return false;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf || contains(bbox, childBBox)) return true;\r\n                    nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    load: function (data) {\r\n        if (!(data && data.length)) return this;\r\n\r\n        if (data.length < this._minEntries) {\r\n            for (var i = 0, len = data.length; i < len; i++) {\r\n                this.insert(data[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // recursively build the tree with the given data from stratch using OMT algorithm\r\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n        if (!this.data.children.length) {\r\n            // save as is if tree is empty\r\n            this.data = node;\r\n\r\n        } else if (this.data.height === node.height) {\r\n            // split root if trees have the same height\r\n            this._splitRoot(this.data, node);\r\n\r\n        } else {\r\n            if (this.data.height < node.height) {\r\n                // swap trees if inserted one is bigger\r\n                var tmpNode = this.data;\r\n                this.data = node;\r\n                node = tmpNode;\r\n            }\r\n\r\n            // insert the small tree into the large tree at appropriate level\r\n            this._insert(node, this.data.height - node.height - 1, true);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    insert: function (item) {\r\n        if (item) this._insert(item, this.data.height - 1);\r\n        return this;\r\n    },\r\n\r\n    clear: function () {\r\n        this.data = {\r\n            children: [],\r\n            height: 1,\r\n            bbox: empty(),\r\n            leaf: true\r\n        };\r\n        return this;\r\n    },\r\n\r\n    remove: function (item) {\r\n        if (!item) return this;\r\n\r\n        var node = this.data,\r\n            bbox = this.toBBox(item),\r\n            path = [],\r\n            indexes = [],\r\n            i, parent, index, goingUp;\r\n\r\n        // depth-first iterative tree traversal\r\n        while (node || path.length) {\r\n\r\n            if (!node) { // go up\r\n                node = path.pop();\r\n                parent = path[path.length - 1];\r\n                i = indexes.pop();\r\n                goingUp = true;\r\n            }\r\n\r\n            if (node.leaf) { // check current node\r\n                index = node.children.indexOf(item);\r\n\r\n                if (index !== -1) {\r\n                    // item found, remove the item and condense tree upwards\r\n                    node.children.splice(index, 1);\r\n                    path.push(node);\r\n                    this._condense(path);\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\r\n                path.push(node);\r\n                indexes.push(i);\r\n                i = 0;\r\n                parent = node;\r\n                node = node.children[0];\r\n\r\n            } else if (parent) { // go right\r\n                i++;\r\n                node = parent.children[i];\r\n                goingUp = false;\r\n\r\n            } else node = null; // nothing found\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    toBBox: function (item) { return item; },\r\n\r\n    compareMinX: function (a, b) { return a[0] - b[0]; },\r\n    compareMinY: function (a, b) { return a[1] - b[1]; },\r\n\r\n    toJSON: function () { return this.data; },\r\n\r\n    fromJSON: function (data) {\r\n        this.data = data;\r\n        return this;\r\n    },\r\n\r\n    _all: function (node, result) {\r\n        var nodesToSearch = [];\r\n        while (node) {\r\n            if (node.leaf) result.push.apply(result, node.children);\r\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\r\n\r\n            node = nodesToSearch.pop();\r\n        }\r\n        return result;\r\n    },\r\n\r\n    _build: function (items, left, right, height) {\r\n\r\n        var N = right - left + 1,\r\n            M = this._maxEntries,\r\n            node;\r\n\r\n        if (N <= M) {\r\n            // reached leaf level; return leaf\r\n            node = {\r\n                children: items.slice(left, right + 1),\r\n                height: 1,\r\n                bbox: null,\r\n                leaf: true\r\n            };\r\n            calcBBox(node, this.toBBox);\r\n            return node;\r\n        }\r\n\r\n        if (!height) {\r\n            // target height of the bulk-loaded tree\r\n            height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n            // target number of root entries to maximize storage utilization\r\n            M = Math.ceil(N / Math.pow(M, height - 1));\r\n        }\r\n\r\n        node = {\r\n            children: [],\r\n            height: height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        // split the items into M mostly square tiles\r\n\r\n        var N2 = Math.ceil(N / M),\r\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\r\n            i, j, right2, right3;\r\n\r\n        multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n        for (i = left; i <= right; i += N1) {\r\n\r\n            right2 = Math.min(i + N1 - 1, right);\r\n\r\n            multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n            for (j = i; j <= right2; j += N2) {\r\n\r\n                right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                // pack each entry recursively\r\n                node.children.push(this._build(items, j, right3, height - 1));\r\n            }\r\n        }\r\n\r\n        calcBBox(node, this.toBBox);\r\n\r\n        return node;\r\n    },\r\n\r\n    _chooseSubtree: function (bbox, node, level, path) {\r\n\r\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\r\n\r\n        while (true) {\r\n            path.push(node);\r\n\r\n            if (node.leaf || path.length - 1 === level) break;\r\n\r\n            minArea = minEnlargement = Infinity;\r\n\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n                child = node.children[i];\r\n                area = bboxArea(child.bbox);\r\n                enlargement = enlargedArea(bbox, child.bbox) - area;\r\n\r\n                // choose entry with the least area enlargement\r\n                if (enlargement < minEnlargement) {\r\n                    minEnlargement = enlargement;\r\n                    minArea = area < minArea ? area : minArea;\r\n                    targetNode = child;\r\n\r\n                } else if (enlargement === minEnlargement) {\r\n                    // otherwise choose one with the smallest area\r\n                    if (area < minArea) {\r\n                        minArea = area;\r\n                        targetNode = child;\r\n                    }\r\n                }\r\n            }\r\n\r\n            node = targetNode || node.children[0];\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    _insert: function (item, level, isNode) {\r\n\r\n        var toBBox = this.toBBox,\r\n            bbox = isNode ? item.bbox : toBBox(item),\r\n            insertPath = [];\r\n\r\n        // find the best node for accommodating the item, saving all nodes along the path too\r\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n        // put the item into the node\r\n        node.children.push(item);\r\n        extend(node.bbox, bbox);\r\n\r\n        // split on node overflow; propagate upwards if necessary\r\n        while (level >= 0) {\r\n            if (insertPath[level].children.length > this._maxEntries) {\r\n                this._split(insertPath, level);\r\n                level--;\r\n            } else break;\r\n        }\r\n\r\n        // adjust bboxes along the insertion path\r\n        this._adjustParentBBoxes(bbox, insertPath, level);\r\n    },\r\n\r\n    // split overflowed node into two\r\n    _split: function (insertPath, level) {\r\n\r\n        var node = insertPath[level],\r\n            M = node.children.length,\r\n            m = this._minEntries;\r\n\r\n        this._chooseSplitAxis(node, m, M);\r\n\r\n        var splitIndex = this._chooseSplitIndex(node, m, M);\r\n\r\n        var newNode = {\r\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\r\n            height: node.height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        if (node.leaf) newNode.leaf = true;\r\n\r\n        calcBBox(node, this.toBBox);\r\n        calcBBox(newNode, this.toBBox);\r\n\r\n        if (level) insertPath[level - 1].children.push(newNode);\r\n        else this._splitRoot(node, newNode);\r\n    },\r\n\r\n    _splitRoot: function (node, newNode) {\r\n        // split root node\r\n        this.data = {\r\n            children: [node, newNode],\r\n            height: node.height + 1,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n        calcBBox(this.data, this.toBBox);\r\n    },\r\n\r\n    _chooseSplitIndex: function (node, m, M) {\r\n\r\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\r\n\r\n        minOverlap = minArea = Infinity;\r\n\r\n        for (i = m; i <= M - m; i++) {\r\n            bbox1 = distBBox(node, 0, i, this.toBBox);\r\n            bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n            overlap = intersectionArea(bbox1, bbox2);\r\n            area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n            // choose distribution with minimum overlap\r\n            if (overlap < minOverlap) {\r\n                minOverlap = overlap;\r\n                index = i;\r\n\r\n                minArea = area < minArea ? area : minArea;\r\n\r\n            } else if (overlap === minOverlap) {\r\n                // otherwise choose distribution with minimum area\r\n                if (area < minArea) {\r\n                    minArea = area;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    },\r\n\r\n    // sorts node children by the best axis for split\r\n    _chooseSplitAxis: function (node, m, M) {\r\n\r\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\r\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\r\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\r\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n        // if total distributions margin value is minimal for x, sort by minX,\r\n        // otherwise it's already sorted by minY\r\n        if (xMargin < yMargin) node.children.sort(compareMinX);\r\n    },\r\n\r\n    // total margin of all possible split distributions where each node is at least m full\r\n    _allDistMargin: function (node, m, M, compare) {\r\n\r\n        node.children.sort(compare);\r\n\r\n        var toBBox = this.toBBox,\r\n            leftBBox = distBBox(node, 0, m, toBBox),\r\n            rightBBox = distBBox(node, M - m, M, toBBox),\r\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\r\n            i, child;\r\n\r\n        for (i = m; i < M - m; i++) {\r\n            child = node.children[i];\r\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(leftBBox);\r\n        }\r\n\r\n        for (i = M - m - 1; i >= m; i--) {\r\n            child = node.children[i];\r\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(rightBBox);\r\n        }\r\n\r\n        return margin;\r\n    },\r\n\r\n    _adjustParentBBoxes: function (bbox, path, level) {\r\n        // adjust bboxes along the given tree path\r\n        for (var i = level; i >= 0; i--) {\r\n            extend(path[i].bbox, bbox);\r\n        }\r\n    },\r\n\r\n    _condense: function (path) {\r\n        // go through the path, removing empty nodes and updating bboxes\r\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\r\n            if (path[i].children.length === 0) {\r\n                if (i > 0) {\r\n                    siblings = path[i - 1].children;\r\n                    siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                } else this.clear();\r\n\r\n            } else calcBBox(path[i], this.toBBox);\r\n        }\r\n    },\r\n\r\n    _initFormat: function (format) {\r\n        // data format (minX, minY, maxX, maxY accessors)\r\n\r\n        // uses eval-type function compilation instead of just accepting a toBBox function\r\n        // because the algorithms are very sensitive to sorting functions performance,\r\n        // so they should be dead simple and without inner calls\r\n\r\n        var compareArr = ['return a', ' - b', ';'];\r\n\r\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\r\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\r\n\r\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\r\n    }\r\n};\r\n\r\n\r\n// calculate node's bbox from bboxes of its children\r\nfunction calcBBox(node, toBBox) {\r\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\r\n}\r\n\r\n// min bounding rectangle of node children from k to p-1\r\nfunction distBBox(node, k, p, toBBox) {\r\n    var bbox = empty();\r\n\r\n    for (var i = k, child; i < p; i++) {\r\n        child = node.children[i];\r\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\r\n    }\r\n\r\n    return bbox;\r\n}\r\n\r\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\r\n\r\nfunction extend(a, b) {\r\n    a[0] = Math.min(a[0], b[0]);\r\n    a[1] = Math.min(a[1], b[1]);\r\n    a[2] = Math.max(a[2], b[2]);\r\n    a[3] = Math.max(a[3], b[3]);\r\n    return a;\r\n}\r\n\r\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\r\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\r\n\r\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\r\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\r\n\r\nfunction enlargedArea(a, b) {\r\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\r\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\r\n}\r\n\r\nfunction intersectionArea(a, b) {\r\n    var minX = Math.max(a[0], b[0]),\r\n        minY = Math.max(a[1], b[1]),\r\n        maxX = Math.min(a[2], b[2]),\r\n        maxY = Math.min(a[3], b[3]);\r\n\r\n    return Math.max(0, maxX - minX) *\r\n           Math.max(0, maxY - minY);\r\n}\r\n\r\nfunction contains(a, b) {\r\n    return a[0] <= b[0] &&\r\n           a[1] <= b[1] &&\r\n           b[2] <= a[2] &&\r\n           b[3] <= a[3];\r\n}\r\n\r\nfunction intersects(a, b) {\r\n    return b[0] <= a[2] &&\r\n           b[1] <= a[3] &&\r\n           b[2] >= a[0] &&\r\n           b[3] >= a[1];\r\n}\r\n\r\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n// combines selection algorithm with binary divide & conquer approach\r\n\r\nfunction multiSelect(arr, left, right, n, compare) {\r\n    var stack = [left, right],\r\n        mid;\r\n\r\n    while (stack.length) {\r\n        right = stack.pop();\r\n        left = stack.pop();\r\n\r\n        if (right - left <= n) continue;\r\n\r\n        mid = left + Math.ceil((right - left) / n / 2) * n;\r\n        select(arr, left, right, mid, compare);\r\n\r\n        stack.push(left, mid, mid, right);\r\n    }\r\n}\r\n\r\n// Floyd-Rivest selection algorithm:\r\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\r\nfunction select(arr, left, right, k, compare) {\r\n    var n, i, z, s, sd, newLeft, newRight, t, j;\r\n\r\n    while (right > left) {\r\n        if (right - left > 600) {\r\n            n = right - left + 1;\r\n            i = k - left + 1;\r\n            z = Math.log(n);\r\n            s = 0.5 * Math.exp(2 * z / 3);\r\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\r\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\r\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\r\n            select(arr, newLeft, newRight, k, compare);\r\n        }\r\n\r\n        t = arr[k];\r\n        i = left;\r\n        j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (compare(arr[i], t) < 0) i++;\r\n            while (compare(arr[j], t) > 0) j--;\r\n        }\r\n\r\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nexport default rbush;","import ccNetViz from './ccNetViz';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// this file is used when we have more than 1 layer , goto example multi level\r\n\r\nvar ccNetVizMultiLevel = function(canvas, options){\r\n  var vizScreen = new ccNetViz(canvas, options);\r\n  var vizLayout;\r\n\r\n  var history = [];\r\n  var curlevel = {};\r\n\r\n\r\n  var onContextMenu, onClick;\r\n  \r\n  //right click >> go back\r\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\r\n    if(history.length > 0){\r\n\tvar histel = history.pop();\r\n\t//currently shown level\r\n\tcurlevel = histel;\r\n\r\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\r\n\tvizScreen.draw();\r\n    }\r\n\r\n    e.preventDefault();\r\n  });\r\n\r\n  canvas.addEventListener('click', onClick = function(e){\r\n    var bb = canvas.getBoundingClientRect();\r\n    var x = e.clientX - bb.left;\r\n    var y = e.clientY - bb.top;\r\n    var radius = 5;\r\n\r\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\r\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\r\n    if(result.nodes.length > 0){\r\n      var node = result.nodes[0].node;\r\n\r\n      var layout = node.layout || vizLayout;\r\n      if(node.__computedLayout){\r\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\r\n\tlayout = undefined;\r\n      }else{\r\n\t//we store that layout was once computed for this subgraph\r\n        node.__computedLayout = true;\r\n      }\r\n\r\n      if(node.nodes && node.edges){\r\n\tvar insidenodes = node.nodes;\r\n\tvar insideedges = node.edges;\r\n\r\n\thistory.push(curlevel);\r\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\r\n\r\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\r\n\tvizScreen.draw();\r\n      }\r\n    }\r\n  });\r\n  \r\n  ////TODO: Add interactivity functions into this class\r\n  \r\n  this.remove = function(){\r\n    canvas.removeEventListener('contextmenu', onContextMenu);\r\n    canvas.removeEventListener('click', onClick);\r\n    vizScreen.remove();\r\n  };\r\n\r\n\r\n  this.set = function(nodes, edges, layout){\r\n    curlevel = {nodes: nodes, edges: edges};\r\n    history = [];\r\n\r\n    vizLayout = layout;\r\n    vizScreen.set.apply(vizScreen, arguments);\r\n  }\r\n  // apply the functions to the layer\r\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\r\n  var self = this;\r\n  exposeMethods.forEach(function(method){\r\n    (function(method, self){\r\n      self[method] = function(){\r\n\treturn vizScreen[method].apply(vizScreen, arguments);\r\n      };\r\n    })(method, self);\r\n  });\r\n};\r\n\r\n\r\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\r\n\r\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\r\nimport ccNetViz_layout        from './layout/layout';\r\nimport ccNetViz_gl            from'./gl';\r\nimport ccNetViz_color         from './color';\r\nimport ccNetViz_utils         from './utils';\r\nimport ccNetViz_textures      from './dataSources/textures';\r\nimport ccNetViz_files         from './dataSources/files';\r\nimport ccNetViz_texts         from './texts/texts' ;\r\nimport ccNetViz_lazyEvents    from './lazyEvents';\r\nimport ccNetViz_interactivityBatch from './interactivityBatch';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\r\nimport {getPartitionStyle}    from './primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n *  David Tichy\r\n *    Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\nlet sCanvas = document.createElement(\"canvas\");\r\nfunction getContext(canvas){\r\n    let attributes = { depth: false, antialias: false };\r\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\r\n\r\n    return gl;\r\n}\r\n\r\n\r\nvar lastUniqId = 0;\r\n\r\nfunction checkUniqId(el){\r\n  if(el.__uniqid !== undefined){\r\n    el.uniqid = el.__uniqid;\r\n    delete el.__uniqid;\r\n  }else if(el.uniqid === undefined){\r\n    el.uniqid = ++lastUniqId;\r\n  }\r\n}\r\n\r\n\r\nfunction mergeArrays(a, b, cmp){\r\n  let r = [];\r\n  r.length = a.length + b.length;\r\n\r\n  let i = 0,j=0,k=0;\r\n\r\n  while (i < a.length && j < b.length)\r\n  {\r\n    if (cmp(a[i],b[j]) < 0)\r\n      r[k++] = a[i++];\r\n    else\r\n      r[k++] = b[j++];\r\n  }\r\n\r\n  while (i < a.length)\r\n    r[k++] = a[i++];\r\n\r\n\r\n  while (j < b.length)\r\n    r[k++] = b[j++];\r\n\r\n  return r;\r\n}\r\n\r\nvar ccNetViz = function(canvas, options){\r\n  let self = this;\r\n  canvas = canvas || sCanvas;\r\n  let backgroundStyle = options.styles.background = options.styles.background || {};\r\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\r\n\r\n  let removed = false;\r\n  let setted  = false;\r\n\r\n  let nodeStyle = options.styles.node = options.styles.node || {};\r\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\r\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\r\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\r\n\r\n  if (nodeStyle.label) {\r\n      let s = nodeStyle.label;\r\n      s.color = s.color || \"rgb(120, 120, 120)\";\r\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\r\n  }\r\n\r\n  let edgeStyle = options.styles.edge = options.styles.edge || { arrow: { } };\r\n  edgeStyle.width = edgeStyle.width || 1;\r\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\r\n  edgeStyle.animateColor = edgeStyle.animateColor || \"rgb(240, 80, 120)\";\r\n  edgeStyle.animateSpeed = edgeStyle.animateSpeed || 1.0;\r\n\r\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\r\n\r\n  if (edgeStyle.arrow) {\r\n    if(typeof edgeStyle.arrow.texture !== \"undefined\"){\r\n      let s = edgeStyle.arrow;\r\n      s.minSize = s.minSize != null ? s.minSize : 6;\r\n      s.maxSize = s.maxSize || 12;\r\n      s.aspect = 1;\r\n    }\r\n  }\r\n\r\n\r\n  let events = new ccNetViz_lazyEvents();\r\n  let layers = {};\r\n  let view,gl,drawFunc,textures,files,texts;\r\n  let context = {};\r\n\r\n  this.cntShownNodes = () => {\r\n    let n = 0;\r\n    for(var k in layers)\r\n      n += layers[k].cntShownNodes();\r\n    return n;\r\n  }\r\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\r\n\r\n  this.cntShownEdges = () => {\r\n    let e = 0;\r\n    for(var k in layers)\r\n      e += layers[k].cntShownEdges();\r\n    return e;\r\n  }\r\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\r\n\r\n  let onRedraw = events.debounce(() => {\r\n    self.draw.call(self);\r\n    return false;\r\n  }, 5);\r\n\r\n  function checkRemoved(){\r\n    if(removed){\r\n      console.error(\"Cannot call any function on graph after remove()\")\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let nodes, edges;\r\n\r\n  function insertTempLayer(){\r\n    if(layers.temp)\r\n      return;\r\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\r\n  }\r\n\r\n  let batch = undefined;\r\n  function getBatch(){\r\n    if(!batch)\r\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\r\n    return batch;\r\n  };\r\n\r\n  this.set = (n, e, layout, layout_options = {}) => {\r\n    if (checkRemoved()) return this;\r\n\r\n    nodes = n || [];\r\n    edges = e || [];\r\n\r\n    nodes.forEach(checkUniqId);\r\n    edges.forEach(checkUniqId);\r\n\r\n    let promises = [];\r\n    if(typeof ccNetVizPlugins !== \"undefined\"){\r\n      if(typeof ccNetVizPlugins.node !== \"undefined\")\r\n        promises = ccNetVizPlugins.node.Integration(options,self).shapes;\r\n      if(typeof ccNetVizPlugins.arrow !== \"undefined\")\r\n        promises = promises.concat(ccNetVizPlugins.arrow.Integration(options,self).shapes);\r\n    }\r\n\r\n    Promise.all(promises.map(item => item.config)).then((c) => {\r\n      c.map((item, index) => {\r\n        if(item.plugin === \"arrow\"){\r\n          options.styles[promises[index].name].arrow = item;\r\n        }else{\r\n          options.styles[promises[index].name] = item;\r\n        }\r\n      });\r\n      layers.temp && layers.temp.set([], [], layout, layout_options);\r\n      layers.main.set(nodes, edges, layout, layout_options);\r\n    });\r\n\r\n    //reset batch\r\n    batch = undefined;\r\n    setted = true;\r\n    return this;\r\n  };\r\n\r\n  //make all dynamic changes static\r\n  this.reflow = () => {\r\n    if(checkRemoved()) return;\r\n\r\n    getBatch().applyChanges();\r\n\r\n    //nodes and edges in dynamic chart are actual\r\n    let n = layers.main.getVisibleNodes();\r\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\r\n\r\n    let e = layers.main.getVisibleEdges();\r\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\r\n\r\n    this.set(n,e);\r\n    this.draw();\r\n  };\r\n\r\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\r\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\r\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\r\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\r\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\r\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\r\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\r\n\r\n  this.addEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.addEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.addNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.addNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.removeEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.removeEdge(e);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.removeNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.removeNode(n);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.updateNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.updateNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.updateEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.updateEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n\r\n  let getSize = (c, s, n, sc) => {\r\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\r\n    if (s) {\r\n      let min = s.size ? s.size : s.minSize;\r\n      let max = s.size ? s.size : s.maxSize;\r\n\r\n      result = max ? Math.min(max, result) : result;\r\n      if(result < s.hideSize)\r\n        return 0;\r\n      result = min ? Math.max(min, result) : result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\r\n  let getLabelSize = (c,s) => getSize(c, s.font, getNodesCnt(), 0.25);\r\n\r\n  let getLabelHideSize = (c,s) => {\r\n    if(s){\r\n        const sc = 0.25;\r\n        let n = layers.main.cntShownNodes();  //lower bound\r\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\r\n\r\n        let vs;\r\n        if(s.hideSize){\r\n            vs = t / s.hideSize;\r\n            if(s.maxSize)\r\n                vs = Math.min(vs, t / s.maxSize);\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  let offset = 0.5 * nodeStyle.maxSize;\r\n\r\n  this.draw = (silent) => {\r\n    if(silent && (removed || !setted) ) return;\r\n    if(checkRemoved()) return;\r\n\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n    let aspect = width / height;\r\n    let o = view.size === 1 ? offset : 0;\r\n    let ox = o / width;\r\n    let oy = o / height;\r\n\r\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\r\n    context.offsetX   = ox;\r\n    context.offsetY   = oy;\r\n    context.width     = 0.5 * width;\r\n    context.height    = 0.5 * height;\r\n    context.aspect2   = aspect * aspect;\r\n    context.aspect    = aspect;\r\n    context.count     = getNodesCnt();\r\n\r\n    //bad hack because we use different size for curveExc and for nodeSize :(\r\n    if(context.style) delete context.style;\r\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\r\n    context.style     = nodeStyle;\r\n    context.nodeSize = getNodeSize(context);\r\n\r\n    gl && gl.viewport(0, 0, width, height);\r\n\r\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    const startTime = Date.now();\r\n\r\n    const drawOnce = () => {\r\n        for(let i = 0; i < layers.main.scene.elements.length; i++){\r\n            layers.main.scene.elements[i].draw(context);\r\n            layers.temp && layers.temp.scene.elements[i].draw(context);\r\n        }\r\n    }\r\n    const drawLoop = () => {\r\n        context.renderTime = (Date.now() - startTime) / 1000.0;\r\n        drawOnce();\r\n        requestAnimationFrame(drawLoop);\r\n    }\r\n\r\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\r\n        drawLoop();\r\n    } else {\r\n        drawOnce();\r\n    }\r\n  };\r\n  drawFunc = this.draw.bind(this);\r\n\r\n  this.getScreenCoords = function(conf){\r\n    if(checkRemoved()) return;\r\n    let ret = {};\r\n    let rect = canvas.getBoundingClientRect();\r\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\r\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\r\n    return ret;\r\n  };\r\n\r\n  this.getLayerCoords = function(conf){\r\n    if(checkRemoved()) return;\r\n\r\n    let ret = {};\r\n\r\n    ['x','x1','x2'].forEach(k => {\r\n      if(conf[k] !== undefined){\r\n        let x = conf[k];\r\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\r\n        ret[k] = x;\r\n      }\r\n    });\r\n\r\n\r\n    ['y','y1','y2'].forEach(k => {\r\n      if(conf[k] !== undefined){\r\n        let y = conf[k];\r\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\r\n        ret[k] = y;\r\n      }\r\n    });\r\n\r\n    if(conf.radius !== undefined){\r\n      let dist = conf.radius;\r\n\r\n      let disth = dist / canvas.height;\r\n      let distw = dist / canvas.width;\r\n      dist = Math.max(disth, distw) * view.size;\r\n\r\n      ret.radius = dist;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  let findMerge = function(funcname, args){\r\n    if(checkRemoved() || !gl) return;\r\n\r\n    let f1 = layers.main[funcname].apply(layers.main, args);\r\n\r\n    if(!layers.temp)\r\n      return f1;\r\n\r\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\r\n\r\n    let r = {};\r\n    for(let key in f1){\r\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\r\n        return e1.dist2 - e2.dist2;\r\n      });\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  this.find = function(){return findMerge('find', arguments); };\r\n  this.findArea = function(){return findMerge('findArea', arguments); };\r\n\r\n  this.getTextPosition = (n) => {\r\n    if(checkRemoved() || !gl) return;\r\n\r\n    const offset = 0.5 * context.nodeSize;\r\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\r\n\r\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\r\n    let textEngine = texts.getEngine(ns.font);\r\n    textEngine.setFont(ns.font);\r\n\r\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\r\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\r\n  };\r\n\r\n\r\n\r\n  let addEvts = (el, evts) => {\r\n    for(var k in (evts || {})){\r\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\r\n    }\r\n  }\r\n\r\n  let removeEvts = (el, evts) => {\r\n    for(var k in (evts || {})){\r\n      evts[k] && el.removeEventListener(k, evts[k]);\r\n    }\r\n  }\r\n\r\n  let onDownThis = onMouseDown.bind(this);\r\n\r\n  const onWheelThis = onWheel.bind(this);\r\n\r\n  let zoomevts;\r\n  addEvts(canvas, zoomevts = {\r\n    'mousedown': onDownThis,\r\n    'touchstart': onDownThis,\r\n    'wheel': onWheelThis,\r\n    'contextmenu': options.onContextMenu\r\n  })\r\n\r\n  this.remove = () => {\r\n    if(checkRemoved()) return;\r\n\r\n    for(var k in layers){layers[k].remove();}\r\n\r\n    if(gl){\r\n      gl.viewport(0, 0, context.width*2, context.height*2);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\r\n      gl_lose && gl_lose.loseContext();\r\n    }\r\n\r\n    removeEvts(canvas, zoomevts);\r\n\r\n    events.disable();\r\n    texts && texts.remove();\r\n\r\n    removed = true;\r\n  }\r\n\r\n  let last_view = {};\r\n  function checkChangeViewport(){\r\n    let is_change = false;\r\n    if(last_view){\r\n      for(let k in view){\r\n        if(last_view[k] !== view[k])\r\n          is_change = true;\r\n      }\r\n    }\r\n    ccNetViz_utils.extend(last_view, view);\r\n\r\n    if(is_change){\r\n      options.onChangeViewport && options.onChangeViewport(view);\r\n    }\r\n  }\r\n\r\n  function onContextMenu(e){\r\n  }\r\n\r\n  function onWheel(e) {\r\n      let rect = canvas.getBoundingClientRect();\r\n\r\n      if(!options.passiveEvts){ e.preventDefault(); }\r\n\r\n      let oldsize, oldx, oldy;\r\n\r\n      // Mouse coordinates\r\n      const mouseX = e.clientX - rect.left;\r\n      const mouseY = e.clientY - rect.top;\r\n      const radius = 10;\r\n\r\n      // if no timer found i.e. we are not in continuous phase\r\n      // we are calculating the focus variables again\r\n      if(!onWheel.continuosZoom) {\r\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\r\n\r\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\r\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\r\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\r\n          if (searchNodes.nodes.length) {\r\n              let node = searchNodes.nodes[0];\r\n              let focus = this.getScreenCoords({\r\n                  x: node.node.x,\r\n                  y: node.node.y\r\n              });\r\n              onWheel.focusX = focus.x;\r\n              onWheel.focusY = focus.y;\r\n          }\r\n          // else, it is the window co-ords of the mouse_ptr\r\n          else {\r\n              onWheel.focusX = mouseX;\r\n              onWheel.focusY = mouseY;\r\n          }\r\n          onWheel.oldX = view.x;\r\n          onWheel.oldY = view.y;\r\n          onWheel.oldSize = view.size;\r\n\r\n          if(onWheel.continuosZoom)\r\n              clearTimeout(onWheel.continuosZoom);\r\n\r\n          oldx = view.x;\r\n          oldy = view.y;\r\n      }\r\n      onWheel.continuosZoom = setTimeout(() => {\r\n        onWheel.continuosZoom = undefined;\r\n      }, 200);\r\n\r\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\r\n      let delta = size - onWheel.oldSize;\r\n\r\n      view.size = size;\r\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\r\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\r\n\r\n      if(options.onZoom && options.onZoom(view) === false){\r\n        view.size = oldsize;\r\n        view.x = oldx;\r\n        view.y = oldy;\r\n        return;\r\n      }\r\n\r\n      checkChangeViewport();\r\n\r\n      this.draw();\r\n  }\r\n\r\n  let lastUpTime = 0;\r\n  function onMouseDown(downe) {\r\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\r\n\r\n    let parseTouchEvts = (e) => {\r\n      if(!e.touches) return e;\r\n\r\n      let x = 0,y = 0;\r\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\r\n      e.clientX = x / e.touches.length;\r\n      e.clientY = y / e.touches.length;\r\n\r\n      return e;\r\n    }\r\n\r\n\r\n    downe = parseTouchEvts(downe);\r\n\r\n\r\n    let width = canvas.width / view.size;\r\n    let height = canvas.height / view.size;\r\n    let sx = downe.clientX;\r\n    let sy = downe.clientY;\r\n    let dx = view.x + sx / width;\r\n    let dy = sy / height - view.y;\r\n    let od = options.onDrag;\r\n    let dragged, custom;\r\n    let panning = true;\r\n    let zooming = false;\r\n    let evts;\r\n\r\n    let origdist;\r\n    if((downe.touches || []).length === 2){\r\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\r\n      origdist = Math.sqrt( mx * mx + my * my );\r\n      zooming = true;\r\n    }\r\n\r\n\r\n    let drag = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if(e.touches && e.touches.length != 1)  panning = false;\r\n\r\n      if (dragged) {\r\n          if(panning){\r\n              if (custom) {\r\n                  od.drag && od.drag(e);\r\n              }\r\n              else {\r\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\r\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\r\n                  checkChangeViewport();\r\n                  this.draw();\r\n              }\r\n          }\r\n      }\r\n      else {\r\n          let x,y;\r\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\r\n\r\n          let mx = x - sx;\r\n          let my = y - sy;\r\n\r\n          if (mx * mx + my * my > 8) {\r\n              dragged = true;\r\n              custom = od && od.start(downe);\r\n              custom && od.drag && od.drag(e);\r\n          }\r\n      }\r\n      if(!options.passiveEvts){ e.preventDefault(); }\r\n    };\r\n\r\n    let up = e => {\r\n        e = parseTouchEvts(e);\r\n\r\n        custom && od.stop && od.stop(e);\r\n\r\n        if(!dragged){\r\n          options.onClick && options.onClick(e);\r\n\r\n          if( new Date().getTime() - lastUpTime < 250 ) {\r\n            options.onDblClick && options.onDblClick(e);\r\n            lastUpTime = 0;\r\n          }else{\r\n            lastUpTime = new Date().getTime();\r\n          }\r\n        }\r\n\r\n        removeEvts(window, evts);\r\n    };\r\n\r\n    let zoom = e => {\r\n        e = parseTouchEvts(e);\r\n\r\n        if(e.touches && e.touches.length == 2){\r\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\r\n            let dist = Math.sqrt(mx * mx + my * my);\r\n            e.deltaY = -(dist - origdist)*5;\r\n            onWheelThis(e);\r\n            origdist = dist;\r\n        }\r\n    };\r\n\r\n    addEvts(window, evts = {\r\n      'mouseup': up,\r\n      'touchend': up,\r\n      'touchcancel': up,\r\n      'mousemove': zooming ? zoom : drag,\r\n      'touchmove': zooming ? zoom : drag\r\n    });\r\n  }\r\n\r\n\r\n  this.image = function() {\r\n    if(checkRemoved()) return;\r\n\r\n    return canvas.toDataURL();\r\n  }\r\n\r\n  this.resize = function() {\r\n    if(checkRemoved()) return;\r\n\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n  }\r\n\r\n  this.getViewport = function() {\r\n    return view;\r\n  }\r\n\r\n  this.setViewport = function(v) {\r\n    if(checkRemoved()) return;\r\n\r\n    ccNetViz_utils.extend(view, v);\r\n\r\n    checkChangeViewport();\r\n  }\r\n\r\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\r\n\r\n  //expose these methods from layer into this class\r\n  ['update'].forEach(function(method){\r\n    (function(method, self){\r\n      self[method] = function(){\r\n        let args = arguments;\r\n        for(let k in layers){\r\n          let l = layers[k];\r\n          l[method].apply(l,args);\r\n        };\r\n        return self;\r\n      };\r\n    })(method, self);\r\n  });\r\n\r\n  if(gl = getContext(canvas)){\r\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n    gl.enable(gl.BLEND);\r\n  }\r\n\r\n  view = {size:1,x:0,y:0};\r\n\r\n  this.resize();\r\n\r\n  textures = new ccNetViz_textures(events, onLoad);\r\n  files = new ccNetViz_files(events, onLoad);\r\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\r\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\r\n\r\n  if(!gl)\r\n    console.warn(\"Cannot initialize WebGL context\");\r\n};\r\n\r\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\r\n\r\nccNetViz.color = ccNetViz_color;\r\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\r\nccNetViz.layout = ccNetViz_layout;\r\nccNetViz.color = ccNetViz_color;\r\n\r\nwindow.ccNetViz = ccNetViz;\r\nexport default ccNetViz;","    \r\nimport ccNetViz_color     from './color' ;\r\nimport ccNetViz_gl        from './gl' ;\r\nimport ccNetViz_primitive from './primitive' ;\r\nimport ccNetViz_layout    from './layout/layout' ;\r\nimport ccNetViz_geomutils from './geomutils' ;\r\nimport ccNetViz_utils     from './utils' ;\r\nimport {partitionByStyle} from './primitiveTools';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\r\nimport {easeFunctions} from './shaders'\r\n\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n * \tDavid Tichy\r\n * \tAleš Saska - http://alessaska.cz/\r\n */\r\n\r\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\r\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\r\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\r\n\r\n    this.redraw = onRedraw || (() => {});\r\n\r\n    options = options || {};\r\n    options.styles = options.styles || {};\r\n\r\n    // set animation flag\r\n    this.hasEdgeAnimation = (!!edgeStyle.animateType && edgeStyle.animateType !== 'none')\r\n\r\n    let nodesFiller = (\r\n      style => ({\r\n        set: (v, e, iV, iI) => {\r\n            let x = e.x;\r\n            let y = e.y;\r\n            // places vertex values of nodes in buffer , v.position is buffer\r\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n            if(v.color){\r\n              let c = e.color;\r\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\r\n            }\r\n            ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        }})\r\n    );\r\n    let labelsFiller = (style => {\r\n        return (function(style){\r\n          let textEngine = texts.getEngine(style.font);\r\n\r\n          textEngine.setFont(style.font);\r\n\r\n          return {\r\n              set: (v, e, iV, iI) => {\r\n                var x = e.x;\r\n                var y = e.y;\r\n\r\n                var ret = false;\r\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\r\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\r\n                  // parts is the array of characters, character description and position w.r.t node \r\n                  let c = parts[i];\r\n                  //position of the node\r\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n                  //position of the vertices of box of label to be rendered\r\n                  if (i==0) {\r\n\r\n                    // bring the center of box of character to the center of node (incase if you are wondering\r\n                    // why not c.width/2 and c.height/2 , it's because for c.width/2, it will exactly coincide with\r\n                    // center of node, so some of the node labels could go out of canvas)\r\n                    //UPDATE : for x<=0.5 , we need to bring to centre of node for new labelBackground shader\r\n                    var boxMinusX = x<=0.5 ? c.width/2 : c.width/3;\r\n                    var boxMinusY = c.height/3;\r\n                  }\r\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx-boxMinusX, c.dy-boxMinusY, c.width + c.dx-boxMinusX, c.dy-boxMinusY, c.width + c.dx-boxMinusX, c.height + c.dy-boxMinusY, c.dx-boxMinusX, c.height + c.dy-boxMinusY);\r\n                  // position of characters in atlas\r\n                  if (v.textureCoord) {\r\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\r\n                  }\r\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\r\n                }\r\n                return ret;\r\n              },\r\n              size: (v,e) => {\r\n                return textEngine.steps(e.label || \"\");\r\n              }\r\n            };\r\n        })(style);\r\n    });\r\n    let labelsBackgroundFiller = (\r\n      style => ({\r\n        set: (v, e, iV, iI) => {\r\n            let textEngine = texts.getEngine(style.font);\r\n            textEngine.setFont(style.font);\r\n            let ret = false;\r\n            let parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\r\n            let c = 0;\r\n            // finding max dx\r\n            for(var i=0;i<parts.length;i++) {\r\n              c = Math.abs(parts[c].dx ) > Math.abs(parts[i].dx) ? c : i;\r\n            }\r\n            \r\n            let x = e.x;\r\n            let y = e.y;\r\n            // The positions here are somewhat tricky, if you understand alignText function in sdf.js , here's the explanation\r\n            // parts[c].dx === max width of label\r\n            // similarly for dy\r\n            // now part[c].width is added for x<=0.5 as \r\n            // i) dx only gives the starting position and not the ending position\r\n            // ii) labelBackground size depends both on fontSize and labelSize\r\n            // parts[c].width is the glyph width from spritegenerator , it's added because as the labelSize increses,\r\n            // the block of char (last char) also increases, if only dx is used, then it's basically the wordWidth\r\n            // (which does not varies with the labelSize), so it had a problem to go out for a label or at best\r\n            // be suitable for a certain labelSize and varying fontSize \r\n            let endPosX = x<=0.5 ? Math.abs(parts[c].dx) : -Math.abs(parts[c].dx);\r\n            let startPosX = 0;\r\n            let height = y<=0.5 ? Math.abs((parts[parts.length-1].dy)) : -Math.abs((parts[parts.length-1].dy));\r\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n            ccNetViz_primitive.vertices(v.relative, iV, startPosX, 0, endPosX , 0, endPosX , height , startPosX, height );\r\n            ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        }\r\n      })\r\n    );\r\n    let normalize = (a, b) => {\r\n        let x = b.x - a.x;\r\n        let y = b.y - a.y;\r\n        let sc = 1 / Math.sqrt(x*x + y*y);\r\n        return { x: sc * x, y: sc * y };\r\n    };\r\n\r\n    let dx = Math.cos(0.9);\r\n    let dy = Math.sin(0.9);\r\n\r\n    let ct1 = {}, ct2 = {}, ct = {};\r\n    let setVerticeCurveShift = (v,iV,s,t) => {\r\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\r\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\r\n        ctx = ct1.x;\r\n        cty = ct1.y;\r\n        citx = ct1.cx;\r\n        city = ct1.cy;\r\n\r\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\r\n        csx = ct2.x;\r\n        csy = ct2.y;\r\n        cisx = ct2.cx;\r\n        cisy = ct2.cy;\r\n\r\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\r\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\r\n    };\r\n\r\n    let edgesFiller = {\r\n      'lines': (style => ({\r\n            set: (v, e, iV, iI) => {\r\n                let s = ccNetViz_geomutils.edgeSource(e);\r\n                let t = ccNetViz_geomutils.edgeTarget(e);\r\n                let dx = s.x-t.x;\r\n                let dy = s.y-t.y;\r\n                let d = normalize(s, t);\r\n\r\n                setVerticeCurveShift(v,iV,s,t);\r\n\r\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\r\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\r\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\r\n                \r\n                if (this.hasEdgeAnimation) {\r\n                    // when do edge animation, shader need to know the startPos and endPos\r\n                    ccNetViz_primitive.vertices(v.startPos, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\r\n                    ccNetViz_primitive.vertices(v.endPos, iV, t.x, t.y, t.x, t.y, t.x, t.y, t.x, t.y);\r\n                }\r\n\r\n                ccNetViz_primitive.quad(v.indices, iV, iI);\r\n            }})),\r\n       'curves': (style => ({\r\n                    numVertices: 3,\r\n                    numIndices: 3,\r\n                    set: (v, e, iV, iI) => {\r\n                        let s = ccNetViz_geomutils.edgeSource(e);\r\n                        let t = ccNetViz_geomutils.edgeTarget(e);\r\n                        let dx = s.x-t.x;\r\n                        let dy = s.y-t.y;\r\n                        let d = normalize(s, t);\r\n\r\n                        setVerticeCurveShift(v,iV,s,t);\r\n\r\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\r\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\r\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\r\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\r\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\r\n                    }\r\n                })),\r\n       'circles': (style => ({\r\n                    set: (v, e, iV, iI) => {\r\n                        let s = ccNetViz_geomutils.edgeSource(e);\r\n                        let d = s.y < 0.5 ? 1 : -1;\r\n\r\n                        let xdiff1 = 0;\r\n                        let ydiff1 = 0;\r\n                        let xdiff2 = 1;\r\n                        let ydiff2 = d;\r\n                        let xdiff3 = 2;\r\n                        let ydiff3 = 1.25*d;\r\n                        let xdiff4 = 3;\r\n                        let ydiff4 = 1.5*d;\r\n\r\n                        setVerticeCurveShift(v,iV,s,s);\r\n\r\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\r\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\r\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\r\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\r\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\r\n                    }\r\n                }))\r\n    };\r\n\r\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\r\n        let tx = t.x;\r\n        let ty = t.y;\r\n\r\n        let offsetMul;\r\n        let ctx,cty,citx,city;\r\n\r\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\r\n        ctx = ct.x;\r\n        cty = ct.y;\r\n        citx = ct.cx;\r\n        city = ct.cy;\r\n\r\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\r\n          //normal of that edge\r\n          offsetMul = 0;\r\n        }else{\r\n          offsetMul = 1;\r\n        }\r\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\r\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\r\n\r\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\r\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\r\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\r\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n        ccNetViz_primitive.quad(v.indices, iV, iI);\r\n    };\r\n\r\n    let arrowFiller = {\r\n      lineArrows: (style => ({\r\n                set: (v, e, iV, iI) => {\r\n                    let s = ccNetViz_geomutils.edgeSource(e);\r\n                    let t = ccNetViz_geomutils.edgeTarget(e);\r\n                    let d = normalize(s, t);\r\n                    set(v, e, s, t, iV, iI, d.x, d.y);\r\n                }})),\r\n       curveArrows: (style => ({\r\n                        set: (v, e, iV, iI) => {\r\n                          let s = ccNetViz_geomutils.edgeSource(e);\r\n                          let t = ccNetViz_geomutils.edgeTarget(e);\r\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\r\n                        }\r\n                    })),\r\n       circleArrows: (style => ({\r\n                        set: (v, e, iV, iI) => {\r\n                          let t = ccNetViz_geomutils.edgeTarget(e);\r\n                          let s = t;\r\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\r\n                        }\r\n                    }))\r\n    };\r\n\r\n    this.getCurrentSpatialSearch = (context) => {\r\n      if(spatialSearch === undefined){\r\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\r\n      }\r\n      return spatialSearch;\r\n    }\r\n\r\n    this.remove = () => { }\r\n\r\n\r\n    let edgeTypes;\r\n    let edgePoses;\r\n\r\n    let spatialSearch = undefined;\r\n\r\n    let lvl = 0;\r\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\r\n    let set_end = () => {\r\n      let enableLazyRedraw = false;\r\n      let reset = (p) => {\r\n        if(enableLazyRedraw)\r\n          this.set(this.nodes, this.edges);\r\n      };\r\n      files.onLoad(reset)\r\n      textures.onLoad(reset)\r\n      enableLazyRedraw = true;\r\n    };\r\n\r\n    this.set = function(nodes, edges, layout, layout_options) {\r\n        removedNodes = 0;\r\n        removedEdges = 0;\r\n\r\n        this.nodes = nodes = nodes || [];\r\n        this.edges = edges = edges ? [].concat(edges) : [];\r\n\r\n        spatialSearch = undefined;\r\n\r\n        let lines = [], curves = [], circles = [];\r\n\r\n        //tanslate indexes into node objects\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n          if(typeof e.source == 'number')\r\n            e.source = nodes[e.source];\r\n\r\n          if(typeof e.target == 'number')\r\n            e.target = nodes[e.target];\r\n        }\r\n\r\n\r\n        let getIndex = (e) => {\r\n            return e.uniqid || -e.index || -e.nidx;\r\n        }\r\n\r\n        let init = () => {\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                nodes[i].index = i;\r\n            }\r\n\r\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\r\n                edges[i].nidx = j;\r\n            }\r\n\r\n            edgeTypes = [];\r\n            edgePoses = new Uint32Array(edges.length);\r\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\r\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\r\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\r\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\r\n\r\n            if (extensions.OES_standard_derivatives) {\r\n                let map = {};\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    (map[si] || (map[si] = {}))[ti] = true;\r\n                }\r\n\r\n                //enable the \"curve\" feature\r\n                const is_bidirectional_overlap = options.bidirectional === 'overlap';\r\n\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let target, e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    let t = dummysd;\r\n                    if (si === ti) {\r\n                        e.t = 2;\t//circle\r\n                        target = circles;\r\n                        t = circlesd;\r\n                    }else {\r\n                        let m = map[ti];\r\n                        if(m && m[si] && is_bidirectional_overlap){\r\n                          e.t = 1;\t//curve\r\n                          target = curves;\r\n                          t = curvesd;\r\n                        }else{\r\n                          e.t = 0;\t//line\r\n                          target = lines;\r\n                          t = linesd;\r\n                        }\r\n                    }\r\n                    edgeTypes.push(t);\r\n                    edgePoses[i] = t.d.length;\r\n                    target.push(e);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    let t = dummysd;\r\n                    if(si !== ti){\r\n                      t = linesd;\r\n                      e.t = 0;\r\n                      lines.push(e);\r\n                    }\r\n                    edgeTypes.push(t);\r\n                    edgePoses[i] = t.d.length;\r\n                }\r\n            }\r\n        };\r\n\r\n        init();\r\n\r\n        let nodesParts   = partitionByStyle(nodes);\r\n        let circlesParts = partitionByStyle(circles);\r\n        let linesParts   = partitionByStyle(lines);\r\n        let curvesParts  = partitionByStyle(curves);\r\n\r\n        this.getCurrentSpatialSearch = (context) => {\r\n          if(spatialSearch === undefined){\r\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\r\n          }\r\n          return spatialSearch;\r\n        }\r\n\r\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\r\n\r\n        if(!gl) return;\r\n\r\n        let tryInitPrimitives = () => {\r\n            var isDirty = false;\r\n\r\n            let defaultAdder = (section, addSection) => {\r\n              if(typeof section.style.texture === 'string')\r\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\r\n                else\r\n                  addSection();\r\n            }\r\n            let labelAdder = (section, addSection) => {\r\n              var slf = (section.style.label || {}).font || {};\r\n              let textEngine = texts.getEngine(slf);\r\n              section.style.texture = textEngine.getTexture(slf, addSection);\r\n            }\r\n\r\n            let is;\r\n            is = nodes.length && !nodes[0].color;\r\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\r\n            is = nodes.length && nodes[0].color;\r\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\r\n\r\n            if (nodeStyle.label) {\r\n                texts.clear();\r\n                if (!nodeStyle.label.backgroundColor){\r\n                  isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\r\n                }\r\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\r\n                if (nodeStyle.label.backgroundColor){\r\n                  isDirty = isDirty || scene.labelsBackground.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsBackgroundFiller);\r\n                }\r\n                texts.bind();\r\n            }\r\n\r\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\r\n\r\n            if (extensions.OES_standard_derivatives) {\r\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\r\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\r\n            }\r\n\r\n            if (edgeStyle.arrow) {\r\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\r\n\r\n                if (extensions.OES_standard_derivatives) {\r\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\r\n\r\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\r\n                }\r\n            }\r\n\r\n            return isDirty;\r\n        };\r\n\r\n        while(tryInitPrimitives()); //loop until they are not dirty\r\n        set_end();\r\n    };\r\n\r\n\r\n\r\n    this.update = function(element, attribute, data) {\r\n        if(!gl) return;\r\n        scene[element].update(gl, attribute, data, function(style)  {return {\r\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\r\n        };});\r\n    }\r\n\r\n    this.find = (x,y,dist,nodes,edges,labels) => {\r\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\r\n    }\r\n\r\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\r\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\r\n    }\r\n\r\n    this.updateNode = (n, i) => {\r\n      this.nodes[i] = n;\r\n\r\n      if(spatialSearch)\r\n        spatialSearch.update(context, 'nodes', i, n);\r\n\r\n      if(!gl) return;\r\n\r\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\r\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\r\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\r\n      scene.labelsBackground && scene.labelsBackground.updateEl(gl, n, i, labelsBackgroundFiller);\r\n\r\n    };\r\n\r\n    this.updateEdge = ((e, i) => {\r\n      let t = edgeTypes[i];\r\n      let pos = edgePoses[i];\r\n\r\n      t.d[pos] = this.edges[i] = e;\r\n\r\n      if(spatialSearch)\r\n        spatialSearch.update(context, t.k, pos, e);\r\n\r\n      if(!gl) return;\r\n\r\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\r\n      if (edgeStyle.arrow)\r\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\r\n    });\r\n\r\n    let removedNodes = 0;\r\n    let removedEdges = 0;\r\n\r\n    const freenode = {x:-1,y:-1,title:\"\"};\r\n    this.removeNodeAtPos = ((pos) => {\r\n      if(this.nodes[pos] === freenode){\r\n        return;\r\n      }\r\n\r\n      removedNodes++;\r\n      this.updateNode(freenode, pos);\r\n    });\r\n\r\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\r\n    this.removeEdgeAtPos = ((pos) => {\r\n      if(this.edges[pos] === freeedge){\r\n        return;\r\n      }\r\n\r\n      removedEdges++;\r\n\r\n      this.updateEdge(freeedge, pos);\r\n    });\r\n\r\n    this.getVisibleNodes = () => {\r\n      if(removedNodes <= 0)\r\n        return this.nodes;\r\n\r\n      let r = [];\r\n      this.nodes.forEach(n => {\r\n        if(n !== freenode)\r\n          r.push(n);\r\n      });\r\n      return r;\r\n    }\r\n\r\n    this.getVisibleEdges = () => {\r\n      if(removedEdges <= 0)\r\n        return this.edges;\r\n\r\n      let r = [];\r\n      this.edges.forEach((n) => {\r\n        if(n !== freeedge)\r\n          r.push(n);\r\n      });\r\n      return r;\r\n    }\r\n\r\n    this.cntShownNodes = (() => {\r\n      return this.nodes.length - removedNodes;\r\n    });\r\n\r\n    this.cntShownEdges = (() => {\r\n      return this.edges.length - removedEdges;\r\n    });\r\n\r\n    let getEdgeStyleSize = ((c) => {\r\n      return c.width/(120);\r\n/*      let avsize = (c.width + c.height)/2;\r\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\r\n      //koef 1 for 150 size and 1.4 for 300 size\r\n      return c.width/(130*koef);\r\n*/    });\r\n\r\n\r\n    let stylesTransl = {\r\n      'line': 0,\r\n      'dashed'  : 1,\r\n      'chain-dotted': 2,\r\n      'dotted': 3\r\n    }\r\n    let getEdgeType = (t) => {\r\n      if(t !== undefined){\r\n        t = stylesTransl[t];\r\n      }\r\n\r\n      if(t === undefined || typeof t !== 'number'){\r\n        t = 0;\r\n      }\r\n\r\n      return t;\r\n    };\r\n\r\n    let animateStylesTransl = {\r\n      'none': 0,\r\n      'basic': 1,\r\n      'gradient': 2,\r\n    }\r\n    let getEdgeAnimateType = (t) => {\r\n        if(t !== undefined){\r\n          t = animateStylesTransl[t];\r\n        }\r\n  \r\n        if(t === undefined || typeof t !== 'number'){\r\n          t = 0;\r\n        }\r\n  \r\n        return t;\r\n      };\r\n\r\n    this.nodes = [];\r\n    this.edges = [];\r\n\r\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\r\n    let scene = this.scene = createScene.call(this);\r\n\r\n    let loadCalled = false;\r\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\r\n\r\n    let getLabelType = (f) => {\r\n      if(texts.isSDF(f))\r\n        return 1;\r\n      return 0;\r\n    };\r\n\r\n    const fsColorTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform vec4 color;\",\r\n        \"uniform sampler2D texture;\",\r\n        \"varying vec2 tc;\",\r\n        \"void main(void) {\",\r\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"}\"\r\n    ];\r\n\r\n    const fsLabelTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform lowp sampler2D texture;\",\r\n        \"uniform mediump vec4 color;\",\r\n        \"uniform mediump float height_font;\",\r\n        \"uniform float type;\",\r\n        \"uniform float buffer;\",\r\n        \"uniform float boldness;\",\r\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\r\n        \"varying mediump vec2 tc;\",\r\n        \"void main() {\",\r\n        \"  if(type > 0.5){\",  //SDF\r\n        \"    float tx=texture2D(texture, tc).a;\",\r\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\r\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\r\n        \"  }else{\", //NORMAL FONT\r\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"  }\",\r\n        \"}\"\r\n    ];\r\n\r\n    const fsVarColorTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform sampler2D texture;\",\r\n        \"varying vec2 tc;\",\r\n        \"varying vec4 c;\",\r\n        \"void main(void) {\",\r\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"}\"\r\n    ];\r\n\r\n    const lineTypes = [\r\n        \"   if(type >= 2.5){\",        //3.0 dotted\r\n        \"      part = fract(part*3.0);\",\r\n        \"      if(part < 0.5) discard;\",\r\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\r\n        \"      if(part < 0.15) discard;\",\r\n        \"      if(part > 0.30 && part < 0.45) discard;\",\r\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\r\n        \"      if(part < 0.5) discard;\",\r\n        \"   }\"\r\n    ];\r\n\r\n    const lineAnimateTypes = [\r\n        \"   if (animateType >= 1.5) {\",\r\n        \"       gl_FragColor = isAnimateCoveredGradient() * animateColor + (1. - isAnimateCoveredGradient()) * color;\",\r\n        \"   } else if (animateType >= 0.5) {\",\r\n        \"       gl_FragColor = isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\",\r\n        \"   } else {\",\r\n        \"       gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\r\n        \"   }\",\r\n    ]\r\n\r\n    const fsCurve = [\r\n        \"#extension GL_OES_standard_derivatives : enable\",\r\n        \"#ifdef GL_ES\",\r\n        \"precision highp float;\",\r\n        \"#endif\",\r\n        \"uniform float width;\",\r\n        \"uniform vec4 color;\",\r\n        \"uniform float type;\",\r\n        \"uniform float lineStepSize;\",\r\n        \"uniform float lineSize;\",\r\n        \"varying vec2 c;\",\r\n        \"varying vec2 v_lengthSoFar;\",\r\n        \"void main(void) {\",\r\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\r\n        ].concat(lineTypes).concat([\r\n        \"   vec2 px = dFdx(c);\",\r\n        \"   vec2 py = dFdy(c);\",\r\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\r\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\r\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\r\n        \"   float alpha = 1.0 - abs(sd) / width;\",\r\n        \"   if (alpha < 0.0) discard;\",\r\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\r\n        \"}\"\r\n    ]);\r\n\r\n\r\n    const getShiftFuncs = [\r\n        \"attribute vec2 curveShift;\",\r\n        \"vec4 getShiftCurve(void) {\",\r\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\r\n        \"   float length = length(screen * shiftN);\",\r\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\r\n        \"}\",\r\n        \"attribute vec2 circleShift;\",\r\n        \"vec4 getShiftCircle(void) {\",\r\n        \"   return vec4(size*circleShift,0,0);\",\r\n        \"}\"\r\n    ];\r\n\r\n    const easeFunctionPart = [\r\n        `${easeFunctions[edgeStyle.animateEase ? edgeStyle.animateEase : 'linear']}`\r\n    ];\r\n\r\n    const isAnimateCovered = [\r\n        \"float isAnimateCovered() {\",\r\n        \"   vec2 pos = gl_FragCoord.xy;\",\r\n        \"   vec2 viewport = 2. * v_screen;\",\r\n        \"   float maxLen = length(viewport);\",\r\n        \"   vec2 startPos = viewport * v_startPos;\",\r\n        \"   vec2 endPos = viewport * v_endPos;\",\r\n        \"   float totalLen = distance(startPos, endPos);\",\r\n        \"   float len = distance(pos, startPos);\",\r\n        \"   // float r = 300.;\",\r\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * totalLen;\",\r\n        \"   // float r = 0.5 * totalLen;\",\r\n        \"   float draw = 1. - step(r, len);\",\r\n        \"   return draw;\",\r\n        \"}\",\r\n    ]\r\n\r\n    const isAnimateCoveredGradient = [\r\n        \"float isAnimateCoveredGradient() {\",\r\n        \"   vec2 pos = gl_FragCoord.xy;\",\r\n        \"   vec2 viewport = 2. * v_screen;\",\r\n        \"   float maxLen = length(viewport);\",\r\n        \"   vec2 startPos = viewport * v_startPos;\",\r\n        \"   vec2 endPos = viewport * v_endPos;\",\r\n        \"   float totalLen = distance(startPos, endPos);\",\r\n        \"   float len = distance(pos, startPos);\",\r\n        \"   float gradLen = 180.;\", // TODO: can config\r\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * (totalLen + gradLen / 2.);\", // NOTE: use 0.2 as a proper factor\r\n        \"   // float r = 0.5 * totalLen;\",\r\n        \"   float draw = fract(smoothstep(r - gradLen, r, len));\",\r\n        \"   return draw;\",\r\n        \"}\",\r\n    ]\r\n\r\n    if (this.hasEdgeAnimation) {\r\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision mediump float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"attribute vec2 startPos;\",\r\n                \"attribute vec2 endPos;\",\r\n                \"uniform float time;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 width;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying float v_time;\",\r\n                \"varying vec2 v_startPos;\",\r\n                \"varying vec2 v_endPos;\",\r\n                \"varying vec2 v_screen;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\"\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n                \"   v_time = time;\",\r\n                \"   v_startPos = startPos;\",\r\n                \"   v_endPos = endPos;\",\r\n                \"   v_screen = screen;\",\r\n\r\n                \"   n = normal;\",\r\n                \"}\"\r\n            ]), [\r\n                \"precision mediump float;\",\r\n                \"uniform float type;\",\r\n                \"uniform float animateType;\",\r\n                \"uniform vec4 color;\",\r\n                \"uniform vec4 animateColor;\",\r\n                \"uniform float animateSpeed;\",\r\n                \"varying vec2 n;\",\r\n                \"varying float v_time;\",\r\n                \"varying vec2 v_startPos;\",\r\n                \"varying vec2 v_endPos;\",\r\n                \"varying vec2 v_screen;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"uniform float lineSize;\",\r\n            ]\r\n            .concat(easeFunctionPart)\r\n            .concat(isAnimateCovered)\r\n            .concat(isAnimateCoveredGradient).concat([\r\n                \"void main(void) {\",\r\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\r\n            ]).concat(lineTypes)\r\n            .concat(lineAnimateTypes)\r\n            .concat([\r\n                \"}\"\r\n            ]), c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                gl.uniform1f(uniforms.animateType, getEdgeAnimateType(c.style.animateType));\r\n                gl.uniform1f(uniforms.animateSpeed, c.style.animateSpeed);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.animateColor, c.style.animateColor);\r\n            })\r\n        );\r\n    } else {\r\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision mediump float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 width;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\"\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n\r\n                \"   n = normal;\",\r\n                \"}\"\r\n            ]), [\r\n                \"precision mediump float;\",\r\n                \"uniform float type;\",\r\n                \"uniform vec4 color;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"uniform float lineSize;\",\r\n                \"void main(void) {\",\r\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\r\n            ].concat(lineTypes).concat([\r\n                \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\r\n                \"}\"\r\n            ]), c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    if (extensions.OES_standard_derivatives) {\r\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision highp float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 curve;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"varying vec2 c;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\r\n                \"   float length = length(screen * n);\",\r\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   c = curve;\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n\r\n                \"}\"\r\n            ]), fsCurve, c => {\r\n                let uniforms = c.shader.uniforms;\r\n                gl.uniform1f(uniforms.width, c.style.width);\r\n                gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision highp float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 curve;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 c;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   c = curve;\",\r\n\r\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n                \"}\"])\r\n            , fsCurve, c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform1f(uniforms.width, c.style.width);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n    }\r\n\r\n    if (edgeStyle.arrow) {\r\n        let shaderparams = {attribute:{offsetMul:1}};\r\n\r\n        let bind = c => {\r\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\r\n            if (!size) return true;\r\n\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\r\n            gl.uniform1f(uniforms.exc, c.curveExc);\r\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\r\n            if(uniforms.size){\r\n              size = 2.5 * c.nodeSize;\r\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n            }\r\n            gl.uniform2f(uniforms.screen, c.width, c.height);\r\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n        };\r\n\r\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 direction;\",\r\n                \"attribute vec2 textureCoord;\",\r\n                \"attribute float offsetMul;\",\r\n                \"uniform float offset;\",\r\n                \"uniform vec2 arrowsize;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float exc;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 tc;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   vec2 u = direction / length(screen * direction);\",\r\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\r\n                \"   v = v / length(screen * v);\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   tc = textureCoord;\",\r\n                \"}\"\r\n            ]), fsColorTexture, bind, shaderparams)\r\n        );\r\n\r\n        if (extensions.OES_standard_derivatives) {\r\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                    \"attribute vec2 position;\",\r\n                    \"attribute vec2 direction;\",\r\n                    \"attribute vec2 textureCoord;\",\r\n                    \"attribute float offsetMul;\",\r\n                    \"uniform float offset;\",\r\n                    \"uniform vec2 arrowsize;\",\r\n                    \"uniform vec2 size;\",\r\n                    \"uniform float exc;\",\r\n                    \"uniform float cexc;\",\r\n                    \"uniform vec2 screen;\",\r\n                    \"uniform float aspect2;\",\r\n                    \"uniform mat4 transform;\",\r\n                    \"varying vec2 tc;\",\r\n                    ].concat(getShiftFuncs).concat([\r\n                    \"void main(void) {\",\r\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\r\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\r\n                    \"   u = u / length(screen * u);\",\r\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\r\n                    \"   v = v / length(screen * v);\",\r\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                    \"   tc = textureCoord;\",\r\n                    \"}\"\r\n                ]), fsColorTexture, bind, shaderparams)\r\n            );\r\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                    \"attribute vec2 position;\",\r\n                    \"attribute vec2 direction;\",\r\n                    \"attribute vec2 textureCoord;\",\r\n                    \"attribute float offsetMul;\",\r\n                    \"uniform float offset;\",\r\n                    \"uniform vec2 arrowsize;\",\r\n                    \"uniform vec2 size;\",\r\n                    \"uniform vec2 screen;\",\r\n                    \"uniform float exc;\",\r\n                    \"uniform float aspect2;\",\r\n                    \"uniform mat4 transform;\",\r\n                    \"varying vec2 tc;\",\r\n                    ].concat(getShiftFuncs).concat([\r\n                    \"void main(void) {\",\r\n                    \"   vec2 u = direction;\",\r\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\r\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                    \"   tc = textureCoord;\",\r\n                    \"}\"\r\n                ]), fsColorTexture, bind, shaderparams)\r\n            );\r\n        }\r\n    }\r\n\r\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"uniform vec2 size;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"}\"\r\n        ], fsColorTexture, c => {\r\n            let size = getNodeSize(c);\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n        })\r\n    );\r\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"attribute vec4 color;\",\r\n            \"uniform vec2 size;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"varying vec4 c;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"   c = color;\",\r\n            \"}\"\r\n        ], fsVarColorTexture, c => {\r\n            let size = getNodeSize(c);\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        })\r\n    );\r\n    scene.add(\"labelsBackground\", new ccNetViz_primitive(gl, nodeStyle, \"label\", [\r\n      \"attribute vec2 position;\",\r\n      \"attribute vec2 relative;\",\r\n      \"uniform vec2 scale;\",\r\n      \"uniform mat4 transform;\", \r\n      \"uniform float fontScale;\",\r\n      \"uniform float offset;\",\r\n      \"void main(void) {\",\r\n      \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n      \r\n      \"}\"\r\n    ], [\r\n      \"precision mediump float;\",\r\n      \"uniform vec4 backgroundColor;\",\r\n      \"void main() {\",\r\n      \"   gl_FragColor = vec4(backgroundColor.r, backgroundColor.g, backgroundColor.b,1);\",\r\n      \"}\"],  c => {\r\n        let uniforms = c.shader.uniforms;\r\n        let l = c.style.label;\r\n        let f = l.font;\r\n        let textEngine = texts.getEngine(f);\r\n        textEngine.setFont(f);\r\n        let fontScale = 1.0;\r\n        let sdfSize = textEngine.fontSize;\r\n        let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\r\n        if(wantedSize === 0){ fontScale = 0; };\r\n        if(wantedSize && sdfSize){\r\n          fontScale *= wantedSize / sdfSize;\r\n        }\r\n        gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n        gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n        gl.uniform1f(uniforms.fontScale, fontScale);\r\n        let backgroundColor = new ccNetViz_color(l.backgroundColor || backgroundColor);\r\n        ccNetViz_gl.uniformColor(gl, uniforms.backgroundColor, backgroundColor);\r\n    } ))\r\n    let vsLabelsShader = [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 relative;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"uniform float offset;\",\r\n            \"uniform vec2 scale;\",\r\n            \"uniform float fontScale;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"}\"\r\n        ];\r\n    let bindLabels = (is_outline) => {\r\n      return c => {\r\n            if (!getNodeSize(c)) return true;\r\n\r\n            let l = c.style.label;\r\n            let f = l.font;\r\n            let uniforms = c.shader.uniforms;\r\n\r\n            gl.uniform1f(uniforms.type, getLabelType(f));\r\n//            gl.uniform1f(uniforms.type, 0);\r\n\r\n            let textEngine = texts.getEngine(f);\r\n            textEngine.setFont(f);\r\n\r\n            let fontScale = 1.0;\r\n            let sdfSize = textEngine.fontSize;\r\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\r\n            if(wantedSize === 0){ fontScale = 0; };\r\n\r\n            let opts = {};\r\n            if(wantedSize && sdfSize){\r\n              fontScale *= wantedSize / sdfSize;\r\n            }\r\n\r\n            if(is_outline && !textEngine.isSDF) //discardAll\r\n              fontScale = 0;\r\n\r\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\r\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\r\n            gl.uniform1f(uniforms.fontScale, fontScale);\r\n            gl.uniform1f(uniforms.height_font, sdfSize);\r\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n            let color;\r\n            if(is_outline && f)\r\n                color = new ccNetViz_color(f.outlineColor || l.backgroundColor || backgroundColor);\r\n            else\r\n            // colour option in label\r\n            color = c.style.color;\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\r\n        };\r\n    };\r\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\r\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\r\n\r\n    if (options.onLoad) {\r\n        let styles = options.styles;\r\n        for (let p in styles) {\r\n            let s = styles[p];\r\n\r\n            s.texture && textures.get(gl, s.texture, onLoad);\r\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\r\n        }\r\n    }\r\n\r\n    function createScene() {\r\n        return {\r\n            elements: [],\r\n            add: (name, e) => {\r\n                scene[name] = e;\r\n                scene.elements.push(e);\r\n            }\r\n        };\r\n    }\r\n}","import ccNetViz_shader from './shader' ;\r\nimport ccNetViz_utils  from './utils' ;\r\nimport {getPartitionStyle} from './primitiveTools';\r\n\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n\r\n\r\nexport default class primitive{\r\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\r\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\r\n    let buffers = [];\r\n    let sections = [];   \r\n    \r\n    let sectionsByStyle = {};\r\n\r\n    let e = {};\r\n    let iV, iI, iS = 0, iB = 0;\r\n\r\n    let partLength = (filler, part) => {\r\n        if(filler.size){\r\n          let n = 0;\r\n          part.forEach( p => {\r\n            n+=filler.size(e,p);\r\n          });\r\n          return n;\r\n        }else{\r\n          return part.length;\r\n        }\r\n        return;\r\n    };\r\n    \r\n    let init = (filler, n) => {\r\n        iV = iI = 0;\r\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\r\n        let nV = Math.min(max, n - (iB - iS)*max);\r\n        let nI = nV * filler.numIndices;\r\n\r\n        if (!e.indices || e.indices.length !== nI) {\r\n            e.indices = new Uint16Array(nI);\r\n            nV *= filler.numVertices;\r\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\r\n        }\r\n    };\r\n\r\n    let zerofiller =  {\r\n      set: (v, iV, iI, numVertices, numIndices) => {\r\n        let indicesarr = [v.indices, iV, iI];\r\n        for(let i = 0; i < numIndices; i++)\r\n          indicesarr.push(0);\r\n\r\n        let verticesarr = [undefined, iV, iI];\r\n        for(let i = 0; i < numVertices; i++)\r\n          verticesarr.push(0);\r\n\r\n        for(var k in v){\r\n          if(k === 'indices'){\r\n            primitive.indices.apply(this, indicesarr);\r\n          }else{\r\n            verticesarr[0] = v[k];\r\n            primitive.vertices.apply(this, verticesarr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.set = (gl, styles, adder, data, parts, get) => {\r\n        var isDirty = false;\r\n      \r\n        iS = 0;\r\n        iB = 0;\r\n\r\n        this._iIs = new Uint32Array(data.length);\r\n        this._iVs = new Uint32Array(data.length);\r\n        this._iBs = new Uint8Array(data.length);\r\n        this._sizes = new Uint8Array(data.length);\r\n\r\n\r\n        let store = (section) => {\r\n            let b = buffers[iB];\r\n            if (!b) {\r\n                buffers[iB] = b = {};\r\n                for (let a in e) b[a] = gl.createBuffer();\r\n            }\r\n            for (let a in shader.attributes) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\r\n            b.numIndices = iI;\r\n            b.numVertices = iV;\r\n            section.buffers.push(b);\r\n            iB++;\r\n        };\r\n\r\n        sections = [];\r\n        for (let p in parts) {\r\n            iS = iB;\r\n\r\n            let section = {\r\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\r\n                buffers: [],\r\n                styleName: p\r\n            };\r\n\r\n            let filler = get(section.style);\r\n            filler.numVertices = filler.numVertices || 4;\r\n            filler.numIndices = filler.numIndices || 6;\r\n\r\n            let part = parts[p];\r\n\r\n            let pL = partLength(filler, part);\r\n            init(filler, pL);\r\n            let max = primitive.maxBufferSize;\r\n            for (let i = 0; i < part.length; i++) {\r\n                let s = filler.size ? filler.size(e, part[i]) : 1;\r\n                let niV = iV + s * filler.numVertices;\r\n                let niI = iI + s * filler.numIndices;\r\n\r\n                if (niV >= max) {\r\n                    store(section);\r\n                    init(filler, pL);\r\n                    niV = iV;\r\n                    niI = iI;\r\n                }\r\n\r\n\r\n                if(filler.set(e, part[i], iV, iI))\r\n                  isDirty = true;\r\n\r\n\r\n                let idx = part.idx[i];\r\n                this._iIs[idx] = iI;\r\n                this._iVs[idx] = iV;\r\n                this._iBs[idx] = iB;\r\n                this._sizes[idx] = s;\r\n\r\n                iI = niI;\r\n                iV = niV;\r\n            }\r\n            store(section);\r\n\r\n            function add() {\r\n                sections.push(this);\r\n                sectionsByStyle[this.styleName] = this;\r\n            }\r\n            let addSection = add.bind(section);\r\n\r\n            adder ? adder(section, addSection) : addSection();\r\n        }\r\n        \r\n        return isDirty;\r\n    }\r\n\r\n    let fb;\r\n    this.update = function(gl, attribute, data, get)  {\r\n        let i = 0, size = shader.attributes[attribute].size;\r\n        sections.forEach(function(section)  {\r\n            let filler = get(section.style);\r\n            filler.numVertices = filler.numVertices || 4;\r\n\r\n            section.buffers.forEach(function(e)  {\r\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\r\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\r\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\r\n            });\r\n        });\r\n   }\r\n\r\n   this.updateEl = (gl, el, pos, get) => {\r\n        let storeToPos = (b, iV, iI) => {\r\n            for (let a in shader.attributes) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\r\n        };\r\n\r\n        let section = sectionsByStyle[el.style];\r\n        \r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n        filler.numIndices = filler.numIndices || 6;\r\n             \r\n        iB=iS=0;\r\n\r\n        let buffer = section.buffers[this._iBs[pos]];\r\n        let s = filler.size ? filler.size(buffer, el) : 1;\r\n        let olds = this._sizes[pos];\r\n        if(s > olds){\r\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\r\n          return;\r\n        }\r\n\r\n        init(filler, olds);\r\n        filler.set(e, el, 0, 0);\r\n\r\n        for(;s < olds; s++){\r\n          //zero fill empty spaces\r\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\r\n        }\r\n\r\n        let iV = this._iVs[pos];\r\n        let iI = this._iIs[pos];\r\n        storeToPos(buffer, iV, iI);\r\n    };\r\n\r\n    this.draw = (context) => {\r\n        context.shader = shader;\r\n        shader.bind();\r\n\r\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\r\n        gl.uniform1f(shader.uniforms.time, context.renderTime);\r\n\r\n        sections.forEach(section => {\r\n            if (section.style.texture) {\r\n                section.style.texture.update && section.style.texture.update();\r\n                gl.activeTexture(gl.TEXTURE0);\r\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\r\n                gl.uniform1i(shader.uniforms.texture, 0);\r\n            }\r\n\r\n            context.style = section.style;\r\n            if (bind(context)) return;\r\n\r\n            section.buffers.forEach(e => {\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\r\n\r\n                for (var a in shader.attributes) {\r\n                    var attribute = shader.attributes[a];\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\r\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\r\n                }\r\n\r\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\r\n            });\r\n        });\r\n\r\n        shader.unbind();\r\n    }\r\n  }\r\n  \r\n  static vertices(buffer, iV) {\r\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\r\n  }\r\n  \r\n  static singles(buffer, iV) {\r\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\r\n  }\r\n  \r\n  static colors(buffer, iV) {\r\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\r\n        let c = arguments[i];\r\n        buffer[j++] = c.r;\r\n        buffer[j++] = c.g;\r\n        buffer[j++] = c.b;\r\n        buffer[j++] = c.a;\r\n    }\r\n  }\r\n  \r\n  static indices(buffer, iV, iI){\r\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\r\n  }\r\n\r\n  static quad(buffer, iV, iI) {\r\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\r\n  }\r\n\r\n  static get maxBufferSize(){\r\n    return 65536;\r\n  } \r\n}","import ccNetViz_gl from './gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nvar defaultAttr = {color: 4};\r\n\r\nexport default class Shader {\r\n  constructor(gl, vs, fs, shaderParams) {\r\n    this._gl = gl;\r\n    this._vs = vs;\r\n    this._fs = fs;\r\n    \r\n    let program = this._program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\r\n    gl.linkProgram(program);\r\n    \r\n    this.uniforms = {};\r\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveUniform(program, i).name;\r\n        this.uniforms[name] = gl.getUniformLocation(program, name);\r\n    }\r\n    \r\n    let attrParams = (shaderParams || {}).attribute || {};\r\n\r\n    this.attributes = {};\r\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveAttrib(program, i).name;\r\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\r\n    }\r\n    \r\n  }\r\n  \r\n  static get attribute(){\r\n    return defaultAttr;\r\n  }\r\n  \r\n  bind () {\r\n    this._gl.useProgram(this._program);\r\n\r\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\r\n  }\r\n\r\n  unbind () {\r\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\r\n  }\r\n  \r\n};","import ccNetViz_quadtree from '../quadTree' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(nodes, edges, options = {}) {\r\n    const edgeDistance = 15,\r\n          edgeStrength = 1,\r\n          friction = 0.9,\r\n          charge = -30,\r\n          gravity = 0.4,\r\n          theta2 = .64,\r\n          size = [1,1],\r\n          chargeDistance2 = Infinity;\r\n\r\n    let   alpha,\r\n          distances = [],\r\n          strengths = [],\r\n          charges = [];\r\n\r\n\r\n    function accumulate(quad, alpha, charges) {\r\n        let cx = 0, cy = 0;\r\n        quad.charge = 0;\r\n        if (!quad.leaf) {\r\n            let nodes = quad.nodes;\r\n            let c, n = nodes.length;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                c = nodes[i];\r\n                if (c == null) continue;\r\n                accumulate(c, alpha, charges);\r\n                quad.charge += c.charge;\r\n                cx += c.charge * c.cx;\r\n                cy += c.charge * c.cy;\r\n            }\r\n        }\r\n        if (quad.point) {\r\n            if (!quad.leaf) {\r\n                quad.point.x += Math.random() - 0.5;\r\n                quad.point.y += Math.random() - 0.5;\r\n            }\r\n            let k = alpha * charges[quad.point.index];\r\n            quad.charge += quad.pointCharge = k;\r\n            cx += k * quad.point.x;\r\n            cy += k * quad.point.y;\r\n        }\r\n        quad.cx = cx / quad.charge;\r\n        quad.cy = cy / quad.charge;\r\n    }\r\n\r\n    function repulse(node) {\r\n        return function(quad, x1, _, x2) {\r\n            if (quad.point !== node) {\r\n                let dx = quad.cx - node.x;\r\n                let dy = quad.cy - node.y;\r\n                let dw = x2 - x1;\r\n                let dn = dx * dx + dy * dy;\r\n\r\n                if (dw * dw / theta2 < dn) {\r\n                    if (dn < chargeDistance2) {\r\n                        let k = quad.charge / dn;\r\n                        node.px -= dx * k;\r\n                        node.py -= dy * k;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if (quad.point && dn && dn < chargeDistance2) {\r\n                    let k = quad.pointCharge / dn;\r\n                    node.px -= dx * k;\r\n                    node.py -= dy * k;\r\n                }\r\n            }\r\n            return !quad.charge;\r\n        };\r\n    }\r\n\r\n    function step() {\r\n        if ((alpha *= .99) < .05) {\r\n            alpha = 0;\r\n            return true;\r\n        }\r\n\r\n        let q, o, s, t, l, k, x, y;\r\n        let n = nodes.length;\r\n        let m = edges.length;\r\n\r\n        for (let i = 0; i < m; i++) {\r\n            o = edges[i];\r\n            s = o.source;\r\n            t = o.target;\r\n            x = t.x - s.x;\r\n            y = t.y - s.y;\r\n            if (l = (x * x + y * y)) {\r\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\r\n                x *= l;\r\n                y *= l;\r\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\r\n                t.y -= y * k;\r\n                s.x += x * (k = 1 - k);\r\n                s.y += y * k;\r\n            }\r\n        }\r\n\r\n        if (k = alpha * gravity) {\r\n            x = size[0] / 2;\r\n            y = size[1] / 2;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                o = nodes[i];\r\n                o.x += (x - o.x) * k;\r\n                o.y += (y - o.y) * k;\r\n            }\r\n        }\r\n\r\n        if (charge) {\r\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                let o = nodes[i];\r\n                !o.fixed && q.visit(repulse(o));\r\n            }\r\n        }\r\n\r\n        const rnd = (min,max) => Math.random() * (max-min) + min;\r\n        for (let i = 0; i < n; i++) {\r\n            o = nodes[i];\r\n            if (o.fixed || o.fixed2) {\r\n                o.x = o.px;\r\n                o.y = o.py;\r\n            }\r\n            else {\r\n                o.x -= (o.px - (o.px = o.x)) * friction;\r\n                o.y -= (o.py - (o.py = o.y)) * friction;\r\n\r\n                if(options && options.minX !== undefined){\r\n                    if(o.x < options.minX || o.x > options.maxX){\r\n                        o.x = rnd(options.minX, options.maxX);\r\n                    }\r\n                    if(o.y < options.minY || o.y > options.maxY){\r\n                        o.y = rnd(options.minY, options.maxY);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.apply = function() {\r\n        let n = nodes.length;\r\n        let d = Math.sqrt(n);\r\n        let s = 0.3 / d;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            o.weight = 0;\r\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\r\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\r\n            o.px = o.x;\r\n            o.py = o.y;\r\n            charges[i] = charge;\r\n        }\r\n\r\n        for (let i = 0; i < edges.length; i++) {\r\n            let o = edges[i];\r\n            o.source.weight++;\r\n            o.target.weight++;\r\n            distances[i] = edgeDistance;\r\n            strengths[i] = edgeStrength;\r\n        }\r\n\r\n        alpha = 0.1;\r\n        while (!step());\r\n\r\n        return true;\r\n    };\r\n};\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(points) {\r\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n\r\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n    xs = [], ys = [];\r\n    n = points.length;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n        d = points[i];\r\n        if (d.x < x1_) x1_ = d.x;\r\n        if (d.y < y1_) y1_ = d.y;\r\n        if (d.x > x2_) x2_ = d.x;\r\n        if (d.y > y2_) y2_ = d.y;\r\n        xs.push(d.x);\r\n        ys.push(d.y);\r\n    }\r\n\r\n    let dx = x2_ - x1_;\r\n    let dy = y2_ - y1_;\r\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\r\n\r\n    function create() {\r\n        return {\r\n            leaf: true,\r\n            nodes: [],\r\n            point: null,\r\n            x: null,\r\n            y: null\r\n        };\r\n    }\r\n\r\n    function visit(f, node, x1, y1, x2, y2) {\r\n        if (!f(node, x1, y1, x2, y2)) {\r\n            let sx = (x1 + x2) * 0.5;\r\n            let sy = (y1 + y2) * 0.5;\r\n            let children = node.nodes;\r\n\r\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\r\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\r\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\r\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (n.leaf) {\r\n            let nx = n.x;\r\n            let ny = n.y;\r\n\r\n            if (nx !== null) {\r\n                if (nx === x && ny === y) {\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n                else {\r\n                    let nPoint = n.point;\r\n                    n.x = n.y = n.point = null;\r\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n            } else {\r\n                n.x = x, n.y = y, n.point = d;\r\n            }\r\n        } else {\r\n            insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        let xm = (x1 + x2) * 0.5;\r\n        let ym = (y1 + y2) * 0.5;\r\n        let right = x >= xm;\r\n        let below = y >= ym;\r\n        let i = below << 1 | right;\r\n\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = create());\r\n\r\n        right ? x1 = xm : x2 = xm;\r\n        below ? y1 = ym : y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n    }\r\n\r\n    function findNode(root, x, y, x0, y0, x3, y3) {\r\n        let minDistance2 = Infinity;\r\n        let closestPoint;\r\n\r\n        (function find(node, x1, y1, x2, y2) {\r\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n\r\n            let point;\r\n            if (point = node.point) {\r\n                let dx = x - node.x;\r\n                let dy = y - node.y;\r\n                let distance2 = dx * dx + dy * dy;\r\n\r\n                if (distance2 < minDistance2) {\r\n                    let distance = Math.sqrt(minDistance2 = distance2);\r\n                    x0 = x - distance, y0 = y - distance;\r\n                    x3 = x + distance, y3 = y + distance;\r\n                    closestPoint = point;\r\n                }\r\n            }\r\n\r\n            let children = node.nodes;\r\n            let xm = (x1 + x2) * .5;\r\n            let ym = (y1 + y2) * .5;\r\n            let right = x >= xm;\r\n            let below = y >= ym;\r\n\r\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n                if (node = children[i & 3]) switch (i & 3) {\r\n                    case 0: find(node, x1, y1, xm, ym); break;\r\n                    case 1: find(node, xm, y1, x2, ym); break;\r\n                    case 2: find(node, x1, ym, xm, y2); break;\r\n                    case 3: find(node, xm, ym, x2, y2); break;\r\n                }\r\n            }\r\n        })(root, x0, y0, x3, y3);\r\n\r\n        return closestPoint;\r\n    }\r\n\r\n    let root = create();\r\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\r\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\r\n\r\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n    --i;\r\n\r\n    xs = ys = points = d = null;\r\n\r\n    return root;\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  constructor(nodes){\r\n    this._nodes = nodes;\r\n  }\r\n  \r\n  apply () {\r\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\r\n      let o = this._nodes[i];\r\n      o.x = Math.random();\r\n      o.y = Math.random();\r\n    }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges, layout_options = {}) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._angle_step = 2*Math.PI/nodes.length;\r\n    if (layout_options.starting_angle == null)\r\n\tthis._starting_angle = 0;\r\n    else\r\n\tthis._starting_angle = layout_options.starting_angle;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\r\n      root.centered = true;\r\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n      // branch order is for now stable but unpredictable, see layouts.cri\r\n      let visited_leafs = 0;\r\n      for (let i=0; i < root.children.length; i++){\r\n          let child = root.children[i];\r\n          if (child.centered != true){\r\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\r\n          }\r\n      }\r\n      if (root.children == 0){\r\n          visited_leafs++;\r\n      }\r\n      // moving to parent, position node\r\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\r\n      root.x = (layer-1)*this.stepx + this.alphax;\r\n      return visited_leafs;\r\n  }\r\n\r\n  apply () {\r\n      // only one root node supported for now\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for non-trees (cyclical graphs) should be\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      r = getRanges(leafs);\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      this.alphay = r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      this.drawTreeCentered(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\r\n    // each node is in vertically on the top of the stack of its leafs\r\n    root.visited = true;\r\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n    root.x = this.alphax+this.stepx*(layer-1);\r\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\r\n    // visit children until leafs\r\n    let visited_leafs = 0;\r\n    for (let i=0; i < root.children.length; i++){\r\n       let child = root.children[i];\r\n       if (child.centered != true){\r\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\r\n       }\r\n    }\r\n    if(root.children.length == 0){\r\n        visited_leafs++;\r\n    }\r\n    return visited_leafs;\r\n}\r\n  apply () {\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      // this layout can be run on any graph actually\r\n      // for which the children might be selected e.g. for their degree\r\n      // draw can be decided on other measures, such as closeness centrality or clustering\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      r = getRanges(leafs);\r\n      this.alphay =  r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      // give nodes their positions\r\n      // plot each branch in depth first,\r\n      // increment y position for each leaf\r\n      // backtracking to go from leaf to parents\r\n      // and decide if parent is visited (always in tree layout)\r\n\r\n      this.drawTreeTop(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport default class {\r\n  // this layout should handle any digraph\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this.alphay = 0.05; // y margin\r\n    this.alphax = 0.05; // x margin\r\n  }\r\n\r\n  makeLayers(nodes, layer){\r\n      if (nodes.length > 1){\r\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\r\n          for (let i=0; i<nodes.length; ++i){\r\n              nodes[i].visited = true;\r\n              nodes[i].layer = layer; // makes x afterwards\r\n              nodes[i].y = this.alphay + i*stepy;\r\n          }\r\n      }\r\n      else {\r\n          nodes[0].visited = true;\r\n          nodes[0].layer = layer; // makes x afterwards\r\n          nodes[0].y = 0.5;\r\n      }\r\n      let next_layer = [];\r\n      for (let i=0; i<nodes.length; i++){\r\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\r\n          for (let j=0; j < neighbors.length; j++){\r\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\r\n                  next_layer.push(neighbors[j]);\r\n              }\r\n          }\r\n      }\r\n      if (next_layer.length == 0){\r\n          return layer;\r\n      }\r\n      else {\r\n          return this.makeLayers(next_layer, layer+1);\r\n      }\r\n  }\r\n\r\n  apply () {\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for trees (acyclic graphs) are\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.visited = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the roots:\r\n      // nodes defined by the user as roots OR\r\n      // nodes with in-degree == 0 OR\r\n      // nodes with greatest in-degree (or degree if undirected graph)\r\n      let roots = [];\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\r\n              roots.push(nodes[i]);\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          for (let i = 0; i < nodes.length; i++){\r\n              if (nodes[i].parents.length == 0){\r\n                  roots.push(nodes[i]);\r\n              }\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          // calculate max out-degree\r\n          let max_outdegree = 0;\r\n          nodes.forEach(function(node){\r\n              if (node.children.length > max_outdegree){\r\n                  max_outdegree = node.children.length;\r\n              }\r\n          });\r\n          // choose vertices with greatest out-degree\r\n          nodes.forEach(function(node){\r\n              if (node.children.length == max_outdegree){\r\n                  roots.push(node);\r\n              }\r\n          });\r\n      }\r\n      // number of layers and max number of nodes in each layer\r\n      // has to be found by making the layout\r\n      // there are two approaches to finding the nodes in each layer:\r\n      // 1) each layer has all the neighbors of the nodes in the previous layer\r\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\r\n      // this layout implements the first of these approaches.\r\n      const depth = this.makeLayers(roots, 1);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      const stepx = (1-2*this.alphax)/(depth-1);\r\n      // posx = alphax + stepx*(depth-1)\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {EigenvalueDecomposition} from 'ml-matrix';\r\nimport {create2dArray} from './utils';\r\n\r\nfunction twoSmallest (arr) {\r\n    const min = Math.min.apply(null, arr), // get the max of the array\r\n        mini = arr.indexOf(min);\r\n    arr[mini] = Infinity; // replace max in the array with -infinity\r\n    const second_min = Math.min.apply(null, arr), // get the new max \r\n        second_mini = arr.indexOf(second_min);\r\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\r\n    const third_min = Math.min.apply(null, arr), // get the new max \r\n        third_mini = arr.indexOf(third_min);\r\n    return [second_mini, third_mini];\r\n}\r\n\r\nfunction normalize (x, y) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\r\n        maxy = Math.max.apply(null, y.map(Math.abs));\r\n    let minx = Math.min.apply(null, x),\r\n        miny = Math.min.apply(null, y);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\r\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\r\n    }\r\n    return [x, y];\r\n}\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      // build the diagonal of degrees\r\n      // NOT subtract adjacency from degrees but:\r\n      // substitute diagonal by degrees\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\r\n      }\r\n      let foo = new EigenvalueDecomposition(A);\r\n      const iii = twoSmallest(foo.realEigenvalues);\r\n      const foo_ = foo.eigenvectorMatrix.transpose();\r\n      const x = foo_[iii[0]];\r\n      const y = foo_[iii[1]];\r\n      const xy = normalize(x, y);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\r\n      // and implemented in networkx/drawing/layout.py\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = xy[0][i];\r\n          node.y = xy[1][i];\r\n      }); \r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\n// inspired in Matlab implementation\r\n// and JS transcription in\r\n// https://github.com/alanmeeson/spectral-graph-layout\r\n\r\nimport {create2dArray} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._epsilon = 1e-8; // tolerance\r\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\r\n    this._num_elements = nodes.length; //number of nodes in graph\r\n    this._dims = 2;\r\n  }\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      const D = deg(A); //degree of each node in graph (number of connections).\r\n\r\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\r\n      let u = new Array(dims);//declare the eigen vector matrix\r\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\r\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\r\n\r\n      //Power iteration to determine the remaining eigen vectors.\r\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \r\n          //initialize eigen vector with random values\r\n          let uhk = normalize(rand(this._num_elements));\r\n\r\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\r\n          let stop = false; //stopping criterion flag.\r\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\r\n\r\n              //D-orthogonalize against previous eigenvectors\r\n              let uk = uhk.slice();\r\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\r\n                  let ul = u[l]; //extract the l-th eigen vector\r\n\r\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\r\n                  let top_ = 0;\r\n                  let bottom = 0;\r\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\r\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\r\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\r\n                  }\r\n                  const ratio = top_ / bottom;\r\n\r\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\r\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\r\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\r\n                  }\r\n              }\r\n\r\n              //multiply with .5(I+D^-1 A)\r\n              for (let i = 0; i < uhk.length; i++) {\r\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\r\n              }\r\n\r\n\r\n              uhk = normalize(uhk);\r\n\r\n              itt_count = itt_count + 1;\r\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\r\n          }\r\n          u[k] = uhk.slice();\t\r\n      }\r\n\r\n      //discard the first eigenvector which should be [ones].\r\n      // var v = new Array(u.length);\r\n      // for (var i=0; i < u.length; i++) {\r\n      //     v[i] = new Array(u[i].length);\r\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\r\n      // }\r\n      const x = normalize2(u[1]);\r\n      const y = normalize2(u[2]);\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = x[i];\r\n          node.y = y[i];\r\n      }); \r\n  }\r\n};\r\n\r\nfunction deg(graph) {\r\n    //Calculate the degree of each node from the graph matrix.\r\n    let d = zeros(graph.length);\r\n\r\n    //degree of node i is the sum of the weights of all edges connected to it.\r\n    for (let i = 0; i < graph.length; i++) {\r\n        let node_degree = 0;\r\n        for (let j = 0; j < graph[i].length; j++) {\r\n            node_degree += graph[i][j];\r\n        }\r\n        d[i] = node_degree+1;\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\nfunction dot(a,b) {\r\n    //inner product of two vectors\r\n    let d = 0;\r\n    for (let i = 0; i < a.length; i++) {\r\n        d += a[i] * b[i];\r\n    }\r\n    return d;\r\n}\r\n\r\nfunction euclideanDistance(coordinates) {\r\n    //calculate the euclidean distance between two points/vectors.\r\n    // used for normalization.\r\n    let d = 0;\r\n\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n        d += Math.pow(coordinates[i], 2);\r\n    }\r\n    return Math.sqrt(d);\r\n}\r\n\r\nfunction normalize(arr) {\r\n    //normalizes a vector = arr/||arr||\r\n    const d = euclideanDistance(arr);\r\n    let narr = new Array(arr.length);\r\n    for (let i = 0; i < arr.length; i++) {\r\n        narr[i] = arr[i] / d;\r\n    }\r\n\r\n    return narr;\r\n}\r\n\r\nfunction rand(n) {\r\n    //create a vector of length n and fill with random numbers.\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\r\n    return arr;\r\n}\r\n\r\nfunction add(a, b) {\r\n    let c = new Array(a.length);\r\n    for (let i = 0; i < a.length; i++) {\r\n        c[i] = new Array(a[i].length);\r\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction symmetricRandMatrix(n, ulim) {\r\n    let mat = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n        mat[i] = new Array(n);\r\n        mat[i][i] = 0;\r\n    }\r\n    for (let i = 0; i < n; i++) {\r\n        for (let j = i + 1; j < n; j++) {\r\n            mat[i][j] = ulim * Math.random();\r\n            mat[j][i] = mat[i][j];\r\n        }\r\n    }\r\n    return mat;\r\n}\r\n\r\nfunction zeros(n) {\r\n    //create a vector filled with zeros\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 0;\r\n    return arr;\r\n}\r\n\r\nfunction ones(n) {\r\n    //create a vector filled with ones\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 1;\r\n    return arr;\r\n}\r\n\r\nfunction normalize2 (x) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs));\r\n    let minx = Math.min.apply(null, x);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\r\n    }\r\n    return x;\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05; // from [0,1] borders\r\n    this._radius = 0.05; // of the empty circle on the center\r\n    this._nlines = 5;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nodes_segment = this._nodes.length / this._nlines;\r\n      const segment = 0.5 - (this._margin + this._radius);\r\n      const step = segment / nodes_segment;\r\n      const angle = 2*Math.PI/this._nlines;\r\n      let j = 0;\r\n      for(let i=0; i<this._nodes.length; ++i){\r\n          let ii = nd.nodes[i].index;\r\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\r\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\r\n          j = Math.floor(i/nodes_segment);\r\n      }\r\n  }\r\n};\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const sq = Math.sqrt(this._nodes.length);\r\n      const reminder = sq - Math.floor(sq);\r\n      if (reminder > 0)\r\n\t  var nnodes = Math.floor(sq)+1;\r\n      else\r\n\t  var nnodes = sq;\r\n      const step = (1 - this._margin*2)/nnodes;\r\n\r\n      const nlines = this._nodes.length/nnodes;\r\n      const reminder2 = nlines - Math.floor(nlines);\r\n      if (reminder2 > 0)\r\n\t  var nlines2 = Math.floor(nlines)+1;\r\n      else\r\n\t  var nlines2 = nlines;\r\n      const stepy = (1-2*this._margin)/(nlines2-2);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n\t  let j = Math.floor(i/(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  // the hubs are on the first half of the sinusoid period\r\n  // the intermediary are on the second half\r\n  // and the periphery are on the upper straight line\r\n  // further versions should enable the choice of other\r\n  // fractions of hubs, intermediary and peripheral vertices\r\n  // or the Erdös sectioning.\r\n  // maybe also let the user set the endpoints of the periphery segment\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n    this._hubs = 0.1; // 10%\r\n    this._intermediary = 0.2;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\r\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\r\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\r\n      const steprad = Math.PI/(nhubs - 1); \r\n      let i = 0;\r\n      while (i < nhubs ){\r\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\r\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\r\n\t++i;\r\n      }\r\n      const nintermediary = nhubs_intermediary - nhubs;\r\n      const steprad2 = Math.PI/nintermediary; \r\n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\r\n      i = 0;\r\n      while (i < nintermediary ){\r\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\r\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\r\n\t++i;\r\n      }\r\n      const p0 = [0.85, 0.75];\r\n      const p1 = [0.4, 1-this._margin];\r\n      const nperipheral = this._nodes.length - nhubs_intermediary;\r\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\r\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\r\n      i = 0;\r\n      while (i < nperipheral ){\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\r\n\t++i;\r\n      }\r\n  }\r\n};\r\n","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nconst EPS = Number.EPSILON || 1e-14;\r\n\r\n\r\n\r\n\r\n//solving cube analyticaly for bezier curves\r\nfunction cuberoot(x) {\r\n    const y = Math.pow(Math.abs(x), 1/3);\r\n    return x < 0 ? -y : y;\r\n}\r\n\r\nfunction solveCubic(a, b, c, d) {\r\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\r\n        a = b; b = c; c = d;\r\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\r\n            a = b; b = c;\r\n            if (Math.abs(a) < 1e-8) // Degenerate case\r\n                return [];\r\n            return [-b/a];\r\n        }\r\n\r\n        const D = b*b - 4*a*c;\r\n        if (Math.abs(D) < 1e-8)\r\n            return [-b/(2*a)];\r\n        else if (D > 0)\r\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\r\n        return [];\r\n    }\r\n\r\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\r\n    const p = (3*a*c - b*b)/(3*a*a);\r\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\r\n    let roots;\r\n\r\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\r\n        roots = [cuberoot(-q)];\r\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\r\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\r\n    } else {\r\n        const D = q*q/4 + p*p*p/27;\r\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\r\n            roots = [-1.5*q/p, 3*q/p];\r\n        } else if (D > 0) {             // Only one real root\r\n            const u = cuberoot(-q/2 - Math.sqrt(D));\r\n            roots = [u - p/(3*u)];\r\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\r\n            const u = 2*Math.sqrt(-p/3);\r\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\r\n            const k = 2*Math.PI/3;\r\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\r\n        }\r\n    }\r\n\r\n    // Convert back from depressed cubic\r\n    for (let i = 0; i < roots.length; i++)\r\n        roots[i] -= b/(3*a);\r\n\r\n    return roots;\r\n}\r\n\r\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\r\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\r\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\r\n  \r\n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\r\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\r\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\r\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\r\n    \r\n  const eqresult = solveCubic(A,B,C,D);\r\n  \r\n  \r\n  //loop through all possible solitions to find out which point is the nearest\r\n  let mindist = Infinity;\r\n  for(let i = 0; i < eqresult.length; i++){\r\n    const t = eqresult[i];\r\n    \r\n    if(t < 0 || t > 1)\r\n      continue;\r\n    \r\n    //point at bezier curve\r\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\r\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\r\n    \r\n    const dist = distance2(x,y,px,py);\r\n    if(dist < mindist)\r\n      mindist = dist;\r\n    \r\n  }\r\n  \r\n  return mindist;\r\n}\r\n\r\n/*\r\n * @param v - array of with points [x1,y1,x2,y2 .... ]\r\n * @return array representing bounding box [x1,y1,x2,y2]\r\n */\r\nfunction getBBFromPoints(v){\r\n  let xmin = Infinity;\r\n  let xmax = -xmin;\r\n  let ymin = Infinity;\r\n  let ymax = -ymin;\r\n  \r\n  //x of points - even indexes in array \r\n  for(let i = 0; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < xmin) xmin = val;\r\n    if(val > xmax) xmax = val;\r\n  }\r\n  \r\n  //y of points - odd indexes in array \r\n  for(let i = 1; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < ymin) ymin = val;\r\n    if(val > ymax) ymax = val;\r\n  }\r\n\r\n  return [xmin, ymin, xmax, ymax];\r\n}\r\n\r\n//distance from point to point\r\nfunction distance2(x1,y1,x2,y2){\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n//distance from point to line\r\nfunction pDistance2(x, y, x1, y1, x2, y2) {\r\n  const A = x - x1;\r\n  const B = y - y1;\r\n  const C = x2 - x1;\r\n  const D = y2 - y1;\r\n\r\n  const dot = A * C + B * D;\r\n  const len_sq = C * C + D * D;\r\n  let param = -1;\r\n  if (len_sq != 0) //in case of 0 length line\r\n      param = dot / len_sq;\r\n\r\n  let xx, yy;\r\n\r\n  if (param < 0) {\r\n    xx = x1;\r\n    yy = y1;\r\n  }\r\n  else if (param > 1) {\r\n    xx = x2;\r\n    yy = y2;\r\n  }\r\n  else {\r\n    xx = x1 + param * C;\r\n    yy = y1 + param * D;\r\n  }\r\n\r\n  return distance2(x,y,xx,yy);\r\n}\r\n\r\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\r\n{\r\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\r\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\r\n\r\n    if( d == 0 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let r = q / d;\r\n\r\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\r\n    let s = q / d;\r\n\r\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction pointInRect(px,py, x1, y1, x2, y2){\r\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\r\n}\r\n\r\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\r\n  return p1x <= r2x &&\r\n          p1y <= r2y &&\r\n          p2x >= r1x &&\r\n          p2y >= r1y;\r\n}\r\n\r\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nfunction eq(a,b){\r\n  return a >= b-EPS && a <= b+EPS;\r\n}\r\n\r\nfunction neq(a,b){\r\n  return !eq(a,b);\r\n}\r\n\r\n\r\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\r\n  if(t < 0 || t > 1)\r\n    return false;\r\n  \r\n  if(neq(v-s,0)){\r\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\r\n    if(x < 0 || x > 1)\r\n      return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\r\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\r\n\r\n    let t;\r\n    \r\n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\r\n    if(neq(tden, 0)){\r\n      if(neq(q-r, 0)){\r\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\r\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\r\n        if(sq >= 0){\r\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\r\n  \r\n          t = (t1-0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n  \r\n          t = (t1+0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\r\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\r\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\r\n      t = t/(2*tden);\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\r\n      t = (2*e-f-v)/(2*(e-f));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\r\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\r\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\r\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    const centerx = (r1x+r2x)/2;\r\n    const centery = (r1y+r2y)/2;\r\n    \r\n    const diffx = r1x-r2x;\r\n    const diffy = r1y-r2y;\r\n    \r\n    //performance optimalization based on distance\r\n    let diff2xy = diffx*diffx + diffy*diffy;\r\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\r\n    if(dist2*4 > diff2xy)\r\n      return false;\r\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\r\n      return true;\r\n\r\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nexport {\r\n        EPS, \r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      };\r\n","import { easeFunctions } from \"./easeFunctions\";\r\n\r\nexport {\r\n    easeFunctions,\r\n}","import linear from './linear.glsl';\r\nimport sinIn from './sin-in.glsl';\r\nimport sinOut from './sin-out.glsl';\r\nimport sinInOut from './sin-inout.glsl';\r\nimport expIn from './exp-in.glsl';\r\nimport expOut from './exp-out.glsl';\r\nimport expInOut from './exp-inout.glsl';\r\nimport bounceIn from './bounce-in.glsl';\r\nimport bounceOut from './bounce-out.glsl';\r\nimport bounceInOut from './bounce-inout.glsl';\r\nimport circularIn from './circular-in.glsl';\r\nimport circularOut from './circular-out.glsl';\r\nimport circularInOut from './circular-inout.glsl';\r\nimport quadIn from './quad-in.glsl';\r\nimport quadOut from './quad-out.glsl';\r\nimport quadInOut from './quad-inout.glsl';\r\nimport cubicIn from './cubic-in.glsl';\r\nimport cubicOut from './cubic-out.glsl';\r\nimport cubicInOut from './cubic-inout.glsl';\r\nimport quartIn from './quart-in.glsl';\r\nimport quartOut from './quart-out.glsl';\r\nimport quartInOut from './quart-inout.glsl';\r\nimport quintIn from './quint-in.glsl';\r\nimport quintOut from './quint-out.glsl';\r\nimport quintInOut from './quint-inout.glsl';\r\n\r\nconst easeFunctions = {\r\n    'linear': linear,\r\n    'sin-in': sinIn,\r\n    'sin-out': sinOut,\r\n    'sin-inout': sinInOut,\r\n    'exp-in': expIn,\r\n    'exp-out': expOut,\r\n    'exp-inout': expInOut,\r\n    'bounce-in': bounceIn,\r\n    'bounce-out': bounceOut,\r\n    'bounce-inout': bounceInOut,\r\n    'circular-in': circularIn,\r\n    'circular-out': circularOut,\r\n    'circular-inout': circularInOut,\r\n    'quad-in': quadIn,\r\n    'quad-out': quadOut,\r\n    'quad-inout': quadInOut,\r\n    'cubic-in': cubicIn,\r\n    'cubic-out': cubicOut,\r\n    'cubic-inout': cubicInOut,\r\n    'quart-in': quartIn,\r\n    'quart-out': quartOut,\r\n    'quart-inout': quartInOut,\r\n    'quint-in': quintIn,\r\n    'quint-out': quintOut,\r\n    'quint-inout': quintInOut,\r\n}\r\n\r\nexport {\r\n    easeFunctions,\r\n}","export default \"float ease(float t) {\\r\\n  return t;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\r\\n}\\r\\n\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin(t * HALF_PI);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return -0.5 * (cos(PI * t) - 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 || t == 1.0\\r\\n    ? t\\r\\n    : t < 0.5\\r\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\r\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return 1.0 - bounceOut(1.0 - t);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\r\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 - sqrt(1.0 - t * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return sqrt((2.0 - t) * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\r\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return -t * (t - 2.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  float f = t - 1.0;\\r\\n  return f * f * f + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 4.0 * t * t * t\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 4.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 5.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return 1.0 + (pow(t - 1.0, 5.0)); // NOTE: fix original bug '-' -> '+'\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +16.0 * pow(t, 5.0)\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0; // NOTE: fix original bug, no '-'\\r\\n}\\r\\n\"","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\n// this file creates webGL type textures of images example custom.html\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad, 5)];\r\n    this._textures = {}; //already converted to textures\r\n    this._pending = {}; //pending images \r\n    this._n = 0;  //counts pending images to be converted to textures\r\n  }\r\n\r\n  get(gl, img, action, options) { \r\n      var p = this._pending[img];\r\n      var t = this._textures[img];\r\n\r\n      \r\n      // TODO : add explanation about if-else statements below\r\n      if (p) {\r\n          p.push(action);\r\n      }\r\n      else if (t) {\r\n          action && action();\r\n      }\r\n\r\n      // if image is neither in this._pending array nor nor in already converted this._textures array\r\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\r\n      // and remove it from pending + add it to textures\r\n      \r\n      else {\r\n          p = this._pending[img] = [action];\r\n          this._n++;\r\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\r\n              p.forEach(a => a && a());\r\n              delete this._pending[img];\r\n              \r\n              --this._n || this._load.forEach(l => l());\r\n          }, options);\r\n      }\r\n      return t;\r\n  }\r\n\r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n\r\n}","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\r\n    this._files = {};\r\n    this._pending = {};\r\n    this._n = 0;\r\n  }\r\n  \r\n  _transformFile(data, dataType) {\r\n    if(dataType === 'json')\r\n      return JSON.parse(data);\r\n    return data;    \r\n  }\r\n  \r\n  get(url) {\r\n    return this._files[url];\r\n  }\r\n\r\n  /*\r\n   * @param type {\r\n   *   url: 'url of file',\r\n   *   success: callback\r\n   *   dataType \"text\" || \"json\"\r\n   * }\r\n   */\r\n  load(url, action, dataType) {\r\n    let p = this._pending[url];\r\n    let f = this._files[url];\r\n\r\n    if (p) {\r\n        p.push(action);\r\n    }\r\n    else if (f) {\r\n        action && action();\r\n    }\r\n    else {\r\n      p = this._pending[url] = [action];\r\n      this._n++;\r\n\r\n      ccNetViz_utils.ajax(url, (data) => {\r\n        this._files[url] = this._transformFile(data,dataType);\r\n        p.forEach(a => a && a(this._files[url]));\r\n        delete this._pending[url];\r\n        --this._n || this._load.forEach(l => l());\r\n      }, dataType=='arraybuffer'?dataType:undefined);\r\n    }\r\n    return f;\r\n  }\r\n  \r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n  \r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nimport ccNetViz_defaultTexts  from './default';\r\nimport ccNetViz_sdfTexts      from './sdf/sdf';\r\nimport ccNetViz_utils         from '../utils';\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n\r\n    this._modules = {\r\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\r\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\r\n    };\r\n  }\r\n\r\n  clear() {\r\n    for(let k in this._modules){\r\n      this._modules[k].clear();\r\n    }\r\n  }\r\n  \r\n  isSDF(font){\r\n    if(ccNetViz_utils.isObject(font)){\r\n      if(font.type === 'sdf'){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  getEngine(font) {\r\n    if(this.isSDF(font)){\r\n      return this._modules.sdf;\r\n    }\r\n    return this._modules.default;\r\n  }\r\n\r\n  bind () {\r\n    for(let k in this._modules){\r\n      this._modules[k].bind();\r\n    }\r\n  }\r\n  \r\n  remove () {\r\n    for(let k in this._modules){\r\n      this._modules[k].remove && this._modules[k].remove();\r\n    }\r\n  }\r\n\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n    this._size = 1024;\r\n\r\n    \r\n    this._canvas = document.createElement(\"canvas\");\r\n    this._canvas.width = this._canvas.height = this._size;\r\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\r\n    this._canvas.style.display = \"none\";\r\n    this._el = document.body.appendChild(this._canvas);\r\n\r\n    this._context = this._canvas.getContext('2d');\r\n    this._context.fillStyle = \"white\";\r\n    this._context.textAlign = \"left\";\r\n    this._context.textBaseline = \"top\";\r\n\r\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\r\n\r\n    this.texture = this._gl.createTexture();\r\n    \r\n  }\r\n\r\n  clear() {\r\n    this._rendered = {};\r\n    this._context.clearRect(0, 0, this._size, this._size);\r\n    this._height = this._x = this._y = 0;\r\n  }\r\n\r\n  setFont (font) {\r\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\r\n    \r\n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\r\n    this._context.font = fontstr;\r\n    this._x = 0;\r\n    this._y += this._height;\r\n    this._height = font ? font.size + 1 : NaN;\r\n  }\r\n  \r\n  get fontSize(){\r\n    return this._height - 1;\r\n  }\r\n  \r\n  getTexture (style, onLoad){\r\n    onLoad();\r\n    return this.texture;\r\n  }\r\n\r\n  _getText (text) {\r\n    let result = this._texts[text];\r\n    if (!result) {\r\n        let width = this._context.measureText(text).width;\r\n        if (this._x + width > this._size) {\r\n            this._x = 0;\r\n            this._y += this._height;\r\n        }\r\n        this._context.fillText(text, this._x, this._y);\r\n        this._texts[text] = result = {\r\n            width: width,\r\n            height: this._height,\r\n            left: this._x / this._size,\r\n            right: (this._x + width) / this._size,\r\n            top: this._y / this._size,\r\n            bottom: (this._y + this._height) / this._size\r\n        };\r\n        this._x += width;\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  get (text, x, y) {\r\n    let c = this._getText(text);\r\n    \r\n    let dx = x <= 0.5 ? 0 : -c.width ;\r\n    let dy = y <= 0.5 ? 0 : -c.height;\r\n    \r\n    return [{\r\n        width:  c.width,\r\n        height: c.height,\r\n        left:   c.left,\r\n        right:  c.right,\r\n        top:    c.top,\r\n        bottom: c.bottom,\r\n        dx: dx,\r\n        dy: dy\r\n      }];\r\n  }\r\n  \r\n  steps (text) {\r\n    return 1;\r\n  }\r\n\r\n  bind () {\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\r\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\r\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\r\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\r\n  }\r\n  \r\n  remove () {\r\n    this._context && this._el.parentNode.removeChild(this._el);\r\n  }\r\n\r\n};","import GlyphAtlas from './atlas';\r\nimport SpriteGenerator from './spriteGenerator';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: Aleš Saska\r\n */\r\n\r\n\r\n// A simplified representation of the glyph containing only the properties needed for shaping.\r\nclass SimpleGlyph {\r\n  constructor(glyph, rect, buffer,style) {\r\n    const padding = 1;\r\n    this.advance = glyph.advance;\r\n    this.left = glyph.left - buffer - padding;\r\n    this.top = glyph.top + buffer + padding;\r\n    this.rect = rect;\r\n  }\r\n}\r\n\r\n\r\n// Multiplication factor by which the size will grow\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// Size in which we try to contian the glyphs\r\nconst DEFAULT_SIZE = 512;\r\n\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\n// Maybe the maximum size allowed of the atlas\r\nconst MAX_SIZE = 2048;\r\n\r\n\r\n// Class for the text engine\r\n\r\n// invoked only when main configuration object, the \"font\" is mentioned and\r\n// the proper link to the font file is present\r\nexport default class {\r\n\r\n  // new text engine object takes 3 arguments\r\n  // 1. gl = Webgl context\r\n  // 2. files = File object programmed in src/dataSources/files.js\r\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\r\n\r\n  constructor(gl, files, textures) {\r\n    // Defines the dimensions of the texture\r\n    this.width = DEFAULT_SIZE;\r\n    this.height = DEFAULT_SIZE;\r\n\r\n    // Does nothing. Required in default.js text engine\r\n    this.clear();\r\n\r\n    // _files contains the file object of the glyph obtained via protobuf\r\n    this._files = files;\r\n\r\n    // Webgl Rendering context\r\n    this._gl = gl;\r\n\r\n    // Atlas object programmed in src/texts/sdf/atlas.js\r\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\r\n\r\n    // For every char_id, contains position, properties and buffer data\r\n    this._glyphs = {};\r\n\r\n    // For every char_id, contains position and properties\r\n    this._rects = {};\r\n\r\n    // glyphs that are cached from previous draw call of label for next one\r\n    this._cachedGlyphs = {};\r\n\r\n    \r\n  }\r\n\r\n\r\n  // returns if we are using SDF TextEngine or not\r\n  get isSDF() {\r\n    return true;\r\n  }\r\n\r\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\r\n  clear() {\r\n  }\r\n\r\n\r\n  /**\r\n   * style = object: {\r\n   *   pbf: <url to the font file on the server>\r\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\r\n   * }\r\n   */\r\n  setFont(style) {\r\n    // curFont => current_font\r\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\r\n    this.fontStyle = style;\r\n    this.curFont = JSON.stringify(style);\r\n   \r\n  }\r\n\r\n  // FontSize is fixed and hardcoded i.e. 24\r\n  get fontSize() {\r\n    return 24;\r\n  }\r\n\r\n  getWidthAndHeight(text, fontStyle, markDirty  ) {\r\n    let wordWidth = 0;\r\n    let width = 0;\r\n    let height = 0;\r\n    let widthArray = [];\r\n    const horiBearingX = 3;\r\n    //replaces the multiple space characters in the text with a single space\r\n    text = text.replace(/\\s+/g, ' ');\r\n    for (let i = 0; i < text.length; i++) {\r\n      const char = this._getChar(text[i], fontStyle, markDirty);\r\n      const rect = char.rect || {};\r\n      \r\n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\r\n     //decide the height and then max of them is taken each time to have a max height that fits each char\r\n\r\n     height = Math.max(height, rect.h - char.top);\r\n      wordWidth+=text[i] === ' '? 0 : char.advance + horiBearingX;\r\n      // highest word length would be selected as the width\r\n      if ((text[i] === ' ' || i == text.length-1 )) {\r\n        width = wordWidth > width ? wordWidth : width\r\n        widthArray.push(wordWidth)\r\n        wordWidth = 0\r\n      }\r\n     \r\n    }\r\n    return {width: width, height: height, widthArray:widthArray}\r\n  }\r\n  \r\n  getTexture(fontStyle, onLoad) {\r\n    // init with first most-used ASCII chars\r\n    for (let i = 0; i < 128; i++) {\r\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\r\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\r\n      this._getChar(String.fromCharCode(i), fontStyle);\r\n    }\r\n    onLoad && onLoad.apply(this, arguments);\r\n\r\n    // by calling this._getChar, we have updated the texture in this.atlas object\r\n    // following we are returning the updated object\r\n    // TODO: this code is not intuitive, we can write better\r\n    return this.atlas.texture;\r\n  }\r\n  _getCharArray(charArray, char, height, dx, dy, markDirty) {\r\n    const rect = char.rect || {};\r\n    // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc \r\n    charArray.push({\r\n      width: rect.w,\r\n      height: rect.h,\r\n      left: rect.x / this.atlas.width, //position in atlas\r\n      right: (rect.x + rect.w) / this.atlas.width, //position in atlas\r\n      bottom: (rect.y + rect.h) / this.atlas.height, \r\n      top: rect.y / this.atlas.height,\r\n      dx: dx,\r\n      dy: dy + char.top + (height - rect.h),\r\n      advance: char.advance\r\n      });\r\n\r\n    \r\n    return charArray;\r\n  }\r\n  // function to align text left, right or center\r\n  alignText(alignment, text, x, y, width, height, markDirty, widthArray, wordWidth, fontStyle  ) {\r\n\r\n    // x and y are the clipspace co-ordinates between 0 and 1\r\n   // dx and dy shifts the position of label w.r.t possibly node\r\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\r\n    \r\n    const textArray = text.split(\" \");\r\n    let dx=0;\r\n\r\n    // dy positioned so that if y< 0.5 i.e. for lower half of canvas it's length should increase dynamically \r\n    // so that it characters don't go outside of canvas, also for y>0.5 , it's constant at a particular height\r\n    // so that it for y===1 it doesn't go beyond the canvas\r\n\r\n    let dy = y <= 0.5 ? height/3*(textArray.length-1) : -height/3;\r\n    // \"ret\" must be the return object. \"ret\" is always the return object\r\n    let ret = [];\r\n\r\n    switch (alignment) {\r\n\r\n    case 'right' :\r\n\r\n      for (var i=0;i<textArray.length;i++) {  \r\n        dx = x <= 0.5 ? 0: -width;\r\n        \r\n        // logic here is wordWidth is the max length of word in the wordArray, so if we subtract\r\n        // width of the word we are currently iterating on and then set dx as given below, we \r\n        // will get the exact position from where to start \r\n\r\n        dx+=(wordWidth-widthArray[i]);\r\n        text = textArray[i];\r\n        for (var j=0;j<text.length;j++) {\r\n          const char = this._getChar(text[j], fontStyle, markDirty);\r\n          let horiBearingX = 3;\r\n          dx += horiBearingX;\r\n          // get array of characters\r\n          ret = this._getCharArray(ret, char,  height, dx, dy, markDirty)\r\n          dx += char.advance;\r\n        }\r\n        dy = dy-Math.floor(height/3);\r\n      }\r\n      break;\r\n\r\n    case 'center' :\r\n\r\n      for (var i=0;i<textArray.length;i++) {      \r\n        dx = x <= 0.5 ? 0: -width;\r\n        dx+=(wordWidth-widthArray[i])/2;\r\n        text = textArray[i];\r\n        for (var j=0;j<text.length;j++) {\r\n          const char = this._getChar(text[j], fontStyle, markDirty);\r\n          let horiBearingX = 3;\r\n          dx += horiBearingX;\r\n          ret = this._getCharArray(ret, char,  height, dx, dy, markDirty)\r\n          \r\n          dx += char.advance;\r\n        } \r\n        dy = dy-Math.floor(height/3);\r\n      }\r\n      break;\r\n      \r\n    default :\r\n      dx = x <= 0.5 ? 0: -width;\r\n        \r\n      for (var i=0;i<text.length;i++) {\r\n\r\n        // changing line here when it encounters any whitespace character\r\n\r\n        if ((text[i] === ' ') && (i != 0 || i != text.length-1) ) {\r\n          dx = x <= 0.5 ? 0 : -width ;\r\n          dy = dy-Math.floor(height/3);\r\n        } else {\r\n          const char = this._getChar(text[i], fontStyle, markDirty);\r\n          const rect = char.rect || {};\r\n          let horiBearingX = 3;\r\n          dx += horiBearingX;\r\n          ret = this._getCharArray(ret, char,  height, dx, dy, markDirty)\r\n          dx += char.advance; // advancce is the width of the character\r\n     \r\n        } \r\n      } \r\n      }\r\n  return ret;\r\n  }\r\n  /**\r\n   * Updates the 'texture' member variable of this.atlas object\r\n   *\r\n   * markDirty = ??? callback to be called if the size of the texture is resized\r\n   */\r\n  _getChar(character, fontStyle, markDirty) {\r\n    // curFont is same as style.pbf defined above\r\n    // TODO: We are doing this too many times in this code. Find a better mech.\r\n    const font = this.curFont;\r\n    const spriteGenerator = new SpriteGenerator(fontStyle);\r\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\r\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\r\n\r\n    const glyphID = character.charCodeAt(0);\r\n\r\n    // Padding around the glyph\r\n    const buffer = 0;\r\n\r\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\r\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || spriteGenerator.draw(character);\r\n    \r\n    const fontSize = spriteGenerator.fontSize;\r\n    \r\n    if (!this._rects[font]) this._rects[font] = {};\r\n    let rect = this._rects[font][character] = this.atlas.addGlyph(\r\n      glyphID, // character id\r\n      this.curFont, // contains url of the font file on server\r\n      glyph, // glyph object\r\n      buffer, // padding\r\n      fontSize, // fontSize\r\n      markDirty, // callback function to be called if texture resizes\r\n    );\r\n    return (\r\n      cache[glyphID] ||\r\n      (cache[glyphID] = new SimpleGlyph(\r\n        glyph,\r\n        rect,\r\n        buffer)\r\n      )\r\n    );\r\n  }\r\n\r\n  get(text, x, y,markDirty) {\r\n    const fontStyle = this.fontStyle;\r\n    let alignment = fontStyle.alignment;\r\n\r\n    //replaces the multiple space characters in the text with a single space\r\n    text = text.replace(/\\s+/g, ' ');\r\n\r\n    let widthAndHeightObj = this.getWidthAndHeight(text,fontStyle,markDirty);\r\n    let height = widthAndHeightObj.height\r\n    let width = widthAndHeightObj.width\r\n    let widthArray = widthAndHeightObj.widthArray\r\n    \r\n    let ret = this.alignText(alignment, text, x, y, width, height, markDirty, widthArray, width, fontStyle)\r\n   return ret\r\n  }\r\n\r\n  steps(text) {\r\n    return text.length;\r\n  }\r\n\r\n  bind() {\r\n    this.atlas.updateTexture(this._gl);\r\n  }\r\n};\r\n","'use strict';\r\n\r\nimport ShelfPack from 'shelf-pack';\r\n\r\n// size of the spritesheet generated in pixels\r\nconst DEFAULT_SIZE = 1024;\r\n\r\n// multiplication factor by which spritesheet can grow, if shelfpack is full\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// max size to contain all the characters in the spritesheet\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\nconst MAX_SIZE = 2048;\r\n\r\nexport default class GlyphAtlas {\r\n    constructor(gl, resetCache) {\r\n\r\n        // setting width to default\r\n        this.width = DEFAULT_SIZE;\r\n\r\n        // setting height to default\r\n        this.height = DEFAULT_SIZE;\r\n\r\n        // resets cached glyphs in sdf.js before making resize() call\r\n        this._resetCache = resetCache;\r\n\r\n        // creating an empty spritesheet to pack glyphs\r\n        this.bin = new ShelfPack(this.width, this.height);\r\n\r\n        /**\r\n         * stores information coordinate about character\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": {\r\n         *      id, x, y, h, w, maxh, maxw, ref_count\r\n         *  }\r\n         */\r\n        this.index = {};\r\n\r\n        /**\r\n         * stores list of character ids available in atlas.js\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": [\"charid\"]\r\n         */\r\n        this.ids = {};\r\n\r\n        // webgl rendering context\r\n        this.gl = gl;\r\n\r\n        // initialized to empty Uint8Array buffer to store texture data\r\n        this.data = new Uint8Array(this.width * this.height);\r\n    }\r\n\r\n\r\n    // refreshes texture of characters when updateTexture() is called\r\n    _createTexture() {\r\n        //\r\n        this.dirty = false;\r\n\r\n        // standard creation of webgl texture\r\n        let gl = this.gl;\r\n        let texture = gl.createTexture();\r\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n        /**\r\n         * pixelStorei() (Func): specifies the pixel storage modes\r\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\r\n         */\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n        // standard interpolation Filters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D, // target: A two-dimensional texture\r\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\r\n            gl.ALPHA, // internalFormat: only reads the alpha component\r\n            this.width, // width\r\n            this.height, // height\r\n            0, // border\r\n            gl.ALPHA, // format\r\n            gl.UNSIGNED_BYTE, // type\r\n            this.data // ImageData object\r\n        );\r\n\r\n\r\n        // Unbinding the buffer channel\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        // returning so formed texture\r\n        return texture;\r\n    }\r\n\r\n    // utility function that returns list of glyphs added\r\n    getGlyphs() {\r\n        const glyphs = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!glyphs[name]) glyphs[name] = [];\r\n            glyphs[name].push(id);\r\n        }\r\n        return glyphs;\r\n    }\r\n\r\n    // utility function that returns list of rects added\r\n    getRects() {\r\n        const rects = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!rects[name]) rects[name] = {};\r\n            rects[name][id] = this.index[key];\r\n        }\r\n        return rects;\r\n    }\r\n\r\n    // main function of the module called from sdf.js\r\n    addGlyph(\r\n        id, // character id\r\n        name, // name of the font - \"fontstrong#range.pbf\"\r\n        glyph, // glyph object from sdf.js\r\n        buffer, // padding around glyph\r\n        fontSize,\r\n        markDirty //\r\n    ) {\r\n        if (!glyph) return null;\r\n\r\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\r\n        const key = `${name}#${glyph.id}`;\r\n\r\n        // if key is present in index and not present in ids then add it in ids\r\n        if (this.index[key]) {\r\n            if (this.ids[key].indexOf(id) < 0) {\r\n                this.ids[key].push(id);\r\n            }\r\n            return this.index[key];\r\n        }\r\n\r\n        const bufferedWidth = glyph.width + buffer * 2;\r\n        const bufferedHeight = glyph.height + buffer * 2;\r\n\r\n        // Add a 1px border around every image.\r\n        // 'padding' variable is basically border\r\n        // buffer variable is basically padding\r\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\r\n        // const padding = 12;\r\n        let packWidth = bufferedWidth + 2 * padding;\r\n        let packHeight = bufferedHeight + 2 * padding;\r\n\r\n        // Increase to next number divisible by 4, but at least 1.\r\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\r\n        packWidth += (4 - packWidth % 4);\r\n        packHeight += (4 - packHeight % 4);\r\n\r\n        let rect = this.bin.packOne(packWidth, packHeight);\r\n\r\n        // if the current size is not sufficient to contain all the characters in the texture\r\n        // then, expand (resize) it\r\n        if (!rect) {\r\n            this.resize();\r\n            rect = this.bin.packOne(packWidth, packHeight);\r\n            // if markDirty callback was passed then execute it\r\n            markDirty && markDirty();\r\n        }\r\n\r\n        // if still not found then there is some problem, simply return null to indicate problem\r\n        if (!rect) {\r\n            return null;\r\n        }\r\n\r\n\r\n        this.index[key] = rect;\r\n        this.ids[key] = [id];\r\n\r\n        // if bitmap corresponding to the glyph object exists then, add the glyph\r\n        if (glyph.bitmap) {\r\n            const target = this.data;\r\n            const source = glyph.bitmap;\r\n            for (let y = 0; y < bufferedHeight; y++) {\r\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\r\n                const y2 = bufferedWidth * y;\r\n                for (let x = 0; x < bufferedWidth; x++) {\r\n                    target[y1 + x] = source[y2 + x];\r\n                }\r\n            }\r\n        }\r\n        this.dirty = true;\r\n        return rect;\r\n    }\r\n\r\n    // expands the size of the texture if all the characters were not contained in default size\r\n    resize() {\r\n        const prevWidth = this.width;\r\n        const prevHeight = this.height;\r\n\r\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\r\n\r\n        if (this._texture) {\r\n            if (this.gl) {\r\n                this.gl.deleteTexture(this._texture);\r\n            }\r\n            this._texture = null;\r\n        }\r\n\r\n        this.width *= SIZE_GROWTH_RATE;\r\n        this.height *= SIZE_GROWTH_RATE;\r\n        this.bin.resize(this.width, this.height);\r\n\r\n        const buf = new ArrayBuffer(this.width * this.height);\r\n        for (let i = 0; i < prevHeight; i++) {\r\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\r\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\r\n            dst.set(src);\r\n        }\r\n        this.data = new Uint8Array(buf);\r\n        this._resetCache();\r\n    }\r\n\r\n    bind(gl) {\r\n    }\r\n\r\n    // getter of texture from GlyphAtlas object\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    updateTexture() {\r\n        let gl = this.gl;\r\n        if (!this._texture) {\r\n            this._texture = this._createTexture();\r\n        }\r\n\r\n        // if dirty functionality is true then:\r\n        if (this.dirty) {\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n            // specifies a sub - rectangle of the current texture\r\n            gl.texSubImage2D(\r\n                gl.TEXTURE_2D,\r\n                0,\r\n                0,\r\n                0,\r\n                this.width,\r\n                this.height,\r\n                gl.ALPHA,\r\n                gl.UNSIGNED_BYTE,\r\n                this.data\r\n            );\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            this.dirty = false;\r\n        }\r\n        return this._texture;\r\n    }\r\n};\r\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor(fontStyle) {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        // Whitespace buffer around a glyph in pixels \r\n        //TODO : Add more information about this.buffer\r\n        this.buffer = this.fontSize / 8;\r\n        // How many pixels around the glyph shape to use for encoding distance. Bigger radius can have more halo effect.\r\n        // Refer http://www.supergeotek.com/SP_ENG_HTML/label.htm for halo effect\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.strokeText = fontStyle.strokeText || false;\r\n        this.fontFamily = fontStyle.family || 'sans-serif';\r\n        // this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = fontStyle.weight || 'normal';\r\n        // this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n        \r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Uint16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    // Convert alpha-only to RGBA so we can use convenient\r\n    // `putImageData` for building the composite bitmap\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.strokeText ? this.ctx.strokeText(char, this.buffer, this.middle) : this.ctx.fillText(char, this.buffer, this.middle)\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            var d = Math.sqrt(this.gridOuter[i]) - Math.sqrt(this.gridInner[i]);\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    \r\n    _edt(data, width, height, f, v, z) {\r\n    for (var x = 0; x < width; x++) this._edt1d(data, x, width, height, f, v, z);\r\n    for (var y = 0; y < height; y++) this._edt1d(data, y * width, 1, width, f, v, z);\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    \r\n    _edt1d(grid, offset, stride, length, f, v, z) {\r\n    var q, k, s, r;\r\n    v[0] = 0;\r\n    z[0] = -INF;\r\n    z[1] = INF;\r\n\r\n    for (q = 0; q < length; q++) f[q] = grid[offset + q * stride];\r\n\r\n    for (q = 1, k = 0, s = 0; q < length; q++) {\r\n        do {\r\n            r = v[k];\r\n            s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\r\n        } while (s <= z[k--]);\r\n\r\n        k += 2;\r\n        v[k] = q;\r\n        z[k] = s;\r\n        z[k + 1] = INF;\r\n    }\r\n\r\n    for (q = 0, k = 0; q < length; q++) {\r\n        while (z[k + 1] < q) k++;\r\n        r = v[k];\r\n        grid[offset + q * stride] = f[r] + (q - r) * (q - r);\r\n        }\r\n    }\r\n} \r\n","/* Algorithm to trim the glyph and add padding to it */\r\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\r\n// Slicing the extra columns\r\n// Adding buffer space on the sides\r\n\r\nexport default class {\r\n    constructor(buffer) {\r\n        if (buffer == undefined) this.buffer = 0;\r\n        else this.buffer = buffer;\r\n    }\r\n    \r\n    // find lb and rb of single row\r\n    _findRowBounds(a) { // a == array\r\n        let lb = 0, // left bound of individual row\r\n            rb = 0; // right bound of individual row\r\n        \r\n        const threshold = 170;\r\n            \r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] > threshold) {\r\n                lb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!lb) lb = a.length;\r\n\r\n        for (let i = a.length; i > -1; i--) {\r\n            if (a[i] > threshold) {\r\n                rb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!rb) rb = -1;\r\n\r\n        return [lb, rb];\r\n    }\r\n\r\n    _findGlyphBounds(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n        let currentRow = [];\r\n\r\n        let lbs = [], // row left bounds\r\n            rbs = []; // row right bounds    \r\n        let lb = -1,\r\n            rb = glyphData.length;\r\n        \r\n        // iterate through every row\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            // slice out the array\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            var res = this._findRowBounds(currentRow);\r\n            lbs.push(res[0]);\r\n            rbs.push(res[1]);\r\n        }\r\n\r\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\r\n        lb = Math.min(...lbs);\r\n        rb = Math.max(...rbs);\r\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\r\n        return [lb, rb];\r\n    }\r\n\r\n    process(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n\r\n        const bounds = this._findGlyphBounds(glyph);\r\n        const lb = bounds[0];\r\n        const rb = bounds[1];\r\n\r\n        const buffer = this.buffer;\r\n        // const buffer = 20;\r\n        // const buffer = 1;\r\n        // const buffer = 0;\r\n\r\n        var newData = [];\r\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\r\n        var newWidth = (rb - lb + 1) + buffer * 2;\r\n        // var newWidth = (rb - lb + 1);\r\n\r\n        // iterate through every row\r\n        let currentRow = [];\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\r\n            newData.push(\r\n                // 255,\r\n                ...bufferCol, //returns array of zeros\r\n                ...currentRow.slice(lb, rb + 1),\r\n                ...bufferCol, //returns array of zeros\r\n                // 255,\r\n            );\r\n        }\r\n\r\n        // JS passes objects by reference. Therefore,\r\n        glyph.bitmap = new Uint8ClampedArray(newData);\r\n        glyph.width = newWidth;\r\n        glyph.advance = newWidth;\r\n    }    \r\n    \r\n} // ends class","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(){\r\n    this._enable = true;\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n      let timeout, args, context, timestamp, result;\r\n\r\n      let later = () => {\r\n          let last = Date.now - timestamp;\r\n\r\n          if (last < wait && last > 0) {\r\n              timeout = setTimeout(later, wait - last);\r\n          } else {\r\n              timeout = null;\r\n              if (!immediate) {\r\n                  if(this._enable){\r\n                    result = func.apply(context, args);\r\n                  }\r\n                  if (!timeout) context = args = null;\r\n              }\r\n          }\r\n      };\r\n\r\n      return () => {\r\n          context = this;\r\n          args = arguments;\r\n          timestamp = Date.now;\r\n          let callNow = immediate && !timeout;\r\n          if (!timeout) timeout = setTimeout(later, wait);\r\n          if (callNow) {\r\n              if(this._enable){\r\n                result = func.apply(context, args);\r\n              }\r\n              context = args = null;\r\n          }\r\n\r\n          return result;\r\n      };\r\n  }\r\n  \r\n  disable(){\r\n    this._enable = false;\r\n  }\r\n};","import geomutils from './geomutils';\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska\r\n */\r\n\r\n\r\nfunction pushUnique(arr, e){\r\n  if(arr.indexOf(e) >= 0)\r\n    return;\r\n  arr.push(e);\r\n}\r\n\r\nexport default class {\r\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\r\n    this._layers = layers;\r\n    this._insertTempLayer = insertTempLayer;\r\n\r\n    this._draw = draw;\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._checkUniqId = checkUniqId;\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n\r\n    //create support structures\r\n    this._nPos = {};\r\n    this._ePos = {};\r\n    this._eDirs = {};\r\n\r\n    nodes.forEach((n, i) => {\r\n      this._nPos[n.uniqid] = i;\r\n      this._eDirs[n.uniqid] = {};\r\n    });\r\n    \r\n    edges.forEach((e, i) => {\r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      let si = s.uniqid || s.__uniqid;\r\n      let ti = t.uniqid || t.__uniqid;\r\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\r\n      this._ePos[e.uniqid] = i;\r\n    });\r\n    \r\n    this._actualTempNodes = [];\r\n    this._actualTempEdges = [];\r\n  }\r\n  _doRemoveNodes(nodes){\r\n    nodes.forEach((n) => {\r\n      if(n.uniqid === undefined)\r\n        return;\r\n      \r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._nPos[n.uniqid];\r\n        this._layers.main.removeNodeAtPos(pos);\r\n        delete this._nPos[n.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempNodes.length; i++){\r\n          if(this._actualTempNodes[i] === n){\r\n            this._actualTempNodes.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      n.__uniqid = n.uniqid;\r\n      delete n.uniqid;\r\n    });\r\n  }\r\n  _doRemoveEdges(edges){\r\n    edges.forEach((e) => {\r\n      if(e.uniqid === undefined)\r\n        return;\r\n      \r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\r\n      \r\n      if(this._ePos[e.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._ePos[e.uniqid];\r\n        this._layers.main.removeEdgeAtPos(pos);\r\n        delete this._ePos[e.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempEdges.length; i++){\r\n          if(this._actualTempEdges[i] === e){\r\n            this._actualTempEdges.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n\r\n      }\r\n      \r\n      e.__uniqid = e.uniqid;\r\n      delete e.uniqid;\r\n    });\r\n  }\r\n  _doAddEdges(){\r\n    this._toAddEdges.forEach((e) => {\r\n      //already added in main graph\r\n      if(\r\n        this._ePos[e.uniqid] !== undefined\r\n      ){\r\n        this._doRemoveEdges([e]);\r\n      }\r\n      \r\n      if(e.uniqid !== undefined){\r\n        console.error(e);\r\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(e);\r\n      \r\n      //add this node into temporary chart\r\n      \r\n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\r\n      pushUnique(this._actualTempEdges, e);\r\n    });\r\n  }\r\n  _doAddNodes(nodes){\r\n    this._toAddNodes.forEach((n) => {\r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        this._doRemoveNodes([n]);\r\n      }\r\n      \r\n      //already added\r\n      if(n.uniqid !== undefined){\r\n        console.error(n);\r\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(n);\r\n      \r\n      this._eDirs[n.uniqid] = {};\r\n\r\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\r\n      pushUnique(this._actualTempNodes, n);\r\n    });\r\n  }\r\n  addEdge(e){\r\n    let s = geomutils.edgeSource(e);\r\n    let t = geomutils.edgeTarget(e);\r\n    \r\n    let tid = t.uniqid || t.__uniqid;\r\n    let sid = s.uniqid || s.__uniqid;\r\n    \r\n    if((this._eDirs[sid] || {})[tid]){\r\n      //this edge was already added >> remove it\r\n      this._doRemoveEdges([e]);\r\n    }\r\n    \r\n    if((this._eDirs[tid] || {})[sid]){\r\n      //must remove line and add two curves\r\n      \r\n      this._toAddEdges.push(this._eDirs[tid][sid]);\r\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\r\n\r\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\r\n      \r\n      return this;\r\n    }\r\n\r\n    this._toAddEdges.push(e);\r\n    return this;\r\n  }\r\n  addNode(n){\r\n    this._toAddNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeNode(n){\r\n    this._toRemoveNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeEdge(e){\r\n    this._toRemoveEdges.push(e);\r\n    return this;\r\n  }\r\n  applyChanges(){\r\n    \r\n    //nothing to do\r\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\r\n      return this;\r\n    \r\n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\r\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\r\n    \r\n    this._doRemoveEdges(this._toRemoveEdges);\r\n    this._doRemoveNodes(this._toRemoveNodes);\r\n    this._doAddNodes();\r\n    this._doAddEdges();\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n    \r\n    this._insertTempLayer();\r\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\r\n\r\n    this._draw();\r\n    \r\n    return this;\r\n  }\r\n};","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}