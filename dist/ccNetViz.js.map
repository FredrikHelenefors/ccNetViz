{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./plugins/ccNetViz-node-plugins/shape.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hierarchical2.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./plugins/ccNetViz-node-plugins/main.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/circle.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/ellipse.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/star.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/polygon.js","webpack:///./node_modules/ml-array-max/src/index.js","webpack:///./node_modules/ml-array-rescale/src/index.js","webpack:///./node_modules/ml-array-min/src/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Shape","config","instance","_classCallCheck","canvas","document","createElement","width","height","display","default","_preConf","_setCanvas","_draw","stroke","size","textureColor","cursor","x0","y0","x1","y1","context","getContext","fillStyle","strokeStyle","lineWidth","body","appendChild","closePath","_this","Promise","resolve","reject","toBlob","blob","assign","texture","URL","createObjectURL","remove","Color","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutHierarchical2","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","wantedSize","label","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","font","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","_main","sCanvas","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","backgroundStyle","background","backgroundColor","removed","setted","minSize","maxSize","edgeStyle","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","nodePluginParser","then","main","circle","toConfig","ellipse","Ellipse","polygon","Polygon","star","Star","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","scene","elements","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","Date","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","mousedown","touchstart","wheel","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","Shapes","redraw","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","f","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","isOrphan","orphan","components","current_component","unvisited","orphans","max_layer","maybe_more","lowest_layer","child_found","sep","parent_found","parent_","component","max_nodes_layer","index_offset","vertical_nodes","current_layer","initializeComponent","candidates","layerNodes","initHierarchy","separateOrphans","unvisitedNodes","findRoots","maybe_mode","placeAdditional","layer_val","placeOrphans","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","_el","_context","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","advance","char","h","w","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","now","callNow","pushUnique","_layers","_insertTempLayer","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","_Shape","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","beginPath","arc","_get","moveTo","lineTo","degree","src_max","input","isArray","rescale","TypeError","output","currentMin","src_min","currentMax","RangeError","minValue","autoMinMax","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","export default class Shape {\n  constructor(config, instance) {\n    this.config = config;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.canvas.style.display = 'none';\n    this.default = {};\n\n    this._preConf();\n    this._setCanvas();\n    this._draw();\n  }\n\n  // Before the drawing; when the config is existed override the default config.\n  _preConf() {\n    // Default config\n    this.default = {\n      stroke: {\n        color: \"#333333\",\n        size: 0,\n      },\n      textureColor: \"#999999\",\n      size: 16\n    };\n\n    if (typeof this.config !== \"undefined\") {\n      if (typeof this.config.stroke !== \"undefined\") {\n        this.config.stroke.size = this.config.stroke.size || this.default.stroke.size;\n        this.config.stroke.color = this.config.stroke.color || this.default.stroke.color;\n      } else {\n        this.config.stroke = this.default.stroke;\n      }\n      this.config.textureColor = this.config.textureColor || this.default.textureColor;\n      this.config.size = this.config.size || this.default.size;\n\n    } else {\n      this.config = this.default;\n    }\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n  }\n\n  // Setting up the canvas width, height. Also, creating canvas context and colors.\n  _setCanvas() {\n    let cursor = {\n      x0: this.canvas.width,\n      y0: this.canvas.height,\n      x1: this.canvas.width + ((this.config.stroke.size * 2) + this.config.size),\n      y1: this.canvas.height + ((this.config.stroke.size * 2) + this.config.size)\n    };\n    this.canvas.width = cursor.x1;\n    this.canvas.height = cursor.y1;\n    this.context = this.canvas.getContext('2d');\n    this.context.fillStyle = this.config.textureColor;\n    this.context.strokeStyle = this.config.stroke.color;\n    this.context.lineWidth = (this.config.stroke.size);\n    document.body.appendChild(this.canvas);\n  }\n\n  _draw() {\n    this.context.closePath();\n    this.context.stroke();\n    this.context.fill();\n  }\n\n  // Canvas transform into the 0-1 range\n  t(size) {\n    return (this.config.stroke.size) + (this.config.size * size);\n  }\n\n  toConfig() {\n    return new Promise((resolve, reject) => {\n      this.canvas.toBlob(blob => {\n        resolve(Object.assign(\n          { texture: URL.createObjectURL(blob) },\n          this.config));\n        this.canvas.remove();\n      }, 'image/png');\n    });;\n  }\n}","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class Color{\n  constructor(color){\n    this.a = 1;\n\n    if (color instanceof Color){\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        this.a = color.a;\n    }\n    else if (arguments.length >= 3) {\n        this.r = arguments[0];\n        this.g = arguments[1];\n        this.b = arguments[2];\n        arguments.length > 3 && (this.a = arguments[3]);\n    }\n    else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n        this.a = get(color[4]);\n    }\n    else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 100;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n        color = parseInt(color.substring(1), 16);\n        this.r = (color >> 16 & 255) / 255;\n        this.g = (color >> 8 & 255) / 255;\n        this.b = (color & 255) / 255;\n    }\n    else {\n        this.r = this.g = this.b = 0;\n    }\n  }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\nimport layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n  static get hierarchical2(){\n    return layoutHierarchical2;\n  }\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\nimport { Circle, Ellipse, Star, Polygon } from  \"../plugins/ccNetViz-node-plugins/main\"\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = nodePluginParser();\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        options.styles[promises[index].name] = item;\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  let nodePluginParser = function () {\n    let p = [];\n    if (typeof options.styles !== \"undefined\") {\n      for (let key in options.styles) {\n        let style = options.styles[key];\n\n        switch (style.type) {\n          case 'Circle':\n            let circle = new Circle(style.config, self)\n            p.push({ config: circle.toConfig(), name: key });\n            break;\n          case 'Ellipse':\n            let ellipse = new Ellipse(style.config, self)\n            p.push({ config: ellipse.toConfig(), name: key });\n            break;\n          case 'Polygon':\n            let polygon = new Polygon(style.config, self)\n            p.push({ config: polygon.toConfig(), name: key });\n            break;\n          case 'Star':\n            let star = new Star(style.config, self)\n            p.push({ config: star.toConfig(), name: key });\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    return p;\n  }\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let i = 0; i < layers.main.scene.elements.length; i++){\n      layers.main.scene.elements[i].draw(context);\n      layers.temp && layers.temp.scene.elements[i].draw(context);\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheel.bind(this),\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\nccNetViz.Shapes = {};\n\ntypeof Circle !== 'undefined' ?   ccNetViz.Shapes.Circle = Circle : false;\ntypeof Ellipse !== 'undefined' ?   ccNetViz.Shapes.Ellipse = Ellipse : false;\ntypeof Star !== 'undefined' ?   ccNetViz.Shapes.Star = Star : false;\ntypeof Polygon !== 'undefined' ?   ccNetViz.Shapes.Polygon = Polygon : false;\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;\n","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si]){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n            \"precision mediump float;\",\n            \"attribute vec2 position;\",\n            \"attribute vec2 normal;\",\n            \"attribute vec2 lengthSoFar;\",\n            \"uniform float exc;\",\n            \"uniform vec2 size;\",\n            \"uniform vec2 screen;\",\n            \"uniform float aspect2;\",\n            \"uniform float aspect;\",\n            \"uniform vec2 width;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\"\n            ].concat(getShiftFuncs).concat([\n            \"void main(void) {\",\n            \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n            \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n            \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n            \"   n = normal;\",\n            \"}\"\n        ]), [\n            \"precision mediump float;\",\n            \"uniform float type;\",\n            \"uniform vec4 color;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\",\n            \"uniform float lineSize;\",\n            \"void main(void) {\",\n            \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n\t    ].concat(lineTypes).concat([\n            \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n            \"}\"\n        ]), c => {\n            let uniforms = c.shader.uniforms;\n            uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            let size = 2.5 * c.nodeSize;\n            uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            gl.uniform1f(uniforms.aspect, c.aspect);\n            gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n            gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            if (point = node.point) {\n                let point;\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nfunction isOrphan(node){\n    let orphan = true;\n    for (let i=0; i<node.parents.length; ++i){\n        let parent_ = node.parents[i];\n        if (parent_ != node)\n            orphan = false;\n    }\n    for (let i=0; i<node.children.length; ++i){\n        let child = node.children[i];\n        if (child != node)\n            orphan = false;\n    }\n    return orphan;\n}\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n    this.components = {\"current_component\": 0, \"depth\": 1};\n    this.unvisited = nodes;\n  }\n  \n  initHierarchy(){\n      this._nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n  }\n\n  separateOrphans(){\n      let orphans = [];\n      let nodes = [];\n      for (let i=0; i< this._nodes.length; ++i){\n          let node = this._nodes[i];\n          if (isOrphan(node))\n              orphans.push(node);\n          else\n              nodes.push(node);\n      }\n      return orphans;\n  }\n\n  findRoots(nodes){\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      return roots;\n  }\n\n  placeOrphans(nodes, max_layer){\n      const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].y = this.alphay + i*stepy;\n          nodes[i].x = max_layer+1;\n      }\n      if (nodes.length > 0)\n          return max_layer+1;\n      else\n          return max_layer;\n  }\n\n  unvisitedNodes(){\n      let nodes = [];\n      let orphans = this.orphans;\n      this.unvisited.forEach(function(node){\n          if (node.visited == false && !(node in orphans))\n              nodes.push(node);\n      });\n      if (nodes.length != this.unvisited){\n          this.maybe_more = true;\n          this.unvisited = nodes;\n      } else this.maybe_more = false;\n  }\n\n  placeAdditional(){\n      // place non-visited nodes in between layers\n      let aux_layers = {};\n      let c = this.components[this.components.current_component];\n      let layers = c.layers;\n      for (let i=0; i<this.unvisited.length; ++i){\n          let node = this.unvisited[i];\n          let lowest_layer = this.components.depth;\n          let child_found = false;\n          for(let j=0; j<node.children.length; ++j){\n              let child = node.children[j];\n              if (child.visited == true){\n                  child_found = true;\n                  if(child.layer <= lowest_layer){ // child has to be visited to have a layer\n                      lowest_layer = child.layer;\n                  }\n                  break;\n              }\n          }\n          if (child_found){\n              node.visited = true;\n              // node.index = lowest_layer-sep;\n              if ( !((lowest_layer-sep) in layers))\n                  layers[lowest_layer-sep] = []\n              layers[lowest_layer-sep].push(node)\n          }\n          else {\n              let lowest_layer = max_layer;\n              let parent_found = false;\n              for(let j=0; j<node.parents.length; ++j){\n                  let parent_ = node.parents[j];\n                  if (parent_.visited == true){\n                      parent_found = true;\n                      if(parent_.layer <= lowest_layer){ // child has to be visited to have a layer\n                          lowest_layer = parent_.layer;\n                      }\n                  }\n              }\n              if (parent_found){\n                  node.visited = true;\n                  node.x = lowest_layer+sep;\n                  if ( !((lowest_layer+sep) in layers) )\n                      layers[lowest_layer+sep] = []\n                  layers[lowest_layer+sep].push(node)\n              }\n          }\n      }\n  }\n\n  initializeComponent(component){\n      this.components[component] = {};\n      this.components[component].max_nodes_layer = 0;\n      if (component > 0)\n          this.components[component].index_offset = this.components[component-1].vertical_nodes;\n      else\n          this.components[component].index_offset = 0;\n      this.components[component].current_layer = 1;\n      //this.components[component].layers = {\"nodes\": [], \"layer_value\": 1};\n      this.components[component].layers = {};\n      this.components[component].vertical_nodes = 0;\n  }\n\n  layerNodes(nodes){\n      if (!(this.components.current_component in this.components))\n          this.initializeComponent(this.components.current_component);\n      let c = this.components[this.components.current_component];\n      if (nodes.length > c.vertical_nodes)\n          c.vertical_nodes = nodes.length;\n      c.layers[c.current_layer] = [];\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].visited = true;\n          c.layers[c.current_layer].push(nodes[i]);\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let candidates = nodes[i].children;\n          for (let j=0; j < candidates.length; j++){\n              if (candidates[j].visited == false && !next_layer.includes(candidates[j])){\n                  next_layer.push(candidates[j]);\n              }\n          }\n      }\n      if (next_layer.length > 0){\n          c.current_layer++;\n          if (this.components.depth<c.current_layer)\n              this.components.depth = c.current_layer;\n          this.layerNodes(next_layer);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the second of these approaches.\n\n      this.initHierarchy();\n      this.orphans = this.separateOrphans();\n      this.unvisitedNodes();\n      while (this.unvisited.length > 0){\n          let roots = this.findRoots(this.unvisited);\n          this.layerNodes(roots);\n          this.unvisitedNodes(); // update unvisited nodes\n          this.maybe_mode = true;\n          while (this.maybe_more){\n              this.placeAdditional(); // place additional nodes linked to this component\n              this.unvisitedNodes(); // update unvisited nodes\n          }\n          this.components.current_component++;\n      }\n      this.components.vertical_nodes = 0;\n      for (let i=0; i<this.components.current_component; i++){\n          this.components.vertical_nodes += this.components[i].vertical_nodes;\n      }\n\n      // layerNodes should populate the dictionary this.components of components and aux variables:\n      // components[x] is a component, x is an integer\n      // components[x].vertical_nodes is the maximum number of nodes in a layer for the component\n      // components[x].layer[j] is the j-th layer on the component, j can be fractional\n      // components[x].index_offset is the number of nodes positioned in above components\n      // components.ncomponents is the number of components\n      // components.vertical_nodes is the sum of the max nodes in any layer of each component\n      // components.depth is the maximum number of layers\n\n      // each layer of tree xy = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(this.components.depth);\n      const stepy = (1-2*this.alphay)/(this.components.vertical_nodes);\n      for (let i=0; i<this.components.current_component; i++){\n          let component = this.components[i];\n          for (let layer_val in component.layers){\n              let layer = component.layers[layer_val];\n              if (layer.length == 1){\n                  let node = layer[0];\n                  node.x = this.alphax + stepx*layer_val;\n                  node.y = this.alphay + stepy*(component.index_offset + component.vertical_nodes/2);\n              } else {\n                  for (let k=0; k<layer.length; ++k){\n                      let node = layer[k];\n                      node.x = this.alphax + stepx*layer_val;\n                      node.y = this.alphay + stepy*(component.index_offset + k);\n                  }\n              }\n          }\n      }\n      this.placeOrphans(this.orphans);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      height = Math.max(height, rect.h - char.top);\n      width += char.advance + horiBearingX;\n    }\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n\n      dx += horiBearingX;\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import Circle from \"./shapes/circle\"\nimport Ellipse from \"./shapes/ellipse\"\nimport Star from \"./shapes/star\"\nimport Polygon from \"./shapes/polygon\"\n\nexport { Circle, Ellipse, Star, Polygon }","import Shape from \"../shape\"\n\nlet Circle = (config, instance) => {\n  class Circle extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Circle';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.arc(\n        (this.config.size / 2) + this.config.stroke.size,\n        (this.config.size / 2) + this.config.stroke.size,\n        this.config.size / 2, 0, 2 * Math.PI);\n      super._draw();\n    }\n  }\n  return new Circle(config, instance)\n}\n\nexport default Circle","import Shape from \"../shape\"\n\nlet Ellipse = (config, instance) => {\n  class Ellipse extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Ellipse';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.ellipse(\n        (this.config.size / 2) + this.config.stroke.size,\n        (this.config.size / 2) + this.config.stroke.size,\n        this.config.size / 2,\n        this.config.size / 4, Math.PI / 4, 0, 2 * Math.PI);\n      super._draw();\n    }\n  }\n  return new Ellipse(config, instance)\n}\n\nexport default Ellipse","import Shape from \"../shape\"\n\nlet Star = (config, instance) => {\n  class Star extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Star';\n    }\n    _draw() {\n      this.context.beginPath();\n      this.context.moveTo(this.t(0.5), this.t(0));\n      this.context.lineTo(this.t(0.8), this.t(1));\n      this.context.lineTo(this.t(0), this.t(0.4));\n      this.context.lineTo(this.t(1), this.t(0.4));\n      this.context.lineTo(this.t(0.2), this.t(1));\n      super._draw();\n    }\n  }\n  return new Star(config, instance)\n}\n\nexport default Star","import Shape from \"../shape\"\n\nlet Polygon = (config, instance) => {\n  class Polygon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Polygon';\n    }\n    _draw() {\n      this.context.beginPath();\n      let edges = this.config.edges;\n      let degree = 360 / edges;\n      let radius = this.config.size / 2;\n\n      for (let i = 0; i < edges; i++) {\n        let x = radius + this.config.stroke.size + (radius * Math.cos((degree * (i + 1)) * (Math.PI / 180)));\n        let y = radius + this.config.stroke.size + (radius * Math.sin((degree * (i + 1)) * (Math.PI / 180)));\n        this.context.lineTo(x, y);\n      }\n      super._draw();\n    }\n  }\n  return new Polygon(config, instance)\n}\n\nwindow.Polygon = Polygon;\n\nexport default Polygon","/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function max(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var max = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] > max) max = input[i];\n    }\n    return max;\n}\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nexport default function rescale(input, options = {}) {\n    if (!Array.isArray(input)) {\n        throw new TypeError('input must be an array');\n    } else if (input.length === 0) {\n        throw new TypeError('input must not be empty');\n    }\n\n    let output;\n    if (options.output !== undefined) {\n        if (!Array.isArray(options.output)) {\n            throw new TypeError('output option must be an array if specified');\n        }\n        output = options.output;\n    } else {\n        output = new Array(input.length);\n    }\n\n    const currentMin = min(input);\n    const currentMax = max(input);\n\n    if (currentMin === currentMax) {\n        throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n    }\n\n    const {\n        min: minValue = options.autoMinMax ? currentMin : 0,\n        max: maxValue = options.autoMinMax ? currentMax : 1\n    } = options;\n\n    if (minValue >= maxValue) {\n        throw new RangeError('min option must be smaller than max option');\n    }\n\n    const factor = (maxValue - minValue) / (currentMax - currentMin);\n    for (var i = 0; i < input.length; i++) {\n        output[i] = (input[i] - currentMin) * factor + minValue;\n    }\n\n    return output;\n}\n","/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function min(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var min = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] < min) min = input[i];\n    }\n    return min;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}