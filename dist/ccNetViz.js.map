{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/is-any-array/src/index.js","webpack:///./node_modules/ml-array-max/lib-es6/index.js","webpack:///./node_modules/ml-array-min/lib-es6/index.js","webpack:///./node_modules/ml-array-rescale/lib-es6/index.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/index.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/ccNetViz.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/color.js","webpack:///./src/dataSources/files.js","webpack:///./src/dataSources/textures.js","webpack:///./src/geomutils.js","webpack:///./src/gl.js","webpack:///./src/interactivityBatch.js","webpack:///./src/layer.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/force.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/layout.js","webpack:///./src/layout/random.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/utils.js","webpack:///./src/layout/versinus.js","webpack:///./src/lazyEvents.js","webpack:///./src/primitive.js","webpack:///./src/primitiveTools.js","webpack:///./src/quadTree.js","webpack:///./src/shader.js","webpack:///./src/shaders/easeFunctions/bounce-in.glsl","webpack:///./src/shaders/easeFunctions/bounce-inout.glsl","webpack:///./src/shaders/easeFunctions/bounce-out.glsl","webpack:///./src/shaders/easeFunctions/circular-in.glsl","webpack:///./src/shaders/easeFunctions/circular-inout.glsl","webpack:///./src/shaders/easeFunctions/circular-out.glsl","webpack:///./src/shaders/easeFunctions/cubic-in.glsl","webpack:///./src/shaders/easeFunctions/cubic-inout.glsl","webpack:///./src/shaders/easeFunctions/cubic-out.glsl","webpack:///./src/shaders/easeFunctions/exp-in.glsl","webpack:///./src/shaders/easeFunctions/exp-inout.glsl","webpack:///./src/shaders/easeFunctions/exp-out.glsl","webpack:///./src/shaders/easeFunctions/index.js","webpack:///./src/shaders/easeFunctions/linear.glsl","webpack:///./src/shaders/easeFunctions/quad-in.glsl","webpack:///./src/shaders/easeFunctions/quad-inout.glsl","webpack:///./src/shaders/easeFunctions/quad-out.glsl","webpack:///./src/shaders/easeFunctions/quart-in.glsl","webpack:///./src/shaders/easeFunctions/quart-inout.glsl","webpack:///./src/shaders/easeFunctions/quart-out.glsl","webpack:///./src/shaders/easeFunctions/quint-in.glsl","webpack:///./src/shaders/easeFunctions/quint-inout.glsl","webpack:///./src/shaders/easeFunctions/quint-out.glsl","webpack:///./src/shaders/easeFunctions/sin-in.glsl","webpack:///./src/shaders/easeFunctions/sin-inout.glsl","webpack:///./src/shaders/easeFunctions/sin-out.glsl","webpack:///./src/shaders/index.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/texts.js","webpack:///./src/utils.js"],"names":["sCanvas","document","createElement","getContext","canvas","attributes","depth","antialias","gl","lastUniqId","checkUniqId","el","__uniqid","undefined","uniqid","mergeArrays","a","b","cmp","r","length","i","j","k","ccNetViz","options","self","backgroundStyle","styles","background","backgroundColor","ccNetViz_color","color","removed","setted","nodeStyle","node","minSize","maxSize","label","s","font","type","size","edgeStyle","edge","width","animateColor","animateSpeed","onLoad","draw","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","texts","context","cntShownNodes","n","getNodesCnt","cntShownEdges","e","getEdgesCnt","onRedraw","debounce","call","checkRemoved","console","error","nodes","edges","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","set","layout","layout_options","forEach","main","reflow","applyChanges","getVisibleNodes","concat","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","c","sc","result","Math","sqrt","height","min","max","hideSize","style","t","vs","offset","silent","o","ox","oy","transform","ccNetViz_gl","ortho","x","y","offsetX","offsetY","aspect2","count","curveExc","nodeSize","viewport","clear","COLOR_BUFFER_BIT","startTime","Date","now","drawOnce","scene","elements","drawLoop","renderTime","requestAnimationFrame","animateType","bind","getScreenCoords","conf","ret","rect","getBoundingClientRect","left","top","getLayerCoords","radius","dist","disth","distw","findMerge","funcname","args","f1","apply","f2","key","e1","e2","dist2","find","arguments","findArea","getTextPosition","offsety","ns","textEngine","getEngine","setFont","wantedSize","isSDF","fontSize","fontScale","chars","get","addEvts","evts","addEventListener","passive","passiveEvts","removeEvts","removeEventListener","onDownThis","onMouseDown","onWheelThis","onWheel","zoomevts","onContextMenu","remove","gl_lose","getExtension","loseContext","disable","last_view","checkChangeViewport","is_change","ccNetViz_utils","extend","onChangeViewport","preventDefault","oldsize","oldx","oldy","mouseX","clientX","mouseY","clientY","continuosZoom","startView","lCoords","x1","y1","x2","y2","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","deltaY","delta","onZoom","lastUpTime","downe","which","parseTouchEvts","touches","sx","sy","dx","dy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","start","up","stop","onClick","getTime","onDblClick","window","zoom","image","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","v","resetView","method","l","clearColor","g","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","ccNetVizMultiLevel","vizScreen","vizLayout","history","curlevel","histel","pop","bb","__computedLayout","insidenodes","insideedges","push","exposeMethods","Color","test","exec","parseInt","substring","_load","_files","_pending","_n","data","dataType","JSON","parse","url","action","p","f","ajax","_transformFile","allLoaded","emptyObject","_textures","img","createTexture","source","edgeSource","edgeTarget","index","is_edge","target","cx","cy","d","se","te","extensions","getSupportedExtensions","indexOf","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","uniform4f","right","bottom","near","far","lr","bt","nf","Float32Array","pushUnique","arr","_layers","_insertTempLayer","_draw","_nodes","_edges","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","si","ti","_actualTempNodes","_actualTempEdges","pos","removeNodeAtPos","splice","removeEdgeAtPos","_doRemoveEdges","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","redraw","hasEdgeAnimation","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","parts","relative","steps","normalize","cos","sin","ct1","ct2","ct","setVerticeCurveShift","csx","csy","ctx","cty","cisx","cisy","sisy","citx","city","ccNetViz_geomutils","getCurveShift","curveShift","circleShift","edgesFiller","lengthSoFar","normal","startPos","endPos","numVertices","numIndices","curve","xdiff1","ydiff1","xdiff2","ydiff2","xdiff3","ydiff3","xdiff4","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","lvl","set_end","enableLazyRedraw","reset","removedNodes","removedEdges","lines","curves","circles","getIndex","nidx","init","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","map","is_bidirectional_overlap","bidirectional","m","nodesParts","circlesParts","linesParts","curvesParts","tryInitPrimitives","isDirty","defaultAdder","section","addSection","texture","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","labels","update","element","attribute","updateEl","freenode","title","freeedge","getEdgeStyleSize","stylesTransl","getEdgeType","animateStylesTransl","getEdgeAnimateType","initExtensions","createScene","loadCalled","getLabelType","fsColorTexture","fsLabelTexture","fsVarColorTexture","lineTypes","lineAnimateTypes","fsCurve","getShiftFuncs","easeFunctionPart","easeFunctions","animateEase","isAnimateCovered","isAnimateCoveredGradient","add","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","sdfSize","opts","buffer","boldness","height_font","scale","outlineColor","name","_angle_step","PI","starting_angle","_starting_angle","nd","weight","degrees","edgeDistance","edgeStrength","friction","charge","gravity","theta2","chargeDistance2","Infinity","alpha","distances","strengths","charges","accumulate","leaf","point","random","pointCharge","repulse","_","dw","dn","px","py","step","q","fixed","visit","rnd","fixed2","minX","maxX","minY","maxY","floor","_margin","sq","reminder","nnodes","nlines","reminder2","nlines2","stepy","alphay","alphax","layer","visited","next_layer","neighbors","parents","children","includes","makeLayers","roots","isroot","max_outdegree","stepx","_radius","_nlines","nodes_segment","segment","angle","ii","dim","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","twoSmallest","mini","second_min","second_mini","third_min","third_mini","maxx","abs","maxy","minx","miny","A","reduce","foo","EigenvalueDecomposition","iii","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","deg","dims","u","Array","ones","zeros","uhk","rand","itt_count","uk","slice","ul","top_","vmi","ratio","vsi","dot","normalize2","graph","node_degree","euclideanDistance","coordinates","pow","narr","symmetricRandMatrix","ulim","mat","root","visited_leafs_parent","centered","depth_visited","visited_leafs","child","drawTreeCentered","leafs","drawTreeTop","create2dArray","getDepth","getRanges","rows","columns","keys","fill","ordered_nodes","value","sort","ordered_degrees","obj","Error","tmpDepth","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","_enable","func","wait","immediate","timeout","timestamp","later","last","callNow","primitive","baseStyle","styleProperty","fs","shaderParams","ccNetViz_shader","join","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","part","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","idx","fb","DYNAMIC_DRAW","storeToPos","bufferSubData","BYTES_PER_ELEMENT","olds","uniformMatrix4fv","time","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","partitionByStyle","pN","sI","getPartitionStyle","copy","points","xs","ys","x1_","y1_","x2_","y2_","create","insert","nx","ny","insertChild","nPoint","xm","ym","below","findNode","x0","y0","x3","y3","minDistance2","closestPoint","distance2","distance","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","linear","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","bounceIn","bounceOut","bounceInOut","circularIn","circularOut","circularInOut","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","EPS","Number","EPSILON","cuberoot","solveCubic","acos","distance2ToBezier","B","C","eqresult","mindist","getBBFromPoints","xmin","xmax","ymin","ymax","val","pDistance2","len_sq","param","xx","yy","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","pointInRect","rectIntersectsRect","p1x","p1y","p2x","p2y","r1x","r1y","r2x","r2y","lineIntersectsRect","eq","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","aeq","bezierIntersectsRect","centerx","centery","diffx","diffy","diff2xy","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","prototype","all","_all","search","bbox","toBBox","intersects","nodesToSearch","len","childBBox","contains","collides","_build","_splitRoot","tmpNode","_insert","item","empty","path","indexes","parent","goingUp","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","right2","right3","multiSelect","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","bboxArea","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","distBBox","intersectionArea","compareNodeMinX","compareNodeMinY","xMargin","_allDistMargin","yMargin","compare","leftBBox","rightBBox","margin","bboxMargin","siblings","compareArr","Function","stack","mid","select","z","sd","newLeft","newRight","exp","swap","tmp","getEdgeShift","screensize","len2","sizex","sizey","Node","Label","textpos","MAX","MIN","getTextPos","Line","getPoints","Circle","xsize","ysize","getBezierPoints","d1","d2","Curve","n2","n3","sortByDistances","tConst","spatialIndex","getLabelHideScreen","types","addEntity","getBBox","sdi","sd_n","sdi_n","rbushtree_s","rb","rbushtree","isEdge","isLabel","intersectsRect","_tryAddEl","xradius","yradius","radius2","_size","_canvas","display","_el","body","appendChild","_context","fillStyle","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","SIZE_GROWTH_RATE","MAX_SIZE","GlyphAtlas","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","glyph","markDirty","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","dst","_createTexture","texSubImage2D","lb","threshold","glyphData","numCols","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","Uint8ClampedArray","advance","SimpleGlyph","atlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","glyphID","charCodeAt","cache","addGlyph","horiBearingX","horiBearingY","char","h","horiAdvance","w","updateTexture","INF","textSize","round","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","_edt","process","from","_edt1d","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","isObject","default","Utils","Object","callback","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACRA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;;AAEA;AACA;AAKC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA,uBAAuB,eAAe;AACtC,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,eAAe;AACtC,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA,OAAO;AACP,mDAAmD,KAAK;AACxD;AACA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,OAAO;AAC5B,uBAAuB,OAAO;AAC9B;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uGAA8C,WAAW;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,OAAO;AAC5B,uBAAuB,OAAO;AAC9B,yBAAyB,OAAO;AAChC,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,oBAAoB;AACzC,iCAAiC,gBAAgB;AACjD;AACA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,oBAAoB;AACzC,8BAA8B,aAAa;AAC3C;AACA,+DAA+D,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,cAAc;AACjC,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,oBAAoB;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,mFAAmD,sBAAsB;;AAEzE;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA,iEAAiE,qCAAqC;AACtG,wEAAwE,UAAU,YAAY,qBAAqB;AACnH,wEAAwE,UAAU,YAAY,qBAAqB;AACnH,+DAA+D,oBAAoB;AACnF,eAAe,qBAAqB;AACpC;AACA,0BAA0B,YAAY;AACtC,0BAA0B,YAAY;AACtC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,GAAG;;AAEH;AACA,iEAAiE,qCAAqC;AACtG,+DAA+D,kBAAkB;AACjF,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,sBAAsB;AACrC,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iFAAiF,qCAAqC;AACtH,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,MAAM;AACvD;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC30DkC;;AAElC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,eAAe;AAC9B;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,eAAe;AAC9B,iBAAiB,WAAW;AAC5B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC,iBAAiB,WAAW;AAC5B,uBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChGkC;;AAEK;;AAEvC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA,kCAAkC;AAClC,WAAW,0BAA0B;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA,eAAe,WAAW;AAC1B;AACA;;AAEA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA,sBAAsB,QAAQ;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA,qBAAqB,WAAW;AAChC;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,gCAAgC,QAAQ;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACryBkC;;AAElC;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,UAAU;AACzB;AACA;;AAEA;;AAEA,eAAe,aAAa;AAC5B,iBAAiB,UAAU;AAC3B;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,aAAa;AAC5B,qBAAqB,aAAa;AAClC,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB,aAAa;AAClC;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB,aAAa;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvMkC;;AAEb;;AAErB;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB,iBAAiB,WAAW;AAC5B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,QAAQ;AACjC,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA,qBAAqB,UAAU;AAC/B;AACA;;AAEA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5KkC;;AAEK;;AAEvC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,QAAQ;;AAE3B;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,OAAO;AAChC;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA,6BAA6B,OAAO;AACpC,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA,6BAA6B,QAAQ;AACrC;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA,SAAS;AACT,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,QAAQ;AACjC;AACA,6BAA6B,OAAO;AACpC;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B,qBAAqB,WAAW;AAChC;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;;AAEkC;;AAElC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCqC;AACD;;AAErB;AACsB;AACA;;AAEZ;AACI;AAI5B;AAIA;AAIA;AACmD;AACA;;;;;;;;;;;;;;;;;;ACtBpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;;AAEA,gDAAuD;AACvD,SAAS,mDAAmD;;AAE5D;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtEA;AAMC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnIA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,KAAK;AAChC;AACA;;;;;;;;;;;;;;;;;AChLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChB6B;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChB0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnBuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BqB;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,gCAAgC;AAChC,WAAW,WAAW;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxCA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACA;;AAEA;AACA,WAAW,mCAAmC;AAC9C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA,aACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA,QAAQ,sBAAsB;AAC9B,QAAQ,sBAAsB;AAC9B,QAAQ;AACR;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,eAAe,0BAA0B;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ccNetVizMultiLevel.js\");\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","export { default, default as Matrix } from './matrix';\nexport { default as abstractMatrix } from './abstractMatrix';\n\nexport { wrap } from './wrap/wrap';\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\n\nexport { solve, inverse } from './decompositions';\nexport { linearDependencies } from './linearDependencies';\nexport {\n  default as SingularValueDecomposition,\n  default as SVD\n} from './dc/svd.js';\nexport {\n  default as EigenvalueDecomposition,\n  default as EVD\n} from './dc/evd.js';\nexport {\n  default as CholeskyDecomposition,\n  default as CHO\n} from './dc/cholesky.js';\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import ccNetViz_layer         from './layer';\r\nimport ccNetViz_layout        from './layout/layout';\r\nimport ccNetViz_gl            from'./gl';\r\nimport ccNetViz_color         from './color';\r\nimport ccNetViz_utils         from './utils';\r\nimport ccNetViz_textures      from './dataSources/textures';\r\nimport ccNetViz_files         from './dataSources/files';\r\nimport ccNetViz_texts         from './texts/texts' ;\r\nimport ccNetViz_lazyEvents    from './lazyEvents';\r\nimport ccNetViz_interactivityBatch from './interactivityBatch';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\r\nimport {getPartitionStyle}    from './primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n *  David Tichy\r\n *    Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\nlet sCanvas = document.createElement(\"canvas\");\r\nfunction getContext(canvas){\r\n    let attributes = { depth: false, antialias: false };\r\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\r\n\r\n    return gl;\r\n}\r\n\r\n\r\nvar lastUniqId = 0;\r\n\r\nfunction checkUniqId(el){\r\n  if(el.__uniqid !== undefined){\r\n    el.uniqid = el.__uniqid;\r\n    delete el.__uniqid;\r\n  }else if(el.uniqid === undefined){\r\n    el.uniqid = ++lastUniqId;\r\n  }\r\n}\r\n\r\n\r\nfunction mergeArrays(a, b, cmp){\r\n  let r = [];\r\n  r.length = a.length + b.length;\r\n\r\n  let i = 0,j=0,k=0;\r\n\r\n  while (i < a.length && j < b.length)\r\n  {\r\n    if (cmp(a[i],b[j]) < 0)\r\n      r[k++] = a[i++];\r\n    else\r\n      r[k++] = b[j++];\r\n  }\r\n\r\n  while (i < a.length)\r\n    r[k++] = a[i++];\r\n\r\n\r\n  while (j < b.length)\r\n    r[k++] = b[j++];\r\n\r\n  return r;\r\n}\r\n\r\nvar ccNetViz = function(canvas, options){\r\n  let self = this;\r\n  canvas = canvas || sCanvas;\r\n\r\n  let backgroundStyle = options.styles.background = options.styles.background || {};\r\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\r\n\r\n  let removed = false;\r\n  let setted  = false;\r\n\r\n  let nodeStyle = options.styles.node = options.styles.node || {};\r\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\r\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\r\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\r\n\r\n  if (nodeStyle.label) {\r\n      let s = nodeStyle.label;\r\n      s.color = s.color || \"rgb(120, 120, 120)\";\r\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\r\n  }\r\n\r\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\r\n  edgeStyle.width = edgeStyle.width || 1;\r\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\r\n  edgeStyle.animateColor = edgeStyle.animateColor || \"rgb(240, 80, 120)\";\r\n  edgeStyle.animateSpeed = edgeStyle.animateSpeed || 1.0;\r\n\r\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\r\n\r\n  if (edgeStyle.arrow) {\r\n      let s = edgeStyle.arrow;\r\n      s.minSize = s.minSize != null ? s.minSize : 6;\r\n      s.maxSize = s.maxSize || 12;\r\n      s.aspect = 1;\r\n  }\r\n\r\n\r\n  let events = new ccNetViz_lazyEvents();\r\n  let layers = {};\r\n  let view,gl,drawFunc,textures,files,texts;\r\n  let context = {};\r\n\r\n  this.cntShownNodes = () => {\r\n    let n = 0;\r\n    for(var k in layers)\r\n      n += layers[k].cntShownNodes();\r\n    return n;\r\n  }\r\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\r\n\r\n  this.cntShownEdges = () => {\r\n    let e = 0;\r\n    for(var k in layers)\r\n      e += layers[k].cntShownEdges();\r\n    return e;\r\n  }\r\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\r\n\r\n  let onRedraw = events.debounce(() => {\r\n    self.draw.call(self);\r\n    return false;\r\n  }, 5);\r\n\r\n  function checkRemoved(){\r\n    if(removed){\r\n      console.error(\"Cannot call any function on graph after remove()\")\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  let nodes, edges;\r\n\r\n  function insertTempLayer(){\r\n    if(layers.temp)\r\n      return;\r\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\r\n  }\r\n\r\n  let batch = undefined;\r\n  function getBatch(){\r\n    if(!batch)\r\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\r\n    return batch;\r\n  };\r\n\r\n  this.set = (n, e, layout, layout_options={}) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes = n || [];\r\n    edges = e || [];\r\n\r\n    nodes.forEach(checkUniqId);\r\n    edges.forEach(checkUniqId);\r\n\r\n    layers.temp && layers.temp.set([], [], layout, layout_options);\r\n    layers.main.set(nodes, edges, layout, layout_options);\r\n\r\n    //reset batch\r\n    batch = undefined;\r\n    setted = true;\r\n    return this;\r\n  };\r\n\r\n  //make all dynamic changes static\r\n  this.reflow = () => {\r\n    if(checkRemoved()) return;\r\n\r\n    getBatch().applyChanges();\r\n\r\n    //nodes and edges in dynamic chart are actual\r\n    let n = layers.main.getVisibleNodes();\r\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\r\n\r\n    let e = layers.main.getVisibleEdges();\r\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\r\n\r\n    this.set(n,e);\r\n    this.draw();\r\n  };\r\n\r\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\r\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\r\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\r\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\r\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\r\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\r\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\r\n\r\n  this.addEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.addEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.addNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.addNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.removeEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.removeEdge(e);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.removeNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.removeNode(n);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  this.updateNodes = (nodes) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    nodes.forEach((n) => {\r\n      this.updateNode(n);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  this.updateEdges = (edges) => {\r\n    if(checkRemoved()) return this;\r\n\r\n    edges.forEach((e) => {\r\n      this.updateEdge(e);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n\r\n  let getSize = (c, s, n, sc) => {\r\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\r\n    if (s) {\r\n      let min = s.size ? s.size : s.minSize;\r\n      let max = s.size ? s.size : s.maxSize;\r\n\r\n      result = max ? Math.min(max, result) : result;\r\n      if(result < s.hideSize)\r\n        return 0;\r\n      result = min ? Math.max(min, result) : result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\r\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\r\n\r\n  let getLabelHideSize = (c,s) => {\r\n    if(s){\r\n        const sc = 0.25;\r\n        let n = layers.main.cntShownNodes();  //lower bound\r\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\r\n\r\n        let vs;\r\n        if(s.hideSize){\r\n            vs = t / s.hideSize;\r\n            if(s.maxSize)\r\n                vs = Math.min(vs, t / s.maxSize);\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  let offset = 0.5 * nodeStyle.maxSize;\r\n\r\n  this.draw = (silent) => {\r\n    if(silent && (removed || !setted) ) return;\r\n    if(checkRemoved()) return;\r\n\r\n    let width = canvas.width;\r\n    let height = canvas.height;\r\n    let aspect = width / height;\r\n    let o = view.size === 1 ? offset : 0;\r\n    let ox = o / width;\r\n    let oy = o / height;\r\n\r\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\r\n    context.offsetX   = ox;\r\n    context.offsetY   = oy;\r\n    context.width     = 0.5 * width;\r\n    context.height    = 0.5 * height;\r\n    context.aspect2   = aspect * aspect;\r\n    context.aspect    = aspect;\r\n    context.count     = getNodesCnt();\r\n\r\n    //bad hack because we use different size for curveExc and for nodeSize :(\r\n    if(context.style) delete context.style;\r\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\r\n    context.style     = nodeStyle;\r\n    context.nodeSize = getNodeSize(context);\r\n\r\n    gl && gl.viewport(0, 0, width, height);\r\n\r\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    const startTime = Date.now();\r\n\r\n    const drawOnce = () => {\r\n        for(let i = 0; i < layers.main.scene.elements.length; i++){\r\n            layers.main.scene.elements[i].draw(context);\r\n            layers.temp && layers.temp.scene.elements[i].draw(context);\r\n        }\r\n    }\r\n    const drawLoop = () => {\r\n        context.renderTime = (Date.now() - startTime) / 1000.0;\r\n        drawOnce();\r\n        requestAnimationFrame(drawLoop);\r\n    }\r\n\r\n    if (edgeStyle.animateType && edgeStyle.animateType !== 'none') {\r\n        drawLoop();\r\n    } else {\r\n        drawOnce();\r\n    }\r\n  };\r\n  drawFunc = this.draw.bind(this);\r\n\r\n  this.getScreenCoords = function(conf){\r\n    if(checkRemoved()) return;\r\n    let ret = {};\r\n    let rect = canvas.getBoundingClientRect();\r\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\r\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\r\n    return ret;\r\n  };\r\n\r\n  this.getLayerCoords = function(conf){\r\n    if(checkRemoved()) return;\r\n\r\n    let ret = {};\r\n\r\n    ['x','x1','x2'].forEach(k => {\r\n      if(conf[k] !== undefined){\r\n        let x = conf[k];\r\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\r\n        ret[k] = x;\r\n      }\r\n    });\r\n\r\n\r\n    ['y','y1','y2'].forEach(k => {\r\n      if(conf[k] !== undefined){\r\n        let y = conf[k];\r\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\r\n        ret[k] = y;\r\n      }\r\n    });\r\n\r\n    if(conf.radius !== undefined){\r\n      let dist = conf.radius;\r\n\r\n      let disth = dist / canvas.height;\r\n      let distw = dist / canvas.width;\r\n      dist = Math.max(disth, distw) * view.size;\r\n\r\n      ret.radius = dist;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  let findMerge = function(funcname, args){\r\n    if(checkRemoved() || !gl) return;\r\n\r\n    let f1 = layers.main[funcname].apply(layers.main, args);\r\n\r\n    if(!layers.temp)\r\n      return f1;\r\n\r\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\r\n\r\n    let r = {};\r\n    for(let key in f1){\r\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\r\n        return e1.dist2 - e2.dist2;\r\n      });\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  this.find = function(){return findMerge('find', arguments); };\r\n  this.findArea = function(){return findMerge('findArea', arguments); };\r\n\r\n  this.getTextPosition = (n) => {\r\n    if(checkRemoved() || !gl) return;\r\n\r\n    const offset = 0.5 * context.nodeSize;\r\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\r\n\r\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\r\n    let textEngine = texts.getEngine(ns.font);\r\n    textEngine.setFont(ns.font);\r\n\r\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\r\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\r\n  };\r\n\r\n\r\n\r\n  let addEvts = (el, evts) => {\r\n    for(var k in (evts || {})){\r\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\r\n    }\r\n  }\r\n\r\n  let removeEvts = (el, evts) => {\r\n    for(var k in (evts || {})){\r\n      evts[k] && el.removeEventListener(k, evts[k]);\r\n    }\r\n  }\r\n\r\n  let onDownThis = onMouseDown.bind(this);\r\n\r\n  const onWheelThis = onWheel.bind(this);\r\n\r\n  let zoomevts;\r\n  addEvts(canvas, zoomevts = {\r\n    'mousedown': onDownThis,\r\n    'touchstart': onDownThis,\r\n    'wheel': onWheelThis,\r\n    'contextmenu': options.onContextMenu\r\n  })\r\n\r\n  this.remove = () => {\r\n    if(checkRemoved()) return;\r\n\r\n    for(var k in layers){layers[k].remove();}\r\n\r\n    if(gl){\r\n      gl.viewport(0, 0, context.width*2, context.height*2);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\r\n      gl_lose && gl_lose.loseContext();\r\n    }\r\n\r\n    removeEvts(canvas, zoomevts);\r\n\r\n    events.disable();\r\n    texts && texts.remove();\r\n\r\n    removed = true;\r\n  }\r\n\r\n  let last_view = {};\r\n  function checkChangeViewport(){\r\n    let is_change = false;\r\n    if(last_view){\r\n      for(let k in view){\r\n        if(last_view[k] !== view[k])\r\n          is_change = true;\r\n      }\r\n    }\r\n    ccNetViz_utils.extend(last_view, view);\r\n\r\n    if(is_change){\r\n      options.onChangeViewport && options.onChangeViewport(view);\r\n    }\r\n  }\r\n\r\n  function onContextMenu(e){\r\n  }\r\n\r\n  function onWheel(e) {\r\n      let rect = canvas.getBoundingClientRect();\r\n\r\n      if(!options.passiveEvts){ e.preventDefault(); }\r\n\r\n      let oldsize, oldx, oldy;\r\n\r\n      // Mouse coordinates\r\n      const mouseX = e.clientX - rect.left;\r\n      const mouseY = e.clientY - rect.top;\r\n      const radius = 10;\r\n\r\n      // if no timer found i.e. we are not in continuous phase\r\n      // we are calculating the focus variables again\r\n      if(!onWheel.continuosZoom) {\r\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\r\n\r\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\r\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\r\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\r\n          if (searchNodes.nodes.length) {\r\n              let node = searchNodes.nodes[0];\r\n              let focus = this.getScreenCoords({\r\n                  x: node.node.x,\r\n                  y: node.node.y\r\n              });\r\n              onWheel.focusX = focus.x;\r\n              onWheel.focusY = focus.y;\r\n          }\r\n          // else, it is the window co-ords of the mouse_ptr\r\n          else {\r\n              onWheel.focusX = mouseX;\r\n              onWheel.focusY = mouseY;\r\n          }\r\n          onWheel.oldX = view.x;\r\n          onWheel.oldY = view.y;\r\n          onWheel.oldSize = view.size;\r\n\r\n          if(onWheel.continuosZoom)\r\n              clearTimeout(onWheel.continuosZoom);\r\n\r\n          oldx = view.x;\r\n          oldy = view.y;\r\n      }\r\n      onWheel.continuosZoom = setTimeout(() => {\r\n        onWheel.continuosZoom = undefined;\r\n      }, 200);\r\n\r\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\r\n      let delta = size - onWheel.oldSize;\r\n\r\n      view.size = size;\r\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\r\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\r\n\r\n      if(options.onZoom && options.onZoom(view) === false){\r\n        view.size = oldsize;\r\n        view.x = oldx;\r\n        view.y = oldy;\r\n        return;\r\n      }\r\n\r\n      checkChangeViewport();\r\n\r\n      this.draw();\r\n  }\r\n\r\n  let lastUpTime = 0;\r\n  function onMouseDown(downe) {\r\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\r\n\r\n    let parseTouchEvts = (e) => {\r\n      if(!e.touches) return e;\r\n\r\n      let x = 0,y = 0;\r\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\r\n      e.clientX = x / e.touches.length;\r\n      e.clientY = y / e.touches.length;\r\n\r\n      return e;\r\n    }\r\n\r\n\r\n    downe = parseTouchEvts(downe);\r\n\r\n\r\n    let width = canvas.width / view.size;\r\n    let height = canvas.height / view.size;\r\n    let sx = downe.clientX;\r\n    let sy = downe.clientY;\r\n    let dx = view.x + sx / width;\r\n    let dy = sy / height - view.y;\r\n    let od = options.onDrag;\r\n    let dragged, custom;\r\n    let panning = true;\r\n    let zooming = false;\r\n    let evts;\r\n\r\n    let origdist;\r\n    if((downe.touches || []).length === 2){\r\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\r\n      origdist = Math.sqrt( mx * mx + my * my );\r\n      zooming = true;\r\n    }\r\n\r\n\r\n    let drag = e => {\r\n      e = parseTouchEvts(e);\r\n\r\n      if(e.touches && e.touches.length != 1)  panning = false;\r\n\r\n      if (dragged) {\r\n          if(panning){\r\n              if (custom) {\r\n                  od.drag && od.drag(e);\r\n              }\r\n              else {\r\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\r\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\r\n                  checkChangeViewport();\r\n                  this.draw();\r\n              }\r\n          }\r\n      }\r\n      else {\r\n          let x,y;\r\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\r\n\r\n          let mx = x - sx;\r\n          let my = y - sy;\r\n\r\n          if (mx * mx + my * my > 8) {\r\n              dragged = true;\r\n              custom = od && od.start(downe);\r\n              custom && od.drag && od.drag(e);\r\n          }\r\n      }\r\n      if(!options.passiveEvts){ e.preventDefault(); }\r\n    };\r\n\r\n    let up = e => {\r\n        e = parseTouchEvts(e);\r\n\r\n        custom && od.stop && od.stop(e);\r\n\r\n        if(!dragged){\r\n          options.onClick && options.onClick(e);\r\n\r\n          if( new Date().getTime() - lastUpTime < 250 ) {\r\n            options.onDblClick && options.onDblClick(e);\r\n            lastUpTime = 0;\r\n          }else{\r\n            lastUpTime = new Date().getTime();\r\n          }\r\n        }\r\n\r\n        removeEvts(window, evts);\r\n    };\r\n\r\n    let zoom = e => {\r\n        e = parseTouchEvts(e);\r\n\r\n        if(e.touches && e.touches.length == 2){\r\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\r\n            let dist = Math.sqrt(mx * mx + my * my);\r\n            e.deltaY = -(dist - origdist)*5;\r\n            onWheelThis(e);\r\n            origdist = dist;\r\n        }\r\n    };\r\n\r\n    addEvts(window, evts = {\r\n      'mouseup': up,\r\n      'touchend': up,\r\n      'touchcancel': up,\r\n      'mousemove': zooming ? zoom : drag,\r\n      'touchmove': zooming ? zoom : drag\r\n    });\r\n  }\r\n\r\n\r\n  this.image = function() {\r\n    if(checkRemoved()) return;\r\n\r\n    return canvas.toDataURL();\r\n  }\r\n\r\n  this.resize = function() {\r\n    if(checkRemoved()) return;\r\n\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n  }\r\n\r\n  this.getViewport = function() {\r\n    return view;\r\n  }\r\n\r\n  this.setViewport = function(v) {\r\n    if(checkRemoved()) return;\r\n\r\n    ccNetViz_utils.extend(view, v);\r\n\r\n    checkChangeViewport();\r\n  }\r\n\r\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\r\n\r\n  //expose these methods from layer into this class\r\n  ['update'].forEach(function(method){\r\n    (function(method, self){\r\n      self[method] = function(){\r\n        let args = arguments;\r\n        for(let k in layers){\r\n          let l = layers[k];\r\n          l[method].apply(l,args);\r\n        };\r\n        return self;\r\n      };\r\n    })(method, self);\r\n  });\r\n\r\n  if(gl = getContext(canvas)){\r\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\r\n    gl.blendEquation(gl.FUNC_ADD);\r\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\r\n    gl.enable(gl.BLEND);\r\n  }\r\n\r\n  view = {size:1,x:0,y:0};\r\n\r\n  this.resize();\r\n\r\n  textures = new ccNetViz_textures(events, onLoad);\r\n  files = new ccNetViz_files(events, onLoad);\r\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\r\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\r\n\r\n  if(!gl)\r\n    console.warn(\"Cannot initialize WebGL context\");\r\n};\r\n\r\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\r\n\r\n\r\nccNetViz.color = ccNetViz_color;\r\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\r\nccNetViz.layout = ccNetViz_layout;\r\nccNetViz.color = ccNetViz_color;\r\n\r\n\r\nwindow.ccNetViz = ccNetViz;\r\nexport default ccNetViz;\r\n","import ccNetViz from './ccNetViz';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// this file is used when we have more than 1 layer , goto example multi level\r\n\r\nvar ccNetVizMultiLevel = function(canvas, options){\r\n  var vizScreen = new ccNetViz(canvas, options);\r\n  var vizLayout;\r\n\r\n  var history = [];\r\n  var curlevel = {};\r\n\r\n\r\n  var onContextMenu, onClick;\r\n  \r\n  //right click >> go back\r\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\r\n    if(history.length > 0){\r\n\tvar histel = history.pop();\r\n\t//currently shown level\r\n\tcurlevel = histel;\r\n\r\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\r\n\tvizScreen.draw();\r\n    }\r\n\r\n    e.preventDefault();\r\n  });\r\n\r\n  canvas.addEventListener('click', onClick = function(e){\r\n    var bb = canvas.getBoundingClientRect();\r\n    var x = e.clientX - bb.left;\r\n    var y = e.clientY - bb.top;\r\n    var radius = 5;\r\n\r\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\r\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\r\n    if(result.nodes.length > 0){\r\n      var node = result.nodes[0].node;\r\n\r\n      var layout = node.layout || vizLayout;\r\n      if(node.__computedLayout){\r\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\r\n\tlayout = undefined;\r\n      }else{\r\n\t//we store that layout was once computed for this subgraph\r\n        node.__computedLayout = true;\r\n      }\r\n\r\n      if(node.nodes && node.edges){\r\n\tvar insidenodes = node.nodes;\r\n\tvar insideedges = node.edges;\r\n\r\n\thistory.push(curlevel);\r\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\r\n\r\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\r\n\tvizScreen.draw();\r\n      }\r\n    }\r\n  });\r\n  \r\n  ////TODO: Add interactivity functions into this class\r\n  \r\n  this.remove = function(){\r\n    canvas.removeEventListener('contextmenu', onContextMenu);\r\n    canvas.removeEventListener('click', onClick);\r\n    vizScreen.remove();\r\n  };\r\n\r\n\r\n  this.set = function(nodes, edges, layout){\r\n    curlevel = {nodes: nodes, edges: edges};\r\n    history = [];\r\n\r\n    vizLayout = layout;\r\n    vizScreen.set.apply(vizScreen, arguments);\r\n  }\r\n  // apply the functions to the layer\r\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\r\n  var self = this;\r\n  exposeMethods.forEach(function(method){\r\n    (function(method, self){\r\n      self[method] = function(){\r\n\treturn vizScreen[method].apply(vizScreen, arguments);\r\n      };\r\n    })(method, self);\r\n  });\r\n};\r\n\r\n\r\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\r\n\r\nexport default ccNetVizMultiLevel;","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n/**\r\n * @class\r\n * @classdesc Describes color properties that could be given to the shader.\r\n * @member {number} r\r\n * @member {number} g\r\n * @member {number} b\r\n * @member {number} a\r\n */\r\n\r\n\r\nexport default class Color {\r\n    constructor(color) {\r\n\r\n        // Default value for red, blue and green.\r\n        // Black color is rendered.\r\n        this.r = this.g = this.b = 0;\r\n        this.a = 1;\r\n\r\n        if (color instanceof Color) {\r\n            this.r = color.r;\r\n            this.g = color.g;\r\n            this.b = color.b;\r\n            this.a = color.a;\r\n        } else if (arguments.length >= 3) {\r\n\r\n            // color of the form [0.75, 0.75, 0.65, 0.6] is matched  here.\r\n            // Aplha value is optional.\r\n            this.r = arguments[0];\r\n            this.g = arguments[1];\r\n            this.b = arguments[2];\r\n            arguments.length > 3 && (this.a = arguments[3]);\r\n        } else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgba(205, 201, 021, 0.5)\" is matched here.\r\n            // Aplha value is optional.\r\n            color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n            this.a = get(color[4]);\r\n        } else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(205, 201, 021)\" is matched here.\r\n            color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 255;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\r\n\r\n            // color of the form \"rgb(90%, 10%, 20%)\" is matched here.\r\n            color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\r\n            let get = v => parseInt(v, 10) / 100;\r\n\r\n            this.r = get(color[1]);\r\n            this.g = get(color[2]);\r\n            this.b = get(color[3]);\r\n        } else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\r\n\r\n            // color is of the form '#23ff74'.\r\n            color = parseInt(color.substring(1), 16);\r\n\r\n            // Converts to range [0,1] by using bitwise operator.\r\n            this.r = (color >> 16 & 255) / 255;\r\n            this.g = (color >> 8 & 255) / 255;\r\n            this.b = (color & 255) / 255;\r\n        }\r\n    }\r\n};","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\r\n    this._files = {};\r\n    this._pending = {};\r\n    this._n = 0;\r\n  }\r\n  \r\n  _transformFile(data, dataType) {\r\n    if(dataType === 'json')\r\n      return JSON.parse(data);\r\n    return data;    \r\n  }\r\n  \r\n  get(url) {\r\n    return this._files[url];\r\n  }\r\n\r\n  /*\r\n   * @param type {\r\n   *   url: 'url of file',\r\n   *   success: callback\r\n   *   dataType \"text\" || \"json\"\r\n   * }\r\n   */\r\n  load(url, action, dataType) {\r\n    let p = this._pending[url];\r\n    let f = this._files[url];\r\n\r\n    if (p) {\r\n        p.push(action);\r\n    }\r\n    else if (f) {\r\n        action && action();\r\n    }\r\n    else {\r\n      p = this._pending[url] = [action];\r\n      this._n++;\r\n\r\n      ccNetViz_utils.ajax(url, (data) => {\r\n        this._files[url] = this._transformFile(data,dataType);\r\n        p.forEach(a => a && a(this._files[url]));\r\n        delete this._pending[url];\r\n        --this._n || this._load.forEach(l => l());\r\n      }, dataType=='arraybuffer'?dataType:undefined);\r\n    }\r\n    return f;\r\n  }\r\n  \r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n  \r\n}\r\n","import ccNetViz_utils from '../utils' ;\r\nimport ccNetViz_gl from '../gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\n// this file creates webGL type textures of images example custom.html\r\n\r\nexport default class {\r\n  constructor(events, onLoad){\r\n    this._load = [events.debounce(onLoad, 5)];\r\n    this._textures = {}; //already converted to textures\r\n    this._pending = {}; //pending images \r\n    this._n = 0;  //counts pending images to be converted to textures\r\n  }\r\n\r\n  get(gl, img, action, options) { \r\n      var p = this._pending[img];\r\n      var t = this._textures[img];\r\n\r\n      \r\n      // TODO : add explanation about if-else statements below\r\n      if (p) {\r\n          p.push(action);\r\n      }\r\n      else if (t) {\r\n          action && action();\r\n      }\r\n\r\n      // if image is neither in this._pending array nor nor in already converted this._textures array\r\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\r\n      // and remove it from pending + add it to textures\r\n      \r\n      else {\r\n          p = this._pending[img] = [action];\r\n          this._n++;\r\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\r\n              p.forEach(a => a && a());\r\n              delete this._pending[img];\r\n              \r\n              --this._n || this._load.forEach(l => l());\r\n          }, options);\r\n      }\r\n      return t;\r\n  }\r\n\r\n  onLoad (action) {\r\n    if(this.allLoaded())\r\n      action();\r\n    else\r\n      this._load.push(action);\r\n  }\r\n  \r\n  allLoaded(){\r\n    return ccNetViz_utils.emptyObject(this._pending);\r\n  }\r\n\r\n}","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n// refer edge to edge example\r\n//  each edge if\r\n//  i) from node to node, has source and edge both node\r\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\r\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\r\n\r\n export default class {\r\n  static edgeSource(e) {\r\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\r\n      let s = this.edgeSource(e.source);\r\n      let t = this.edgeTarget(e.source);\r\n      return {\r\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\r\n              y: (s.y+t.y)/2, //middle of y-coordinate\r\n              uniqid: e.uniqid, \r\n              index: e.index, \r\n              is_edge: true, \r\n              e: e.source\r\n      };\r\n    }\r\n    \r\n    return e.source;\r\n  }\r\n\r\n  static edgeTarget (e) {\r\n    if(e.target.source){\r\n      //target is edge\r\n      let s = this.edgeSource(e.target);\r\n      let t = this.edgeTarget(e.target);\r\n      \r\n      return {\r\n              x: (s.x+t.x)/2,\r\n              y: (s.y+t.y)/2,\r\n              uniqid: e.uniqid,\r\n              index: e.index,\r\n              is_edge: true,\r\n              e: e.target\r\n      };\r\n    }\r\n\r\n    return e.target;\r\n  }\r\n\r\n  static getCurveShift (e, r){\r\n      r = r || {};\r\n      r.x = r.y = r.cx = r.cy = 0;\r\n      if(!e)\r\n        return r;\r\n      if(e.t && e.t >= 1){\t//curve or circle\r\n        if(e.t >= 2){ //circle\r\n          let s = this.edgeSource(e);\r\n          let d = s.y < 0.5 ? 1 : -1;\r\n\r\n          r.cx = d * 1.25;\r\n          r.cy = 0;\r\n        }else{\r\n          let se = this.edgeSource(e);\r\n          let te = this.edgeTarget(e);\r\n\r\n          r.x = se.x - te.x;\r\n          r.y = se.y - te.y;\r\n        }\r\n      }\r\n      return r;\r\n  }\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n // initialises webGL\r\n\r\nexport default class {\r\n  static initExtensions(gl) {\r\n      let extensions = gl.getSupportedExtensions();\r\n      let result = {};\r\n      for (let i = 1; i < arguments.length; i++) {\r\n          let e = arguments[i];\r\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\r\n      }\r\n      return result;\r\n  }\r\n  // compiles shader \r\n  \r\n  static createShader(gl, type, source) {\r\n      let result = gl.createShader(type);\r\n      gl.shaderSource(result, source);\r\n      gl.compileShader(result);\r\n\r\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\r\n          console.log(gl.getShaderInfoLog(result));\r\n          return null;\r\n      }\r\n      return result;\r\n  }\r\n\r\n// texture binding\r\n\r\n  static createTexture(gl, img, onLoad, options) {\r\n      let result = gl.createTexture();\r\n\r\n      let image = new Image();\r\n      \r\n      let load = () => {\r\n            image.onload = null;\r\n            gl.bindTexture(gl.TEXTURE_2D, result);\r\n\r\n            //refer article https://open.gl/textures\r\n\r\n            if((options || {}).sdf){\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }else{\r\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            }\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            onLoad && onLoad();\r\n      }\r\n\r\n      image.onload = load;\r\n      image.src = img;\r\n      image.naturalWidth && image.naturalHeight && load();\r\n      \r\n      result.image = image;\r\n      return result;\r\n  }\r\n\r\n  static uniformColor(gl, location, color) {\r\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\r\n  }\r\n\r\n  static ortho(left, right, bottom, top, near, far) {\r\n      let lr = 1 / (left - right),\r\n          bt = 1 / (bottom - top),\r\n          nf = 1 / (near - far);\r\n\r\n      let result = new Float32Array(16);\r\n      result[0] = -2 * lr;\r\n      result[1] = 0;\r\n      result[2] = 0;\r\n      result[3] = 0;\r\n      result[4] = 0;\r\n      result[5] = -2 * bt;\r\n      result[6] = 0;\r\n      result[7] = 0;\r\n      result[8] = 0;\r\n      result[9] = 0;\r\n      result[10] = 2 * nf;\r\n      result[11] = 0;\r\n      result[12] = (left + right) * lr;\r\n      result[13] = (top + bottom) * bt;\r\n      result[14] = (far + near) * nf;\r\n      result[15] = 1;\r\n      return result;\r\n  }\r\n};\r\n","import geomutils from './geomutils';\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska\r\n */\r\n\r\n\r\nfunction pushUnique(arr, e){\r\n  if(arr.indexOf(e) >= 0)\r\n    return;\r\n  arr.push(e);\r\n}\r\n\r\nexport default class {\r\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\r\n    this._layers = layers;\r\n    this._insertTempLayer = insertTempLayer;\r\n\r\n    this._draw = draw;\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._checkUniqId = checkUniqId;\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n\r\n    //create support structures\r\n    this._nPos = {};\r\n    this._ePos = {};\r\n    this._eDirs = {};\r\n\r\n    nodes.forEach((n, i) => {\r\n      this._nPos[n.uniqid] = i;\r\n      this._eDirs[n.uniqid] = {};\r\n    });\r\n    \r\n    edges.forEach((e, i) => {\r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      let si = s.uniqid || s.__uniqid;\r\n      let ti = t.uniqid || t.__uniqid;\r\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\r\n      this._ePos[e.uniqid] = i;\r\n    });\r\n    \r\n    this._actualTempNodes = [];\r\n    this._actualTempEdges = [];\r\n  }\r\n  _doRemoveNodes(nodes){\r\n    nodes.forEach((n) => {\r\n      if(n.uniqid === undefined)\r\n        return;\r\n      \r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._nPos[n.uniqid];\r\n        this._layers.main.removeNodeAtPos(pos);\r\n        delete this._nPos[n.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempNodes.length; i++){\r\n          if(this._actualTempNodes[i] === n){\r\n            this._actualTempNodes.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      n.__uniqid = n.uniqid;\r\n      delete n.uniqid;\r\n    });\r\n  }\r\n  _doRemoveEdges(edges){\r\n    edges.forEach((e) => {\r\n      if(e.uniqid === undefined)\r\n        return;\r\n      \r\n      let s = geomutils.edgeSource(e);\r\n      let t = geomutils.edgeTarget(e);\r\n\r\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\r\n      \r\n      if(this._ePos[e.uniqid] !== undefined){\r\n        //in the normal graph\r\n        let pos = this._ePos[e.uniqid];\r\n        this._layers.main.removeEdgeAtPos(pos);\r\n        delete this._ePos[e.uniqid];\r\n      }else{\r\n        //try to remove from temp graph\r\n        \r\n        for(let i = 0; i < this._actualTempEdges.length; i++){\r\n          if(this._actualTempEdges[i] === e){\r\n            this._actualTempEdges.splice(i,1);\r\n            break;\r\n          }\r\n        }\r\n\r\n      }\r\n      \r\n      e.__uniqid = e.uniqid;\r\n      delete e.uniqid;\r\n    });\r\n  }\r\n  _doAddEdges(){\r\n    this._toAddEdges.forEach((e) => {\r\n      //already added in main graph\r\n      if(\r\n        this._ePos[e.uniqid] !== undefined\r\n      ){\r\n        this._doRemoveEdges([e]);\r\n      }\r\n      \r\n      if(e.uniqid !== undefined){\r\n        console.error(e);\r\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(e);\r\n      \r\n      //add this node into temporary chart\r\n      \r\n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\r\n      pushUnique(this._actualTempEdges, e);\r\n    });\r\n  }\r\n  _doAddNodes(nodes){\r\n    this._toAddNodes.forEach((n) => {\r\n      if(this._nPos[n.uniqid] !== undefined){\r\n        this._doRemoveNodes([n]);\r\n      }\r\n      \r\n      //already added\r\n      if(n.uniqid !== undefined){\r\n        console.error(n);\r\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\r\n        return;\r\n      }\r\n      this._checkUniqId(n);\r\n      \r\n      this._eDirs[n.uniqid] = {};\r\n\r\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\r\n      pushUnique(this._actualTempNodes, n);\r\n    });\r\n  }\r\n  addEdge(e){\r\n    let s = geomutils.edgeSource(e);\r\n    let t = geomutils.edgeTarget(e);\r\n    \r\n    let tid = t.uniqid || t.__uniqid;\r\n    let sid = s.uniqid || s.__uniqid;\r\n    \r\n    if((this._eDirs[sid] || {})[tid]){\r\n      //this edge was already added >> remove it\r\n      this._doRemoveEdges([e]);\r\n    }\r\n    \r\n    if((this._eDirs[tid] || {})[sid]){\r\n      //must remove line and add two curves\r\n      \r\n      this._toAddEdges.push(this._eDirs[tid][sid]);\r\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\r\n\r\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\r\n      \r\n      return this;\r\n    }\r\n\r\n    this._toAddEdges.push(e);\r\n    return this;\r\n  }\r\n  addNode(n){\r\n    this._toAddNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeNode(n){\r\n    this._toRemoveNodes.push(n);    \r\n    return this;\r\n  }\r\n  removeEdge(e){\r\n    this._toRemoveEdges.push(e);\r\n    return this;\r\n  }\r\n  applyChanges(){\r\n    \r\n    //nothing to do\r\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\r\n      return this;\r\n    \r\n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\r\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\r\n    \r\n    this._doRemoveEdges(this._toRemoveEdges);\r\n    this._doRemoveNodes(this._toRemoveNodes);\r\n    this._doAddNodes();\r\n    this._doAddEdges();\r\n    \r\n    this._toAddEdges = [];\r\n    this._toAddNodes = [];\r\n    this._toRemoveEdges = [];\r\n    this._toRemoveNodes = [];\r\n    \r\n    this._insertTempLayer();\r\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\r\n\r\n    this._draw();\r\n    \r\n    return this;\r\n  }\r\n};","import ccNetViz_color     from './color' ;\r\nimport ccNetViz_gl        from './gl' ;\r\nimport ccNetViz_primitive from './primitive' ;\r\nimport ccNetViz_layout    from './layout/layout' ;\r\nimport ccNetViz_geomutils from './geomutils' ;\r\nimport ccNetViz_utils     from './utils' ;\r\nimport {partitionByStyle} from './primitiveTools';\r\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\r\nimport {easeFunctions} from './shaders'\r\n\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors:\r\n * \tDavid Tichy\r\n * \tAleš Saska - http://alessaska.cz/\r\n */\r\n\r\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\r\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\r\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\r\n\r\n    this.redraw = onRedraw || (() => {});\r\n\r\n    options = options || {};\r\n    options.styles = options.styles || {};\r\n\r\n    // set animation flag\r\n    this.hasEdgeAnimation = (!!edgeStyle.animateType && edgeStyle.animateType !== 'none')\r\n\r\n    let nodesFiller = (\r\n      style => ({\r\n        set: (v, e, iV, iI) => {\r\n            let x = e.x;\r\n            let y = e.y;\r\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n            if(v.color){\r\n              let c = e.color;\r\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\r\n            }\r\n            ccNetViz_primitive.quad(v.indices, iV, iI);\r\n        }})\r\n    );\r\n    let labelsFiller = (style => {\r\n        return (function(style){\r\n          let textEngine = texts.getEngine(style.font);\r\n\r\n          textEngine.setFont(style.font);\r\n\r\n          return {\r\n              set: (v, e, iV, iI) => {\r\n                var x = e.x;\r\n                var y = e.y;\r\n\r\n                var ret = false;\r\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\r\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\r\n                  let c = parts[i];\r\n\r\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\r\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\r\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\r\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\r\n                }\r\n\r\n                return ret;\r\n              },\r\n              size: (v,e) => {\r\n                return textEngine.steps(e.label || \"\");\r\n              }\r\n            };\r\n        })(style);\r\n    });\r\n\r\n    let normalize = (a, b) => {\r\n        let x = b.x - a.x;\r\n        let y = b.y - a.y;\r\n        let sc = 1 / Math.sqrt(x*x + y*y);\r\n        return { x: sc * x, y: sc * y };\r\n    };\r\n\r\n    let dx = Math.cos(0.9);\r\n    let dy = Math.sin(0.9);\r\n\r\n    let ct1 = {}, ct2 = {}, ct = {};\r\n    let setVerticeCurveShift = (v,iV,s,t) => {\r\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\r\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\r\n        ctx = ct1.x;\r\n        cty = ct1.y;\r\n        citx = ct1.cx;\r\n        city = ct1.cy;\r\n\r\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\r\n        csx = ct2.x;\r\n        csy = ct2.y;\r\n        cisx = ct2.cx;\r\n        cisy = ct2.cy;\r\n\r\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\r\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\r\n    };\r\n\r\n    let edgesFiller = {\r\n      'lines': (style => ({\r\n            set: (v, e, iV, iI) => {\r\n                let s = ccNetViz_geomutils.edgeSource(e);\r\n                let t = ccNetViz_geomutils.edgeTarget(e);\r\n                let dx = s.x-t.x;\r\n                let dy = s.y-t.y;\r\n                let d = normalize(s, t);\r\n\r\n                setVerticeCurveShift(v,iV,s,t);\r\n\r\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\r\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\r\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\r\n                \r\n                if (this.hasEdgeAnimation) {\r\n                    // when do edge animation, shader need to know the startPos and endPos\r\n                    ccNetViz_primitive.vertices(v.startPos, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\r\n                    ccNetViz_primitive.vertices(v.endPos, iV, t.x, t.y, t.x, t.y, t.x, t.y, t.x, t.y);\r\n                }\r\n\r\n                ccNetViz_primitive.quad(v.indices, iV, iI);\r\n            }})),\r\n       'curves': (style => ({\r\n                    numVertices: 3,\r\n                    numIndices: 3,\r\n                    set: (v, e, iV, iI) => {\r\n                        let s = ccNetViz_geomutils.edgeSource(e);\r\n                        let t = ccNetViz_geomutils.edgeTarget(e);\r\n                        let dx = s.x-t.x;\r\n                        let dy = s.y-t.y;\r\n                        let d = normalize(s, t);\r\n\r\n                        setVerticeCurveShift(v,iV,s,t);\r\n\r\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\r\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\r\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\r\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\r\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\r\n                    }\r\n                })),\r\n       'circles': (style => ({\r\n                    set: (v, e, iV, iI) => {\r\n                        let s = ccNetViz_geomutils.edgeSource(e);\r\n                        let d = s.y < 0.5 ? 1 : -1;\r\n\r\n                        let xdiff1 = 0;\r\n                        let ydiff1 = 0;\r\n                        let xdiff2 = 1;\r\n                        let ydiff2 = d;\r\n                        let xdiff3 = 2;\r\n                        let ydiff3 = 1.25*d;\r\n                        let xdiff4 = 3;\r\n                        let ydiff4 = 1.5*d;\r\n\r\n                        setVerticeCurveShift(v,iV,s,s);\r\n\r\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\r\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\r\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\r\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\r\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\r\n                    }\r\n                }))\r\n    };\r\n\r\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\r\n        let tx = t.x;\r\n        let ty = t.y;\r\n\r\n        let offsetMul;\r\n        let ctx,cty,citx,city;\r\n\r\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\r\n        ctx = ct.x;\r\n        cty = ct.y;\r\n        citx = ct.cx;\r\n        city = ct.cy;\r\n\r\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\r\n          //normal of that edge\r\n          offsetMul = 0;\r\n        }else{\r\n          offsetMul = 1;\r\n        }\r\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\r\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\r\n\r\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\r\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\r\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\r\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\r\n        ccNetViz_primitive.quad(v.indices, iV, iI);\r\n    };\r\n\r\n    let arrowFiller = {\r\n      lineArrows: (style => ({\r\n                set: (v, e, iV, iI) => {\r\n                    let s = ccNetViz_geomutils.edgeSource(e);\r\n                    let t = ccNetViz_geomutils.edgeTarget(e);\r\n                    let d = normalize(s, t);\r\n                    set(v, e, s, t, iV, iI, d.x, d.y);\r\n                }})),\r\n       curveArrows: (style => ({\r\n                        set: (v, e, iV, iI) => {\r\n                          let s = ccNetViz_geomutils.edgeSource(e);\r\n                          let t = ccNetViz_geomutils.edgeTarget(e);\r\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\r\n                        }\r\n                    })),\r\n       circleArrows: (style => ({\r\n                        set: (v, e, iV, iI) => {\r\n                          let t = ccNetViz_geomutils.edgeTarget(e);\r\n                          let s = t;\r\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\r\n                        }\r\n                    }))\r\n    };\r\n\r\n    this.getCurrentSpatialSearch = (context) => {\r\n      if(spatialSearch === undefined){\r\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\r\n      }\r\n      return spatialSearch;\r\n    }\r\n\r\n    this.remove = () => { }\r\n\r\n\r\n    let edgeTypes;\r\n    let edgePoses;\r\n\r\n    let spatialSearch = undefined;\r\n\r\n    let lvl = 0;\r\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\r\n    let set_end = () => {\r\n      let enableLazyRedraw = false;\r\n      let reset = (p) => {\r\n        if(enableLazyRedraw)\r\n          this.set(this.nodes, this.edges);\r\n      };\r\n      files.onLoad(reset)\r\n      textures.onLoad(reset)\r\n      enableLazyRedraw = true;\r\n    };\r\n\r\n    this.set = function(nodes, edges, layout, layout_options) {\r\n        removedNodes = 0;\r\n        removedEdges = 0;\r\n\r\n        this.nodes = nodes = nodes || [];\r\n        this.edges = edges = edges ? [].concat(edges) : [];\r\n\r\n        spatialSearch = undefined;\r\n\r\n        let lines = [], curves = [], circles = [];\r\n\r\n        //tanslate indexes into node objects\r\n        for (let i = 0; i < edges.length; i++) {\r\n          let e = edges[i];\r\n          if(typeof e.source == 'number')\r\n            e.source = nodes[e.source];\r\n\r\n          if(typeof e.target == 'number')\r\n            e.target = nodes[e.target];\r\n        }\r\n\r\n\r\n        let getIndex = (e) => {\r\n            return e.uniqid || -e.index || -e.nidx;\r\n        }\r\n\r\n        let init = () => {\r\n            for (let i = 0; i < nodes.length; i++) {\r\n                nodes[i].index = i;\r\n            }\r\n\r\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\r\n                edges[i].nidx = j;\r\n            }\r\n\r\n            edgeTypes = [];\r\n            edgePoses = new Uint32Array(edges.length);\r\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\r\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\r\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\r\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\r\n\r\n            if (extensions.OES_standard_derivatives) {\r\n                let map = {};\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    (map[si] || (map[si] = {}))[ti] = true;\r\n                }\r\n\r\n                //enable the \"curve\" feature\r\n                const is_bidirectional_overlap = options.bidirectional === 'overlap';\r\n\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let target, e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    let t = dummysd;\r\n                    if (si === ti) {\r\n                        e.t = 2;\t//circle\r\n                        target = circles;\r\n                        t = circlesd;\r\n                    }else {\r\n                        let m = map[ti];\r\n                        if(m && m[si] && is_bidirectional_overlap){\r\n                          e.t = 1;\t//curve\r\n                          target = curves;\r\n                          t = curvesd;\r\n                        }else{\r\n                          e.t = 0;\t//line\r\n                          target = lines;\r\n                          t = linesd;\r\n                        }\r\n                    }\r\n                    edgeTypes.push(t);\r\n                    edgePoses[i] = t.d.length;\r\n                    target.push(e);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < edges.length; i++) {\r\n                    let e = edges[i];\r\n\r\n                    const si = getIndex(e.source);\r\n                    const ti = getIndex(e.target);\r\n\r\n                    let t = dummysd;\r\n                    if(si !== ti){\r\n                      t = linesd;\r\n                      e.t = 0;\r\n                      lines.push(e);\r\n                    }\r\n                    edgeTypes.push(t);\r\n                    edgePoses[i] = t.d.length;\r\n                }\r\n            }\r\n        };\r\n\r\n        init();\r\n\r\n        let nodesParts   = partitionByStyle(nodes);\r\n        let circlesParts = partitionByStyle(circles);\r\n        let linesParts   = partitionByStyle(lines);\r\n        let curvesParts  = partitionByStyle(curves);\r\n\r\n        this.getCurrentSpatialSearch = (context) => {\r\n          if(spatialSearch === undefined){\r\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\r\n          }\r\n          return spatialSearch;\r\n        }\r\n\r\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\r\n\r\n        if(!gl) return;\r\n\r\n        let tryInitPrimitives = () => {\r\n            var isDirty = false;\r\n\r\n            let defaultAdder = (section, addSection) => {\r\n              if(typeof section.style.texture === 'string')\r\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\r\n                else\r\n                  addSection();\r\n            }\r\n            let labelAdder = (section, addSection) => {\r\n              var slf = (section.style.label || {}).font || {};\r\n              let textEngine = texts.getEngine(slf);\r\n              section.style.texture = textEngine.getTexture(slf, addSection);\r\n            }\r\n\r\n            let is;\r\n            is = nodes.length && !nodes[0].color;\r\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\r\n            is = nodes.length && nodes[0].color;\r\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\r\n\r\n            if (nodeStyle.label) {\r\n                texts.clear();\r\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\r\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\r\n                texts.bind();\r\n            }\r\n\r\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\r\n\r\n            if (extensions.OES_standard_derivatives) {\r\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\r\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\r\n            }\r\n\r\n            if (edgeStyle.arrow) {\r\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\r\n\r\n                if (extensions.OES_standard_derivatives) {\r\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\r\n\r\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\r\n                }\r\n            }\r\n\r\n            return isDirty;\r\n        };\r\n\r\n        while(tryInitPrimitives()); //loop until they are not dirty\r\n        set_end();\r\n    };\r\n\r\n\r\n\r\n    this.update = function(element, attribute, data) {\r\n        if(!gl) return;\r\n        scene[element].update(gl, attribute, data, function(style)  {return {\r\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\r\n        };});\r\n    }\r\n\r\n    this.find = (x,y,dist,nodes,edges,labels) => {\r\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\r\n    }\r\n\r\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\r\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\r\n    }\r\n\r\n    this.updateNode = (n, i) => {\r\n      this.nodes[i] = n;\r\n\r\n      if(spatialSearch)\r\n        spatialSearch.update(context, 'nodes', i, n);\r\n\r\n      if(!gl) return;\r\n\r\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\r\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\r\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\r\n\r\n    };\r\n\r\n    this.updateEdge = ((e, i) => {\r\n      let t = edgeTypes[i];\r\n      let pos = edgePoses[i];\r\n\r\n      t.d[pos] = this.edges[i] = e;\r\n\r\n      if(spatialSearch)\r\n        spatialSearch.update(context, t.k, pos, e);\r\n\r\n      if(!gl) return;\r\n\r\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\r\n      if (edgeStyle.arrow)\r\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\r\n    });\r\n\r\n    let removedNodes = 0;\r\n    let removedEdges = 0;\r\n\r\n    const freenode = {x:-1,y:-1,title:\"\"};\r\n    this.removeNodeAtPos = ((pos) => {\r\n      if(this.nodes[pos] === freenode){\r\n        return;\r\n      }\r\n\r\n      removedNodes++;\r\n      this.updateNode(freenode, pos);\r\n    });\r\n\r\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\r\n    this.removeEdgeAtPos = ((pos) => {\r\n      if(this.edges[pos] === freeedge){\r\n        return;\r\n      }\r\n\r\n      removedEdges++;\r\n\r\n      this.updateEdge(freeedge, pos);\r\n    });\r\n\r\n    this.getVisibleNodes = () => {\r\n      if(removedNodes <= 0)\r\n        return this.nodes;\r\n\r\n      let r = [];\r\n      this.nodes.forEach(n => {\r\n        if(n !== freenode)\r\n          r.push(n);\r\n      });\r\n      return r;\r\n    }\r\n\r\n    this.getVisibleEdges = () => {\r\n      if(removedEdges <= 0)\r\n        return this.edges;\r\n\r\n      let r = [];\r\n      this.edges.forEach((n) => {\r\n        if(n !== freeedge)\r\n          r.push(n);\r\n      });\r\n      return r;\r\n    }\r\n\r\n    this.cntShownNodes = (() => {\r\n      return this.nodes.length - removedNodes;\r\n    });\r\n\r\n    this.cntShownEdges = (() => {\r\n      return this.edges.length - removedEdges;\r\n    });\r\n\r\n    let getEdgeStyleSize = ((c) => {\r\n      return c.width/(120);\r\n/*      let avsize = (c.width + c.height)/2;\r\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\r\n      //koef 1 for 150 size and 1.4 for 300 size\r\n      return c.width/(130*koef);\r\n*/    });\r\n\r\n\r\n    let stylesTransl = {\r\n      'line': 0,\r\n      'dashed'  : 1,\r\n      'chain-dotted': 2,\r\n      'dotted': 3\r\n    }\r\n    let getEdgeType = (t) => {\r\n      if(t !== undefined){\r\n        t = stylesTransl[t];\r\n      }\r\n\r\n      if(t === undefined || typeof t !== 'number'){\r\n        t = 0;\r\n      }\r\n\r\n      return t;\r\n    };\r\n\r\n    let animateStylesTransl = {\r\n      'none': 0,\r\n      'basic': 1,\r\n      'gradient': 2,\r\n    }\r\n    let getEdgeAnimateType = (t) => {\r\n        if(t !== undefined){\r\n          t = animateStylesTransl[t];\r\n        }\r\n  \r\n        if(t === undefined || typeof t !== 'number'){\r\n          t = 0;\r\n        }\r\n  \r\n        return t;\r\n      };\r\n\r\n    this.nodes = [];\r\n    this.edges = [];\r\n\r\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\r\n    let scene = this.scene = createScene.call(this);\r\n\r\n    let loadCalled = false;\r\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\r\n\r\n    let getLabelType = (f) => {\r\n      if(texts.isSDF(f))\r\n        return 1;\r\n      return 0;\r\n    };\r\n\r\n    const fsColorTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform vec4 color;\",\r\n        \"uniform sampler2D texture;\",\r\n        \"varying vec2 tc;\",\r\n        \"void main(void) {\",\r\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"}\"\r\n    ];\r\n\r\n    const fsLabelTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform lowp sampler2D texture;\",\r\n        \"uniform mediump vec4 color;\",\r\n        \"uniform mediump float height_font;\",\r\n        \"uniform float type;\",\r\n        \"uniform float buffer;\",\r\n        \"uniform float boldness;\",\r\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\r\n        \"varying mediump vec2 tc;\",\r\n        \"void main() {\",\r\n        \"  if(type > 0.5){\",  //SDF\r\n        \"    float tx=texture2D(texture, tc).a;\",\r\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\r\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\r\n        \"  }else{\", //NORMAL FONT\r\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"  }\",\r\n        \"}\"\r\n    ];\r\n\r\n    const fsVarColorTexture = [\r\n        \"precision mediump float;\",\r\n        \"uniform sampler2D texture;\",\r\n        \"varying vec2 tc;\",\r\n        \"varying vec4 c;\",\r\n        \"void main(void) {\",\r\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\r\n        \"}\"\r\n    ];\r\n\r\n    const lineTypes = [\r\n        \"   if(type >= 2.5){\",        //3.0 dotted\r\n        \"      part = fract(part*3.0);\",\r\n        \"      if(part < 0.5) discard;\",\r\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\r\n        \"      if(part < 0.15) discard;\",\r\n        \"      if(part > 0.30 && part < 0.45) discard;\",\r\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\r\n        \"      if(part < 0.5) discard;\",\r\n        \"   }\"\r\n    ];\r\n\r\n    const lineAnimateTypes = [\r\n        \"   if (animateType >= 1.5) {\",\r\n        \"       gl_FragColor = isAnimateCoveredGradient() * animateColor + (1. - isAnimateCoveredGradient()) * color;\",\r\n        \"   } else if (animateType >= 0.5) {\",\r\n        \"       gl_FragColor = isAnimateCovered() * animateColor + (1. - isAnimateCovered()) * color;\",\r\n        \"   } else {\",\r\n        \"       gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\r\n        \"   }\",\r\n    ]\r\n\r\n    const fsCurve = [\r\n        \"#extension GL_OES_standard_derivatives : enable\",\r\n        \"#ifdef GL_ES\",\r\n        \"precision highp float;\",\r\n        \"#endif\",\r\n        \"uniform float width;\",\r\n        \"uniform vec4 color;\",\r\n        \"uniform float type;\",\r\n        \"uniform float lineStepSize;\",\r\n        \"uniform float lineSize;\",\r\n        \"varying vec2 c;\",\r\n        \"varying vec2 v_lengthSoFar;\",\r\n        \"void main(void) {\",\r\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\r\n        ].concat(lineTypes).concat([\r\n        \"   vec2 px = dFdx(c);\",\r\n        \"   vec2 py = dFdy(c);\",\r\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\r\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\r\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\r\n        \"   float alpha = 1.0 - abs(sd) / width;\",\r\n        \"   if (alpha < 0.0) discard;\",\r\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\r\n        \"}\"\r\n    ]);\r\n\r\n\r\n    const getShiftFuncs = [\r\n        \"attribute vec2 curveShift;\",\r\n        \"vec4 getShiftCurve(void) {\",\r\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\r\n        \"   float length = length(screen * shiftN);\",\r\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\r\n        \"}\",\r\n        \"attribute vec2 circleShift;\",\r\n        \"vec4 getShiftCircle(void) {\",\r\n        \"   return vec4(size*circleShift,0,0);\",\r\n        \"}\"\r\n    ];\r\n\r\n    const easeFunctionPart = [\r\n        `${easeFunctions[edgeStyle.animateEase ? edgeStyle.animateEase : 'linear']}`\r\n    ];\r\n\r\n    const isAnimateCovered = [\r\n        \"float isAnimateCovered() {\",\r\n        \"   vec2 pos = gl_FragCoord.xy;\",\r\n        \"   vec2 viewport = 2. * v_screen;\",\r\n        \"   float maxLen = length(viewport);\",\r\n        \"   vec2 startPos = viewport * v_startPos;\",\r\n        \"   vec2 endPos = viewport * v_endPos;\",\r\n        \"   float totalLen = distance(startPos, endPos);\",\r\n        \"   float len = distance(pos, startPos);\",\r\n        \"   // float r = 300.;\",\r\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * totalLen;\",\r\n        \"   // float r = 0.5 * totalLen;\",\r\n        \"   float draw = 1. - step(r, len);\",\r\n        \"   return draw;\",\r\n        \"}\",\r\n    ]\r\n\r\n    const isAnimateCoveredGradient = [\r\n        \"float isAnimateCoveredGradient() {\",\r\n        \"   vec2 pos = gl_FragCoord.xy;\",\r\n        \"   vec2 viewport = 2. * v_screen;\",\r\n        \"   float maxLen = length(viewport);\",\r\n        \"   vec2 startPos = viewport * v_startPos;\",\r\n        \"   vec2 endPos = viewport * v_endPos;\",\r\n        \"   float totalLen = distance(startPos, endPos);\",\r\n        \"   float len = distance(pos, startPos);\",\r\n        \"   float gradLen = 180.;\", // TODO: can config\r\n        \"   float r = ease(fract(v_time * animateSpeed * 0.2 * maxLen / totalLen)) * (totalLen + gradLen / 2.);\", // NOTE: use 0.2 as a proper factor\r\n        \"   // float r = 0.5 * totalLen;\",\r\n        \"   float draw = fract(smoothstep(r - gradLen, r, len));\",\r\n        \"   return draw;\",\r\n        \"}\",\r\n    ]\r\n\r\n    if (this.hasEdgeAnimation) {\r\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision mediump float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"attribute vec2 startPos;\",\r\n                \"attribute vec2 endPos;\",\r\n                \"uniform float time;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 width;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying float v_time;\",\r\n                \"varying vec2 v_startPos;\",\r\n                \"varying vec2 v_endPos;\",\r\n                \"varying vec2 v_screen;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\"\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n                \"   v_time = time;\",\r\n                \"   v_startPos = startPos;\",\r\n                \"   v_endPos = endPos;\",\r\n                \"   v_screen = screen;\",\r\n\r\n                \"   n = normal;\",\r\n                \"}\"\r\n            ]), [\r\n                \"precision mediump float;\",\r\n                \"uniform float type;\",\r\n                \"uniform float animateType;\",\r\n                \"uniform vec4 color;\",\r\n                \"uniform vec4 animateColor;\",\r\n                \"uniform float animateSpeed;\",\r\n                \"varying vec2 n;\",\r\n                \"varying float v_time;\",\r\n                \"varying vec2 v_startPos;\",\r\n                \"varying vec2 v_endPos;\",\r\n                \"varying vec2 v_screen;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"uniform float lineSize;\",\r\n            ]\r\n            .concat(easeFunctionPart)\r\n            .concat(isAnimateCovered)\r\n            .concat(isAnimateCoveredGradient).concat([\r\n                \"void main(void) {\",\r\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\r\n            ]).concat(lineTypes)\r\n            .concat(lineAnimateTypes)\r\n            .concat([\r\n                \"}\"\r\n            ]), c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                gl.uniform1f(uniforms.animateType, getEdgeAnimateType(c.style.animateType));\r\n                gl.uniform1f(uniforms.animateSpeed, c.style.animateSpeed);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.animateColor, c.style.animateColor);\r\n            })\r\n        );\r\n    } else {\r\n        scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision mediump float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 width;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\"\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n\r\n                \"   n = normal;\",\r\n                \"}\"\r\n            ]), [\r\n                \"precision mediump float;\",\r\n                \"uniform float type;\",\r\n                \"uniform vec4 color;\",\r\n                \"varying vec2 n;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"uniform float lineSize;\",\r\n                \"void main(void) {\",\r\n                \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\r\n            ].concat(lineTypes).concat([\r\n                \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\r\n                \"}\"\r\n            ]), c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    if (extensions.OES_standard_derivatives) {\r\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision highp float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 curve;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                \"varying vec2 c;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\r\n                \"   float length = length(screen * n);\",\r\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   c = curve;\",\r\n\r\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n\r\n                \"}\"\r\n            ]), fsCurve, c => {\r\n                let uniforms = c.shader.uniforms;\r\n                gl.uniform1f(uniforms.width, c.style.width);\r\n                gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\r\n                \"precision highp float;\",\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 normal;\",\r\n                \"attribute vec2 curve;\",\r\n                \"attribute vec2 lengthSoFar;\",\r\n                \"uniform float exc;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform float aspect;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 c;\",\r\n                \"varying vec2 v_lengthSoFar;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   c = curve;\",\r\n\r\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\r\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\r\n                \"}\"])\r\n            , fsCurve, c => {\r\n                let uniforms = c.shader.uniforms;\r\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\r\n                gl.uniform1f(uniforms.width, c.style.width);\r\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\r\n                gl.uniform2f(uniforms.screen, c.width, c.height);\r\n                let size = 2.5 * c.nodeSize;\r\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\r\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n                gl.uniform1f(uniforms.aspect, c.aspect);\r\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\r\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n            })\r\n        );\r\n    }\r\n\r\n    if (edgeStyle.arrow) {\r\n        let shaderparams = {attribute:{offsetMul:1}};\r\n\r\n        let bind = c => {\r\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\r\n            if (!size) return true;\r\n\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\r\n            gl.uniform1f(uniforms.exc, c.curveExc);\r\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\r\n            if(uniforms.size){\r\n              size = 2.5 * c.nodeSize;\r\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n            }\r\n            gl.uniform2f(uniforms.screen, c.width, c.height);\r\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n        };\r\n\r\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                \"attribute vec2 position;\",\r\n                \"attribute vec2 direction;\",\r\n                \"attribute vec2 textureCoord;\",\r\n                \"attribute float offsetMul;\",\r\n                \"uniform float offset;\",\r\n                \"uniform vec2 arrowsize;\",\r\n                \"uniform vec2 size;\",\r\n                \"uniform vec2 screen;\",\r\n                \"uniform float exc;\",\r\n                \"uniform float aspect2;\",\r\n                \"uniform mat4 transform;\",\r\n                \"varying vec2 tc;\",\r\n                ].concat(getShiftFuncs).concat([\r\n                \"void main(void) {\",\r\n                \"   vec2 u = direction / length(screen * direction);\",\r\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\r\n                \"   v = v / length(screen * v);\",\r\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                \"   tc = textureCoord;\",\r\n                \"}\"\r\n            ]), fsColorTexture, bind, shaderparams)\r\n        );\r\n\r\n        if (extensions.OES_standard_derivatives) {\r\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                    \"attribute vec2 position;\",\r\n                    \"attribute vec2 direction;\",\r\n                    \"attribute vec2 textureCoord;\",\r\n                    \"attribute float offsetMul;\",\r\n                    \"uniform float offset;\",\r\n                    \"uniform vec2 arrowsize;\",\r\n                    \"uniform vec2 size;\",\r\n                    \"uniform float exc;\",\r\n                    \"uniform float cexc;\",\r\n                    \"uniform vec2 screen;\",\r\n                    \"uniform float aspect2;\",\r\n                    \"uniform mat4 transform;\",\r\n                    \"varying vec2 tc;\",\r\n                    ].concat(getShiftFuncs).concat([\r\n                    \"void main(void) {\",\r\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\r\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\r\n                    \"   u = u / length(screen * u);\",\r\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\r\n                    \"   v = v / length(screen * v);\",\r\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                    \"   tc = textureCoord;\",\r\n                    \"}\"\r\n                ]), fsColorTexture, bind, shaderparams)\r\n            );\r\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\r\n                    \"attribute vec2 position;\",\r\n                    \"attribute vec2 direction;\",\r\n                    \"attribute vec2 textureCoord;\",\r\n                    \"attribute float offsetMul;\",\r\n                    \"uniform float offset;\",\r\n                    \"uniform vec2 arrowsize;\",\r\n                    \"uniform vec2 size;\",\r\n                    \"uniform vec2 screen;\",\r\n                    \"uniform float exc;\",\r\n                    \"uniform float aspect2;\",\r\n                    \"uniform mat4 transform;\",\r\n                    \"varying vec2 tc;\",\r\n                    ].concat(getShiftFuncs).concat([\r\n                    \"void main(void) {\",\r\n                    \"   vec2 u = direction;\",\r\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\r\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\r\n                    \"   tc = textureCoord;\",\r\n                    \"}\"\r\n                ]), fsColorTexture, bind, shaderparams)\r\n            );\r\n        }\r\n    }\r\n\r\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"uniform vec2 size;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"}\"\r\n        ], fsColorTexture, c => {\r\n            let size = getNodeSize(c);\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\r\n        })\r\n    );\r\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"attribute vec4 color;\",\r\n            \"uniform vec2 size;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"varying vec4 c;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"   c = color;\",\r\n            \"}\"\r\n        ], fsVarColorTexture, c => {\r\n            let size = getNodeSize(c);\r\n            let uniforms = c.shader.uniforms;\r\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\r\n        })\r\n    );\r\n\r\n    let vsLabelsShader = [\r\n            \"attribute vec2 position;\",\r\n            \"attribute vec2 relative;\",\r\n            \"attribute vec2 textureCoord;\",\r\n            \"uniform float offset;\",\r\n            \"uniform vec2 scale;\",\r\n            \"uniform float fontScale;\",\r\n            \"uniform mat4 transform;\",\r\n            \"varying vec2 tc;\",\r\n            \"void main(void) {\",\r\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\r\n            \"   tc = textureCoord;\",\r\n            \"}\"\r\n        ];\r\n    let bindLabels = (is_outline) => {\r\n      return c => {\r\n            if (!getNodeSize(c)) return true;\r\n\r\n            let l = c.style.label;\r\n            let f = l.font;\r\n            let uniforms = c.shader.uniforms;\r\n\r\n            gl.uniform1f(uniforms.type, getLabelType(f));\r\n//            gl.uniform1f(uniforms.type, 0);\r\n\r\n            let textEngine = texts.getEngine(f);\r\n            textEngine.setFont(f);\r\n\r\n            let fontScale = 1.0;\r\n            let sdfSize = textEngine.fontSize;\r\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\r\n            if(wantedSize === 0){ fontScale = 0; };\r\n\r\n            let opts = {};\r\n            if(wantedSize && sdfSize){\r\n              fontScale *= wantedSize / sdfSize;\r\n            }\r\n\r\n            if(is_outline && !textEngine.isSDF) //discardAll\r\n              fontScale = 0;\r\n\r\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\r\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\r\n            gl.uniform1f(uniforms.fontScale, fontScale);\r\n            gl.uniform1f(uniforms.height_font, sdfSize);\r\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\r\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\r\n\r\n            let color;\r\n            if(is_outline && f)\r\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\r\n            else\r\n                color = c.style.color;\r\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\r\n        };\r\n    };\r\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\r\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\r\n\r\n    if (options.onLoad) {\r\n        let styles = options.styles;\r\n        for (let p in styles) {\r\n            let s = styles[p];\r\n\r\n            s.texture && textures.get(gl, s.texture, onLoad);\r\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\r\n        }\r\n    }\r\n\r\n    function createScene() {\r\n        return {\r\n            elements: [],\r\n            add: (name, e) => {\r\n                scene[name] = e;\r\n                scene.elements.push(e);\r\n            }\r\n        };\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges, layout_options = {}) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._angle_step = 2*Math.PI/nodes.length;\r\n    if (layout_options.starting_angle == null)\r\n\tthis._starting_angle = 0;\r\n    else\r\n\tthis._starting_angle = layout_options.starting_angle;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","import ccNetViz_quadtree from '../quadTree' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(nodes, edges, options = {}) {\r\n    const edgeDistance = 15,\r\n          edgeStrength = 1,\r\n          friction = 0.9,\r\n          charge = -30,\r\n          gravity = 0.4,\r\n          theta2 = .64,\r\n          size = [1,1],\r\n          chargeDistance2 = Infinity;\r\n\r\n    let   alpha,\r\n          distances = [],\r\n          strengths = [],\r\n          charges = [];\r\n\r\n\r\n    function accumulate(quad, alpha, charges) {\r\n        let cx = 0, cy = 0;\r\n        quad.charge = 0;\r\n        if (!quad.leaf) {\r\n            let nodes = quad.nodes;\r\n            let c, n = nodes.length;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                c = nodes[i];\r\n                if (c == null) continue;\r\n                accumulate(c, alpha, charges);\r\n                quad.charge += c.charge;\r\n                cx += c.charge * c.cx;\r\n                cy += c.charge * c.cy;\r\n            }\r\n        }\r\n        if (quad.point) {\r\n            if (!quad.leaf) {\r\n                quad.point.x += Math.random() - 0.5;\r\n                quad.point.y += Math.random() - 0.5;\r\n            }\r\n            let k = alpha * charges[quad.point.index];\r\n            quad.charge += quad.pointCharge = k;\r\n            cx += k * quad.point.x;\r\n            cy += k * quad.point.y;\r\n        }\r\n        quad.cx = cx / quad.charge;\r\n        quad.cy = cy / quad.charge;\r\n    }\r\n\r\n    function repulse(node) {\r\n        return function(quad, x1, _, x2) {\r\n            if (quad.point !== node) {\r\n                let dx = quad.cx - node.x;\r\n                let dy = quad.cy - node.y;\r\n                let dw = x2 - x1;\r\n                let dn = dx * dx + dy * dy;\r\n\r\n                if (dw * dw / theta2 < dn) {\r\n                    if (dn < chargeDistance2) {\r\n                        let k = quad.charge / dn;\r\n                        node.px -= dx * k;\r\n                        node.py -= dy * k;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if (quad.point && dn && dn < chargeDistance2) {\r\n                    let k = quad.pointCharge / dn;\r\n                    node.px -= dx * k;\r\n                    node.py -= dy * k;\r\n                }\r\n            }\r\n            return !quad.charge;\r\n        };\r\n    }\r\n\r\n    function step() {\r\n        if ((alpha *= .99) < .05) {\r\n            alpha = 0;\r\n            return true;\r\n        }\r\n\r\n        let q, o, s, t, l, k, x, y;\r\n        let n = nodes.length;\r\n        let m = edges.length;\r\n\r\n        for (let i = 0; i < m; i++) {\r\n            o = edges[i];\r\n            s = o.source;\r\n            t = o.target;\r\n            x = t.x - s.x;\r\n            y = t.y - s.y;\r\n            if (l = (x * x + y * y)) {\r\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\r\n                x *= l;\r\n                y *= l;\r\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\r\n                t.y -= y * k;\r\n                s.x += x * (k = 1 - k);\r\n                s.y += y * k;\r\n            }\r\n        }\r\n\r\n        if (k = alpha * gravity) {\r\n            x = size[0] / 2;\r\n            y = size[1] / 2;\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                o = nodes[i];\r\n                o.x += (x - o.x) * k;\r\n                o.y += (y - o.y) * k;\r\n            }\r\n        }\r\n\r\n        if (charge) {\r\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\r\n\r\n            for (let i = 0; i < n; i++) {\r\n                let o = nodes[i];\r\n                !o.fixed && q.visit(repulse(o));\r\n            }\r\n        }\r\n\r\n        const rnd = (min,max) => Math.random() * (max-min) + min;\r\n        for (let i = 0; i < n; i++) {\r\n            o = nodes[i];\r\n            if (o.fixed || o.fixed2) {\r\n                o.x = o.px;\r\n                o.y = o.py;\r\n            }\r\n            else {\r\n                o.x -= (o.px - (o.px = o.x)) * friction;\r\n                o.y -= (o.py - (o.py = o.y)) * friction;\r\n\r\n                if(options && options.minX !== undefined){\r\n                    if(o.x < options.minX || o.x > options.maxX){\r\n                        o.x = rnd(options.minX, options.maxX);\r\n                    }\r\n                    if(o.y < options.minY || o.y > options.maxY){\r\n                        o.y = rnd(options.minY, options.maxY);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.apply = function() {\r\n        let n = nodes.length;\r\n        let d = Math.sqrt(n);\r\n        let s = 0.3 / d;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            o.weight = 0;\r\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\r\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\r\n            o.px = o.x;\r\n            o.py = o.y;\r\n            charges[i] = charge;\r\n        }\r\n\r\n        for (let i = 0; i < edges.length; i++) {\r\n            let o = edges[i];\r\n            o.source.weight++;\r\n            o.target.weight++;\r\n            distances[i] = edgeDistance;\r\n            strengths[i] = edgeStrength;\r\n        }\r\n\r\n        alpha = 0.1;\r\n        while (!step());\r\n\r\n        return true;\r\n    };\r\n};\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const sq = Math.sqrt(this._nodes.length);\r\n      const reminder = sq - Math.floor(sq);\r\n      if (reminder > 0)\r\n\t  var nnodes = Math.floor(sq)+1;\r\n      else\r\n\t  var nnodes = sq;\r\n      const step = (1 - this._margin*2)/nnodes;\r\n\r\n      const nlines = this._nodes.length/nnodes;\r\n      const reminder2 = nlines - Math.floor(nlines);\r\n      if (reminder2 > 0)\r\n\t  var nlines2 = Math.floor(nlines)+1;\r\n      else\r\n\t  var nlines2 = nlines;\r\n      const stepy = (1-2*this._margin)/(nlines2-2);\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n\t  let j = Math.floor(i/(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\r\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\r\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport default class {\r\n  // this layout should handle any digraph\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this.alphay = 0.05; // y margin\r\n    this.alphax = 0.05; // x margin\r\n  }\r\n\r\n  makeLayers(nodes, layer){\r\n      if (nodes.length > 1){\r\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\r\n          for (let i=0; i<nodes.length; ++i){\r\n              nodes[i].visited = true;\r\n              nodes[i].layer = layer; // makes x afterwards\r\n              nodes[i].y = this.alphay + i*stepy;\r\n          }\r\n      }\r\n      else {\r\n          nodes[0].visited = true;\r\n          nodes[0].layer = layer; // makes x afterwards\r\n          nodes[0].y = 0.5;\r\n      }\r\n      let next_layer = [];\r\n      for (let i=0; i<nodes.length; i++){\r\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\r\n          for (let j=0; j < neighbors.length; j++){\r\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\r\n                  next_layer.push(neighbors[j]);\r\n              }\r\n          }\r\n      }\r\n      if (next_layer.length == 0){\r\n          return layer;\r\n      }\r\n      else {\r\n          return this.makeLayers(next_layer, layer+1);\r\n      }\r\n  }\r\n\r\n  apply () {\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for trees (acyclic graphs) are\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.visited = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the roots:\r\n      // nodes defined by the user as roots OR\r\n      // nodes with in-degree == 0 OR\r\n      // nodes with greatest in-degree (or degree if undirected graph)\r\n      let roots = [];\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\r\n              roots.push(nodes[i]);\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          for (let i = 0; i < nodes.length; i++){\r\n              if (nodes[i].parents.length == 0){\r\n                  roots.push(nodes[i]);\r\n              }\r\n          }\r\n      }\r\n      if (roots.length == 0){\r\n          // calculate max out-degree\r\n          let max_outdegree = 0;\r\n          nodes.forEach(function(node){\r\n              if (node.children.length > max_outdegree){\r\n                  max_outdegree = node.children.length;\r\n              }\r\n          });\r\n          // choose vertices with greatest out-degree\r\n          nodes.forEach(function(node){\r\n              if (node.children.length == max_outdegree){\r\n                  roots.push(node);\r\n              }\r\n          });\r\n      }\r\n      // number of layers and max number of nodes in each layer\r\n      // has to be found by making the layout\r\n      // there are two approaches to finding the nodes in each layer:\r\n      // 1) each layer has all the neighbors of the nodes in the previous layer\r\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\r\n      // this layout implements the first of these approaches.\r\n      const depth = this.makeLayers(roots, 1);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      const stepx = (1-2*this.alphax)/(depth-1);\r\n      // posx = alphax + stepx*(depth-1)\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {degrees} from './utils';\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05; // from [0,1] borders\r\n    this._radius = 0.05; // of the empty circle on the center\r\n    this._nlines = 5;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nodes_segment = this._nodes.length / this._nlines;\r\n      const segment = 0.5 - (this._margin + this._radius);\r\n      const step = segment / nodes_segment;\r\n      const angle = 2*Math.PI/this._nlines;\r\n      let j = 0;\r\n      for(let i=0; i<this._nodes.length; ++i){\r\n          let ii = nd.nodes[i].index;\r\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\r\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\r\n          j = Math.floor(i/nodes_segment);\r\n      }\r\n  }\r\n};\r\n","import layoutForce from './force' ;\r\nimport layoutRandom from './random' ;\r\nimport layoutCircular from './circular' ;\r\nimport layoutTree from './tree' ;\r\nimport layoutTreeT from './treeT' ;\r\nimport layoutHierarchical from './hierarchical' ;\r\n//import layoutHierarchical2 from './hierarchical2' ;\r\nimport layoutSpectral from './spectral' ;\r\nimport layoutSpectral2 from './spectral2' ;\r\nimport layoutHive from './hive' ;\r\nimport layoutGrid from './grid' ;\r\nimport layoutVersinus from './versinus' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  static get force(){\r\n    return layoutForce;\r\n  }\r\n  static get random(){\r\n    return layoutRandom;\r\n  }\r\n  static get circular(){\r\n    return layoutCircular;\r\n  }\r\n  static get tree(){\r\n    return layoutTree;\r\n  }\r\n  static get tree2(){\r\n    return layoutTreeT;\r\n  }\r\n  static get hierarchical(){\r\n    return layoutHierarchical;\r\n  }\r\n/*  static get hierarchical2(){\r\n    return layoutHierarchical2;\r\n  }*/\r\n  static get spectral(){\r\n    return layoutSpectral;\r\n  }\r\n  static get spectral2(){\r\n    return layoutSpectral2;\r\n  }\r\n  static get hive(){\r\n    return layoutHive;\r\n  }\r\n  static get grid(){\r\n    return layoutGrid;\r\n  }static get versinus(){\r\n    return layoutVersinus;\r\n  }\r\n  \r\n  static normalize (nodes, dim) {\r\n    let minX, minY, n = nodes.length;\r\n    \r\n    if (dim) {\r\n        minX = dim.minX;\r\n        minY = dim.minY;\r\n    }\r\n    else {\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n        minX = minY = Infinity;\r\n        \r\n        for (let i = 0; i < n; i++) {\r\n            let o = nodes[i];\r\n            maxX = Math.max(maxX, o.x);\r\n            maxY = Math.max(maxY, o.y);\r\n            minX = Math.min(minX, o.x);\r\n            minY = Math.min(minY, o.y);\r\n        };\r\n        \r\n        dim = {\r\n            maxX: maxX,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            minY: minY\r\n        }\r\n    }\r\n\r\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\r\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        let o = nodes[i];\r\n        o.x = scX * (o.x - minX);\r\n        o.y = scY * (o.y - minY);\r\n    }\r\n    \r\n    return dim;\r\n  }\r\n  \r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default class {\r\n  constructor(nodes){\r\n    this._nodes = nodes;\r\n  }\r\n  \r\n  apply () {\r\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\r\n      let o = this._nodes[i];\r\n      o.x = Math.random();\r\n      o.y = Math.random();\r\n    }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {EigenvalueDecomposition} from 'ml-matrix';\r\nimport {create2dArray} from './utils';\r\n\r\nfunction twoSmallest (arr) {\r\n    const min = Math.min.apply(null, arr), // get the max of the array\r\n        mini = arr.indexOf(min);\r\n    arr[mini] = Infinity; // replace max in the array with -infinity\r\n    const second_min = Math.min.apply(null, arr), // get the new max \r\n        second_mini = arr.indexOf(second_min);\r\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\r\n    const third_min = Math.min.apply(null, arr), // get the new max \r\n        third_mini = arr.indexOf(third_min);\r\n    return [second_mini, third_mini];\r\n}\r\n\r\nfunction normalize (x, y) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\r\n        maxy = Math.max.apply(null, y.map(Math.abs));\r\n    let minx = Math.min.apply(null, x),\r\n        miny = Math.min.apply(null, y);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\r\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\r\n    }\r\n    return [x, y];\r\n}\r\n\r\nexport default class {\r\n  // get degree of all nodes\r\n  // let user define at least: starting angle and radius and\r\n  // clock/cclock direction\r\n  // size of vertices\r\n  // more: a ratio of compactness for the more/less connected nodes\r\n  // a spiral ratio with a rotation ratio for having more than 2pi\r\n  // distribution of nodes when spiriling\r\n  // use some other ordering criterion than degree? Strength?\r\n  // defined by user and found as attribute of each node?\r\n  // random ordering, minimal crossing of edges?\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      // build the diagonal of degrees\r\n      // NOT subtract adjacency from degrees but:\r\n      // substitute diagonal by degrees\r\n      for (let i=0; i<this._nodes.length; ++i){\r\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\r\n      }\r\n      let foo = new EigenvalueDecomposition(A);\r\n      const iii = twoSmallest(foo.realEigenvalues);\r\n      const foo_ = foo.eigenvectorMatrix.transpose();\r\n      const x = foo_[iii[0]];\r\n      const y = foo_[iii[1]];\r\n      const xy = normalize(x, y);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\r\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\r\n      // and implemented in networkx/drawing/layout.py\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = xy[0][i];\r\n          node.y = xy[1][i];\r\n      }); \r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\n// inspired in Matlab implementation\r\n// and JS transcription in\r\n// https://github.com/alanmeeson/spectral-graph-layout\r\n\r\nimport {create2dArray} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._epsilon = 1e-8; // tolerance\r\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\r\n    this._num_elements = nodes.length; //number of nodes in graph\r\n    this._dims = 2;\r\n  }\r\n  apply () {\r\n      let A = create2dArray(this._nodes.length, this._nodes.length);\r\n      // build the adjacency matrix\r\n      for (let i=0; i<this._edges.length; ++i){\r\n          let ii = this._edges[i].source.index;\r\n          let j = this._edges[i].target.index;\r\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\r\n      }\r\n      const D = deg(A); //degree of each node in graph (number of connections).\r\n\r\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\r\n      let u = new Array(dims);//declare the eigen vector matrix\r\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\r\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\r\n\r\n      //Power iteration to determine the remaining eigen vectors.\r\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \r\n          //initialize eigen vector with random values\r\n          let uhk = normalize(rand(this._num_elements));\r\n\r\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\r\n          let stop = false; //stopping criterion flag.\r\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\r\n\r\n              //D-orthogonalize against previous eigenvectors\r\n              let uk = uhk.slice();\r\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\r\n                  let ul = u[l]; //extract the l-th eigen vector\r\n\r\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\r\n                  let top_ = 0;\r\n                  let bottom = 0;\r\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\r\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\r\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\r\n                  }\r\n                  const ratio = top_ / bottom;\r\n\r\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\r\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\r\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\r\n                  }\r\n              }\r\n\r\n              //multiply with .5(I+D^-1 A)\r\n              for (let i = 0; i < uhk.length; i++) {\r\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\r\n              }\r\n\r\n\r\n              uhk = normalize(uhk);\r\n\r\n              itt_count = itt_count + 1;\r\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\r\n          }\r\n          u[k] = uhk.slice();\t\r\n      }\r\n\r\n      //discard the first eigenvector which should be [ones].\r\n      // var v = new Array(u.length);\r\n      // for (var i=0; i < u.length; i++) {\r\n      //     v[i] = new Array(u[i].length);\r\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\r\n      // }\r\n      const x = normalize2(u[1]);\r\n      const y = normalize2(u[2]);\r\n      this._nodes.forEach(function(node, i){\r\n          node.x = x[i];\r\n          node.y = y[i];\r\n      }); \r\n  }\r\n};\r\n\r\nfunction deg(graph) {\r\n    //Calculate the degree of each node from the graph matrix.\r\n    let d = zeros(graph.length);\r\n\r\n    //degree of node i is the sum of the weights of all edges connected to it.\r\n    for (let i = 0; i < graph.length; i++) {\r\n        let node_degree = 0;\r\n        for (let j = 0; j < graph[i].length; j++) {\r\n            node_degree += graph[i][j];\r\n        }\r\n        d[i] = node_degree+1;\r\n    }\r\n\r\n    return d;\r\n}\r\n\r\nfunction dot(a,b) {\r\n    //inner product of two vectors\r\n    let d = 0;\r\n    for (let i = 0; i < a.length; i++) {\r\n        d += a[i] * b[i];\r\n    }\r\n    return d;\r\n}\r\n\r\nfunction euclideanDistance(coordinates) {\r\n    //calculate the euclidean distance between two points/vectors.\r\n    // used for normalization.\r\n    let d = 0;\r\n\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n        d += Math.pow(coordinates[i], 2);\r\n    }\r\n    return Math.sqrt(d);\r\n}\r\n\r\nfunction normalize(arr) {\r\n    //normalizes a vector = arr/||arr||\r\n    const d = euclideanDistance(arr);\r\n    let narr = new Array(arr.length);\r\n    for (let i = 0; i < arr.length; i++) {\r\n        narr[i] = arr[i] / d;\r\n    }\r\n\r\n    return narr;\r\n}\r\n\r\nfunction rand(n) {\r\n    //create a vector of length n and fill with random numbers.\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\r\n    return arr;\r\n}\r\n\r\nfunction add(a, b) {\r\n    let c = new Array(a.length);\r\n    for (let i = 0; i < a.length; i++) {\r\n        c[i] = new Array(a[i].length);\r\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction symmetricRandMatrix(n, ulim) {\r\n    let mat = new Array(n);\r\n    for (let i = 0; i < n; i++) {\r\n        mat[i] = new Array(n);\r\n        mat[i][i] = 0;\r\n    }\r\n    for (let i = 0; i < n; i++) {\r\n        for (let j = i + 1; j < n; j++) {\r\n            mat[i][j] = ulim * Math.random();\r\n            mat[j][i] = mat[i][j];\r\n        }\r\n    }\r\n    return mat;\r\n}\r\n\r\nfunction zeros(n) {\r\n    //create a vector filled with zeros\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 0;\r\n    return arr;\r\n}\r\n\r\nfunction ones(n) {\r\n    //create a vector filled with ones\r\n    let arr = new Array(n);\r\n    for (let i = 0; i < n; i++) arr[i] = 1;\r\n    return arr;\r\n}\r\n\r\nfunction normalize2 (x) {\r\n    let maxx = Math.max.apply(null, x.map(Math.abs));\r\n    let minx = Math.min.apply(null, x);\r\n    for(let i=0; i<x.length; ++i){\r\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\r\n    }\r\n    return x;\r\n}\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\r\n      root.centered = true;\r\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n      // branch order is for now stable but unpredictable, see layouts.cri\r\n      let visited_leafs = 0;\r\n      for (let i=0; i < root.children.length; i++){\r\n          let child = root.children[i];\r\n          if (child.centered != true){\r\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\r\n          }\r\n      }\r\n      if (root.children == 0){\r\n          visited_leafs++;\r\n      }\r\n      // moving to parent, position node\r\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\r\n      root.x = (layer-1)*this.stepx + this.alphax;\r\n      return visited_leafs;\r\n  }\r\n\r\n  apply () {\r\n      // only one root node supported for now\r\n      // left-right tree by default, let user choose\r\n      // top-down, bottom-top, right-left in subsequent versions\r\n      // hierarchical layouts for non-trees (cyclical graphs) should be\r\n      // implemented separately for now\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      r = getRanges(leafs);\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      this.alphay = r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      this.drawTreeCentered(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nimport {getDepth, getRanges} from './utils';\r\n\r\nexport default class {\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n  }\r\n\r\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\r\n    // each node is in vertically on the top of the stack of its leafs\r\n    root.visited = true;\r\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\r\n    root.x = this.alphax+this.stepx*(layer-1);\r\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\r\n    // visit children until leafs\r\n    let visited_leafs = 0;\r\n    for (let i=0; i < root.children.length; i++){\r\n       let child = root.children[i];\r\n       if (child.centered != true){\r\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\r\n       }\r\n    }\r\n    if(root.children.length == 0){\r\n        visited_leafs++;\r\n    }\r\n    return visited_leafs;\r\n}\r\n  apply () {\r\n      let nodes = this._nodes;\r\n      // make hierarchy, annotate parent(s) and children in the nodes\r\n      // this layout can be run on any graph actually\r\n      // for which the children might be selected e.g. for their degree\r\n      // draw can be decided on other measures, such as closeness centrality or clustering\r\n      nodes.forEach(function(n,i){\r\n          n.parents = [];\r\n          n.children = [];\r\n          n.centered = false;\r\n      });\r\n      this._edges.forEach(function(e,i){\r\n          e.source.children.push(e.target);\r\n          e.target.parents.push(e.source);\r\n      });\r\n      // find the root\r\n      for (let i = 0; i < nodes.length; i++){\r\n          if (nodes[i].parents.length == 0){\r\n              var root = nodes[i];\r\n              break;\r\n          }\r\n      }\r\n      const depth = getDepth(root);\r\n      // each layer of tree x = [0+alpha,1-alpha]\r\n      let r = getRanges(depth);\r\n      this.alphax = r.start;\r\n      this.stepx = r.step;\r\n      // posx = alphax + stepx*(depth-1)\r\n\r\n      // find the number of leafs to distribute nodes vertically\r\n      let leafs = 0;\r\n      nodes.forEach(function(node){\r\n          if (node.children.length == 0){\r\n              leafs++;\r\n          }\r\n      });\r\n      // each leaf y = [0+alpha,1-alpha]\r\n      r = getRanges(leafs);\r\n      this.alphay =  r.start;\r\n      this.stepy = r.step;\r\n      // posy = alphay + stepy*(leafn-1)\r\n\r\n      // give nodes their positions\r\n      // plot each branch in depth first,\r\n      // increment y position for each leaf\r\n      // backtracking to go from leaf to parents\r\n      // and decide if parent is visited (always in tree layout)\r\n\r\n      this.drawTreeTop(root);\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2017, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Renato Fabbri\r\n */\r\n\r\nexport function create2dArray (rows, columns) {\r\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\r\n}\r\n\r\nexport function degrees(nodes, edges) {\r\n  // should return ordered nodes and their degrees - high to low\r\n  let degrees = Array(nodes.length).fill(0);\r\n  edges.forEach(function(e) {\r\n      degrees[e.source.index] += 1;\r\n      degrees[e.target.index] += 1;\r\n  }); // check to see if not getting double of the degree in undirected graphs\r\n  //getting the order of nodes from highest to lowest degrees\r\n  let ordered_nodes = degrees.map(function(el, i) {\r\n      return { index: i, value: el };\r\n  });\r\n  ordered_nodes.sort(function(a, b) {\r\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\r\n  });\r\n  let ordered_degrees = ordered_nodes.map(function(el){\r\n      return degrees[el.index];\r\n  });\r\n  return { nodes: ordered_nodes,\r\n           degrees: ordered_degrees } ;\r\n}\r\n\r\nexport function getDepth(obj) {\r\n    let depth = 0;\r\n    if (obj.children) {\r\n        obj.children.forEach(function (d) {\r\n\t    if (d.depth_visited == true){\r\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\r\n\t    }\r\n\t    d.depth_visited = true;\r\n            let tmpDepth = getDepth(d);\r\n            if (tmpDepth > depth) {\r\n                depth = tmpDepth;\r\n            }\r\n        })\r\n    }\r\n    return 1 + depth;\r\n}\r\n\r\nexport function getRanges(n) {\r\n  n = Math.abs(n);\r\n  if(n <= 1){\r\n      return {\r\n        start: 0.5,\r\n        step: 1\r\n      };\r\n  }\r\n  let start = .05;\r\n  return {\r\n      start,\r\n      step: (1-2*start)/(n-1)\r\n  }\r\n}\r\n\r\n","import {degrees} from './utils';\r\n\r\nexport default class {\r\n  // the hubs are on the first half of the sinusoid period\r\n  // the intermediary are on the second half\r\n  // and the periphery are on the upper straight line\r\n  // further versions should enable the choice of other\r\n  // fractions of hubs, intermediary and peripheral vertices\r\n  // or the Erdös sectioning.\r\n  // maybe also let the user set the endpoints of the periphery segment\r\n  constructor(nodes, edges) {\r\n    this._nodes = nodes;\r\n    this._edges = edges;\r\n    this._margin = 0.05;\r\n    this._hubs = 0.1; // 10%\r\n    this._intermediary = 0.2;\r\n  }\r\n  apply () {\r\n      let nd = degrees(this._nodes, this._edges);\r\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\r\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\r\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\r\n      const steprad = Math.PI/(nhubs - 1); \r\n      let i = 0;\r\n      while (i < nhubs ){\r\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\r\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\r\n\t++i;\r\n      }\r\n      const nintermediary = nhubs_intermediary - nhubs;\r\n      const steprad2 = Math.PI/nintermediary; \r\n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\r\n      i = 0;\r\n      while (i < nintermediary ){\r\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\r\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\r\n\t++i;\r\n      }\r\n      const p0 = [0.85, 0.75];\r\n      const p1 = [0.4, 1-this._margin];\r\n      const nperipheral = this._nodes.length - nhubs_intermediary;\r\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\r\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\r\n      i = 0;\r\n      while (i < nperipheral ){\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\r\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\r\n\t++i;\r\n      }\r\n  }\r\n};\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(){\r\n    this._enable = true;\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n      let timeout, args, context, timestamp, result;\r\n\r\n      let later = () => {\r\n          let last = Date.now - timestamp;\r\n\r\n          if (last < wait && last > 0) {\r\n              timeout = setTimeout(later, wait - last);\r\n          } else {\r\n              timeout = null;\r\n              if (!immediate) {\r\n                  if(this._enable){\r\n                    result = func.apply(context, args);\r\n                  }\r\n                  if (!timeout) context = args = null;\r\n              }\r\n          }\r\n      };\r\n\r\n      return () => {\r\n          context = this;\r\n          args = arguments;\r\n          timestamp = Date.now;\r\n          let callNow = immediate && !timeout;\r\n          if (!timeout) timeout = setTimeout(later, wait);\r\n          if (callNow) {\r\n              if(this._enable){\r\n                result = func.apply(context, args);\r\n              }\r\n              context = args = null;\r\n          }\r\n\r\n          return result;\r\n      };\r\n  }\r\n  \r\n  disable(){\r\n    this._enable = false;\r\n  }\r\n};","import ccNetViz_shader from './shader' ;\r\nimport ccNetViz_utils  from './utils' ;\r\nimport {getPartitionStyle} from './primitiveTools';\r\n\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\n\r\n\r\nexport default class primitive{\r\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\r\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\r\n    let buffers = [];\r\n    let sections = [];   \r\n    \r\n    let sectionsByStyle = {};\r\n\r\n    let e = {};\r\n    let iV, iI, iS = 0, iB = 0;\r\n\r\n    let partLength = (filler, part) => {\r\n        if(filler.size){\r\n          let n = 0;\r\n          part.forEach( p => {\r\n            n+=filler.size(e,p);\r\n          });\r\n          return n;\r\n        }else{\r\n          return part.length;\r\n        }\r\n        return;\r\n    };\r\n    \r\n    let init = (filler, n) => {\r\n        iV = iI = 0;\r\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\r\n        let nV = Math.min(max, n - (iB - iS)*max);\r\n        let nI = nV * filler.numIndices;\r\n\r\n        if (!e.indices || e.indices.length !== nI) {\r\n            e.indices = new Uint16Array(nI);\r\n            nV *= filler.numVertices;\r\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\r\n        }\r\n    };\r\n\r\n    let zerofiller =  {\r\n      set: (v, iV, iI, numVertices, numIndices) => {\r\n        let indicesarr = [v.indices, iV, iI];\r\n        for(let i = 0; i < numIndices; i++)\r\n          indicesarr.push(0);\r\n\r\n        let verticesarr = [undefined, iV, iI];\r\n        for(let i = 0; i < numVertices; i++)\r\n          verticesarr.push(0);\r\n\r\n        for(var k in v){\r\n          if(k === 'indices'){\r\n            primitive.indices.apply(this, indicesarr);\r\n          }else{\r\n            verticesarr[0] = v[k];\r\n            primitive.vertices.apply(this, verticesarr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.set = (gl, styles, adder, data, parts, get) => {\r\n        var isDirty = false;\r\n      \r\n        iS = 0;\r\n        iB = 0;\r\n\r\n        this._iIs = new Uint32Array(data.length);\r\n        this._iVs = new Uint32Array(data.length);\r\n        this._iBs = new Uint8Array(data.length);\r\n        this._sizes = new Uint8Array(data.length);\r\n\r\n\r\n        let store = (section) => {\r\n            let b = buffers[iB];\r\n            if (!b) {\r\n                buffers[iB] = b = {};\r\n                for (let a in e) b[a] = gl.createBuffer();\r\n            }\r\n            for (let a in shader.attributes) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\r\n            b.numIndices = iI;\r\n            b.numVertices = iV;\r\n            section.buffers.push(b);\r\n            iB++;\r\n        };\r\n\r\n        sections = [];\r\n        for (let p in parts) {\r\n            iS = iB;\r\n\r\n            let section = {\r\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\r\n                buffers: [],\r\n                styleName: p\r\n            };\r\n\r\n            let filler = get(section.style);\r\n            filler.numVertices = filler.numVertices || 4;\r\n            filler.numIndices = filler.numIndices || 6;\r\n\r\n            let part = parts[p];\r\n\r\n            let pL = partLength(filler, part);\r\n            init(filler, pL);\r\n            let max = primitive.maxBufferSize;\r\n            for (let i = 0; i < part.length; i++) {\r\n                let s = filler.size ? filler.size(e, part[i]) : 1;\r\n                let niV = iV + s * filler.numVertices;\r\n                let niI = iI + s * filler.numIndices;\r\n\r\n                if (niV >= max) {\r\n                    store(section);\r\n                    init(filler, pL);\r\n                    niV = iV;\r\n                    niI = iI;\r\n                }\r\n\r\n\r\n                if(filler.set(e, part[i], iV, iI))\r\n                  isDirty = true;\r\n\r\n\r\n                let idx = part.idx[i];\r\n                this._iIs[idx] = iI;\r\n                this._iVs[idx] = iV;\r\n                this._iBs[idx] = iB;\r\n                this._sizes[idx] = s;\r\n\r\n                iI = niI;\r\n                iV = niV;\r\n            }\r\n            store(section);\r\n\r\n            function add() {\r\n                sections.push(this);\r\n                sectionsByStyle[this.styleName] = this;\r\n            }\r\n            let addSection = add.bind(section);\r\n\r\n            adder ? adder(section, addSection) : addSection();\r\n        }\r\n        \r\n        return isDirty;\r\n    }\r\n\r\n    let fb;\r\n    this.update = function(gl, attribute, data, get)  {\r\n        let i = 0, size = shader.attributes[attribute].size;\r\n        sections.forEach(function(section)  {\r\n            let filler = get(section.style);\r\n            filler.numVertices = filler.numVertices || 4;\r\n\r\n            section.buffers.forEach(function(e)  {\r\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\r\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\r\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\r\n            });\r\n        });\r\n   }\r\n\r\n   this.updateEl = (gl, el, pos, get) => {\r\n        let storeToPos = (b, iV, iI) => {\r\n            for (let a in shader.attributes) {\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\r\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\r\n            }\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\r\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\r\n        };\r\n\r\n        let section = sectionsByStyle[el.style];\r\n        \r\n        let filler = get(section.style);\r\n        filler.numVertices = filler.numVertices || 4;\r\n        filler.numIndices = filler.numIndices || 6;\r\n             \r\n        iB=iS=0;\r\n\r\n        let buffer = section.buffers[this._iBs[pos]];\r\n        let s = filler.size ? filler.size(buffer, el) : 1;\r\n        let olds = this._sizes[pos];\r\n        if(s > olds){\r\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\r\n          return;\r\n        }\r\n\r\n        init(filler, olds);\r\n        filler.set(e, el, 0, 0);\r\n\r\n        for(;s < olds; s++){\r\n          //zero fill empty spaces\r\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\r\n        }\r\n\r\n        let iV = this._iVs[pos];\r\n        let iI = this._iIs[pos];\r\n        storeToPos(buffer, iV, iI);\r\n    };\r\n\r\n    this.draw = (context) => {\r\n        context.shader = shader;\r\n        shader.bind();\r\n\r\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\r\n        gl.uniform1f(shader.uniforms.time, context.renderTime);\r\n\r\n        sections.forEach(section => {\r\n            if (section.style.texture) {\r\n                section.style.texture.update && section.style.texture.update();\r\n                gl.activeTexture(gl.TEXTURE0);\r\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\r\n                gl.uniform1i(shader.uniforms.texture, 0);\r\n            }\r\n\r\n            context.style = section.style;\r\n            if (bind(context)) return;\r\n\r\n            section.buffers.forEach(e => {\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\r\n\r\n                for (var a in shader.attributes) {\r\n                    var attribute = shader.attributes[a];\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\r\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\r\n                }\r\n\r\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\r\n            });\r\n        });\r\n\r\n        shader.unbind();\r\n    }\r\n  }\r\n  \r\n  static vertices(buffer, iV) {\r\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\r\n  }\r\n  \r\n  static singles(buffer, iV) {\r\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\r\n  }\r\n  \r\n  static colors(buffer, iV) {\r\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\r\n        let c = arguments[i];\r\n        buffer[j++] = c.r;\r\n        buffer[j++] = c.g;\r\n        buffer[j++] = c.b;\r\n        buffer[j++] = c.a;\r\n    }\r\n  }\r\n  \r\n  static indices(buffer, iV, iI){\r\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\r\n  }\r\n\r\n  static quad(buffer, iV, iI) {\r\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\r\n  }\r\n\r\n  static get maxBufferSize(){\r\n    return 65536;\r\n  } \r\n}","import ccNetViz_color  from './color' ;\r\n\r\nfunction partitionByStyle(data){\r\n    let parts = {};\r\n    \r\n    let pN = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        let el = data[i];\r\n        let part = parts[el.style] = parts[el.style] || [];\r\n        if(part.idx === undefined)\r\n          part.idx = [];\r\n        part.idx.push(i); \r\n\r\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\r\n        \r\n        part.push(el);\r\n    }\r\n    \r\n    return parts;\r\n}\r\n\r\nfunction getPartitionStyle(style, baseStyle, styleProperty){\r\n    let result = {};\r\n\r\n    let copy = s => {\r\n        if (s) for (let p in s) result[p] = s[p];\r\n    };\r\n\r\n    copy(baseStyle);\r\n    copy(style);\r\n\r\n    if (styleProperty) {\r\n        copy(baseStyle[styleProperty]);\r\n        style && copy(style[styleProperty]);\r\n    }\r\n    result.color = result.color && new ccNetViz_color(result.color);\r\n    result.animateColor = result.animateColor && new ccNetViz_color(result.animateColor);\r\n    return result;\r\n};\r\n\r\n\r\nexport {partitionByStyle, getPartitionStyle};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nexport default function(points) {\r\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n\r\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n    xs = [], ys = [];\r\n    n = points.length;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n        d = points[i];\r\n        if (d.x < x1_) x1_ = d.x;\r\n        if (d.y < y1_) y1_ = d.y;\r\n        if (d.x > x2_) x2_ = d.x;\r\n        if (d.y > y2_) y2_ = d.y;\r\n        xs.push(d.x);\r\n        ys.push(d.y);\r\n    }\r\n\r\n    let dx = x2_ - x1_;\r\n    let dy = y2_ - y1_;\r\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\r\n\r\n    function create() {\r\n        return {\r\n            leaf: true,\r\n            nodes: [],\r\n            point: null,\r\n            x: null,\r\n            y: null\r\n        };\r\n    }\r\n\r\n    function visit(f, node, x1, y1, x2, y2) {\r\n        if (!f(node, x1, y1, x2, y2)) {\r\n            let sx = (x1 + x2) * 0.5;\r\n            let sy = (y1 + y2) * 0.5;\r\n            let children = node.nodes;\r\n\r\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\r\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\r\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\r\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (n.leaf) {\r\n            let nx = n.x;\r\n            let ny = n.y;\r\n\r\n            if (nx !== null) {\r\n                if (nx === x && ny === y) {\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n                else {\r\n                    let nPoint = n.point;\r\n                    n.x = n.y = n.point = null;\r\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\r\n                }\r\n            } else {\r\n                n.x = x, n.y = y, n.point = d;\r\n            }\r\n        } else {\r\n            insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n    }\r\n\r\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        let xm = (x1 + x2) * 0.5;\r\n        let ym = (y1 + y2) * 0.5;\r\n        let right = x >= xm;\r\n        let below = y >= ym;\r\n        let i = below << 1 | right;\r\n\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = create());\r\n\r\n        right ? x1 = xm : x2 = xm;\r\n        below ? y1 = ym : y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n    }\r\n\r\n    function findNode(root, x, y, x0, y0, x3, y3) {\r\n        let minDistance2 = Infinity;\r\n        let closestPoint;\r\n\r\n        (function find(node, x1, y1, x2, y2) {\r\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n\r\n            let point;\r\n            if (point = node.point) {\r\n                let dx = x - node.x;\r\n                let dy = y - node.y;\r\n                let distance2 = dx * dx + dy * dy;\r\n\r\n                if (distance2 < minDistance2) {\r\n                    let distance = Math.sqrt(minDistance2 = distance2);\r\n                    x0 = x - distance, y0 = y - distance;\r\n                    x3 = x + distance, y3 = y + distance;\r\n                    closestPoint = point;\r\n                }\r\n            }\r\n\r\n            let children = node.nodes;\r\n            let xm = (x1 + x2) * .5;\r\n            let ym = (y1 + y2) * .5;\r\n            let right = x >= xm;\r\n            let below = y >= ym;\r\n\r\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n                if (node = children[i & 3]) switch (i & 3) {\r\n                    case 0: find(node, x1, y1, xm, ym); break;\r\n                    case 1: find(node, xm, y1, x2, ym); break;\r\n                    case 2: find(node, x1, ym, xm, y2); break;\r\n                    case 3: find(node, xm, ym, x2, y2); break;\r\n                }\r\n            }\r\n        })(root, x0, y0, x3, y3);\r\n\r\n        return closestPoint;\r\n    }\r\n\r\n    let root = create();\r\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\r\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\r\n\r\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n    --i;\r\n\r\n    xs = ys = points = d = null;\r\n\r\n    return root;\r\n};","import ccNetViz_gl from './gl' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: David Tichy\r\n */\r\n\r\nvar defaultAttr = {color: 4};\r\n\r\nexport default class Shader {\r\n  constructor(gl, vs, fs, shaderParams) {\r\n    this._gl = gl;\r\n    this._vs = vs;\r\n    this._fs = fs;\r\n    \r\n    let program = this._program = gl.createProgram();\r\n    \r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\r\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\r\n    gl.linkProgram(program);\r\n    \r\n    this.uniforms = {};\r\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveUniform(program, i).name;\r\n        this.uniforms[name] = gl.getUniformLocation(program, name);\r\n    }\r\n    \r\n    let attrParams = (shaderParams || {}).attribute || {};\r\n\r\n    this.attributes = {};\r\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) {\r\n        let name = gl.getActiveAttrib(program, i).name;\r\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\r\n    }\r\n    \r\n  }\r\n  \r\n  static get attribute(){\r\n    return defaultAttr;\r\n  }\r\n  \r\n  bind () {\r\n    this._gl.useProgram(this._program);\r\n\r\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\r\n  }\r\n\r\n  unbind () {\r\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\r\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\r\n  }\r\n  \r\n};","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return 1.0 - bounceOut(1.0 - t);\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat bounceOut(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\r\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\r\\n}\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  const float a = 4.0 / 11.0;\\r\\n  const float b = 8.0 / 11.0;\\r\\n  const float c = 9.0 / 10.0;\\r\\n\\r\\n  const float ca = 4356.0 / 361.0;\\r\\n  const float cb = 35442.0 / 1805.0;\\r\\n  const float cc = 16061.0 / 1805.0;\\r\\n\\r\\n  float t2 = t * t;\\r\\n\\r\\n  return t < a\\r\\n    ? 7.5625 * t2\\r\\n    : t < b\\r\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\r\\n      : t < c\\r\\n        ? ca * t2 - cb * t + cc\\r\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return 1.0 - sqrt(1.0 - t * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\r\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return sqrt((2.0 - t) * t);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t * t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? 4.0 * t * t * t\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  float f = t - 1.0;\\r\\n  return f * f * f + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 0.0 || t == 1.0\\r\\n    ? t\\r\\n    : t < 0.5\\r\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\r\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\r\\n}\\r\\n\"","import linear from './linear.glsl';\r\nimport sinIn from './sin-in.glsl';\r\nimport sinOut from './sin-out.glsl';\r\nimport sinInOut from './sin-inout.glsl';\r\nimport expIn from './exp-in.glsl';\r\nimport expOut from './exp-out.glsl';\r\nimport expInOut from './exp-inout.glsl';\r\nimport bounceIn from './bounce-in.glsl';\r\nimport bounceOut from './bounce-out.glsl';\r\nimport bounceInOut from './bounce-inout.glsl';\r\nimport circularIn from './circular-in.glsl';\r\nimport circularOut from './circular-out.glsl';\r\nimport circularInOut from './circular-inout.glsl';\r\nimport quadIn from './quad-in.glsl';\r\nimport quadOut from './quad-out.glsl';\r\nimport quadInOut from './quad-inout.glsl';\r\nimport cubicIn from './cubic-in.glsl';\r\nimport cubicOut from './cubic-out.glsl';\r\nimport cubicInOut from './cubic-inout.glsl';\r\nimport quartIn from './quart-in.glsl';\r\nimport quartOut from './quart-out.glsl';\r\nimport quartInOut from './quart-inout.glsl';\r\nimport quintIn from './quint-in.glsl';\r\nimport quintOut from './quint-out.glsl';\r\nimport quintInOut from './quint-inout.glsl';\r\n\r\nconst easeFunctions = {\r\n    'linear': linear,\r\n    'sin-in': sinIn,\r\n    'sin-out': sinOut,\r\n    'sin-inout': sinInOut,\r\n    'exp-in': expIn,\r\n    'exp-out': expOut,\r\n    'exp-inout': expInOut,\r\n    'bounce-in': bounceIn,\r\n    'bounce-out': bounceOut,\r\n    'bounce-inout': bounceInOut,\r\n    'circular-in': circularIn,\r\n    'circular-out': circularOut,\r\n    'circular-inout': circularInOut,\r\n    'quad-in': quadIn,\r\n    'quad-out': quadOut,\r\n    'quad-inout': quadInOut,\r\n    'cubic-in': cubicIn,\r\n    'cubic-out': cubicOut,\r\n    'cubic-inout': cubicInOut,\r\n    'quart-in': quartIn,\r\n    'quart-out': quartOut,\r\n    'quart-inout': quartInOut,\r\n    'quint-in': quintIn,\r\n    'quint-out': quintOut,\r\n    'quint-inout': quintInOut,\r\n}\r\n\r\nexport {\r\n    easeFunctions,\r\n}","export default \"float ease(float t) {\\r\\n  return t;\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return t * t;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return -t * (t - 2.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 4.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +8.0 * pow(t, 4.0)\\r\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return pow(t, 5.0);\\r\\n}\"","export default \"float ease(float t) {\\r\\n  return t < 0.5\\r\\n    ? +16.0 * pow(t, 5.0)\\r\\n    : 0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0; // NOTE: fix original bug, no '-'\\r\\n}\\r\\n\"","export default \"float ease(float t) {\\r\\n  return 1.0 + (pow(t - 1.0, 5.0)); // NOTE: fix original bug '-' -> '+'\\r\\n}\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\r\\n}\\r\\n\"","export default \"#ifndef PI\\r\\n#define PI 3.141592653589793\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return -0.5 * (cos(PI * t) - 1.0);\\r\\n}\"","export default \"#ifndef HALF_PI\\r\\n#define HALF_PI 1.5707963267948966\\r\\n#endif\\r\\n\\r\\nfloat ease(float t) {\\r\\n  return sin(t * HALF_PI);\\r\\n}\"","import { easeFunctions } from \"./easeFunctions\";\r\n\r\nexport {\r\n    easeFunctions,\r\n}","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nconst EPS = Number.EPSILON || 1e-14;\r\n\r\n\r\n\r\n\r\n//solving cube analyticaly for bezier curves\r\nfunction cuberoot(x) {\r\n    const y = Math.pow(Math.abs(x), 1/3);\r\n    return x < 0 ? -y : y;\r\n}\r\n\r\nfunction solveCubic(a, b, c, d) {\r\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\r\n        a = b; b = c; c = d;\r\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\r\n            a = b; b = c;\r\n            if (Math.abs(a) < 1e-8) // Degenerate case\r\n                return [];\r\n            return [-b/a];\r\n        }\r\n\r\n        const D = b*b - 4*a*c;\r\n        if (Math.abs(D) < 1e-8)\r\n            return [-b/(2*a)];\r\n        else if (D > 0)\r\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\r\n        return [];\r\n    }\r\n\r\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\r\n    const p = (3*a*c - b*b)/(3*a*a);\r\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\r\n    let roots;\r\n\r\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\r\n        roots = [cuberoot(-q)];\r\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\r\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\r\n    } else {\r\n        const D = q*q/4 + p*p*p/27;\r\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\r\n            roots = [-1.5*q/p, 3*q/p];\r\n        } else if (D > 0) {             // Only one real root\r\n            const u = cuberoot(-q/2 - Math.sqrt(D));\r\n            roots = [u - p/(3*u)];\r\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\r\n            const u = 2*Math.sqrt(-p/3);\r\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\r\n            const k = 2*Math.PI/3;\r\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\r\n        }\r\n    }\r\n\r\n    // Convert back from depressed cubic\r\n    for (let i = 0; i < roots.length; i++)\r\n        roots[i] -= b/(3*a);\r\n\r\n    return roots;\r\n}\r\n\r\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\r\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\r\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\r\n  \r\n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\r\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\r\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\r\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\r\n    \r\n  const eqresult = solveCubic(A,B,C,D);\r\n  \r\n  \r\n  //loop through all possible solitions to find out which point is the nearest\r\n  let mindist = Infinity;\r\n  for(let i = 0; i < eqresult.length; i++){\r\n    const t = eqresult[i];\r\n    \r\n    if(t < 0 || t > 1)\r\n      continue;\r\n    \r\n    //point at bezier curve\r\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\r\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\r\n    \r\n    const dist = distance2(x,y,px,py);\r\n    if(dist < mindist)\r\n      mindist = dist;\r\n    \r\n  }\r\n  \r\n  return mindist;\r\n}\r\n\r\n/*\r\n * @param v - array of with points [x1,y1,x2,y2 .... ]\r\n * @return array representing bounding box [x1,y1,x2,y2]\r\n */\r\nfunction getBBFromPoints(v){\r\n  let xmin = Infinity;\r\n  let xmax = -xmin;\r\n  let ymin = Infinity;\r\n  let ymax = -ymin;\r\n  \r\n  //x of points - even indexes in array \r\n  for(let i = 0; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < xmin) xmin = val;\r\n    if(val > xmax) xmax = val;\r\n  }\r\n  \r\n  //y of points - odd indexes in array \r\n  for(let i = 1; i < v.length; i+=2){\r\n    const val = v[i];\r\n    if(val < ymin) ymin = val;\r\n    if(val > ymax) ymax = val;\r\n  }\r\n\r\n  return [xmin, ymin, xmax, ymax];\r\n}\r\n\r\n//distance from point to point\r\nfunction distance2(x1,y1,x2,y2){\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n//distance from point to line\r\nfunction pDistance2(x, y, x1, y1, x2, y2) {\r\n  const A = x - x1;\r\n  const B = y - y1;\r\n  const C = x2 - x1;\r\n  const D = y2 - y1;\r\n\r\n  const dot = A * C + B * D;\r\n  const len_sq = C * C + D * D;\r\n  let param = -1;\r\n  if (len_sq != 0) //in case of 0 length line\r\n      param = dot / len_sq;\r\n\r\n  let xx, yy;\r\n\r\n  if (param < 0) {\r\n    xx = x1;\r\n    yy = y1;\r\n  }\r\n  else if (param > 1) {\r\n    xx = x2;\r\n    yy = y2;\r\n  }\r\n  else {\r\n    xx = x1 + param * C;\r\n    yy = y1 + param * D;\r\n  }\r\n\r\n  return distance2(x,y,xx,yy);\r\n}\r\n\r\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\r\n{\r\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\r\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\r\n\r\n    if( d == 0 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let r = q / d;\r\n\r\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\r\n    let s = q / d;\r\n\r\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction pointInRect(px,py, x1, y1, x2, y2){\r\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\r\n}\r\n\r\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\r\n  return p1x <= r2x &&\r\n          p1y <= r2y &&\r\n          p2x >= r1x &&\r\n          p2y >= r1y;\r\n}\r\n\r\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\r\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nfunction eq(a,b){\r\n  return a >= b-EPS && a <= b+EPS;\r\n}\r\n\r\nfunction neq(a,b){\r\n  return !eq(a,b);\r\n}\r\n\r\n\r\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\r\n  if(t < 0 || t > 1)\r\n    return false;\r\n  \r\n  if(neq(v-s,0)){\r\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\r\n    if(x < 0 || x > 1)\r\n      return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\r\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\r\n\r\n    let t;\r\n    \r\n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\r\n    if(neq(tden, 0)){\r\n      if(neq(q-r, 0)){\r\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\r\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\r\n        if(sq >= 0){\r\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\r\n  \r\n          t = (t1-0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n  \r\n          t = (t1+0.5*Math.sqrt(sq))/tden;\r\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n            return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\r\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\r\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\r\n      t = t/(2*tden);\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\r\n      t = (2*e-f-v)/(2*(e-f));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\r\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\r\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\r\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\r\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\r\n{\r\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\r\n      return true;\r\n    \r\n    const centerx = (r1x+r2x)/2;\r\n    const centery = (r1y+r2y)/2;\r\n    \r\n    const diffx = r1x-r2x;\r\n    const diffy = r1y-r2y;\r\n    \r\n    //performance optimalization based on distance\r\n    let diff2xy = diffx*diffx + diffy*diffy;\r\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\r\n    if(dist2*4 > diff2xy)\r\n      return false;\r\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\r\n      return true;\r\n\r\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\r\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\r\n}\r\n\r\nexport {\r\n        EPS, \r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      };\r\n","/*\r\n (c) 2015, Vladimir Agafonkin\r\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\r\n https://github.com/mourner/rbush\r\n*/\r\n\r\n\r\nfunction rbush(maxEntries, format) {\r\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\r\n\r\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\r\n    this._maxEntries = Math.max(4, maxEntries || 9);\r\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\r\n\r\n    if (format) {\r\n        this._initFormat(format);\r\n    }\r\n\r\n    this.clear();\r\n}\r\n\r\nrbush.prototype = {\r\n\r\n    all: function () {\r\n        return this._all(this.data, []);\r\n    },\r\n\r\n    search: function (bbox) {\r\n\r\n        var node = this.data,\r\n            result = [],\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return result;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf) result.push(child);\r\n                    else if (contains(bbox, childBBox)) this._all(child, result);\r\n                    else nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    collides: function (bbox) {\r\n\r\n        var node = this.data,\r\n            toBBox = this.toBBox;\r\n\r\n        if (!intersects(bbox, node.bbox)) return false;\r\n\r\n        var nodesToSearch = [],\r\n            i, len, child, childBBox;\r\n\r\n        while (node) {\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n\r\n                child = node.children[i];\r\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\r\n\r\n                if (intersects(bbox, childBBox)) {\r\n                    if (node.leaf || contains(bbox, childBBox)) return true;\r\n                    nodesToSearch.push(child);\r\n                }\r\n            }\r\n            node = nodesToSearch.pop();\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    load: function (data) {\r\n        if (!(data && data.length)) return this;\r\n\r\n        if (data.length < this._minEntries) {\r\n            for (var i = 0, len = data.length; i < len; i++) {\r\n                this.insert(data[i]);\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // recursively build the tree with the given data from stratch using OMT algorithm\r\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\r\n\r\n        if (!this.data.children.length) {\r\n            // save as is if tree is empty\r\n            this.data = node;\r\n\r\n        } else if (this.data.height === node.height) {\r\n            // split root if trees have the same height\r\n            this._splitRoot(this.data, node);\r\n\r\n        } else {\r\n            if (this.data.height < node.height) {\r\n                // swap trees if inserted one is bigger\r\n                var tmpNode = this.data;\r\n                this.data = node;\r\n                node = tmpNode;\r\n            }\r\n\r\n            // insert the small tree into the large tree at appropriate level\r\n            this._insert(node, this.data.height - node.height - 1, true);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    insert: function (item) {\r\n        if (item) this._insert(item, this.data.height - 1);\r\n        return this;\r\n    },\r\n\r\n    clear: function () {\r\n        this.data = {\r\n            children: [],\r\n            height: 1,\r\n            bbox: empty(),\r\n            leaf: true\r\n        };\r\n        return this;\r\n    },\r\n\r\n    remove: function (item) {\r\n        if (!item) return this;\r\n\r\n        var node = this.data,\r\n            bbox = this.toBBox(item),\r\n            path = [],\r\n            indexes = [],\r\n            i, parent, index, goingUp;\r\n\r\n        // depth-first iterative tree traversal\r\n        while (node || path.length) {\r\n\r\n            if (!node) { // go up\r\n                node = path.pop();\r\n                parent = path[path.length - 1];\r\n                i = indexes.pop();\r\n                goingUp = true;\r\n            }\r\n\r\n            if (node.leaf) { // check current node\r\n                index = node.children.indexOf(item);\r\n\r\n                if (index !== -1) {\r\n                    // item found, remove the item and condense tree upwards\r\n                    node.children.splice(index, 1);\r\n                    path.push(node);\r\n                    this._condense(path);\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\r\n                path.push(node);\r\n                indexes.push(i);\r\n                i = 0;\r\n                parent = node;\r\n                node = node.children[0];\r\n\r\n            } else if (parent) { // go right\r\n                i++;\r\n                node = parent.children[i];\r\n                goingUp = false;\r\n\r\n            } else node = null; // nothing found\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    toBBox: function (item) { return item; },\r\n\r\n    compareMinX: function (a, b) { return a[0] - b[0]; },\r\n    compareMinY: function (a, b) { return a[1] - b[1]; },\r\n\r\n    toJSON: function () { return this.data; },\r\n\r\n    fromJSON: function (data) {\r\n        this.data = data;\r\n        return this;\r\n    },\r\n\r\n    _all: function (node, result) {\r\n        var nodesToSearch = [];\r\n        while (node) {\r\n            if (node.leaf) result.push.apply(result, node.children);\r\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\r\n\r\n            node = nodesToSearch.pop();\r\n        }\r\n        return result;\r\n    },\r\n\r\n    _build: function (items, left, right, height) {\r\n\r\n        var N = right - left + 1,\r\n            M = this._maxEntries,\r\n            node;\r\n\r\n        if (N <= M) {\r\n            // reached leaf level; return leaf\r\n            node = {\r\n                children: items.slice(left, right + 1),\r\n                height: 1,\r\n                bbox: null,\r\n                leaf: true\r\n            };\r\n            calcBBox(node, this.toBBox);\r\n            return node;\r\n        }\r\n\r\n        if (!height) {\r\n            // target height of the bulk-loaded tree\r\n            height = Math.ceil(Math.log(N) / Math.log(M));\r\n\r\n            // target number of root entries to maximize storage utilization\r\n            M = Math.ceil(N / Math.pow(M, height - 1));\r\n        }\r\n\r\n        node = {\r\n            children: [],\r\n            height: height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        // split the items into M mostly square tiles\r\n\r\n        var N2 = Math.ceil(N / M),\r\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\r\n            i, j, right2, right3;\r\n\r\n        multiSelect(items, left, right, N1, this.compareMinX);\r\n\r\n        for (i = left; i <= right; i += N1) {\r\n\r\n            right2 = Math.min(i + N1 - 1, right);\r\n\r\n            multiSelect(items, i, right2, N2, this.compareMinY);\r\n\r\n            for (j = i; j <= right2; j += N2) {\r\n\r\n                right3 = Math.min(j + N2 - 1, right2);\r\n\r\n                // pack each entry recursively\r\n                node.children.push(this._build(items, j, right3, height - 1));\r\n            }\r\n        }\r\n\r\n        calcBBox(node, this.toBBox);\r\n\r\n        return node;\r\n    },\r\n\r\n    _chooseSubtree: function (bbox, node, level, path) {\r\n\r\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\r\n\r\n        while (true) {\r\n            path.push(node);\r\n\r\n            if (node.leaf || path.length - 1 === level) break;\r\n\r\n            minArea = minEnlargement = Infinity;\r\n\r\n            for (i = 0, len = node.children.length; i < len; i++) {\r\n                child = node.children[i];\r\n                area = bboxArea(child.bbox);\r\n                enlargement = enlargedArea(bbox, child.bbox) - area;\r\n\r\n                // choose entry with the least area enlargement\r\n                if (enlargement < minEnlargement) {\r\n                    minEnlargement = enlargement;\r\n                    minArea = area < minArea ? area : minArea;\r\n                    targetNode = child;\r\n\r\n                } else if (enlargement === minEnlargement) {\r\n                    // otherwise choose one with the smallest area\r\n                    if (area < minArea) {\r\n                        minArea = area;\r\n                        targetNode = child;\r\n                    }\r\n                }\r\n            }\r\n\r\n            node = targetNode || node.children[0];\r\n        }\r\n\r\n        return node;\r\n    },\r\n\r\n    _insert: function (item, level, isNode) {\r\n\r\n        var toBBox = this.toBBox,\r\n            bbox = isNode ? item.bbox : toBBox(item),\r\n            insertPath = [];\r\n\r\n        // find the best node for accommodating the item, saving all nodes along the path too\r\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\r\n\r\n        // put the item into the node\r\n        node.children.push(item);\r\n        extend(node.bbox, bbox);\r\n\r\n        // split on node overflow; propagate upwards if necessary\r\n        while (level >= 0) {\r\n            if (insertPath[level].children.length > this._maxEntries) {\r\n                this._split(insertPath, level);\r\n                level--;\r\n            } else break;\r\n        }\r\n\r\n        // adjust bboxes along the insertion path\r\n        this._adjustParentBBoxes(bbox, insertPath, level);\r\n    },\r\n\r\n    // split overflowed node into two\r\n    _split: function (insertPath, level) {\r\n\r\n        var node = insertPath[level],\r\n            M = node.children.length,\r\n            m = this._minEntries;\r\n\r\n        this._chooseSplitAxis(node, m, M);\r\n\r\n        var splitIndex = this._chooseSplitIndex(node, m, M);\r\n\r\n        var newNode = {\r\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\r\n            height: node.height,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n\r\n        if (node.leaf) newNode.leaf = true;\r\n\r\n        calcBBox(node, this.toBBox);\r\n        calcBBox(newNode, this.toBBox);\r\n\r\n        if (level) insertPath[level - 1].children.push(newNode);\r\n        else this._splitRoot(node, newNode);\r\n    },\r\n\r\n    _splitRoot: function (node, newNode) {\r\n        // split root node\r\n        this.data = {\r\n            children: [node, newNode],\r\n            height: node.height + 1,\r\n            bbox: null,\r\n            leaf: false\r\n        };\r\n        calcBBox(this.data, this.toBBox);\r\n    },\r\n\r\n    _chooseSplitIndex: function (node, m, M) {\r\n\r\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\r\n\r\n        minOverlap = minArea = Infinity;\r\n\r\n        for (i = m; i <= M - m; i++) {\r\n            bbox1 = distBBox(node, 0, i, this.toBBox);\r\n            bbox2 = distBBox(node, i, M, this.toBBox);\r\n\r\n            overlap = intersectionArea(bbox1, bbox2);\r\n            area = bboxArea(bbox1) + bboxArea(bbox2);\r\n\r\n            // choose distribution with minimum overlap\r\n            if (overlap < minOverlap) {\r\n                minOverlap = overlap;\r\n                index = i;\r\n\r\n                minArea = area < minArea ? area : minArea;\r\n\r\n            } else if (overlap === minOverlap) {\r\n                // otherwise choose distribution with minimum area\r\n                if (area < minArea) {\r\n                    minArea = area;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    },\r\n\r\n    // sorts node children by the best axis for split\r\n    _chooseSplitAxis: function (node, m, M) {\r\n\r\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\r\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\r\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\r\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\r\n\r\n        // if total distributions margin value is minimal for x, sort by minX,\r\n        // otherwise it's already sorted by minY\r\n        if (xMargin < yMargin) node.children.sort(compareMinX);\r\n    },\r\n\r\n    // total margin of all possible split distributions where each node is at least m full\r\n    _allDistMargin: function (node, m, M, compare) {\r\n\r\n        node.children.sort(compare);\r\n\r\n        var toBBox = this.toBBox,\r\n            leftBBox = distBBox(node, 0, m, toBBox),\r\n            rightBBox = distBBox(node, M - m, M, toBBox),\r\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\r\n            i, child;\r\n\r\n        for (i = m; i < M - m; i++) {\r\n            child = node.children[i];\r\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(leftBBox);\r\n        }\r\n\r\n        for (i = M - m - 1; i >= m; i--) {\r\n            child = node.children[i];\r\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\r\n            margin += bboxMargin(rightBBox);\r\n        }\r\n\r\n        return margin;\r\n    },\r\n\r\n    _adjustParentBBoxes: function (bbox, path, level) {\r\n        // adjust bboxes along the given tree path\r\n        for (var i = level; i >= 0; i--) {\r\n            extend(path[i].bbox, bbox);\r\n        }\r\n    },\r\n\r\n    _condense: function (path) {\r\n        // go through the path, removing empty nodes and updating bboxes\r\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\r\n            if (path[i].children.length === 0) {\r\n                if (i > 0) {\r\n                    siblings = path[i - 1].children;\r\n                    siblings.splice(siblings.indexOf(path[i]), 1);\r\n\r\n                } else this.clear();\r\n\r\n            } else calcBBox(path[i], this.toBBox);\r\n        }\r\n    },\r\n\r\n    _initFormat: function (format) {\r\n        // data format (minX, minY, maxX, maxY accessors)\r\n\r\n        // uses eval-type function compilation instead of just accepting a toBBox function\r\n        // because the algorithms are very sensitive to sorting functions performance,\r\n        // so they should be dead simple and without inner calls\r\n\r\n        var compareArr = ['return a', ' - b', ';'];\r\n\r\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\r\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\r\n\r\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\r\n    }\r\n};\r\n\r\n\r\n// calculate node's bbox from bboxes of its children\r\nfunction calcBBox(node, toBBox) {\r\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\r\n}\r\n\r\n// min bounding rectangle of node children from k to p-1\r\nfunction distBBox(node, k, p, toBBox) {\r\n    var bbox = empty();\r\n\r\n    for (var i = k, child; i < p; i++) {\r\n        child = node.children[i];\r\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\r\n    }\r\n\r\n    return bbox;\r\n}\r\n\r\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\r\n\r\nfunction extend(a, b) {\r\n    a[0] = Math.min(a[0], b[0]);\r\n    a[1] = Math.min(a[1], b[1]);\r\n    a[2] = Math.max(a[2], b[2]);\r\n    a[3] = Math.max(a[3], b[3]);\r\n    return a;\r\n}\r\n\r\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\r\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\r\n\r\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\r\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\r\n\r\nfunction enlargedArea(a, b) {\r\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\r\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\r\n}\r\n\r\nfunction intersectionArea(a, b) {\r\n    var minX = Math.max(a[0], b[0]),\r\n        minY = Math.max(a[1], b[1]),\r\n        maxX = Math.min(a[2], b[2]),\r\n        maxY = Math.min(a[3], b[3]);\r\n\r\n    return Math.max(0, maxX - minX) *\r\n           Math.max(0, maxY - minY);\r\n}\r\n\r\nfunction contains(a, b) {\r\n    return a[0] <= b[0] &&\r\n           a[1] <= b[1] &&\r\n           b[2] <= a[2] &&\r\n           b[3] <= a[3];\r\n}\r\n\r\nfunction intersects(a, b) {\r\n    return b[0] <= a[2] &&\r\n           b[1] <= a[3] &&\r\n           b[2] >= a[0] &&\r\n           b[3] >= a[1];\r\n}\r\n\r\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\r\n// combines selection algorithm with binary divide & conquer approach\r\n\r\nfunction multiSelect(arr, left, right, n, compare) {\r\n    var stack = [left, right],\r\n        mid;\r\n\r\n    while (stack.length) {\r\n        right = stack.pop();\r\n        left = stack.pop();\r\n\r\n        if (right - left <= n) continue;\r\n\r\n        mid = left + Math.ceil((right - left) / n / 2) * n;\r\n        select(arr, left, right, mid, compare);\r\n\r\n        stack.push(left, mid, mid, right);\r\n    }\r\n}\r\n\r\n// Floyd-Rivest selection algorithm:\r\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\r\nfunction select(arr, left, right, k, compare) {\r\n    var n, i, z, s, sd, newLeft, newRight, t, j;\r\n\r\n    while (right > left) {\r\n        if (right - left > 600) {\r\n            n = right - left + 1;\r\n            i = k - left + 1;\r\n            z = Math.log(n);\r\n            s = 0.5 * Math.exp(2 * z / 3);\r\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\r\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\r\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\r\n            select(arr, newLeft, newRight, k, compare);\r\n        }\r\n\r\n        t = arr[k];\r\n        i = left;\r\n        j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (compare(arr[i], t) < 0) i++;\r\n            while (compare(arr[j], t) > 0) j--;\r\n        }\r\n\r\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nexport default rbush;","import rbush from './rbush' ;\r\nimport ccNetViz_geomutils from '../geomutils' ;\r\nimport ccNetViz_utils from '../utils' ;\r\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\r\nimport {\r\n        EPS,\r\n        bezierIntersectsRect, \r\n        bezierIntersectsLine, \r\n        lineIntersectsRect, \r\n        rectIntersectsRect, \r\n        pointInRect, \r\n        distance2ToBezier, \r\n        distance2, \r\n        pDistance2, \r\n        getBBFromPoints,\r\n        eq,\r\n        neq\r\n      } from './geomtools';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Author: Aleš Saska - http://alessaska.cz/\r\n */\r\n\r\n\r\n\r\nlet ct = {};\r\nfunction getEdgeShift(context, screensize, e, ct){\r\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\r\n  \r\n  \r\n  //compute all transformations made in the vertex shader\r\n  let ctx,cty,citx,city;\r\n  \r\n  ctx = -ct.y;\r\n  cty = ct.x * context.aspect2;\r\n  \r\n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\r\n  \r\n  if(eq(len2, 0)){\r\n    ctx = 0;\r\n    cty = 0;\r\n  }else{\r\n    let len = Math.sqrt(len2);\r\n    ctx *= context.curveExc * 0.25 * screensize / len;\r\n    cty *= context.curveExc * 0.25 * screensize / len;\r\n  }\r\n\r\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\r\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\r\n  citx = -ct.cy * 0.5 * sizex;\r\n  city = ct.cx * 0.5 * sizey;\r\n  \r\n  ct.x = ctx + citx;\r\n  ct.y = cty + city;\r\n}\r\n\r\nclass Node{\r\n  constructor(n){\r\n    this.e = n;\r\n  };\r\n  get isNode(){\r\n    return true;\r\n  };\r\n  getBBox(){\r\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2){\r\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context){\r\n    return distance2(x,y,this.e.x,this.e.y);\r\n  };\r\n}\r\n\r\nclass Label{\r\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\r\n    this.e = n;\r\n    this.pos = textpos;\r\n    this.style = style;\r\n    this.fontSize = fontSize;\r\n    this.isSDF = isSDF;\r\n    this.getLabelSize = getLabelSize;\r\n  };\r\n  get isLabel(){\r\n    return true;\r\n  };\r\n  getTextPos(context,size){\r\n    let x = this.e.x;\r\n    let y = this.e.y;\r\n    \r\n    let x1,y1,x2,y2;\r\n    x1 = x2 = x;\r\n    y1 = y2 = y;\r\n    \r\n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\r\n\r\n    let fontScale = wantedSize / this.fontSize;\r\n    if(wantedSize === 0){ fontScale = 0; };\r\n\r\n    let step = (edge, x) => (x < edge ? 0 : 1);\r\n\r\n\r\n    const offset = 0.5 * context.nodeSize;    \r\n    const MAX =  10.;\r\n    const MIN = -10.;\r\n    let bbox = [MAX, MAX, MIN, MIN];\r\n    \r\n    \r\n    this.pos.forEach((c) => {\r\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\r\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\r\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\r\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\r\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\r\n      \r\n      bbox[0] = Math.min(x1,bbox[0]);\r\n      bbox[1] = Math.min(y1,bbox[1]);\r\n      bbox[2] = Math.max(x2,bbox[2]);\r\n      bbox[3] = Math.max(y2,bbox[3]);\r\n    });\r\n    \r\n    return bbox;\r\n  };\r\n  getBBox(context){\r\n    let bb = this.getTextPos(context,1);\r\n    bb[0] = Math.min(bb[0],this.e.x);\r\n    bb[1] = Math.min(bb[1],this.e.y);\r\n    bb[2] = Math.max(bb[2],this.e.x);\r\n    bb[3] = Math.max(bb[3],this.e.y);\r\n    return bb;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2,context,size){\r\n    let t = this.getTextPos(context,size);\r\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let t = this.getTextPos(context, size);\r\n\r\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\r\n      return 0;\r\n    \r\n    //minimum from distance from corners or distance from borders\r\n    return Math.min(\r\n      distance2(t[0],t[1]),\r\n      distance2(t[2],t[3]),\r\n      distance2(t[0],t[3]),\r\n      distance2(t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\r\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\r\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\r\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \r\n    );\r\n  };\r\n}\r\n\r\nclass Line{\r\n  constructor(l){\r\n    this.e = l;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getPoints(context, size){\r\n    let x1,y1,x2,y2;\r\n    \r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n    \r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y;\r\n    \r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    return [x1,y1,x2,y2];\r\n  };\r\n  getBBox(context, size){\r\n    let p = this.getPoints(context, size);\r\n    \r\n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y, context, size){\r\n    let p = this.getPoints(context, size);\r\n\r\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\r\n  };\r\n}\r\n\r\nclass Circle{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, screensize){\r\n    let x1,y1,s;\r\n    s = ccNetViz_geomutils.edgeSource(this.e);\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n\r\n    let size = 2.5 * context.nodeSize * screensize;\r\n    let xsize = size / context.width / 2;\r\n    let ysize = size / context.height / 2;\r\n\r\n    let d = s.y < 0.5 ? 1 : -1;\r\n\r\n    getEdgeShift(context, screensize, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    \r\n    return [\r\n      x1,\r\n      y1,\r\n      x1 + xsize*1,\r\n      y1 + ysize*d,\r\n      x1,\r\n      y1 + ysize*1.25*d,\r\n      x1 - xsize*1,\r\n      y1 + ysize*d\r\n    ];\r\n  };\r\n  getBBox(context, size){\r\n    let v = this.getBezierPoints(context, size);\r\n    \r\n    return getBBFromPoints(v);\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context,size);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\r\n  };\r\n  dist2(x,y,context,size){\r\n    let v = this.getBezierPoints(context,size);\r\n\r\n    //circle is just 2 bezier curves :)\r\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\r\n\r\n    return Math.min(d1,d2);\r\n  };\r\n}\r\n\r\nclass Curve{\r\n  constructor(c){\r\n    this.e = c;\r\n  };\r\n  get isEdge(){\r\n    return true;\r\n  };\r\n  getBezierPoints(context, size, normalize){\r\n    let x1,x2,y1,y2;\r\n    let s = ccNetViz_geomutils.edgeSource(this.e);\r\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\r\n\r\n    x1 = s.x;\r\n    y1 = s.y;\r\n    x2 = t.x;\r\n    y2 = t.y; \r\n    \r\n    let d = normalize(s, t);\r\n    \r\n    let n2 = d.y;\r\n    let n3 = context.aspect2*-d.x;\r\n\r\n    let x = context.width * n2;\r\n    let y = context.height* n3;\r\n    let l = Math.sqrt(x*x+y*y)*2;\r\n\r\n    n2 *= context.curveExc*size/l;\r\n    n3 *= context.curveExc*size/l;\r\n\r\n    getEdgeShift(context, size, s.e, ct);\r\n    x1 += ct.x;\r\n    y1 += ct.y;\r\n    getEdgeShift(context, size, t.e, ct);\r\n    x2 += ct.x;\r\n    y2 += ct.y;\r\n\r\n    let ret = [\r\n      x1,\r\n      y1,\r\n      (x1+x2)/2 + n2,\r\n      (y1+y2)/2 + n3,\r\n      x2,\r\n      y2\r\n    ];\r\n    return ret;\r\n  };\r\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\r\n  };\r\n  getBBox(context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return getBBFromPoints(v);\r\n  };\r\n  dist2(x,y, context, size, normalize){\r\n    let v = this.getBezierPoints(context, size, normalize);\r\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\r\n  };\r\n}\r\n\r\n\r\nfunction sortByDistances(e1, e2){\r\n  return e1.dist2 - e2.dist2;\r\n}\r\n\r\n\r\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\r\n\r\nexport default class spatialIndex{\r\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\r\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\r\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\r\n    \r\n    this.texts = texts;\r\n    this.normalize = normalize;\r\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\r\n    let i = 0, d = [];\r\n\r\n    let addEntity = (e, d, i) => {\r\n      d[i] = e.getBBox(c, size, normalize);\r\n      d[i].push(e);\r\n      return e;\r\n    };\r\n    \r\n    nodes.forEach((n) => {\r\n      t.nodes.push(addEntity(new Node(n), d, i++));\r\n    });\r\n\r\n    lines.forEach((l) => {\r\n      t.lines.push(addEntity(new Line(l), d, i++));\r\n    });\r\n\r\n    circles.forEach((c) => {\r\n      t.circles.push(addEntity(new Circle(c), d, i++));\r\n    });\r\n    \r\n    curves.forEach((c) => {\r\n      t.curves.push(addEntity(new Curve(c), d, i++));\r\n    });\r\n\r\n\r\n    let sd = {};\r\n    let sdi = {};\r\n\r\n\r\n    //labels position could differ by style >> must partition by it\r\n    for(let style in nodesParts){\r\n      let nodes = nodesParts[style];\r\n\r\n\r\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\r\n      let textEngine = texts.getEngine(ns.font);\r\n      textEngine.setFont(ns.font);\r\n      const fontSize = textEngine.fontSize;\r\n      const isSDF = textEngine.isSDF;\r\n\r\n      let sd_n = (sd[style] || (sd[style] = []));\r\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\r\n\r\n      //biggest size in which the text is shown\r\n      c.size = getLabelHideScreen(c, ns.label || {});\r\n      nodes.forEach((n) => {\r\n        let textpos = textEngine.get(n.label, n.x, n.y);\r\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\r\n      });\r\n\r\n      sdi[style] = sdi_n;\r\n    }\r\n\r\n    this.rbushtree_s = {};\r\n    for(let style in sd){\r\n        let rb = this.rbushtree_s[style] = rbush();\r\n        rb.load(sd[style]);\r\n    }\r\n\r\n    //tree initialization\r\n    this.rbushtree = rbush();\r\n    this.rbushtree.load(d);\r\n    \r\n    \r\n    //restore the size of scale (loosen outer the upper bound)\r\n    c.size = oldsize;\r\n  }\r\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\r\n    if(nodes && e.isNode){\r\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(edges && e.isEdge){\r\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n    if(labels && e.isLabel){\r\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\r\n    }\r\n  }\r\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\r\n    if(x1 > x2){\r\n      let p = x1;\r\n      x1 = x2;\r\n      x2 = p;\r\n    }\r\n    if(y1 > y2){\r\n      let p = y1;\r\n      y1 = y2;\r\n      y2 = p;\r\n    }\r\n\r\n    \r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let x = (x1+x2)/2;\r\n    let y = (y1+y2)/2;\r\n\r\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n    \r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;    \r\n  }\r\n  find(context, x,y, radius, size, nodes, edges, labels){\r\n    let ret = {};\r\n    if(edges) ret.edges = [];\r\n    if(nodes) ret.nodes = [];\r\n    if(labels) ret.labels = [];\r\n\r\n    let xradius = radius;\r\n    let yradius = radius;\r\n\r\n    let radius2 = radius*radius;\r\n\r\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\r\n    if(labels){\r\n        for(let s in this.rbushtree_s){\r\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < data.length; i++){\r\n      let e = data[i][4];\r\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\r\n      if(dist2 > radius2)\r\n        continue;\r\n\r\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\r\n    }\r\n\r\n    for(let k in ret){\r\n      ret[k].sort(sortByDistances);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  update(context, t, i, v){\r\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\r\n    let size = 1;\r\n\r\n    this.rbushtree.remove(this.types[t][i]);\r\n\r\n    let e = new tConst[t](v);\r\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\r\n    arr.push(e);\r\n\r\n    this.rbushtree.insert(this.types[t][i] = arr);\r\n  }\r\n}","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n    this._size = 1024;\r\n\r\n    \r\n    this._canvas = document.createElement(\"canvas\");\r\n    this._canvas.width = this._canvas.height = this._size;\r\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\r\n    this._canvas.style.display = \"none\";\r\n    this._el = document.body.appendChild(this._canvas);\r\n\r\n    this._context = this._canvas.getContext('2d');\r\n    this._context.fillStyle = \"white\";\r\n    this._context.textAlign = \"left\";\r\n    this._context.textBaseline = \"top\";\r\n\r\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\r\n\r\n    this.texture = this._gl.createTexture();\r\n    \r\n  }\r\n\r\n  clear() {\r\n    this._rendered = {};\r\n    this._context.clearRect(0, 0, this._size, this._size);\r\n    this._height = this._x = this._y = 0;\r\n  }\r\n\r\n  setFont (font) {\r\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\r\n    \r\n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\r\n    this._context.font = fontstr;\r\n    this._x = 0;\r\n    this._y += this._height;\r\n    this._height = font ? font.size + 1 : NaN;\r\n  }\r\n  \r\n  get fontSize(){\r\n    return this._height - 1;\r\n  }\r\n  \r\n  getTexture (style, onLoad){\r\n    onLoad();\r\n    return this.texture;\r\n  }\r\n\r\n  _getText (text) {\r\n    let result = this._texts[text];\r\n    if (!result) {\r\n        let width = this._context.measureText(text).width;\r\n        if (this._x + width > this._size) {\r\n            this._x = 0;\r\n            this._y += this._height;\r\n        }\r\n        this._context.fillText(text, this._x, this._y);\r\n        this._texts[text] = result = {\r\n            width: width,\r\n            height: this._height,\r\n            left: this._x / this._size,\r\n            right: (this._x + width) / this._size,\r\n            top: this._y / this._size,\r\n            bottom: (this._y + this._height) / this._size\r\n        };\r\n        this._x += width;\r\n    }\r\n    return result;\r\n  }\r\n  \r\n  get (text, x, y) {\r\n    let c = this._getText(text);\r\n    \r\n    let dx = x <= 0.5 ? 0 : -c.width ;\r\n    let dy = y <= 0.5 ? 0 : -c.height;\r\n    \r\n    return [{\r\n        width:  c.width,\r\n        height: c.height,\r\n        left:   c.left,\r\n        right:  c.right,\r\n        top:    c.top,\r\n        bottom: c.bottom,\r\n        dx: dx,\r\n        dy: dy\r\n      }];\r\n  }\r\n  \r\n  steps (text) {\r\n    return 1;\r\n  }\r\n\r\n  bind () {\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\r\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\r\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\r\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\r\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\r\n  }\r\n  \r\n  remove () {\r\n    this._context && this._el.parentNode.removeChild(this._el);\r\n  }\r\n\r\n};","'use strict';\r\n\r\nimport ShelfPack from 'shelf-pack';\r\n\r\n// size of the spritesheet generated in pixels\r\nconst DEFAULT_SIZE = 1024;\r\n\r\n// multiplication factor by which spritesheet can grow, if shelfpack is full\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// max size to contain all the characters in the spritesheet\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\nconst MAX_SIZE = 2048;\r\n\r\nexport default class GlyphAtlas {\r\n    constructor(gl, resetCache) {\r\n\r\n        // setting width to default\r\n        this.width = DEFAULT_SIZE;\r\n\r\n        // setting height to default\r\n        this.height = DEFAULT_SIZE;\r\n\r\n        // resets cached glyphs in sdf.js before making resize() call\r\n        this._resetCache = resetCache;\r\n\r\n        // creating an empty spritesheet to pack glyphs\r\n        this.bin = new ShelfPack(this.width, this.height);\r\n\r\n        /**\r\n         * stores information coordinate about character\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": {\r\n         *      id, x, y, h, w, maxh, maxw, ref_count\r\n         *  }\r\n         */\r\n        this.index = {};\r\n\r\n        /**\r\n         * stores list of character ids available in atlas.js\r\n         *\r\n         * (Object):\r\n         *  \"fontstring#charid\": [\"charid\"]\r\n         */\r\n        this.ids = {};\r\n\r\n        // webgl rendering context\r\n        this.gl = gl;\r\n\r\n        // initialized to empty Uint8Array buffer to store texture data\r\n        this.data = new Uint8Array(this.width * this.height);\r\n    }\r\n\r\n\r\n    // refreshes texture of characters when updateTexture() is called\r\n    _createTexture() {\r\n        //\r\n        this.dirty = false;\r\n\r\n        // standard creation of webgl texture\r\n        let gl = this.gl;\r\n        let texture = gl.createTexture();\r\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n        /**\r\n         * pixelStorei() (Func): specifies the pixel storage modes\r\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\r\n         */\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n        // standard interpolation Filters\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D, // target: A two-dimensional texture\r\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\r\n            gl.ALPHA, // internalFormat: only reads the alpha component\r\n            this.width, // width\r\n            this.height, // height\r\n            0, // border\r\n            gl.ALPHA, // format\r\n            gl.UNSIGNED_BYTE, // type\r\n            this.data // ImageData object\r\n        );\r\n\r\n\r\n        // Unbinding the buffer channel\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        // returning so formed texture\r\n        return texture;\r\n    }\r\n\r\n    // utility function that returns list of glyphs added\r\n    getGlyphs() {\r\n        const glyphs = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!glyphs[name]) glyphs[name] = [];\r\n            glyphs[name].push(id);\r\n        }\r\n        return glyphs;\r\n    }\r\n\r\n    // utility function that returns list of rects added\r\n    getRects() {\r\n        const rects = {};\r\n        let split,\r\n            name,\r\n            id;\r\n\r\n        for (const key in this.ids) {\r\n            split = key.split('#');\r\n            name = split[0];\r\n            id = split[1];\r\n\r\n            if (!rects[name]) rects[name] = {};\r\n            rects[name][id] = this.index[key];\r\n        }\r\n        return rects;\r\n    }\r\n\r\n    // main function of the module called from sdf.js\r\n    addGlyph(\r\n        id, // character id\r\n        name, // name of the font - \"fontstrong#range.pbf\"\r\n        glyph, // glyph object from sdf.js\r\n        buffer, // padding around glyph\r\n        fontSize,\r\n        markDirty //\r\n    ) {\r\n        if (!glyph) return null;\r\n\r\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\r\n        const key = `${name}#${glyph.id}`;\r\n\r\n        // if key is present in index and not present in ids then add it in ids\r\n        if (this.index[key]) {\r\n            if (this.ids[key].indexOf(id) < 0) {\r\n                this.ids[key].push(id);\r\n            }\r\n            return this.index[key];\r\n        }\r\n\r\n        const bufferedWidth = glyph.width + buffer * 2;\r\n        const bufferedHeight = glyph.height + buffer * 2;\r\n\r\n        // Add a 1px border around every image.\r\n        // 'padding' variable is basically border\r\n        // buffer variable is basically padding\r\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\r\n        // const padding = 12;\r\n        let packWidth = bufferedWidth + 2 * padding;\r\n        let packHeight = bufferedHeight + 2 * padding;\r\n\r\n        // Increase to next number divisible by 4, but at least 1.\r\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\r\n        packWidth += (4 - packWidth % 4);\r\n        packHeight += (4 - packHeight % 4);\r\n\r\n        let rect = this.bin.packOne(packWidth, packHeight);\r\n\r\n        // if the current size is not sufficient to contain all the characters in the texture\r\n        // then, expand (resize) it\r\n        if (!rect) {\r\n            this.resize();\r\n            rect = this.bin.packOne(packWidth, packHeight);\r\n            // if markDirty callback was passed then execute it\r\n            markDirty && markDirty();\r\n        }\r\n\r\n        // if still not found then there is some problem, simply return null to indicate problem\r\n        if (!rect) {\r\n            return null;\r\n        }\r\n\r\n\r\n        this.index[key] = rect;\r\n        this.ids[key] = [id];\r\n\r\n        // if bitmap corresponding to the glyph object exists then, add the glyph\r\n        if (glyph.bitmap) {\r\n            const target = this.data;\r\n            const source = glyph.bitmap;\r\n            for (let y = 0; y < bufferedHeight; y++) {\r\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\r\n                const y2 = bufferedWidth * y;\r\n                for (let x = 0; x < bufferedWidth; x++) {\r\n                    target[y1 + x] = source[y2 + x];\r\n                }\r\n            }\r\n        }\r\n        this.dirty = true;\r\n        return rect;\r\n    }\r\n\r\n    // expands the size of the texture if all the characters were not contained in default size\r\n    resize() {\r\n        const prevWidth = this.width;\r\n        const prevHeight = this.height;\r\n\r\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\r\n\r\n        if (this._texture) {\r\n            if (this.gl) {\r\n                this.gl.deleteTexture(this._texture);\r\n            }\r\n            this._texture = null;\r\n        }\r\n\r\n        this.width *= SIZE_GROWTH_RATE;\r\n        this.height *= SIZE_GROWTH_RATE;\r\n        this.bin.resize(this.width, this.height);\r\n\r\n        const buf = new ArrayBuffer(this.width * this.height);\r\n        for (let i = 0; i < prevHeight; i++) {\r\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\r\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\r\n            dst.set(src);\r\n        }\r\n        this.data = new Uint8Array(buf);\r\n        this._resetCache();\r\n    }\r\n\r\n    bind(gl) {\r\n    }\r\n\r\n    // getter of texture from GlyphAtlas object\r\n    get texture() {\r\n        return this._texture;\r\n    }\r\n\r\n    updateTexture() {\r\n        let gl = this.gl;\r\n        if (!this._texture) {\r\n            this._texture = this._createTexture();\r\n        }\r\n\r\n        // if dirty functionality is true then:\r\n        if (this.dirty) {\r\n\r\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n\r\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n            // specifies a sub - rectangle of the current texture\r\n            gl.texSubImage2D(\r\n                gl.TEXTURE_2D,\r\n                0,\r\n                0,\r\n                0,\r\n                this.width,\r\n                this.height,\r\n                gl.ALPHA,\r\n                gl.UNSIGNED_BYTE,\r\n                this.data\r\n            );\r\n            gl.bindTexture(gl.TEXTURE_2D, null);\r\n            this.dirty = false;\r\n        }\r\n        return this._texture;\r\n    }\r\n};\r\n","/* Algorithm to trim the glyph and add padding to it */\r\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\r\n// Slicing the extra columns\r\n// Adding buffer space on the sides\r\n\r\nexport default class {\r\n    constructor(buffer) {\r\n        if (buffer == undefined) this.buffer = 0;\r\n        else this.buffer = buffer;\r\n    }\r\n    \r\n    // find lb and rb of single row\r\n    _findRowBounds(a) { // a == array\r\n        let lb = 0, // left bound of individual row\r\n            rb = 0; // right bound of individual row\r\n        \r\n        const threshold = 170;\r\n            \r\n        for (let i = 0; i < a.length; i++) {\r\n            if (a[i] > threshold) {\r\n                lb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!lb) lb = a.length;\r\n\r\n        for (let i = a.length; i > -1; i--) {\r\n            if (a[i] > threshold) {\r\n                rb = i;\r\n                break;\r\n            }\r\n        }\r\n        if (!rb) rb = -1;\r\n\r\n        return [lb, rb];\r\n    }\r\n\r\n    _findGlyphBounds(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n        let currentRow = [];\r\n\r\n        let lbs = [], // row left bounds\r\n            rbs = []; // row right bounds    \r\n        let lb = -1,\r\n            rb = glyphData.length;\r\n        \r\n        // iterate through every row\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            // slice out the array\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            var res = this._findRowBounds(currentRow);\r\n            lbs.push(res[0]);\r\n            rbs.push(res[1]);\r\n        }\r\n\r\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\r\n        lb = Math.min(...lbs);\r\n        rb = Math.max(...rbs);\r\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\r\n        return [lb, rb];\r\n    }\r\n\r\n    process(glyph) {\r\n        const glyphData = glyph.bitmap;\r\n        const numCols = glyph.width;\r\n\r\n        const bounds = this._findGlyphBounds(glyph);\r\n        const lb = bounds[0];\r\n        const rb = bounds[1];\r\n\r\n        const buffer = this.buffer;\r\n        // const buffer = 20;\r\n        // const buffer = 1;\r\n        // const buffer = 0;\r\n\r\n        var newData = [];\r\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\r\n        var newWidth = (rb - lb + 1) + buffer * 2;\r\n        // var newWidth = (rb - lb + 1);\r\n\r\n        // iterate through every row\r\n        let currentRow = [];\r\n        for (let i = 0; i < glyphData.length; i += numCols) {\r\n            currentRow = glyphData.slice(i, i + numCols)\r\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\r\n            newData.push(\r\n                // 255,\r\n                ...bufferCol, //returns array of zeros\r\n                ...currentRow.slice(lb, rb + 1),\r\n                ...bufferCol, //returns array of zeros\r\n                // 255,\r\n            );\r\n        }\r\n\r\n        // JS passes objects by reference. Therefore,\r\n        glyph.bitmap = new Uint8ClampedArray(newData);\r\n        glyph.width = newWidth;\r\n        glyph.advance = newWidth;\r\n    }    \r\n    \r\n} // ends class","import GlyphAtlas from './atlas';\r\nimport SpriteGenerator from './spriteGenerator';\r\n\r\n/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: Aleš Saska\r\n */\r\n\r\n\r\n// A simplified representation of the glyph containing only the properties needed for shaping.\r\nclass SimpleGlyph {\r\n  constructor(glyph, rect, buffer) {\r\n    const padding = 1;\r\n    this.advance = glyph.advance;\r\n    this.left = glyph.left - buffer - padding;\r\n    this.top = glyph.top + buffer + padding;\r\n    this.rect = rect;\r\n  }\r\n}\r\n\r\n\r\n// Multiplication factor by which the size will grow\r\nconst SIZE_GROWTH_RATE = 4;\r\n\r\n// Size in which we try to contian the glyphs\r\nconst DEFAULT_SIZE = 512;\r\n\r\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\r\n// Maybe the maximum size allowed of the atlas\r\nconst MAX_SIZE = 2048;\r\n\r\n\r\n// Class for the text engine\r\n\r\n// invoked only when main configuration object, the \"font\" is mentioned and\r\n// the proper link to the font file is present\r\nexport default class {\r\n\r\n  // new text engine object takes 3 arguments\r\n  // 1. gl = Webgl context\r\n  // 2. files = File object programmed in src/dataSources/files.js\r\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\r\n\r\n  constructor(gl, files, textures) {\r\n    // Defines the dimensions of the texture\r\n    this.width = DEFAULT_SIZE;\r\n    this.height = DEFAULT_SIZE;\r\n\r\n    // Does nothing. Required in default.js text engine\r\n    this.clear();\r\n\r\n    // _files contains the file object of the glyph obtained via protobuf\r\n    this._files = files;\r\n\r\n    // Webgl Rendering context\r\n    this._gl = gl;\r\n\r\n    // Atlas object programmed in src/texts/sdf/atlas.js\r\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\r\n\r\n    // For every char_id, contains position, properties and buffer data\r\n    this._glyphs = {};\r\n\r\n    // For every char_id, contains position and properties\r\n    this._rects = {};\r\n\r\n    // glyphs that are cached from previous draw call of label for next one\r\n    this._cachedGlyphs = {};\r\n\r\n    // Client-Side builder of spritesheet\r\n    this.spriteGenerator = new SpriteGenerator();\r\n  }\r\n\r\n\r\n  // returns if we are using SDF TextEngine or not\r\n  get isSDF() {\r\n    return true;\r\n  }\r\n\r\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\r\n  clear() {\r\n  }\r\n\r\n\r\n  /**\r\n   * style = object: {\r\n   *   pbf: <url to the font file on the server>\r\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\r\n   * }\r\n   */\r\n  setFont(style) {\r\n    // curFont => current_font\r\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\r\n    this.curFont = style.pbf;\r\n  }\r\n\r\n  // FontSize is fixed and hardcoded i.e. 24\r\n  get fontSize() {\r\n    return 24;\r\n  }\r\n\r\n  //\r\n  getTexture(style, onLoad) {\r\n    // init with first most-used ASCII chars\r\n    for (let i = 0; i < 128; i++) {\r\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\r\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\r\n      this._getChar(String.fromCharCode(i));\r\n    }\r\n    onLoad && onLoad.apply(this, arguments);\r\n\r\n    // by calling this._getChar, we have updated the texture in this.atlas object\r\n    // following we are returning the updated object\r\n    // TODO: this code is not intuitive, we can write better\r\n    return this.atlas.texture;\r\n  }\r\n\r\n\r\n  /**\r\n   * Updates the 'texture' member variable of this.atlas object\r\n   *\r\n   * text = single character which is to be added to the texture of 'this.atlas'\r\n   * markDirty = ??? callback to be called if the size of the texture is resized\r\n   */\r\n  // TODO: parameter name should be changed from 'text' to 'char'\r\n  _getChar(text, markDirty) {\r\n    // curFont is same as style.pbf defined above\r\n    // TODO: We are doing this too many times in this code. Find a better mech.\r\n    const font = this.curFont;\r\n\r\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\r\n   // charCodeAt returns an integer between 0 and 65535 representing the UTF-16 code unit\r\n   // refer https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\r\n\r\n    const glyphID = text.charCodeAt(0);\r\n\r\n    // Padding around the glyph\r\n    const buffer = 0;\r\n\r\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\r\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\r\n    \r\n    const fontSize = this.spriteGenerator.fontSize;\r\n    \r\n    if (!this._rects[font]) this._rects[font] = {};\r\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\r\n      glyphID, // character id\r\n      this.curFont, // contains url of the font file on server\r\n      glyph, // glyph object\r\n      buffer, // padding\r\n      fontSize, // fontSize\r\n      markDirty, // callback function to be called if texture resizes\r\n    );\r\n\r\n    return (\r\n      cache[glyphID] ||\r\n      (cache[glyphID] = new SimpleGlyph(\r\n        glyph,\r\n        rect,\r\n        buffer)\r\n      )\r\n    );\r\n  }\r\n\r\n  get(text, x, y, markDirty) {\r\n    let width = 0;\r\n    let height = 0;\r\n\r\n    const horiBearingX = 3;\r\n    const horiBearingY = 2;\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      const char = this._getChar(text[i], markDirty);\r\n      const rect = char.rect || {};\r\n      \r\n     // Initially in the \"get\" function , height is undefined so , height = 0 , now rect.h and char.top\r\n     //decide the height and then max of them is taken each time to have a max height that fits each char\r\n\r\n      height = Math.max(height, rect.h - char.top);\r\n\r\n      // addiding const horiBearingx and char.advance wo get the total width of label\r\n\r\n      width += char.advance + horiBearingX;\r\n    }\r\n\r\n    \r\n   // x and y are the clipspace co-ordinates between 0 and 1\r\n   // dx and dy shifts the position of label w.r.t possibly node\r\n   // (TODO: dx and dy are calculated w.r.t what is not clear , please clear it if you find out)\r\n\r\n    let dx = x <= 0.5 ? 0 : -width;\r\n    let dy = y <= 0.5 ? 0 : -height;\r\n\r\n\r\n\r\n    // \"ret\" must be the return object. \"ret\" is always the return object\r\n    let ret = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n\r\n      const char = this._getChar(text[i], markDirty);\r\n      const rect = char.rect || {};\r\n\r\n      let horiAdvance;\r\n      \r\n      dx += horiBearingX;\r\n\r\n      // rect.x rect.w rect.h rect.y are all atlas widths heigths x y positions etc\r\n\r\n      ret.push({\r\n        width: rect.w,\r\n        height: rect.h,\r\n        left: rect.x / this.atlas.width,\r\n        right: (rect.x + rect.w) / this.atlas.width,\r\n        bottom: (rect.y + rect.h) / this.atlas.height,\r\n        top: rect.y / this.atlas.height,\r\n        dx: dx,\r\n        dy: dy + char.top + (height - rect.h)\r\n      });\r\n\r\n      dx += char.advance;\r\n      //      dx += rect.w;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  steps(text) {\r\n    return text.length;\r\n  }\r\n\r\n  bind() {\r\n    this.atlas.updateTexture(this._gl);\r\n  }\r\n};\r\n","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nimport ccNetViz_defaultTexts  from './default';\r\nimport ccNetViz_sdfTexts      from './sdf/sdf';\r\nimport ccNetViz_utils         from '../utils';\r\n\r\nexport default class {\r\n  constructor(gl, files, textures){\r\n    this._gl = gl;\r\n\r\n    this._modules = {\r\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\r\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\r\n    };\r\n  }\r\n\r\n  clear() {\r\n    for(let k in this._modules){\r\n      this._modules[k].clear();\r\n    }\r\n  }\r\n  \r\n  isSDF(font){\r\n    if(ccNetViz_utils.isObject(font)){\r\n      if(font.type === 'sdf'){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  \r\n  getEngine(font) {\r\n    if(this.isSDF(font)){\r\n      return this._modules.sdf;\r\n    }\r\n    return this._modules.default;\r\n  }\r\n\r\n  bind () {\r\n    for(let k in this._modules){\r\n      this._modules[k].bind();\r\n    }\r\n  }\r\n  \r\n  remove () {\r\n    for(let k in this._modules){\r\n      this._modules[k].remove && this._modules[k].remove();\r\n    }\r\n  }\r\n\r\n};","/**\r\n *  Copyright (c) 2016, Helikar Lab.\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the GPLv3 License.\r\n *  Authors: David Tichy, Aleš Saska\r\n */\r\n\r\nexport default class Utils {\r\n  static extend(from){\r\n    for(var i = 1; i < arguments.length; i++){\r\n      for(var k in arguments[i]){\r\n        from[k] = arguments[i][k];\r\n      }\r\n    }\r\n    return from;\r\n  }\r\n  \r\n  static isObject (obj) {\r\n    return obj === Object(obj);\r\n  }\r\n  \r\n  static emptyObject(obj) {\r\n    if(!Utils.isObject(obj))\r\n      return false;\r\n\r\n    for(var k in obj)\r\n      return false;\r\n    return true;\r\n  }\r\n  \r\n  static ajax(url, callback, type){\r\n    var xmlhttp;\r\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\r\n    xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onreadystatechange = (function(cbk){\r\n      return function(){\r\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\r\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\r\n        }\r\n      }\r\n    })(callback);\r\n    if(type) xmlhttp.responseType=type;\r\n    xmlhttp.open(\"GET\", url, true);\r\n    xmlhttp.send();\r\n  }\r\n\r\n};"],"sourceRoot":""}