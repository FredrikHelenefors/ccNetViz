{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layout/utils.js","webpack:///./src/utils.js","webpack:///./src/gl.js","webpack:///./src/primitiveTools.js","webpack:///./src/geomutils.js","webpack:///./plugins/ccNetViz-node-plugins/shape.js","webpack:///./src/color.js","webpack:///./src/layout/layout.js","webpack:///./src/spatialSearch/spatialSearch.js","webpack:///./src/spatialSearch/rbush.js","webpack:///./src/ccNetVizMultiLevel.js","webpack:///./src/ccNetViz.js","webpack:///./src/layer.js","webpack:///./src/primitive.js","webpack:///./src/shader.js","webpack:///./src/layout/force.js","webpack:///./src/quadTree.js","webpack:///./src/layout/random.js","webpack:///./src/layout/circular.js","webpack:///./src/layout/tree.js","webpack:///./src/layout/treeT.js","webpack:///./src/layout/hierarchical.js","webpack:///./src/layout/hierarchical2.js","webpack:///./src/layout/spectral.js","webpack:///./src/layout/spectral2.js","webpack:///./src/layout/hive.js","webpack:///./src/layout/grid.js","webpack:///./src/layout/versinus.js","webpack:///./src/spatialSearch/geomtools.js","webpack:///./src/dataSources/textures.js","webpack:///./src/dataSources/files.js","webpack:///./src/texts/texts.js","webpack:///./src/texts/default.js","webpack:///./src/texts/sdf/sdf.js","webpack:///./src/texts/sdf/atlas.js","webpack:///./node_modules/shelf-pack/index.umd.js","webpack:///./src/texts/sdf/spriteGenerator.js","webpack:///./src/texts/sdf/glyphTrimmer.js","webpack:///./src/lazyEvents.js","webpack:///./src/interactivityBatch.js","webpack:///./plugins/ccNetViz-node-plugins/main.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/ellipse.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/star.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/polygon.js","webpack:///./plugins/ccNetViz-node-plugins/shapes/square.js","webpack:///./node_modules/ml-array-max/src/index.js","webpack:///./node_modules/ml-array-rescale/src/index.js","webpack:///./node_modules/ml-array-min/src/index.js","webpack:///./node_modules/ml-matrix/src/dc/lu.js","webpack:///./node_modules/ml-matrix/src/dc/util.js","webpack:///./node_modules/ml-matrix/src/dc/svd.js","webpack:///./node_modules/ml-matrix/src/util.js","webpack:///./node_modules/ml-matrix/src/views/base.js","webpack:///./node_modules/ml-matrix/src/views/transpose.js","webpack:///./node_modules/ml-matrix/src/views/row.js","webpack:///./node_modules/ml-matrix/src/views/sub.js","webpack:///./node_modules/ml-matrix/src/views/selection.js","webpack:///./node_modules/ml-matrix/src/views/rowSelection.js","webpack:///./node_modules/ml-matrix/src/views/columnSelection.js","webpack:///./node_modules/ml-matrix/src/views/column.js","webpack:///./node_modules/ml-matrix/src/views/flipRow.js","webpack:///./node_modules/ml-matrix/src/views/flipColumn.js","webpack:///./node_modules/ml-matrix/src/abstractMatrix.js","webpack:///./node_modules/ml-matrix/src/matrix.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","webpack:///./node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","webpack:///./node_modules/ml-matrix/src/wrap/wrap.js","webpack:///./node_modules/ml-matrix/src/dc/qr.js","webpack:///./node_modules/ml-matrix/src/decompositions.js","webpack:///./node_modules/ml-matrix/src/linearDependencies.js","webpack:///./node_modules/ml-matrix/src/dc/evd.js","webpack:///./node_modules/ml-matrix/src/dc/cholesky.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","create2dArray","rows","columns","concat","_toConsumableArray","Array","keys","map","fill","degrees","nodes","edges","length","forEach","e","source","index","target","ordered_nodes","el","sort","a","b","ordered_degrees","getDepth","obj","depth","children","depth_visited","Error","tmpDepth","getRanges","Math","abs","start","step","Utils","from","arguments","k","isObject","url","callback","type","xmlhttp","XMLHttpRequest","onreadystatechange","cbk","readyState","status","response","responseText","responseType","open","send","gl","extensions","getSupportedExtensions","result","indexOf","getExtension","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","img","onLoad","options","createTexture","image","Image","load","onload","bindTexture","TEXTURE_2D","sdf","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","LUMINANCE","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","RGBA","src","naturalWidth","naturalHeight","location","color","uniform4f","g","left","right","bottom","top","near","far","lr","bt","nf","Float32Array","partitionByStyle","data","parts","pN","part","style","undefined","idx","push","sI","getPartitionStyle","baseStyle","styleProperty","copy","ccNetViz_color","this","edgeSource","edgeTarget","x","y","uniqid","is_edge","cx","cy","se","te","Shape","config","instance","_classCallCheck","canvas","document","createElement","width","height","display","default","_preConf","_setCanvas","_draw","stroke","size","textureColor","minSize","maxSize","label","font","cursor","x0","y0","x1","y1","context","getContext","fillStyle","strokeStyle","lineWidth","lineJoin","_this","Promise","resolve","reject","toBlob","blob","assign","texture","URL","createObjectURL","remove","Color","test","exec","v","parseInt","substring","dim","minX","minY","maxX","Infinity","maxY","max","min","scX","scY","layoutForce","layoutRandom","layoutCircular","layoutTree","layoutTreeT","layoutHierarchical","layoutHierarchical2","layoutSpectral","layoutSpectral2","layoutHive","layoutGrid","layoutVersinus","_primitiveTools","_geomtools","ct","getEdgeShift","screensize","ccNetViz_geomutils","getCurveShift","citx","city","ctx","cty","aspect2","len2","eq","len","sqrt","curveExc","sizex","nodeSize","sizey","Node","EPS","x2","y2","pointInRect","distance2","Label","textpos","fontSize","isSDF","getLabelSize","pos","wantedSize","fontScale","offset","bbox","offsety","edge","dx","dy","bb","getTextPos","rectIntersectsRect","pDistance2","Line","getPoints","lineIntersectsRect","Circle","xsize","ysize","getBezierPoints","getBBFromPoints","normalize","bezierIntersectsRect","d1","distance2ToBezier","d2","Curve","n2","n3","sortByDistances","e1","e2","dist2","tConst","lines","circles","curves","labels","spatialIndex","texts","nodesParts","linesParts","curvesParts","circlesParts","nodeStyle","getLabelHideScreen","oldsize","types","addEntity","getBBox","sd","sdi","_loop","styles","textEngine","getEngine","setFont","sd_n","sdi_n","rbushtree_s","_rbush2","rbushtree","ret","isNode","node","dist","isEdge","isLabel","search","intersectsRect","_tryAddEl","radius","xradius","yradius","radius2","arr","insert","rbush","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","clear","calcBBox","toBBox","distBBox","child","empty","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","multiSelect","compare","mid","stack","pop","select","z","j","exp","floor","swap","tmp","all","_all","childBBox","nodesToSearch","collides","_build","slice","_splitRoot","tmpNode","_insert","item","parent","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","items","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","ccNetVizMultiLevel","vizLayout","onContextMenu","onClick","vizScreen","ccNetViz","history","curlevel","addEventListener","histel","set","draw","preventDefault","getBoundingClientRect","clientX","clientY","lCoords","getLayerCoords","find","layout","__computedLayout","insidenodes","insideedges","removeEventListener","self","method","window","_main","sCanvas","attributes","antialias","lastUniqId","checkUniqId","__uniqid","mergeArrays","cmp","backgroundStyle","background","backgroundColor","removed","setted","edgeStyle","arrow","aspect","events","ccNetViz_lazyEvents","layers","view","drawFunc","textures","files","cntShownNodes","getNodesCnt","cntShownEdges","getEdgesCnt","onRedraw","debounce","checkRemoved","error","insertTempLayer","temp","ccNetViz_layer","getSize","getNodeSize","getLabelHideSize","batch","getBatch","ccNetViz_interactivityBatch","layout_options","promises","nodePlugin","then","main","pluginConfig","f","shapes","shape","toConfig","Polygon","Star","spikes","spike","Ellipse","radiusX","radiusY","Square","reflow","applyChanges","getVisibleNodes","getVisibleEdges","removeNode","removeEdge","addEdge","addNode","updateNode","updateEdge","addEdges","addNodes","removeEdges","removeNodes","updateNodes","updateEdges","sc","hideSize","vs","silent","ox","oy","transform","ccNetViz_gl","ortho","offsetX","offsetY","count","viewport","COLOR_BUFFER_BIT","scene","elements","getScreenCoords","conf","rect","disth","distw","findMerge","funcname","args","f1","f2","findArea","getTextPosition","chars","zoomevts","addEvts","evts","passive","passiveEvts","removeEvts","onDownThis","downe","_this2","which","parseTouchEvts","touches","sx","sy","od","onDrag","dragged","custom","panning","zooming","origdist","mx","my","drag","checkChangeViewport","up","stop","Date","getTime","lastUpTime","onDblClick","zoom","deltaY","onWheelThis","mouseup","touchend","touchcancel","mousemove","touchmove","mousedown","touchstart","wheel","onWheel","oldx","oldy","mouseX","mouseY","continuosZoom","startView","searchNodes","focus","focusX","focusY","oldX","oldY","oldSize","clearTimeout","setTimeout","deltaMode","delta","onZoom","contextmenu","gl_lose","loseContext","disable","last_view","is_change","ccNetViz_utils","onChangeViewport","toDataURL","resize","offsetWidth","offsetHeight","getViewport","setViewport","resetView","clearColor","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","enable","BLEND","ccNetViz_textures","ccNetViz_files","ccNetViz_texts","warn","isWebGLSupported","spatialSearch","ccNetViz_spatialSearch","ccNetViz_layout","Shapes","redraw","nodesFiller","iV","iI","ccNetViz_primitive","vertices","position","textureCoord","colors","quad","indices","labelsFiller","relative","steps","cos","sin","ct1","ct2","setVerticeCurveShift","csx","csy","cisx","cisy","curveShift","circleShift","edgesFiller","lengthSoFar","normal","numVertices","numIndices","curve","ydiff2","ydiff3","ydiff4","tx","ty","offsetMul","singles","direction","arrowFiller","lineArrows","curveArrows","circleArrows","getCurrentSpatialSearch","edgeTypes","edgePoses","removedNodes","removedEdges","getIndex","nidx","Uint32Array","dummysd","kArrow","circlesd","linesd","curvesd","OES_standard_derivatives","si","ti","init","tryInitPrimitives","isDirty","defaultAdder","section","addSection","labelAdder","slf","getTexture","is","nodesColored","labelsOutline","enableLazyRedraw","reset","set_end","update","element","attribute","updateEl","freenode","title","removeNodeAtPos","freeedge","removeEdgeAtPos","getEdgeStyleSize","stylesTransl","line","dashed","chain-dotted","dotted","getEdgeType","initExtensions","add","loadCalled","fsColorTexture","fsLabelTexture","lineTypes","fsCurve","getShiftFuncs","uniforms","shader","exc","uniform1f","uniform2f","screen","lineSize","uniformColor","lineStepSize","shaderparams","arrowsize","cexc","vsLabelsShader","bindLabels","is_outline","getLabelType","sdfSize","buffer","boldness","height_font","scale","outlineColor","primitive","fs","shaderParams","ccNetViz_shader","buffers","sections","sectionsByStyle","iS","iB","partLength","filler","maxBufferSize","nV","nI","Uint16Array","zerofiller","indicesarr","verticesarr","adder","_iIs","_iVs","_iBs","Uint8Array","_sizes","store","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","styleName","pL","niV","niI","fb","DYNAMIC_DRAW","olds","bufferSubData","BYTES_PER_ELEMENT","storeToPos","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","unbind","defaultAttr","Shader","_gl","_vs","_fs","program","_program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","attrParams","ACTIVE_ATTRIBUTES","getActiveAttrib","useProgram","enableVertexAttribArray","disableVertexAttribArray","friction","charge","gravity","theta2","chargeDistance2","alpha","distances","strengths","charges","repulse","_","point","dw","dn","px","py","pointCharge","q","weight","accumulate","random","_quadTree2","fixed","visit","rnd","fixed2","points","xs","ys","x1_","y1_","x2_","y2_","nx","ny","insertChild","nPoint","xm","ym","below","root","x3","y3","minDistance2","closestPoint","distance","findNode","_class","_nodes","_utils","_edges","_angle_step","PI","starting_angle","_starting_angle","nd","visited_leafs_parent","layer","centered","visited_leafs","drawTreeCentered","stepy","alphay","stepx","alphax","parents","leafs","visited","drawTreeTop","next_layer","neighbors","includes","makeLayers","roots","isroot","max_outdegree","isOrphan","orphan","components","current_component","unvisited","orphans","max_layer","maybe_more","lowest_layer","child_found","sep","parent_found","parent_","component","max_nodes_layer","index_offset","vertical_nodes","current_layer","initializeComponent","candidates","layerNodes","initHierarchy","separateOrphans","unvisitedNodes","findRoots","maybe_mode","placeAdditional","layer_val","placeOrphans","_mlMatrix","A","ii","reduce","foo","EigenvalueDecomposition","iii","second_min","second_mini","third_min","twoSmallest","realEigenvalues","foo_","eigenvectorMatrix","transpose","xy","maxx","maxy","minx","miny","_epsilon","_MAX_ITTERATIONS","_num_elements","_dims","D","graph","zeros","node_degree","deg","dims","u","ones","uhk","rand","itt_count","uk","ul","top_","vmi","ratio","vsi","dot","normalize2","coordinates","euclideanDistance","narr","_margin","_radius","_nlines","nodes_segment","angle","sq","nnodes","nlines","nlines2","_hubs","_intermediary","nhubs_intermediary","nhubs","stepx1","steprad","nintermediary","steprad2","stepx2","p0","p1","nperipheral","stepxx","Number","EPSILON","cuberoot","eqresult","acos","solveCubic","mindist","lineIntersectsLine","l1p1x","l1p1y","l1p2x","l1p2y","l2p1x","l2p1y","l2p2x","l2p2y","neq","checkBezierTkoef","bezierIntersectsLine","tden","sq1","t1","val","r1x","r1y","r2x","r2y","diffx","diffy","diff2xy","p1x","p1y","p2x","p2y","C","len_sq","param","xx","yy","xmin","xmax","ymin","ymax","_load","_textures","_pending","_n","action","allLoaded","emptyObject","_files","dataType","JSON","parse","ajax","_transformFile","_modules","ccNetViz_defaultTexts","ccNetViz_sdfTexts","_size","_canvas","_el","body","appendChild","_context","textAlign","textBaseline","_rendered","_texts","_x","_y","_height","clearRect","fontstr","NaN","text","measureText","fillText","_getText","NEAREST","parentNode","removeChild","DEFAULT_SIZE","atlas","GlyphAtlas","_cachedGlyphs","_glyphs","_rects","spriteGenerator","SpriteGenerator","curFont","pbf","_getChar","String","fromCharCode","markDirty","glyphID","charCodeAt","cache","glyph","addGlyph","SimpleGlyph","advance","char","h","w","updateTexture","resetCache","_resetCache","bin","ShelfPack","ids","dirty","ALPHA","glyphs","split","id","rects","bufferedWidth","bufferedHeight","padding","packWidth","packHeight","packOne","bitmap","prevWidth","prevHeight","_texture","deleteTexture","buf","ArrayBuffer","_createTexture","texSubImage2D","autoResize","shelves","freebins","stats","bins","maxId","Shelf","free","pack","allocation","results","inPlace","w2","h2","shelf","waste","h1","w1","best","freebin","getBin","ref","maxh","maxw","allocFreebin","allocShelf","refcount","alloc","unref","factory","round","textSize","cutoff","fontFamily","fontWeight","middle","navigator","userAgent","gridOuter","Float64Array","gridInner","Int16Array","trimmer","Trimmer","alphaChannel","imageData","createImageData","imgData","getImageData","Uint8ClampedArray","_edt","process","glyphData","numCols","_edt1d","lb","rb","currentRow","lbs","rbs","res","_findRowBounds","bounds","_findGlyphBounds","newData","newWidth","bufferCol","valueOf","_enable","func","wait","immediate","_arguments","timeout","timestamp","later","last","now","callNow","pushUnique","_layers","_insertTempLayer","_checkUniqId","_toAddEdges","_toAddNodes","_toRemoveEdges","_toRemoveNodes","_nPos","_ePos","_eDirs","geomutils","_actualTempNodes","_actualTempEdges","_this3","_this4","_doRemoveEdges","_this5","_doRemoveNodes","tid","sid","_doAddNodes","_doAddEdges","_Shape","_possibleConstructorReturn","__proto__","getPrototypeOf","_inherits","_createClass","ellipse","beginPath","inset","theta","center","lineTo","closePath","degree","src_max","input","isArray","rescale","TypeError","output","currentMin","src_min","currentMax","RangeError","minValue","autoMinMax","maxValue","factor","lu_LuDecomposition","[object Object]","matrix","LUcolj","kmax","lu","WrapperMatrix2D_WrapperMatrix2D","checkMatrix","clone","pivotVector","pivotSign","LU","col","matrix_Matrix","isSingular","X","subMatrixRow","determinant","isSquare","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","getFilled2DArray","array","svd_SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","nct","nrt","mrc","pp","eps","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","mmul","vrows","urows","VLU","sum","solve","diag","vcols","ucols","condition","norm2","rank","tol","diagonal","leftSingularVectors","isMatrix","diagonalMatrix","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","some","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","base_BaseView","AbstractMatrix","super","static","species","transpose_MatrixTransposeView","rowIndex","columnIndex","row_MatrixRowView","sub_MatrixSubView","selection_MatrixSelectionView","rowSelection_MatrixRowSelectionView","columnSelection_MatrixColumnSelectionView","column_MatrixColumnView","flipRow_MatrixFlipRowView","flipColumn_MatrixFlipColumnView","superCtor","Matrix","newRows","newColumns","newMatrix","rng","matrix1","matrix2","klass","jj","rowRep","colRep","constructor","setSubMatrix","mulS","rowVector","getRow","row1","row2","columnVector","getColumn","column1","column2","by","sumByRow","sumByColumn","sumAll","prod","vector2","vector1","other","Bcolj","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","halfCols","subMatrix","sub","scaled","setRow","setColumn","compareFunction","compareNumbers","trace","subMatrix0","subMatrix1","subMatrix2","selectionView","det","svdSolution","transposeView","identity","eye","negate","neg","tensorProduct","kroneckerProduct","staticMethodWithArgs","eval2","eval","operator","inplaceOp","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","mathMethod","inplaceMeth","staticMeth","methodWithArg","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","values","replace","RegExp","nRows","nColumns","isInteger","WrapperMatrix1D_WrapperMatrix1D","_calculateIndex","wrap","qr_QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","inverse","useSVD","leftHandSide","rightHandSide","xrange","exception","range","dependenciesOneRow","thresholdValue","thresholdError","returnArray","addRow","linearDependencies","Abis","evd_EigenvalueDecomposition","assumeSymmetric","isSymmetric","hh","tred2","dl1","c3","el1","s2","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","imaginaryEigenvalues","xr","xi","yr","yi","cholesky_CholeskyDecomposition","dimension","positiveDefinite","Lrowj","Lrowk","L","B"],"mappings":"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lI,IACDA,EAAIytB,EAAaztB,SAGVkI,IAANlI,GAAgC,iBAANA,IAC3BA,EAAI,GAGCA,GAIT2I,KAAKnH,SACLmH,KAAKlH,SAEL,IAAI6C,EAAaD,EAAK4c,UAAY8M,eAAe1pB,EAAI,+BACjDmd,EAAQ7Y,KAAK6Y,MAqbjB,WACI,OACIC,YACAuM,IAAK,SAAC3uB,EAAMuC,GACR4f,EAAMniB,GAAQuC,EACd4f,EAAMC,SAASrZ,KAAKxG,MA1bK3C,KAAK0J,MAEtCslB,GAAa,EACjB,IAAI5pB,EAAgF,OAA1EgB,EAAQD,SAAW6oB,IAAeA,GAAa,IAAS5oB,EAAQD,SAAiBuD,KAE3F,IAMMulB,GACF,2BACA,sBACA,6BACA,mBACA,oBACA,kEACA,KAGEC,IACF,2BACA,kCACA,8BACA,qCACA,sBACA,wBACA,0BACA,uDACA,2BACA,gBACA,oBACA,yCACA,+DACA,+CACA,WACA,mEACA,MACA,KAaEC,IACF,sBACA,gCACA,gCACA,4BACA,iCACA,gDACA,4BACA,gCACA,QAEEC,IACF,kDACA,eACA,yBACA,SACA,uBACA,sBACA,sBACA,8BACA,0BACA,kBACA,8BACA,oBACA,4EACEptB,OAAOmtB,IAAWntB,QACpB,wBACA,wBACA,yCACA,yCACA,6DACA,0CACA,+BACA,sEACA,MAIEqtB,IACF,6BACA,6BACA,+DACA,6CACA,oFACA,IACA,8BACA,8BACA,wCACA,KAsIJ,GAnIA9M,EAAMwM,IAAI,QAAS,IAAIvF,UAAmBpkB,EAAIwY,EAAW,MACjD,2BACA,2BACA,yBACA,8BACA,qBACA,qBACA,uBACA,yBACA,wBACA,sBACA,0BACA,kBACA,+BACE5b,OAAOqtB,IAAertB,QACxB,oBACA,uHAEA,+CACA,4CAEA,iBACA,OAEA,2BACA,sBACA,sBACA,kBACA,8BACA,0BACA,oBACA,mEACLA,OAAOmtB,IAAWntB,QACb,0EACA,MACA,SAAA9B,GACA,IAAIovB,EAAWpvB,EAAEqvB,OAAOD,SACxBA,EAASE,KAAOpqB,EAAGqqB,UAAUH,EAASE,IAAKtvB,EAAE0P,UAC7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","file":"ccNetViz.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport function create2dArray (rows, columns) {\n    return [...Array(rows).keys()].map(i => Array(columns).fill(0));\n}\n\nexport function degrees(nodes, edges) {\n  // should return ordered nodes and their degrees - high to low\n  let degrees = Array(nodes.length).fill(0);\n  edges.forEach(function(e) {\n      degrees[e.source.index] += 1;\n      degrees[e.target.index] += 1;\n  }); // check to see if not getting double of the degree in undirected graphs\n  //getting the order of nodes from highest to lowest degrees\n  let ordered_nodes = degrees.map(function(el, i) {\n      return { index: i, value: el };\n  });\n  ordered_nodes.sort(function(a, b) {\n      return +(a.value < b.value) || +(a.value === b.value) - 1;\n  });\n  let ordered_degrees = ordered_nodes.map(function(el){\n      return degrees[el.index];\n  });\n  return { nodes: ordered_nodes,\n           degrees: ordered_degrees } ;\n}\n\nexport function getDepth(obj) {\n    let depth = 0;\n    if (obj.children) {\n        obj.children.forEach(function (d) {\n\t    if (d.depth_visited == true){\n\t\t    throw new Error(\"This layout is only for trees acyclic graphs\");\n\t    }\n\t    d.depth_visited = true;\n            let tmpDepth = getDepth(d);\n            if (tmpDepth > depth) {\n                depth = tmpDepth;\n            }\n        })\n    }\n    return 1 + depth;\n}\n\nexport function getRanges(n) {\n  n = Math.abs(n);\n  if(n <= 1){\n      return {\n        start: 0.5,\n        step: 1\n      };\n  }\n  let start = .05;\n  return {\n      start,\n      step: (1-2*start)/(n-1)\n  }\n}\n\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class Utils {\n  static extend(from){\n    for(var i = 1; i < arguments.length; i++){\n      for(var k in arguments[i]){\n        from[k] = arguments[i][k];\n      }\n    }\n    return from;\n  }\n  \n  static isObject (obj) {\n    return obj === Object(obj);\n  }\n  \n  static emptyObject(obj) {\n    if(!Utils.isObject(obj))\n      return false;\n\n    for(var k in obj)\n      return false;\n    return true;\n  }\n  \n  static ajax(url, callback, type){\n    var xmlhttp;\n    // compatible with IE7+, Firefox, Chrome, Opera, Safari\n    xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = (function(cbk){\n      return function(){\n        if (xmlhttp.readyState == 4 && xmlhttp.status == 200){\n          cbk(type == 'arraybuffer' ? xmlhttp.response : xmlhttp.responseText);\n        }\n      }\n    })(callback);\n    if(type) xmlhttp.responseType=type;\n    xmlhttp.open(\"GET\", url, true);\n    xmlhttp.send();\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n // initialises webGL\n\nexport default class {\n  static initExtensions(gl) {\n      let extensions = gl.getSupportedExtensions();\n      let result = {};\n      for (let i = 1; i < arguments.length; i++) {\n          let e = arguments[i];\n          (result[e] = extensions.indexOf(e) >= 0) && gl.getExtension(e);\n      }\n      return result;\n  }\n  // compiles shader \n  \n  static createShader(gl, type, source) {\n      let result = gl.createShader(type);\n      gl.shaderSource(result, source);\n      gl.compileShader(result);\n\n      if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n          console.log(gl.getShaderInfoLog(result));\n          return null;\n      }\n      return result;\n  }\n\n// texture binding\n\n  static createTexture(gl, img, onLoad, options) {\n      let result = gl.createTexture();\n\n      let image = new Image();\n      \n      let load = () => {\n            image.onload = null;\n            gl.bindTexture(gl.TEXTURE_2D, result);\n\n            //refer article https://open.gl/textures\n\n            if((options || {}).sdf){\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }else{\n              gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n              gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            }\n\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            onLoad && onLoad();\n      }\n\n      image.onload = load;\n      image.src = img;\n      image.naturalWidth && image.naturalHeight && load();\n      \n      result.image = image;\n      return result;\n  }\n\n  static uniformColor(gl, location, color) {\n      gl.uniform4f(location, color.r, color.g, color.b, color.a);\n  }\n\n  static ortho(left, right, bottom, top, near, far) {\n      let lr = 1 / (left - right),\n          bt = 1 / (bottom - top),\n          nf = 1 / (near - far);\n\n      let result = new Float32Array(16);\n      result[0] = -2 * lr;\n      result[1] = 0;\n      result[2] = 0;\n      result[3] = 0;\n      result[4] = 0;\n      result[5] = -2 * bt;\n      result[6] = 0;\n      result[7] = 0;\n      result[8] = 0;\n      result[9] = 0;\n      result[10] = 2 * nf;\n      result[11] = 0;\n      result[12] = (left + right) * lr;\n      result[13] = (top + bottom) * bt;\n      result[14] = (far + near) * nf;\n      result[15] = 1;\n      return result;\n  }\n};\n","import ccNetViz_color  from './color' ;\n\nfunction partitionByStyle(data){\n    let parts = {};\n    \n    let pN = {};\n    for (let i = 0; i < data.length; i++) {\n        let el = data[i];\n        let part = parts[el.style] = parts[el.style] || [];\n        if(part.idx === undefined)\n          part.idx = [];\n        part.idx.push(i); \n\n        el.sI = pN[el.style] = pN[el.style] === undefined ? 0 : pN[el.style]+1;\n        \n        part.push(el);\n    }\n    \n    return parts;\n}\n\nfunction getPartitionStyle(style, baseStyle, styleProperty){\n    let result = {};\n\n    let copy = s => {\n        if (s) for (let p in s) result[p] = s[p];\n    };\n\n    copy(baseStyle);\n    copy(style);\n\n    if (styleProperty) {\n        copy(baseStyle[styleProperty]);\n        style && copy(style[styleProperty]);\n    }\n    result.color = result.color && new ccNetViz_color(result.color);\n    return result;\n};\n\n\nexport {partitionByStyle, getPartitionStyle};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// refer edge to edge example\n//  each edge if\n//  i) from node to node, has source and edge both node\n//  ii) from node to edge, has source -> node and target -> edge -> source and target of edge\n//  iii) from edge to edge, has source -> source and target of edge , target -> source and target of edge\n\n export default class {\n  static edgeSource(e) {\n    if(e.source.source){ //e.source.source would give the edges which start from edge (source is edge)\n      let s = this.edgeSource(e.source);\n      let t = this.edgeTarget(e.source);\n      return {\n              x: (s.x+t.x)/2, // middle of x-coordinate of edge\n              y: (s.y+t.y)/2, //middle of y-coordinate\n              uniqid: e.uniqid, \n              index: e.index, \n              is_edge: true, \n              e: e.source\n      };\n    }\n    \n    return e.source;\n  }\n\n  static edgeTarget (e) {\n    if(e.target.source){\n      //target is edge\n      let s = this.edgeSource(e.target);\n      let t = this.edgeTarget(e.target);\n      \n      return {\n              x: (s.x+t.x)/2,\n              y: (s.y+t.y)/2,\n              uniqid: e.uniqid,\n              index: e.index,\n              is_edge: true,\n              e: e.target\n      };\n    }\n\n    return e.target;\n  }\n\n  static getCurveShift (e, r){\n      r = r || {};\n      r.x = r.y = r.cx = r.cy = 0;\n      if(!e)\n        return r;\n      if(e.t && e.t >= 1){\t//curve or circle\n        if(e.t >= 2){ //circle\n          let s = this.edgeSource(e);\n          let d = s.y < 0.5 ? 1 : -1;\n\n          r.cx = d * 1.25;\n          r.cy = 0;\n        }else{\n          let se = this.edgeSource(e);\n          let te = this.edgeTarget(e);\n\n          r.x = se.x - te.x;\n          r.y = se.y - te.y;\n        }\n      }\n      return r;\n  }\n};","export default class Shape {\n  constructor(config, instance) {\n    this.config = config;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.canvas.style.display = 'none';\n    this.default = {};\n\n    this._preConf();\n    this._setCanvas();\n    this._draw();\n  }\n\n  // Before the drawing; when the config is existed override the default config.\n  _preConf() {\n    // Default config\n    this.default = {\n      stroke: {\n        color: \"#ffffff\",\n        size: 0.00000001,\n      },\n      textureColor: \"#2257a4\",\n      size: 20,\n      minSize: 6,\n      maxSize: 16,\n      label: {\n        color: \"rgb(120, 120, 120)\",\n        font: { type: \"Arial, Helvetica, sans-serif\", size: 11 }\n      }\n    };\n\n    if (typeof this.config !== \"undefined\") {\n\n      // Stroke configuration\n      if (typeof this.config.stroke !== \"undefined\") {\n        this.config.stroke.size = this.config.stroke.size || this.default.stroke.size;\n        this.config.stroke.color = this.config.stroke.color || this.default.stroke.color;\n      } else {\n        this.config.stroke = this.default.stroke;\n      }\n\n      // Label configuration\n      if (typeof this.config.label !== \"undefined\") {\n        this.config.label.color = this.config.label.color || this.default.label.color;\n        this.config.label.font = this.config.label.font || this.default.label.font;\n      } else {\n        this.config.label = this.default.label;\n      }\n\n      this.config.size = this.config.size || this.default.size;\n      this.config.minSize = this.config.minSize || this.default.maxSize;\n      this.config.maxSize = this.config.maxSize || this.default.maxSize;\n      this.config.textureColor = this.config.textureColor || this.default.textureColor;\n\n    } else {\n      this.config = this.default;\n    }\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n  }\n\n  // Setting up the canvas width, height. Also, creating canvas context and colors.\n  _setCanvas() {\n    let cursor = {\n      x0: this.canvas.width,\n      y0: this.canvas.height,\n      x1: this.canvas.width + ((this.config.stroke.size * 2) + this.config.size),\n      y1: this.canvas.height + ((this.config.stroke.size * 2) + this.config.size)\n    };\n    this.canvas.width = cursor.x1;\n    this.canvas.height = cursor.y1;\n    this.context = this.canvas.getContext('2d');\n    this.context.fillStyle = this.config.textureColor;\n    this.context.strokeStyle = this.config.stroke.color;\n    this.context.lineWidth = this.config.stroke.size;\n    this.context.lineJoin = \"round\";\n  }\n\n  _draw() {\n  }\n\n  // Canvas transform into the 0-1 range\n  t(size) {\n    return (this.config.stroke.size) + (this.config.size * size);\n  }\n\n  toConfig() {\n    return new Promise((resolve, reject) => {\n      this.canvas.toBlob(blob => {\n        resolve(Object.assign(\n          { texture: URL.createObjectURL(blob) },\n          this.config));\n        this.canvas.remove();\n      }, 'image/png');\n    });;\n  }\n}","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class Color{\n  constructor(color){\n    this.a = 1;\n\n    if (color instanceof Color){\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n        this.a = color.a;\n    }\n    else if (arguments.length >= 3) {\n        this.r = arguments[0];\n        this.g = arguments[1];\n        this.b = arguments[2];\n        arguments.length > 3 && (this.a = arguments[3]);\n    }\n    else if (/^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgba\\((\\d+), ?(\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n        this.a = get(color[4]);\n    }\n    else if (/^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 255;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test(color)) {\n        color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec(color);\n        let get = v => parseInt(v, 10) / 100;\n\n        this.r = get(color[1]);\n        this.g = get(color[2]);\n        this.b = get(color[3]);\n    }\n    else if (/^\\#([0-9a-f]{6})$/i.test(color)) {\n        color = parseInt(color.substring(1), 16);\n        this.r = (color >> 16 & 255) / 255;\n        this.g = (color >> 8 & 255) / 255;\n        this.b = (color & 255) / 255;\n    }\n    else {\n        this.r = this.g = this.b = 0;\n    }\n  }\n};","import layoutForce from './force' ;\nimport layoutRandom from './random' ;\nimport layoutCircular from './circular' ;\nimport layoutTree from './tree' ;\nimport layoutTreeT from './treeT' ;\nimport layoutHierarchical from './hierarchical' ;\nimport layoutHierarchical2 from './hierarchical2' ;\nimport layoutSpectral from './spectral' ;\nimport layoutSpectral2 from './spectral2' ;\nimport layoutHive from './hive' ;\nimport layoutGrid from './grid' ;\nimport layoutVersinus from './versinus' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  static get force(){\n    return layoutForce;\n  }\n  static get random(){\n    return layoutRandom;\n  }\n  static get circular(){\n    return layoutCircular;\n  }\n  static get tree(){\n    return layoutTree;\n  }\n  static get tree2(){\n    return layoutTreeT;\n  }\n  static get hierarchical(){\n    return layoutHierarchical;\n  }\n  static get hierarchical2(){\n    return layoutHierarchical2;\n  }\n  static get spectral(){\n    return layoutSpectral;\n  }\n  static get spectral2(){\n    return layoutSpectral2;\n  }\n  static get hive(){\n    return layoutHive;\n  }\n  static get grid(){\n    return layoutGrid;\n  }static get versinus(){\n    return layoutVersinus;\n  }\n  \n  static normalize (nodes, dim) {\n    let minX, minY, n = nodes.length;\n    \n    if (dim) {\n        minX = dim.minX;\n        minY = dim.minY;\n    }\n    else {\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n        minX = minY = Infinity;\n        \n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            maxX = Math.max(maxX, o.x);\n            maxY = Math.max(maxY, o.y);\n            minX = Math.min(minX, o.x);\n            minY = Math.min(minY, o.y);\n        };\n        \n        dim = {\n            maxX: maxX,\n            maxY: maxY,\n            minX: minX,\n            minY: minY\n        }\n    }\n\n    let scX = minX !== dim.maxX ? 1 / (dim.maxX - minX) : ((minX -= 0.5), 1);\n    let scY = minY !== dim.maxY ? 1 / (dim.maxY - minY) : ((minY -= 0.5), 1);\n\n    for (let i = 0; i < n; i++) {\n        let o = nodes[i];\n        o.x = scX * (o.x - minX);\n        o.y = scY * (o.y - minY);\n    }\n    \n    return dim;\n  }\n  \n}\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport ccNetViz_utils from '../utils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\nimport {\n        EPS,\n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      } from './geomtools';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nlet ct = {};\nfunction getEdgeShift(context, screensize, e, ct){\n  ccNetViz_geomutils.getCurveShift(e,ct);\t//get shift because of edge-to-edge functionality\n  \n  \n  //compute all transformations made in the vertex shader\n  let ctx,cty,citx,city;\n  \n  ctx = -ct.y;\n  cty = ct.x * context.aspect2;\n  \n  let len2 = ctx*context.width*ctx*context.width + cty*context.height*cty*context.height;\n  \n  if(eq(len2, 0)){\n    ctx = 0;\n    cty = 0;\n  }else{\n    let len = Math.sqrt(len2);\n    ctx *= context.curveExc * 0.25 * screensize / len;\n    cty *= context.curveExc * 0.25 * screensize / len;\n  }\n\n  let sizex = 2.5 * context.nodeSize * screensize / context.width;\n  let sizey = 2.5 * context.nodeSize * screensize / context.height;\n  citx = -ct.cy * 0.5 * sizex;\n  city = ct.cx * 0.5 * sizey;\n  \n  ct.x = ctx + citx;\n  ct.y = cty + city;\n}\n\nclass Node{\n  constructor(n){\n    this.e = n;\n  };\n  get isNode(){\n    return true;\n  };\n  getBBox(){\n    return [this.e.x-EPS, this.e.y - EPS, this.e.x + EPS, this.e.y + EPS];\n  };\n  intersectsRect(x1,y1,x2,y2){\n    return pointInRect(this.e.x, this.e.y, x1,y1,x2,y2);\n  };\n  dist2(x,y, context){\n    return distance2(x,y,this.e.x,this.e.y);\n  };\n}\n\nclass Label{\n  constructor(n, textpos, style, fontSize, isSDF, getLabelSize){\n    this.e = n;\n    this.pos = textpos;\n    this.style = style;\n    this.fontSize = fontSize;\n    this.isSDF = isSDF;\n    this.getLabelSize = getLabelSize;\n  };\n  get isLabel(){\n    return true;\n  };\n  getTextPos(context,size){\n    let x = this.e.x;\n    let y = this.e.y;\n    \n    let x1,y1,x2,y2;\n    x1 = x2 = x;\n    y1 = y2 = y;\n    \n    let wantedSize = ( this.isSDF ? this.getLabelSize(context, this.style.label || {}) : this.fontSize );\n\n    let fontScale = wantedSize / this.fontSize;\n    if(wantedSize === 0){ fontScale = 0; };\n\n    let step = (edge, x) => (x < edge ? 0 : 1);\n\n\n    const offset = 0.5 * context.nodeSize;    \n    const MAX =  10.;\n    const MIN = -10.;\n    let bbox = [MAX, MAX, MIN, MIN];\n    \n    \n    this.pos.forEach((c) => {\n      const offsety = (2.0 * step(y, 0.5) - 1.0) * offset;\n      x1 = x + size * ( c.dx * fontScale ) / context.width / 2;\n      y1 = y + size * ( ( c.dy * fontScale ) + offsety ) / context.height / 2;\n      x2 = x + size * ( ( ( c.dx + c.width ) * fontScale ) ) / context.width / 2;\n      y2 = y + size * ( ( ( c.dy + c.height ) * fontScale ) + offsety ) / context.height / 2;\n      \n      bbox[0] = Math.min(x1,bbox[0]);\n      bbox[1] = Math.min(y1,bbox[1]);\n      bbox[2] = Math.max(x2,bbox[2]);\n      bbox[3] = Math.max(y2,bbox[3]);\n    });\n    \n    return bbox;\n  };\n  getBBox(context){\n    let bb = this.getTextPos(context,1);\n    bb[0] = Math.min(bb[0],this.e.x);\n    bb[1] = Math.min(bb[1],this.e.y);\n    bb[2] = Math.max(bb[2],this.e.x);\n    bb[3] = Math.max(bb[3],this.e.y);\n    return bb;\n  };\n  intersectsRect(x1,y1,x2,y2,context,size){\n    let t = this.getTextPos(context,size);\n    return rectIntersectsRect(x1,y1,x2,y2,t[0],t[1],t[2],t[3]);\n  };\n  dist2(x,y, context, size){\n    let t = this.getTextPos(context, size);\n\n    if(pointInRect(x,y,t[0],t[1],t[2],t[3]))\n      return 0;\n    \n    //minimum from distance from corners or distance from borders\n    return Math.min(\n      distance2(t[0],t[1]),\n      distance2(t[2],t[3]),\n      distance2(t[0],t[3]),\n      distance2(t[2],t[1]),\n      pDistance2(x,y,t[0],t[1],t[2],t[1]),\n      pDistance2(x,y,t[0],t[3],t[2],t[3]),\n      pDistance2(x,y,t[0],t[1],t[0],t[3]),\n      pDistance2(x,y,t[2],t[1],t[2],t[3])              \n    );\n  };\n}\n\nclass Line{\n  constructor(l){\n    this.e = l;\n  };\n  get isEdge(){\n    return true;\n  };\n  getPoints(context, size){\n    let x1,y1,x2,y2;\n    \n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n    \n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y;\n    \n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    return [x1,y1,x2,y2];\n  };\n  getBBox(context, size){\n    let p = this.getPoints(context, size);\n    \n    return [Math.min(p[0],p[2]), Math.min(p[1],p[3]), Math.max(p[0],p[2]), Math.max(p[1],p[3])];\n  };\n  intersectsRect(x1,y1,x2,y2, context, size){\n    let p = this.getPoints(context, size);\n\n    return lineIntersectsRect(p[0], p[1], p[2], p[3], x1,y1,x2,y2);\n  };\n  dist2(x,y, context, size){\n    let p = this.getPoints(context, size);\n\n    return pDistance2(x,y,p[0],p[1],p[2],p[3]);\n  };\n}\n\nclass Circle{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, screensize){\n    let x1,y1,s;\n    s = ccNetViz_geomutils.edgeSource(this.e);\n    x1 = s.x;\n    y1 = s.y;\n\n    let size = 2.5 * context.nodeSize * screensize;\n    let xsize = size / context.width / 2;\n    let ysize = size / context.height / 2;\n\n    let d = s.y < 0.5 ? 1 : -1;\n\n    getEdgeShift(context, screensize, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    \n    return [\n      x1,\n      y1,\n      x1 + xsize*1,\n      y1 + ysize*d,\n      x1,\n      y1 + ysize*1.25*d,\n      x1 - xsize*1,\n      y1 + ysize*d\n    ];\n  };\n  getBBox(context, size){\n    let v = this.getBezierPoints(context, size);\n    \n    return getBBFromPoints(v);\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context,size);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2) || bezierIntersectsRect(v[2],v[3],v[4],v[5],v[6],v[7],x1,y1,x2,y2);\n  };\n  dist2(x,y,context,size){\n    let v = this.getBezierPoints(context,size);\n\n    //circle is just 2 bezier curves :)\n    let d1 = distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n    let d2 = distance2ToBezier(x,y,v[2],v[3],v[4],v[5],v[6],v[7]);\n\n    return Math.min(d1,d2);\n  };\n}\n\nclass Curve{\n  constructor(c){\n    this.e = c;\n  };\n  get isEdge(){\n    return true;\n  };\n  getBezierPoints(context, size, normalize){\n    let x1,x2,y1,y2;\n    let s = ccNetViz_geomutils.edgeSource(this.e);\n    let t = ccNetViz_geomutils.edgeTarget(this.e);\n\n    x1 = s.x;\n    y1 = s.y;\n    x2 = t.x;\n    y2 = t.y; \n    \n    let d = normalize(s, t);\n    \n    let n2 = d.y;\n    let n3 = context.aspect2*-d.x;\n\n    let x = context.width * n2;\n    let y = context.height* n3;\n    let l = Math.sqrt(x*x+y*y)*2;\n\n    n2 *= context.curveExc*size/l;\n    n3 *= context.curveExc*size/l;\n\n    getEdgeShift(context, size, s.e, ct);\n    x1 += ct.x;\n    y1 += ct.y;\n    getEdgeShift(context, size, t.e, ct);\n    x2 += ct.x;\n    y2 += ct.y;\n\n    let ret = [\n      x1,\n      y1,\n      (x1+x2)/2 + n2,\n      (y1+y2)/2 + n3,\n      x2,\n      y2\n    ];\n    return ret;\n  };\n  intersectsRect(x1,y1,x2,y2, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return bezierIntersectsRect(v[0],v[1],v[2],v[3],v[4],v[5],x1,y1,x2,y2);\n  };\n  getBBox(context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return getBBFromPoints(v);\n  };\n  dist2(x,y, context, size, normalize){\n    let v = this.getBezierPoints(context, size, normalize);\n    return distance2ToBezier(x,y,v[0],v[1],v[2],v[3],v[4],v[5]);\n  };\n}\n\n\nfunction sortByDistances(e1, e2){\n  return e1.dist2 - e2.dist2;\n}\n\n\nlet tConst = {nodes: Node, lines: Line, circles: Circle, curves: Curve, labels: Label};\n\nexport default class spatialIndex{\n  constructor(c, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideScreen){\n    //init all elements into rbush tree with size 1 (outer bound - the worst case)\n    const size = 1; const oldsize = c.size || 1; c.size = 1.;\n    \n    this.texts = texts;\n    this.normalize = normalize;\n    let t = this.types = {nodes: [], lines: [], circles: [], curves: [], labels: []};\n    let i = 0, d = [];\n\n    let addEntity = (e, d, i) => {\n      d[i] = e.getBBox(c, size, normalize);\n      d[i].push(e);\n      return e;\n    };\n    \n    nodes.forEach((n) => {\n      t.nodes.push(addEntity(new Node(n), d, i++));\n    });\n\n    lines.forEach((l) => {\n      t.lines.push(addEntity(new Line(l), d, i++));\n    });\n\n    circles.forEach((c) => {\n      t.circles.push(addEntity(new Circle(c), d, i++));\n    });\n    \n    curves.forEach((c) => {\n      t.curves.push(addEntity(new Curve(c), d, i++));\n    });\n\n\n    let sd = {};\n    let sdi = {};\n\n\n    //labels position could differ by style >> must partition by it\n    for(let style in nodesParts){\n      let nodes = nodesParts[style];\n\n\n      let ns = getPartitionStyle(options.styles[style],nodeStyle,\"label\");\n      let textEngine = texts.getEngine(ns.font);\n      textEngine.setFont(ns.font);\n      const fontSize = textEngine.fontSize;\n      const isSDF = textEngine.isSDF;\n\n      let sd_n = (sd[style] || (sd[style] = []));\n      let sdi_n = (sdi[style] || (sdi[style] = 0));\n\n      //biggest size in which the text is shown\n      c.size = getLabelHideScreen(c, ns.label || {});\n      nodes.forEach((n) => {\n        let textpos = textEngine.get(n.label, n.x, n.y);\n        t.labels.push(addEntity(new Label(n,textpos, ns, fontSize, isSDF, getLabelSize), sd_n, sdi_n++));\n      });\n\n      sdi[style] = sdi_n;\n    }\n\n    this.rbushtree_s = {};\n    for(let style in sd){\n        let rb = this.rbushtree_s[style] = rbush();\n        rb.load(sd[style]);\n    }\n\n    //tree initialization\n    this.rbushtree = rbush();\n    this.rbushtree.load(d);\n    \n    \n    //restore the size of scale (loosen outer the upper bound)\n    c.size = oldsize;\n  }\n  _tryAddEl(ret, e, dist2, nodes, edges, labels){\n    if(nodes && e.isNode){\n      ret.nodes.push({node:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(edges && e.isEdge){\n      ret.edges.push({edge:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n    if(labels && e.isLabel){\n      ret.labels.push({label:e.e, dist: Math.sqrt(dist2), dist2: dist2});\n    }\n  }\n  findArea(context,x1,y1,x2,y2,size,nodes,edges,labels){\n    if(x1 > x2){\n      let p = x1;\n      x1 = x2;\n      x2 = p;\n    }\n    if(y1 > y2){\n      let p = y1;\n      y1 = y2;\n      y2 = p;\n    }\n\n    \n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let x = (x1+x2)/2;\n    let y = (y1+y2)/2;\n\n    let data = this.rbushtree.search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x1-EPS, y1-EPS, x2+EPS,  y2+EPS]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(!e.intersectsRect(x1,y1,x2,y2,context, size, this.normalize, this.texts))\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n    \n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;    \n  }\n  find(context, x,y, radius, size, nodes, edges, labels){\n    let ret = {};\n    if(edges) ret.edges = [];\n    if(nodes) ret.nodes = [];\n    if(labels) ret.labels = [];\n\n    let xradius = radius;\n    let yradius = radius;\n\n    let radius2 = radius*radius;\n\n    let data = this.rbushtree.search([x - xradius, y - yradius, x + xradius,  y + yradius]);\n    if(labels){\n        for(let s in this.rbushtree_s){\n            data = data.concat(this.rbushtree_s[s].search([x - xradius, y - yradius, x + xradius,  y + yradius]));\n        }\n    }\n\n    for(let i = 0; i < data.length; i++){\n      let e = data[i][4];\n      let dist2 = e.dist2(x,y, context, size, this.normalize, this.texts);\n      if(dist2 > radius2)\n        continue;\n\n      this._tryAddEl(ret, e, dist2, nodes, edges, labels);\n    }\n\n    for(let k in ret){\n      ret[k].sort(sortByDistances);\n    }\n\n    return ret;\n  }\n  update(context, t, i, v){\n    //init all elements into rbush tree with size 1 (the biggest possible - the worst case)\n    let size = 1;\n\n    this.rbushtree.remove(this.types[t][i]);\n\n    let e = new tConst[t](v);\n    let arr = e.getBBox(context, size, this.normalize, this.texts);\n    arr.push(e);\n\n    this.rbushtree.insert(this.types[t][i] = arr);\n  }\n}","/*\n (c) 2015, Vladimir Agafonkin\n RBush, a JavaScript library for high-performance 2D spatial indexing of points and rectangles.\n https://github.com/mourner/rbush\n*/\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node.bbox)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child.bbox;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from stratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = {\n            children: [],\n            height: 1,\n            bbox: empty(),\n            leaf: true\n        };\n        return this;\n    },\n\n    remove: function (item) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = node.children.indexOf(item);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node.bbox, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: function (a, b) { return a[0] - b[0]; },\n    compareMinY: function (a, b) { return a[1] - b[1]; },\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = {\n                children: items.slice(left, right + 1),\n                height: 1,\n                bbox: null,\n                leaf: true\n            };\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = {\n            children: [],\n            height: height,\n            bbox: null,\n            leaf: false\n        };\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child.bbox);\n                enlargement = enlargedArea(bbox, child.bbox) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item.bbox : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node.bbox, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = {\n            children: node.children.splice(splitIndex, node.children.length - splitIndex),\n            height: node.height,\n            bbox: null,\n            leaf: false\n        };\n\n        if (node.leaf) newNode.leaf = true;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = {\n            children: [node, newNode],\n            height: node.height + 1,\n            bbox: null,\n            leaf: false\n        };\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child.bbox);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i].bbox, bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a', 'return [a' + format.join(', a') + '];');\n    }\n};\n\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    node.bbox = distBBox(node, 0, node.children.length, toBBox);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox) {\n    var bbox = empty();\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(bbox, node.leaf ? toBBox(child) : child.bbox);\n    }\n\n    return bbox;\n}\n\nfunction empty() { return [Infinity, Infinity, -Infinity, -Infinity]; }\n\nfunction extend(a, b) {\n    a[0] = Math.min(a[0], b[0]);\n    a[1] = Math.min(a[1], b[1]);\n    a[2] = Math.max(a[2], b[2]);\n    a[3] = Math.max(a[3], b[3]);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.bbox[0] - b.bbox[0]; }\nfunction compareNodeMinY(a, b) { return a.bbox[1] - b.bbox[1]; }\n\nfunction bboxArea(a)   { return (a[2] - a[0]) * (a[3] - a[1]); }\nfunction bboxMargin(a) { return (a[2] - a[0]) + (a[3] - a[1]); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b[2], a[2]) - Math.min(b[0], a[0])) *\n           (Math.max(b[3], a[3]) - Math.min(b[1], a[1]));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a[0], b[0]),\n        minY = Math.max(a[1], b[1]),\n        maxX = Math.min(a[2], b[2]),\n        maxY = Math.min(a[3], b[3]);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a[0] <= b[0] &&\n           a[1] <= b[1] &&\n           b[2] <= a[2] &&\n           b[3] <= a[3];\n}\n\nfunction intersects(a, b) {\n    return b[0] <= a[2] &&\n           b[1] <= a[3] &&\n           b[2] >= a[0] &&\n           b[3] >= a[1];\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        select(arr, left, right, mid, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n// Floyd-Rivest selection algorithm:\n// sort an array between left and right (inclusive) so that the smallest k elements come first (unordered)\nfunction select(arr, left, right, k, compare) {\n    var n, i, z, s, sd, newLeft, newRight, t, j;\n\n    while (right > left) {\n        if (right - left > 600) {\n            n = right - left + 1;\n            i = k - left + 1;\n            z = Math.log(n);\n            s = 0.5 * Math.exp(2 * z / 3);\n            sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (i - n / 2 < 0 ? -1 : 1);\n            newLeft = Math.max(left, Math.floor(k - i * s / n + sd));\n            newRight = Math.min(right, Math.floor(k + (n - i) * s / n + sd));\n            select(arr, newLeft, newRight, k, compare);\n        }\n\n        t = arr[k];\n        i = left;\n        j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default rbush;","import ccNetViz from './ccNetViz';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n// this file is used when we have more than 1 layer , goto example multi level\n\nvar ccNetVizMultiLevel = function(canvas, options){\n  var vizScreen = new ccNetViz(canvas, options);\n  var vizLayout;\n\n  var history = [];\n  var curlevel = {};\n\n\n  var onContextMenu, onClick;\n  \n  //right click >> go back\n  canvas.addEventListener('contextmenu', onContextMenu = function(e){\n    if(history.length > 0){\n\tvar histel = history.pop();\n\t//currently shown level\n\tcurlevel = histel;\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges);\n\tvizScreen.draw();\n    }\n\n    e.preventDefault();\n  });\n\n  canvas.addEventListener('click', onClick = function(e){\n    var bb = canvas.getBoundingClientRect();\n    var x = e.clientX - bb.left;\n    var y = e.clientY - bb.top;\n    var radius = 5;\n\n    var lCoords = vizScreen.getLayerCoords({radius: radius, x:x, y:y});\n    var result = vizScreen.find(lCoords.x,lCoords.y,lCoords.radius,true,false);\n    if(result.nodes.length > 0){\n      var node = result.nodes[0].node;\n\n      var layout = node.layout || vizLayout;\n      if(node.__computedLayout){\n\t//it is not nessesary to recompute layout if it was yet computed on this subgraph\n\tlayout = undefined;\n      }else{\n\t//we store that layout was once computed for this subgraph\n        node.__computedLayout = true;\n      }\n\n      if(node.nodes && node.edges){\n\tvar insidenodes = node.nodes;\n\tvar insideedges = node.edges;\n\n\thistory.push(curlevel);\n\tcurlevel = {nodes: insidenodes, edges: insideedges};\n\n\tvizScreen.set(curlevel.nodes, curlevel.edges, layout);\n\tvizScreen.draw();\n      }\n    }\n  });\n  \n  ////TODO: Add interactivity functions into this class\n  \n  this.remove = function(){\n    canvas.removeEventListener('contextmenu', onContextMenu);\n    canvas.removeEventListener('click', onClick);\n    vizScreen.remove();\n  };\n\n\n  this.set = function(nodes, edges, layout){\n    curlevel = {nodes: nodes, edges: edges};\n    history = [];\n\n    vizLayout = layout;\n    vizScreen.set.apply(vizScreen, arguments);\n  }\n  // apply the functions to the layer\n  var exposeMethods = ['find', 'findArea', 'getLayerCoords', 'draw', 'resetView', 'setViewport', 'update', 'resetView'];\n  var self = this;\n  exposeMethods.forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n\treturn vizScreen[method].apply(vizScreen, arguments);\n      };\n    })(method, self);\n  });\n};\n\n\nwindow.ccNetVizMultiLevel = ccNetVizMultiLevel;\n\nexport default ccNetVizMultiLevel;","import ccNetViz_layer         from './layer';\nimport ccNetViz_layout        from './layout/layout';\nimport ccNetViz_gl            from'./gl';\nimport ccNetViz_color         from './color';\nimport ccNetViz_utils         from './utils';\nimport ccNetViz_textures      from './dataSources/textures';\nimport ccNetViz_files         from './dataSources/files';\nimport ccNetViz_texts         from './texts/texts' ;\nimport ccNetViz_lazyEvents    from './lazyEvents';\nimport ccNetViz_interactivityBatch from './interactivityBatch';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch';\nimport {getPartitionStyle}    from './primitiveTools' ;\n\nimport {Ellipse, Star, Polygon, Square } from  \"../plugins/ccNetViz-node-plugins/main\"\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n *  David Tichy\n *    Aleš Saska - http://alessaska.cz/\n */\n\nlet sCanvas = document.createElement(\"canvas\");\nfunction getContext(canvas){\n    let attributes = { depth: false, antialias: false };\n    let gl = canvas.getContext('webgl', attributes) || canvas.getContext('experimental-webgl', attributes);\n\n    return gl;\n}\n\n\nvar lastUniqId = 0;\n\nfunction checkUniqId(el){\n  if(el.__uniqid !== undefined){\n    el.uniqid = el.__uniqid;\n    delete el.__uniqid;\n  }else if(el.uniqid === undefined){\n    el.uniqid = ++lastUniqId;\n  }\n}\n\n\nfunction mergeArrays(a, b, cmp){\n  let r = [];\n  r.length = a.length + b.length;\n\n  let i = 0,j=0,k=0;\n\n  while (i < a.length && j < b.length)\n  {\n    if (cmp(a[i],b[j]) < 0)\n      r[k++] = a[i++];\n    else\n      r[k++] = b[j++];\n  }\n\n  while (i < a.length)\n    r[k++] = a[i++];\n\n\n  while (j < b.length)\n    r[k++] = b[j++];\n\n  return r;\n}\n\nvar ccNetViz = function(canvas, options){\n  let self = this;\n  canvas = canvas || sCanvas;\n  let backgroundStyle = options.styles.background = options.styles.background || {};\n  let backgroundColor = new ccNetViz_color(backgroundStyle.color || \"rgb(255, 255, 255)\");\n\n  let removed = false;\n  let setted  = false;\n\n  let nodeStyle = options.styles.node = options.styles.node || {};\n  nodeStyle.minSize = nodeStyle.minSize != null ? nodeStyle.minSize : 6;\n  nodeStyle.maxSize = nodeStyle.maxSize || 16;\n  nodeStyle.color = nodeStyle.color || \"rgb(255, 255, 255)\";\n\n  if (nodeStyle.label) {\n      let s = nodeStyle.label;\n      s.color = s.color || \"rgb(120, 120, 120)\";\n      s.font = s.font || {type:\"Arial, Helvetica, sans-serif\", size: 11};\n  }\n\n  let edgeStyle = options.styles.edge = options.styles.edge || {};\n  edgeStyle.width = edgeStyle.width || 1;\n  edgeStyle.color = edgeStyle.color || \"rgb(204, 204, 204)\";\n\n  let onLoad = () => { if(!options.onLoad || options.onLoad()){this.draw(true);} };\n\n  if (edgeStyle.arrow) {\n      let s = edgeStyle.arrow;\n      s.minSize = s.minSize != null ? s.minSize : 6;\n      s.maxSize = s.maxSize || 12;\n      s.aspect = 1;\n  }\n\n\n  let events = new ccNetViz_lazyEvents();\n  let layers = {};\n  let view,gl,drawFunc,textures,files,texts;\n  let context = {};\n\n  this.cntShownNodes = () => {\n    let n = 0;\n    for(var k in layers)\n      n += layers[k].cntShownNodes();\n    return n;\n  }\n  let getNodesCnt = options.getNodesCnt || this.cntShownNodes;\n\n  this.cntShownEdges = () => {\n    let e = 0;\n    for(var k in layers)\n      e += layers[k].cntShownEdges();\n    return e;\n  }\n  let getEdgesCnt = options.getEdgesCnt || this.cntShownEdges;\n\n  let onRedraw = events.debounce(() => {\n    self.draw.call(self);\n    return false;\n  }, 5);\n\n  function checkRemoved(){\n    if(removed){\n      console.error(\"Cannot call any function on graph after remove()\")\n      return true;\n    }\n    return false;\n  }\n\n  let nodes, edges;\n\n  function insertTempLayer(){\n    if(layers.temp)\n      return;\n    layers.temp = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n  }\n\n  let batch = undefined;\n  function getBatch(){\n    if(!batch)\n      batch = new ccNetViz_interactivityBatch(layers, insertTempLayer, drawFunc, nodes, edges, checkUniqId);\n    return batch;\n  };\n\n  this.set = (n, e, layout, layout_options = {}) => {\n    if (checkRemoved()) return this;\n\n    nodes = n || [];\n    edges = e || [];\n\n    nodes.forEach(checkUniqId);\n    edges.forEach(checkUniqId);\n\n    let promises = nodePlugin();\n    Promise.all(promises.map(item => item.config)).then((c) => {\n      c.map((item, index) => {\n        options.styles[promises[index].name] = item;\n      });\n      layers.temp && layers.temp.set([], [], layout, layout_options);\n      layers.main.set(nodes, edges, layout, layout_options);\n    });\n\n    //reset batch\n    batch = undefined;\n    setted = true;\n    return this;\n  };\n\n  let nodePlugin = function () {\n    let p = [];\n    if (typeof options.styles !== \"undefined\") {\n      let pluginConfig = function (f, shapes, type) {\n        shapes.map(shape => {\n          if (typeof options.styles[shape.name] === \"undefined\") {\n            options.styles[shape.name] = f(shape);\n          } else {\n            options.styles[shape.name] = f(Object.assign(shape, options.styles[shape.name]));\n          }\n        });\n\n        for (let key in options.styles) {\n          let style = options.styles[key];\n          if (style.type === type) {\n            let shape = new f(style.config, self);\n            p.push({ config: shape.toConfig(), name: key });\n          }\n        }\n      }\n\n      if (typeof Polygon !== \"undefined\") {\n        let s = [\n          { name: 'triangle', edges: 3 },\n          { name: 'quadrilateral', edges: 4 },\n          { name: 'pentagon', edges: 5 },\n          { name: 'hexagon', edges: 6 },\n          { name: 'heptagon', edges: 7 },\n          { name: 'octagon', edges: 8 },\n          { name: 'nonagon', edges: 9 },\n          { name: 'decagon', edges: 9 }\n        ];\n        pluginConfig(Polygon, s, 'Polygon');\n      }\n\n      if (typeof Star !== \"undefined\") {\n        let s = [\n          { name: 'star', spikes: 7 }\n        ];\n        for (let spike = 3; spike <= 10; spike++) {\n          s.push({ name: `star-${spike}`, spikes: spike })\n        }\n        pluginConfig(Star, s, 'Star');\n      }\n\n      if (typeof Ellipse !== \"undefined\") {\n        pluginConfig(Ellipse, [{ name: 'circle' },{ name: 'ellipse', radiusX:25,radiusY:15 }], 'Ellipse');\n      }\n\n      if (typeof Square !== \"undefined\") {\n        pluginConfig(Square, [{ name: \"square\" }], \"Square\");\n      }\n    }\n    return p;\n  }\n\n  //make all dynamic changes static\n  this.reflow = () => {\n    if(checkRemoved()) return;\n\n    getBatch().applyChanges();\n\n    //nodes and edges in dynamic chart are actual\n    let n = layers.main.getVisibleNodes();\n    if(layers.temp)  n = n.concat(layers.temp.getVisibleNodes());\n\n    let e = layers.main.getVisibleEdges();\n    if(layers.temp) e = e.concat(layers.temp.getVisibleEdges());\n\n    this.set(n,e);\n    this.draw();\n  };\n\n  this.removeNode = (n) => { if(checkRemoved()){return this;} getBatch().removeNode(n); return this; };\n  this.removeEdge = (e) => { if(checkRemoved()){return this;} getBatch().removeEdge(e); return this; };\n  this.addEdge = (e) => { if(checkRemoved()){return this;} getBatch().addEdge(e); return this;};\n  this.addNode = (n) => { if(checkRemoved()){return this;} getBatch().addNode(n); return this;};\n  this.updateNode = (n) => { if(checkRemoved()){return this;} return this.removeNode(n).addNode(n); };\n  this.updateEdge = (e) => { if(checkRemoved()){return this;} return this.removeEdge(e).addEdge(e); };\n  this.applyChanges = () => { if(checkRemoved()){return this;} getBatch().applyChanges(); return this; };\n\n  this.addEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.addEdge(e);\n    });\n\n    return this;\n  };\n\n  this.addNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.addNode(n);\n    });\n\n    return this;\n  };\n\n  this.removeEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.removeEdge(e);\n    });\n    return this;\n  };\n\n  this.removeNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.removeNode(n);\n    });\n    return this;\n  };\n\n  this.updateNodes = (nodes) => {\n    if(checkRemoved()) return this;\n\n    nodes.forEach((n) => {\n      this.updateNode(n);\n    });\n\n    return this;\n  };\n\n  this.updateEdges = (edges) => {\n    if(checkRemoved()) return this;\n\n    edges.forEach((e) => {\n      this.updateEdge(e);\n    });\n\n    return this;\n  };\n\n\n  let getSize = (c, s, n, sc) => {\n    let result = sc * Math.sqrt(c.width * c.height / (n+1)) / view.size;\n    if (s) {\n      let min = s.size ? s.size : s.minSize;\n      let max = s.size ? s.size : s.maxSize;\n\n      result = max ? Math.min(max, result) : result;\n      if(result < s.hideSize)\n        return 0;\n      result = min ? Math.max(min, result) : result;\n    }\n    return result;\n  };\n\n  let getNodeSize = c => getSize(c, c.style, getNodesCnt(), 0.4);\n  let getLabelSize = (c,s) => getSize(c, s, getNodesCnt(), 0.25);\n\n  let getLabelHideSize = (c,s) => {\n    if(s){\n        const sc = 0.25;\n        let n = layers.main.cntShownNodes();  //lower bound\n        let t = sc * Math.sqrt(c.width * c.height / ( n+1 ) );\n\n        let vs;\n        if(s.hideSize){\n            vs = t / s.hideSize;\n            if(s.maxSize)\n                vs = Math.min(vs, t / s.maxSize);\n            return vs;\n        }\n    }\n\n    return 1;\n  };\n\n  let offset = 0.5 * nodeStyle.maxSize;\n\n  this.draw = (silent) => {\n    if(silent && (removed || !setted) ) return;\n    if(checkRemoved()) return;\n\n    let width = canvas.width;\n    let height = canvas.height;\n    let aspect = width / height;\n    let o = view.size === 1 ? offset : 0;\n    let ox = o / width;\n    let oy = o / height;\n\n    context.transform = ccNetViz_gl.ortho(view.x - ox, view.x + view.size + ox, view.y - oy, view.y + view.size + oy, -1, 1);\n    context.offsetX   = ox;\n    context.offsetY   = oy;\n    context.width     = 0.5 * width;\n    context.height    = 0.5 * height;\n    context.aspect2   = aspect * aspect;\n    context.aspect    = aspect;\n    context.count     = getNodesCnt();\n\n    //bad hack because we use different size for curveExc and for nodeSize :(\n    if(context.style) delete context.style;\n    context.curveExc = getSize(context, undefined, getEdgesCnt(), 0.5);\n    context.style     = nodeStyle;\n    context.nodeSize = getNodeSize(context);\n\n    gl && gl.viewport(0, 0, width, height);\n\n    gl && gl.clear(gl.COLOR_BUFFER_BIT);\n\n    for(let i = 0; i < layers.main.scene.elements.length; i++){\n      layers.main.scene.elements[i].draw(context);\n      layers.temp && layers.temp.scene.elements[i].draw(context);\n    }\n  };\n  drawFunc = this.draw.bind(this);\n\n  this.getScreenCoords = function(conf){\n    if(checkRemoved()) return;\n    let ret = {};\n    let rect = canvas.getBoundingClientRect();\n    if(conf.x !== undefined) ret.x = (conf.x - view.x + context.offsetX) / (view.size + 2*context.offsetX) * canvas.width + rect.left;\n    if(conf.y !== undefined) ret.y = ( 1 - ( conf.y - view.y + context.offsetY) / (view.size + 2*context.offsetY) )  * canvas.height + rect.top;\n    return ret;\n  };\n\n  this.getLayerCoords = function(conf){\n    if(checkRemoved()) return;\n\n    let ret = {};\n\n    ['x','x1','x2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let x = conf[k];\n        x = (x/canvas.width)*(view.size+2*context.offsetX)-context.offsetX+view.x;\n        ret[k] = x;\n      }\n    });\n\n\n    ['y','y1','y2'].forEach(k => {\n      if(conf[k] !== undefined){\n        let y = conf[k];\n        y = (1-y/canvas.height)*(view.size+2*context.offsetY)-context.offsetY+view.y;\n        ret[k] = y;\n      }\n    });\n\n    if(conf.radius !== undefined){\n      let dist = conf.radius;\n\n      let disth = dist / canvas.height;\n      let distw = dist / canvas.width;\n      dist = Math.max(disth, distw) * view.size;\n\n      ret.radius = dist;\n    }\n\n    return ret;\n  }\n\n  let findMerge = function(funcname, args){\n    if(checkRemoved() || !gl) return;\n\n    let f1 = layers.main[funcname].apply(layers.main, args);\n\n    if(!layers.temp)\n      return f1;\n\n    let f2 = layers.temp[funcname].apply(layers.temp, args);\n\n    let r = {};\n    for(let key in f1){\n      r[key] = mergeArrays(f1[key], f2[key], (e1, e2) => {\n        return e1.dist2 - e2.dist2;\n      });\n    }\n\n    return r;\n  };\n\n  this.find = function(){return findMerge('find', arguments); };\n  this.findArea = function(){return findMerge('findArea', arguments); };\n\n  this.getTextPosition = (n) => {\n    if(checkRemoved() || !gl) return;\n\n    const offset = 0.5 * context.nodeSize;\n    const offsety = (2.0 * (n.y <=  0.5 ? 0 : 1) - 1.0) * offset;\n\n    let ns = getPartitionStyle(options.styles[n.style],nodeStyle,\"label\");\n    let textEngine = texts.getEngine(ns.font);\n    textEngine.setFont(ns.font);\n\n    let wantedSize = ( textEngine.isSDF ? getLabelSize(context, ns.label || {}) : textEngine.fontSize );\n    let fontScale = wantedSize / textEngine.fontSize; if(wantedSize === 0){ fontScale = 0; };\n\n    return {offsetY: offsety, fontScale: fontScale, chars: textEngine.get(n.label, n.x, n.y)};\n  };\n\n\n\n  let addEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.addEventListener(k, evts[k], {passive: options.passiveEvts});\n    }\n  }\n\n  let removeEvts = (el, evts) => {\n    for(var k in (evts || {})){\n      evts[k] && el.removeEventListener(k, evts[k]);\n    }\n  }\n\n  let onDownThis = onMouseDown.bind(this);\n\n  let zoomevts;\n  addEvts(canvas, zoomevts = {\n    'mousedown': onDownThis,\n    'touchstart': onDownThis,\n    'wheel': onWheel.bind(this),\n    'contextmenu': options.onContextMenu\n  })\n\n  this.remove = () => {\n    if(checkRemoved()) return;\n\n    for(var k in layers){layers[k].remove();}\n\n    if(gl){\n      gl.viewport(0, 0, context.width*2, context.height*2);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      let gl_lose = gl.getExtension('WEBGL_lose_context');\n      gl_lose && gl_lose.loseContext();\n    }\n\n    removeEvts(canvas, zoomevts);\n\n    events.disable();\n    texts && texts.remove();\n\n    removed = true;\n  }\n\n  let last_view = {};\n  function checkChangeViewport(){\n    let is_change = false;\n    if(last_view){\n      for(let k in view){\n        if(last_view[k] !== view[k])\n          is_change = true;\n      }\n    }\n    ccNetViz_utils.extend(last_view, view);\n\n    if(is_change){\n      options.onChangeViewport && options.onChangeViewport(view);\n    }\n  }\n\n  function onContextMenu(e){\n  }\n\n  function onWheel(e) {\n      let rect = canvas.getBoundingClientRect();\n\n      if(!options.passiveEvts){ e.preventDefault(); }\n\n      let oldsize, oldx, oldy;\n\n      // Mouse coordinates\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      const radius = 10;\n\n      // if no timer found i.e. we are not in continuous phase\n      // we are calculating the focus variables again\n      if(!onWheel.continuosZoom) {\n          onWheel.startView = {size: view.size, x: view.x, y: view.y};\n\n          const lCoords = this.getLayerCoords({ x1: mouseX - radius, y1: mouseY - radius, x2: mouseX + radius, y2: mouseY - radius });\n          const searchNodes = this.findArea(lCoords.x1, lCoords.y1, lCoords.x2, lCoords.y2, true);\n          // if node found beneath mouse_ptr, zooming_focus is the center of that node\n          if (searchNodes.nodes.length) {\n              let node = searchNodes.nodes[0];\n              let focus = this.getScreenCoords({\n                  x: node.node.x,\n                  y: node.node.y\n              });\n              onWheel.focusX = focus.x;\n              onWheel.focusY = focus.y;\n          }\n          // else, it is the window co-ords of the mouse_ptr\n          else {\n              onWheel.focusX = mouseX;\n              onWheel.focusY = mouseY;\n          }\n          onWheel.oldX = view.x;\n          onWheel.oldY = view.y;\n          onWheel.oldSize = view.size;\n\n          if(onWheel.continuosZoom)\n              clearTimeout(onWheel.continuosZoom);\n\n          oldx = view.x;\n          oldy = view.y;\n      }\n      onWheel.continuosZoom = setTimeout(() => {\n        onWheel.continuosZoom = undefined;\n      }, 200);\n\n      let size = Math.min(1.0, view.size * (1 + 0.001 * (e.deltaMode ? 33 : 1) * e.deltaY));\n      let delta = size - onWheel.oldSize;\n\n      view.size = size;\n      view.x = Math.max(0, Math.min(1 - size, onWheel.oldX - delta * onWheel.focusX / canvas.width));\n      view.y = Math.max(0, Math.min(1 - size, onWheel.oldY - delta * (1 - onWheel.focusY / canvas.height)));\n\n      if(options.onZoom && options.onZoom(view) === false){\n        view.size = oldsize;\n        view.x = oldx;\n        view.y = oldy;\n        return;\n      }\n\n      checkChangeViewport();\n\n      this.draw();\n  }\n\n  let lastUpTime = 0;\n  function onMouseDown(downe) {\n    if(downe.which !== 1) return; //catch only 1 - left mouse button\n\n    let parseTouchEvts = (e) => {\n      if(!e.touches) return e;\n\n      let x = 0,y = 0;\n      for(let i = 0; i < e.touches.length; i++){ x += e.touches[i].clientX; y += e.touches[i].clientY; }\n      e.clientX = x / e.touches.length;\n      e.clientY = y / e.touches.length;\n\n      return e;\n    }\n\n\n    downe = parseTouchEvts(downe);\n\n\n    let width = canvas.width / view.size;\n    let height = canvas.height / view.size;\n    let sx = downe.clientX;\n    let sy = downe.clientY;\n    let dx = view.x + sx / width;\n    let dy = sy / height - view.y;\n    let od = options.onDrag;\n    let dragged, custom;\n    let panning = true;\n    let zooming = false;\n    let evts;\n\n    let origdist;\n    if((downe.touches || []).length === 2){\n      let mx = downe.touches[0].clientX - downe.touches[1].clientX, my = downe.touches[0].clientY - downe.touches[1].clientY;\n      origdist = Math.sqrt( mx * mx + my * my );\n      zooming = true;\n    }\n\n\n    let drag = e => {\n      e = parseTouchEvts(e);\n\n      if(e.touches && e.touches.length != 1)  panning = false;\n\n      if (dragged) {\n          if(panning){\n              if (custom) {\n                  od.drag && od.drag(e);\n              }\n              else {\n                  view.x = Math.max(0, Math.min(1 - view.size, dx - e.clientX / width));\n                  view.y = Math.max(0, Math.min(1 - view.size, e.clientY / height - dy));\n                  checkChangeViewport();\n                  this.draw();\n              }\n          }\n      }\n      else {\n          let x,y;\n          if(e.touches && e.touches.length > 0){ x = e.touches[0].clientX; y = e.touches[0].clientY; } else { x = e.clientX; y = e.clientY; }\n\n          let mx = x - sx;\n          let my = y - sy;\n\n          if (mx * mx + my * my > 8) {\n              dragged = true;\n              custom = od && od.start(downe);\n              custom && od.drag && od.drag(e);\n          }\n      }\n      if(!options.passiveEvts){ e.preventDefault(); }\n    };\n\n    let up = e => {\n        e = parseTouchEvts(e);\n\n        custom && od.stop && od.stop(e);\n\n        if(!dragged){\n          options.onClick && options.onClick(e);\n\n          if( new Date().getTime() - lastUpTime < 250 ) {\n            options.onDblClick && options.onDblClick(e);\n            lastUpTime = 0;\n          }else{\n            lastUpTime = new Date().getTime();\n          }\n        }\n\n        removeEvts(window, evts);\n    };\n\n    let zoom = e => {\n        e = parseTouchEvts(e);\n\n        if(e.touches && e.touches.length == 2){\n            let mx = e.touches[0].clientX - e.touches[1].clientX, my = e.touches[0].clientY - e.touches[1].clientY;\n            let dist = Math.sqrt(mx * mx + my * my);\n            e.deltaY = -(dist - origdist)*5;\n            onWheelThis(e);\n            origdist = dist;\n        }\n    };\n\n    addEvts(window, evts = {\n      'mouseup': up,\n      'touchend': up,\n      'touchcancel': up,\n      'mousemove': zooming ? zoom : drag,\n      'touchmove': zooming ? zoom : drag\n    });\n  }\n\n\n  this.image = function() {\n    if(checkRemoved()) return;\n\n    return canvas.toDataURL();\n  }\n\n  this.resize = function() {\n    if(checkRemoved()) return;\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n  }\n\n  this.getViewport = function() {\n    return view;\n  }\n\n  this.setViewport = function(v) {\n    if(checkRemoved()) return;\n\n    ccNetViz_utils.extend(view, v);\n\n    checkChangeViewport();\n  }\n\n  this.resetView = () => this.setViewport({size:1,x:0,y:0});\n\n  //expose these methods from layer into this class\n  ['update'].forEach(function(method){\n    (function(method, self){\n      self[method] = function(){\n        let args = arguments;\n        for(let k in layers){\n          let l = layers[k];\n          l[method].apply(l,args);\n        };\n        return self;\n      };\n    })(method, self);\n  });\n\n  if(gl = getContext(canvas)){\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n    gl.enable(gl.BLEND);\n  }\n\n  view = {size:1,x:0,y:0};\n\n  this.resize();\n\n  textures = new ccNetViz_textures(events, onLoad);\n  files = new ccNetViz_files(events, onLoad);\n  texts = gl && (new ccNetViz_texts(gl, files, textures));\n  layers.main = new ccNetViz_layer(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad);\n\n  if(!gl)\n    console.warn(\"Cannot initialize WebGL context\");\n};\n\nccNetViz.isWebGLSupported = () => !!getContext(sCanvas);\n\nccNetViz.color = ccNetViz_color;\nccNetViz.spatialSearch = ccNetViz_spatialSearch;\nccNetViz.layout = ccNetViz_layout;\nccNetViz.color = ccNetViz_color;\nccNetViz.Shapes = {};\n\ntypeof Ellipse !== 'undefined' ?   ccNetViz.Shapes.Ellipse = Ellipse : false;\ntypeof Star !== 'undefined' ?   ccNetViz.Shapes.Star = Star : false;\ntypeof Polygon !== 'undefined' ?   ccNetViz.Shapes.Polygon = Polygon : false;\ntypeof Square !== 'undefined' ?   ccNetViz.Shapes.Square = Square : false;\n\nwindow.ccNetViz = ccNetViz;\nexport default ccNetViz;","import ccNetViz_color     from './color' ;\nimport ccNetViz_gl        from './gl' ;\nimport ccNetViz_primitive from './primitive' ;\nimport ccNetViz_layout    from './layout/layout' ;\nimport ccNetViz_geomutils from './geomutils' ;\nimport ccNetViz_utils     from './utils' ;\nimport {partitionByStyle} from './primitiveTools';\nimport ccNetViz_spatialSearch from './spatialSearch/spatialSearch' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors:\n * \tDavid Tichy\n * \tAleš Saska - http://alessaska.cz/\n */\n\nexport default function(canvas, context, view, gl, textures, files, texts, events, options, backgroundColor, nodeStyle, edgeStyle, getSize, getNodeSize, getLabelSize, getLabelHideSize, getNodesCnt, getEdgesCnt, onRedraw, onLoad) {\n    getNodesCnt = getNodesCnt || (()=>{return this.nodes.length;});\n    getEdgesCnt = getEdgesCnt || (()=>{return this.edges.length;});\n\n    this.redraw = onRedraw || (() => {});\n\n    options = options || {};\n    options.styles = options.styles || {};\n\n    let nodesFiller = (\n      style => ({\n        set: (v, e, iV, iI) => {\n            let x = e.x;\n            let y = e.y;\n            ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n            ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n            if(v.color){\n              let c = e.color;\n              ccNetViz_primitive.colors(v.color, iV, c, c, c, c);\n            }\n            ccNetViz_primitive.quad(v.indices, iV, iI);\n        }})\n    );\n    let labelsFiller = (style => {\n        return (function(style){\n          let textEngine = texts.getEngine(style.font);\n\n          textEngine.setFont(style.font);\n\n          return {\n              set: (v, e, iV, iI) => {\n                var x = e.x;\n                var y = e.y;\n\n                var ret = false;\n                var parts = textEngine.get(e.label || \"\", x, y, () => {ret = true;});\n                for(var i = 0; i < parts.length; i++, iV += 4, iI += 6){\n                  let c = parts[i];\n\n                  ccNetViz_primitive.vertices(v.position, iV, x, y, x, y, x, y, x, y);\n                  ccNetViz_primitive.vertices(v.relative, iV, c.dx, c.dy, c.width + c.dx, c.dy, c.width + c.dx, c.height + c.dy, c.dx, c.height + c.dy);\n                  ccNetViz_primitive.vertices(v.textureCoord, iV, c.left, c.bottom, c.right, c.bottom, c.right, c.top, c.left, c.top);\n                  ccNetViz_primitive.quad(v.indices, iV, iI);\n                }\n\n                return ret;\n              },\n              size: (v,e) => {\n                return textEngine.steps(e.label || \"\");\n              }\n            };\n        })(style);\n    });\n\n    let normalize = (a, b) => {\n        let x = b.x - a.x;\n        let y = b.y - a.y;\n        let sc = 1 / Math.sqrt(x*x + y*y);\n        return { x: sc * x, y: sc * y };\n    };\n\n    let dx = Math.cos(0.9);\n    let dy = Math.sin(0.9);\n\n    let ct1 = {}, ct2 = {}, ct = {};\n    let setVerticeCurveShift = (v,iV,s,t) => {\n        let csx,csy,ctx,cty,cisx,cisy,sisy,citx,city;\n        ccNetViz_geomutils.getCurveShift(t.e,ct1);\n        ctx = ct1.x;\n        cty = ct1.y;\n        citx = ct1.cx;\n        city = ct1.cy;\n\n        ccNetViz_geomutils.getCurveShift(s.e,ct2);\n        csx = ct2.x;\n        csy = ct2.y;\n        cisx = ct2.cx;\n        cisy = ct2.cy;\n\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -csy, csx, -csy, csx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -cisy, cisx, -cisy, cisx, -city, citx, -city, citx);\n    };\n\n    let edgesFiller = {\n      'lines': (style => ({\n            set: (v, e, iV, iI) => {\n                let s = ccNetViz_geomutils.edgeSource(e);\n                let t = ccNetViz_geomutils.edgeTarget(e);\n                let dx = s.x-t.x;\n                let dy = s.y-t.y;\n                let d = normalize(s, t);\n\n                setVerticeCurveShift(v,iV,s,t);\n\n                ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, t.x, t.y, t.x, t.y);\n                ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,0,0,dx, dy, dx, dy);\n                ccNetViz_primitive.vertices(v.normal, iV, -d.y, d.x, d.y, -d.x, d.y, -d.x, -d.y, d.x);\n                ccNetViz_primitive.quad(v.indices, iV, iI);\n            }})),\n       'curves': (style => ({\n                    numVertices: 3,\n                    numIndices: 3,\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let t = ccNetViz_geomutils.edgeTarget(e);\n                        let dx = s.x-t.x;\n                        let dy = s.y-t.y;\n                        let d = normalize(s, t);\n\n                        setVerticeCurveShift(v,iV,s,t);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, 0.5 * (t.x + s.x), 0.5 * (t.y + s.y), t.x, t.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, 0, 0,dx/2, dy/2, dx, dy);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, d.y, -d.x, 0, 0);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0.0, 0, 0);\n                        ccNetViz_primitive.indices(v.indices, iV, iI, 0, 1, 2);\n                    }\n                })),\n       'circles': (style => ({\n                    set: (v, e, iV, iI) => {\n                        let s = ccNetViz_geomutils.edgeSource(e);\n                        let d = s.y < 0.5 ? 1 : -1;\n\n                        let xdiff1 = 0;\n                        let ydiff1 = 0;\n                        let xdiff2 = 1;\n                        let ydiff2 = d;\n                        let xdiff3 = 2;\n                        let ydiff3 = 1.25*d;\n                        let xdiff4 = 3;\n                        let ydiff4 = 1.5*d;\n\n                        setVerticeCurveShift(v,iV,s,s);\n\n                        ccNetViz_primitive.vertices(v.position, iV, s.x, s.y, s.x, s.y, s.x, s.y, s.x, s.y);\n                        ccNetViz_primitive.vertices(v.lengthSoFar, iV, xdiff1, ydiff1, xdiff2, ydiff2, xdiff3, ydiff3, xdiff4, ydiff4);\n                        ccNetViz_primitive.vertices(v.normal, iV, 0, 0, 1, d, 0, 1.25 * d, -1, d);\n                        ccNetViz_primitive.vertices(v.curve, iV, 1, 1, 0.5, 0, 0, 0, 0.5, 0);\n                        ccNetViz_primitive.quad(v.indices, iV, iI);\n                    }\n                }))\n    };\n\n    let set = (v, e, s, t, iV, iI, dx, dy) => {\n        let tx = t.x;\n        let ty = t.y;\n\n        let offsetMul;\n        let ctx,cty,citx,city;\n\n        ccNetViz_geomutils.getCurveShift(t.e,ct);\n        ctx = ct.x;\n        cty = ct.y;\n        citx = ct.cx;\n        city = ct.cy;\n\n        if(t.is_edge){\t//if target is edge, disable node offset for arrow\n          //normal of that edge\n          offsetMul = 0;\n        }else{\n          offsetMul = 1;\n        }\n        v.curveShift && ccNetViz_primitive.vertices(v.curveShift, iV, -cty, ctx, -cty, ctx, -cty, ctx, -cty, ctx);\n        v.circleShift && ccNetViz_primitive.vertices(v.circleShift, iV, -city, citx, -city, citx, -city, citx, -city, citx);\n\n        ccNetViz_primitive.singles(v.offsetMul, iV, offsetMul, offsetMul, offsetMul, offsetMul);\n        ccNetViz_primitive.vertices(v.position, iV, tx, ty, tx, ty, tx, ty, tx, ty);\n        ccNetViz_primitive.vertices(v.direction, iV, dx, dy, dx, dy, dx, dy, dx, dy);\n        ccNetViz_primitive.vertices(v.textureCoord, iV, 0, 0, 1, 0, 1, 1, 0, 1);\n        ccNetViz_primitive.quad(v.indices, iV, iI);\n    };\n\n    let arrowFiller = {\n      lineArrows: (style => ({\n                set: (v, e, iV, iI) => {\n                    let s = ccNetViz_geomutils.edgeSource(e);\n                    let t = ccNetViz_geomutils.edgeTarget(e);\n                    let d = normalize(s, t);\n                    set(v, e, s, t, iV, iI, d.x, d.y);\n                }})),\n       curveArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let s = ccNetViz_geomutils.edgeSource(e);\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          return set(v, e, s, t, iV, iI, 0.5 * (t.x - s.x), 0.5 * (t.y - s.y));\n                        }\n                    })),\n       circleArrows: (style => ({\n                        set: (v, e, iV, iI) => {\n                          let t = ccNetViz_geomutils.edgeTarget(e);\n                          let s = t;\n                          return set(v, e, s, t, iV, iI, t.x < 0.5 ? dx : -dx, t.y < 0.5 ? -dy : dy);\n                        }\n                    }))\n    };\n\n    this.getCurrentSpatialSearch = (context) => {\n      if(spatialSearch === undefined){\n        spatialSearch = new ccNetViz_spatialSearch(context, texts, options, [], {}, [], {}, [], {}, [], {}, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n      }\n      return spatialSearch;\n    }\n\n    this.remove = () => { }\n\n\n    let edgeTypes;\n    let edgePoses;\n\n    let spatialSearch = undefined;\n\n    let lvl = 0;\n    //make sure everything (files and textures) are load, if not, redraw the whole graph after they became\n    let set_end = () => {\n      let enableLazyRedraw = false;\n      let reset = (p) => {\n        if(enableLazyRedraw)\n          this.set(this.nodes, this.edges);\n      };\n      files.onLoad(reset)\n      textures.onLoad(reset)\n      enableLazyRedraw = true;\n    };\n\n    this.set = function(nodes, edges, layout, layout_options) {\n        removedNodes = 0;\n        removedEdges = 0;\n\n        this.nodes = nodes = nodes || [];\n        this.edges = edges = edges ? [].concat(edges) : [];\n\n        spatialSearch = undefined;\n\n        let lines = [], curves = [], circles = [];\n\n        //tanslate indexes into node objects\n        for (let i = 0; i < edges.length; i++) {\n          let e = edges[i];\n          if(typeof e.source == 'number')\n            e.source = nodes[e.source];\n\n          if(typeof e.target == 'number')\n            e.target = nodes[e.target];\n        }\n\n\n        let getIndex = (e) => {\n            return e.uniqid || -e.index || -e.nidx;\n        }\n\n        let init = () => {\n            for (let i = 0; i < nodes.length; i++) {\n                nodes[i].index = i;\n            }\n\n            for (let i = 0,j=nodes.length + 10; i < edges.length; i++, j++) {\n                edges[i].nidx = j;\n            }\n\n            edgeTypes = [];\n            edgePoses = new Uint32Array(edges.length);\n            const dummysd  = {k:  '_',      kArrow: '_', d: []};\n            const circlesd = {k: 'circles', kArrow: 'circleArrows', d: circles};\n            const linesd   = {k: 'lines',   kArrow: 'lineArrows',d: lines};\n            const curvesd  = {k: 'curves',  kArrow: 'curveArrows',d: curves};\n\n            if (extensions.OES_standard_derivatives) {\n                let map = {};\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    (map[si] || (map[si] = {}))[ti] = true;\n                }\n\n                for (let i = 0; i < edges.length; i++) {\n                    let target, e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if (si === ti) {\n                        e.t = 2;\t//circle\n                        target = circles;\n                        t = circlesd;\n                    }else {\n                        let m = map[ti];\n                        if(m && m[si]){\n                          e.t = 1;\t//curve\n                          target = curves;\n                          t = curvesd;\n                        }else{\n                          e.t = 0;\t//line\n                          target = lines;\n                          t = linesd;\n                        }\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                    target.push(e);\n                }\n            } else {\n                for (let i = 0; i < edges.length; i++) {\n                    let e = edges[i];\n\n                    const si = getIndex(e.source);\n                    const ti = getIndex(e.target);\n\n                    let t = dummysd;\n                    if(si !== ti){\n                      t = linesd;\n                      e.t = 0;\n                      lines.push(e);\n                    }\n                    edgeTypes.push(t);\n                    edgePoses[i] = t.d.length;\n                }\n            }\n        };\n\n        init();\n\n        let nodesParts   = partitionByStyle(nodes);\n        let circlesParts = partitionByStyle(circles);\n        let linesParts   = partitionByStyle(lines);\n        let curvesParts  = partitionByStyle(curves);\n\n        this.getCurrentSpatialSearch = (context) => {\n          if(spatialSearch === undefined){\n            spatialSearch = new ccNetViz_spatialSearch(context, texts, options, nodes, nodesParts, lines, linesParts, curves, curvesParts, circles, circlesParts, normalize, nodeStyle, getLabelSize, getLabelHideSize);\n          }\n          return spatialSearch;\n        }\n\n        layout && new ccNetViz_layout[layout](nodes, edges, layout_options).apply() && ccNetViz_layout.normalize(nodes);\n\n        if(!gl) return;\n\n        let tryInitPrimitives = () => {\n            var isDirty = false;\n\n            let defaultAdder = (section, addSection) => {\n              if(typeof section.style.texture === 'string')\n                  section.style.texture = textures.get(gl, section.style.texture, addSection);\n                else\n                  addSection();\n            }\n            let labelAdder = (section, addSection) => {\n              var slf = (section.style.label || {}).font || {};\n              let textEngine = texts.getEngine(slf);\n              section.style.texture = textEngine.getTexture(slf, addSection);\n            }\n\n            let is;\n            is = nodes.length && !nodes[0].color;\n            isDirty = isDirty || scene.nodes.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n            is = nodes.length && nodes[0].color;\n            isDirty = isDirty || scene.nodesColored.set(gl, options.styles, defaultAdder, is ? nodes : [], is ? nodesParts : {}, nodesFiller);\n\n            if (nodeStyle.label) {\n                texts.clear();\n                isDirty = isDirty || scene.labelsOutline.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                isDirty = isDirty || scene.labels.set(gl, options.styles, labelAdder, nodes, nodesParts, labelsFiller);\n                texts.bind();\n            }\n\n            isDirty = isDirty || scene.lines.set(gl, options.styles, defaultAdder, lines, linesParts, edgesFiller.lines);\n\n            if (extensions.OES_standard_derivatives) {\n                isDirty = isDirty || scene.curves.set(gl, options.styles, defaultAdder, curves, curvesParts, edgesFiller.curves);\n                isDirty = isDirty || scene.circles.set(gl, options.styles, defaultAdder, circles, circlesParts, edgesFiller.circles);\n            }\n\n            if (edgeStyle.arrow) {\n                isDirty = isDirty || scene.lineArrows.set(gl, options.styles, defaultAdder, lines, linesParts, arrowFiller.lineArrows);\n\n                if (extensions.OES_standard_derivatives) {\n                    isDirty = isDirty || scene.curveArrows.set(gl, options.styles, defaultAdder, curves, curvesParts, arrowFiller.curveArrows);\n\n                    isDirty = isDirty || scene.circleArrows.set(gl, options.styles, defaultAdder, circles, circlesParts, arrowFiller.circleArrows);\n                }\n            }\n\n            return isDirty;\n        };\n\n        while(tryInitPrimitives()); //loop until they are not dirty\n        set_end();\n    };\n\n\n\n    this.update = function(element, attribute, data) {\n        if(!gl) return;\n        scene[element].update(gl, attribute, data, function(style)  {return {\n            set: function(v, e, iV)  {return ccNetViz_primitive.colors(v, iV, e, e, e, e);}\n        };});\n    }\n\n    this.find = (x,y,dist,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).find(context, x,y,dist, view.size, nodes,edges,labels);\n    }\n\n    this.findArea = (x1,y1,x2,y2,nodes,edges,labels) => {\n      return this.getCurrentSpatialSearch(context).findArea(context, x1,y1,x2,y2, view.size, nodes,edges,labels);\n    }\n\n    this.updateNode = (n, i) => {\n      this.nodes[i] = n;\n\n      if(spatialSearch)\n        spatialSearch.update(context, 'nodes', i, n);\n\n      if(!gl) return;\n\n      (this.nodes[0].color ? scene.nodesColored : scene.nodes).updateEl(gl, n, i, nodesFiller);\n      scene.labels && scene.labels.updateEl(gl, n, i, labelsFiller);\n      scene.labelsOutline && scene.labelsOutline.updateEl(gl, n, i, labelsFiller);\n\n    };\n\n    this.updateEdge = ((e, i) => {\n      let t = edgeTypes[i];\n      let pos = edgePoses[i];\n\n      t.d[pos] = this.edges[i] = e;\n\n      if(spatialSearch)\n        spatialSearch.update(context, t.k, pos, e);\n\n      if(!gl) return;\n\n      scene[t.k].updateEl(gl, e, pos, edgesFiller[t.k]);\n      if (edgeStyle.arrow)\n        scene[t.kArrow].updateEl(gl, e, pos, arrowFiller[t.kArrow]);\n    });\n\n    let removedNodes = 0;\n    let removedEdges = 0;\n\n    const freenode = {x:-1,y:-1,title:\"\"};\n    this.removeNodeAtPos = ((pos) => {\n      if(this.nodes[pos] === freenode){\n        return;\n      }\n\n      removedNodes++;\n      this.updateNode(freenode, pos);\n    });\n\n    const freeedge = {source:{x:-1,y:-1},target:{x:-1,y:-1}};\n    this.removeEdgeAtPos = ((pos) => {\n      if(this.edges[pos] === freeedge){\n        return;\n      }\n\n      removedEdges++;\n\n      this.updateEdge(freeedge, pos);\n    });\n\n    this.getVisibleNodes = () => {\n      if(removedNodes <= 0)\n        return this.nodes;\n\n      let r = [];\n      this.nodes.forEach(n => {\n        if(n !== freenode)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.getVisibleEdges = () => {\n      if(removedEdges <= 0)\n        return this.edges;\n\n      let r = [];\n      this.edges.forEach((n) => {\n        if(n !== freeedge)\n          r.push(n);\n      });\n      return r;\n    }\n\n    this.cntShownNodes = (() => {\n      return this.nodes.length - removedNodes;\n    });\n\n    this.cntShownEdges = (() => {\n      return this.edges.length - removedEdges;\n    });\n\n    let getEdgeStyleSize = ((c) => {\n      return c.width/(120);\n/*      let avsize = (c.width + c.height)/2;\n      let koef = (Math.min(Math.max((avsize - 150)/150, 0),1)+1)*1.3;\n      //koef 1 for 150 size and 1.4 for 300 size\n      return c.width/(130*koef);\n*/    });\n\n\n    let stylesTransl = {\n      'line': 0,\n      'dashed'  : 1,\n      'chain-dotted': 2,\n      'dotted': 3\n    }\n    let getEdgeType = (t) => {\n      if(t !== undefined){\n        t = stylesTransl[t];\n      }\n\n      if(t === undefined || typeof t !== 'number'){\n        t = 0;\n      }\n\n      return t;\n    };\n\n\n    this.nodes = [];\n    this.edges = [];\n\n    let extensions = gl ? ccNetViz_gl.initExtensions(gl, \"OES_standard_derivatives\") : {};\n    let scene = this.scene = createScene.call(this);\n\n    let loadCalled = false;\n    if(!gl) { options.onLoad && !loadCalled && (loadCalled = true) && options.onLoad(); return this };\n\n    let getLabelType = (f) => {\n      if(texts.isSDF(f))\n        return 1;\n      return 0;\n    };\n\n    const fsColorTexture = [\n        \"precision mediump float;\",\n        \"uniform vec4 color;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const fsLabelTexture = [\n        \"precision mediump float;\",\n        \"uniform lowp sampler2D texture;\",\n        \"uniform mediump vec4 color;\",\n        \"uniform mediump float height_font;\",\n        \"uniform float type;\",\n        \"uniform float buffer;\",\n        \"uniform float boldness;\",\n        \"float gamma = 4.0 * 1.4142 * boldness / height_font;\",\n        \"varying mediump vec2 tc;\",\n        \"void main() {\",\n        \"  if(type > 0.5){\",  //SDF\n        \"    float tx=texture2D(texture, tc).a;\",\n        \"    float a= smoothstep(buffer - gamma, buffer + gamma, tx);\",\n        \"    gl_FragColor=vec4(color.rgb, a*color.a);\",\n        \"  }else{\", //NORMAL FONT\n        \"    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"  }\",\n        \"}\"\n    ];\n\n    const fsVarColorTexture = [\n        \"precision mediump float;\",\n        \"uniform sampler2D texture;\",\n        \"varying vec2 tc;\",\n        \"varying vec4 c;\",\n        \"void main(void) {\",\n        \"   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));\",\n        \"}\"\n    ];\n\n    const lineTypes = [\n        \"   if(type >= 2.5){\",        //3.0 dotted\n        \"      part = fract(part*3.0);\",\n        \"      if(part < 0.5) discard;\",\n        \"   }else if(type >= 1.5){\",        //2.0 - chain dotted\n        \"      if(part < 0.15) discard;\",\n        \"      if(part > 0.30 && part < 0.45) discard;\",\n        \"   }else if(type >= 0.5){\",        //1.0 - dashed\n        \"      if(part < 0.5) discard;\",\n        \"   }\"\n    ];\n    const fsCurve = [\n        \"#extension GL_OES_standard_derivatives : enable\",\n        \"#ifdef GL_ES\",\n        \"precision highp float;\",\n        \"#endif\",\n        \"uniform float width;\",\n        \"uniform vec4 color;\",\n        \"uniform float type;\",\n        \"uniform float lineStepSize;\",\n        \"uniform float lineSize;\",\n        \"varying vec2 c;\",\n        \"varying vec2 v_lengthSoFar;\",\n        \"void main(void) {\",\n        \"   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));\"\n        ].concat(lineTypes).concat([\n        \"   vec2 px = dFdx(c);\",\n        \"   vec2 py = dFdy(c);\",\n        \"   float fx = 2.0 * c.x * px.x - px.y;\",\n        \"   float fy = 2.0 * c.y * py.x - py.y;\",\n        \"   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);\",\n        \"   float alpha = 1.0 - abs(sd) / width;\",\n        \"   if (alpha < 0.0) discard;\",\n        \"   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));\",\n        \"}\"\n    ]);\n\n\n    const getShiftFuncs = [\n        \"attribute vec2 curveShift;\",\n        \"vec4 getShiftCurve(void) {\",\n        \"   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);\",\n        \"   float length = length(screen * shiftN);\",\n        \"   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);\",\n        \"}\",\n        \"attribute vec2 circleShift;\",\n        \"vec4 getShiftCircle(void) {\",\n        \"   return vec4(size*circleShift,0,0);\",\n        \"}\"\n    ];\n\n    scene.add(\"lines\", new ccNetViz_primitive(gl, edgeStyle, null, [\n            \"precision mediump float;\",\n            \"attribute vec2 position;\",\n            \"attribute vec2 normal;\",\n            \"attribute vec2 lengthSoFar;\",\n            \"uniform float exc;\",\n            \"uniform vec2 size;\",\n            \"uniform vec2 screen;\",\n            \"uniform float aspect2;\",\n            \"uniform float aspect;\",\n            \"uniform vec2 width;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\"\n            ].concat(getShiftFuncs).concat([\n            \"void main(void) {\",\n            \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n\n            \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n            \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n            \"   n = normal;\",\n            \"}\"\n        ]), [\n            \"precision mediump float;\",\n            \"uniform float type;\",\n            \"uniform vec4 color;\",\n            \"varying vec2 n;\",\n            \"varying vec2 v_lengthSoFar;\",\n            \"uniform float lineSize;\",\n            \"void main(void) {\",\n            \"   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));\"\n\t    ].concat(lineTypes).concat([\n            \"   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));\",\n            \"}\"\n        ]), c => {\n            let uniforms = c.shader.uniforms;\n            uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            let size = 2.5 * c.nodeSize;\n            uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            gl.uniform1f(uniforms.aspect, c.aspect);\n            gl.uniform2f(uniforms.width, c.style.width / c.width, c.style.width / c.height);\n            gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n\n    if (extensions.OES_standard_derivatives) {\n        scene.add(\"curves\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform vec2 size;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 v_lengthSoFar;\",\n                \"varying vec2 c;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 n = vec2(normal.x, aspect2 * normal.y);\",\n                \"   float length = length(screen * n);\",\n                \"   n = length == 0.0 ? vec2(0, 0) : n / length;\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n\n                \"}\"\n            ]), fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n        scene.add(\"circles\", new ccNetViz_primitive(gl, edgeStyle, null, [\n                \"precision highp float;\",\n                \"attribute vec2 position;\",\n                \"attribute vec2 normal;\",\n                \"attribute vec2 curve;\",\n                \"attribute vec2 lengthSoFar;\",\n                \"uniform float exc;\",\n                \"uniform vec2 screen;\",\n                \"uniform float aspect2;\",\n                \"uniform float aspect;\",\n                \"uniform vec2 size;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 c;\",\n                \"varying vec2 v_lengthSoFar;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   c = curve;\",\n\n                \"   vec4 p = transform*vec4(size * lengthSoFar,0,0);\",\n                \"   v_lengthSoFar = vec2(p.x, p.y/aspect);\",\n                \"}\"])\n            , fsCurve, c => {\n                let uniforms = c.shader.uniforms;\n                uniforms.exc && gl.uniform1f(uniforms.exc, c.curveExc);\n                gl.uniform1f(uniforms.width, c.style.width);\n                gl.uniform1f(uniforms.type, getEdgeType(c.style.type));\n                gl.uniform2f(uniforms.screen, c.width, c.height);\n                let size = 2.5 * c.nodeSize;\n                uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n                gl.uniform1f(uniforms.lineSize, getEdgeStyleSize(c));\n                gl.uniform1f(uniforms.aspect2, c.aspect2);\n                gl.uniform1f(uniforms.aspect, c.aspect);\n                uniforms.lineStepSize && gl.uniform1f(uniforms.lineStepSize, 5/3);\n                ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n            })\n        );\n    }\n\n    if (edgeStyle.arrow) {\n        let shaderparams = {attribute:{offsetMul:1}};\n\n        let bind = c => {\n            let size = getSize(c, c.style, getEdgesCnt(), 0.2);\n            if (!size) return true;\n\n            let uniforms = c.shader.uniforms;\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.arrowsize, size, c.style.aspect * size);\n            gl.uniform1f(uniforms.exc, c.curveExc);\n            uniforms.cexc && gl.uniform1f(uniforms.cexc, 0.5 * view.size * c.curveExc);\n            if(uniforms.size){\n              size = 2.5 * c.nodeSize;\n              uniforms.size && gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            }\n            gl.uniform2f(uniforms.screen, c.width, c.height);\n            gl.uniform1f(uniforms.aspect2, c.aspect2);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        };\n\n        scene.add(\"lineArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                \"attribute vec2 position;\",\n                \"attribute vec2 direction;\",\n                \"attribute vec2 textureCoord;\",\n                \"attribute float offsetMul;\",\n                \"uniform float offset;\",\n                \"uniform vec2 arrowsize;\",\n                \"uniform vec2 size;\",\n                \"uniform vec2 screen;\",\n                \"uniform float exc;\",\n                \"uniform float aspect2;\",\n                \"uniform mat4 transform;\",\n                \"varying vec2 tc;\",\n                ].concat(getShiftFuncs).concat([\n                \"void main(void) {\",\n                \"   vec2 u = direction / length(screen * direction);\",\n                \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                \"   v = v / length(screen * v);\",\n                \"   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                \"   tc = textureCoord;\",\n                \"}\"\n            ]), fsColorTexture, bind, shaderparams)\n        );\n\n        if (extensions.OES_standard_derivatives) {\n            scene.add(\"curveArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform float exc;\",\n                    \"uniform float cexc;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));\",\n                    \"   u = normalize(direction - cexc * u / length(screen * u));\",\n                    \"   u = u / length(screen * u);\",\n                    \"   vec2 v = vec2(u.y, -aspect2 * u.x);\",\n                    \"   v = v / length(screen * v);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n            scene.add(\"circleArrows\", new ccNetViz_primitive(gl, edgeStyle, \"arrow\", [\n                    \"attribute vec2 position;\",\n                    \"attribute vec2 direction;\",\n                    \"attribute vec2 textureCoord;\",\n                    \"attribute float offsetMul;\",\n                    \"uniform float offset;\",\n                    \"uniform vec2 arrowsize;\",\n                    \"uniform vec2 size;\",\n                    \"uniform vec2 screen;\",\n                    \"uniform float exc;\",\n                    \"uniform float aspect2;\",\n                    \"uniform mat4 transform;\",\n                    \"varying vec2 tc;\",\n                    ].concat(getShiftFuncs).concat([\n                    \"void main(void) {\",\n                    \"   vec2 u = direction;\",\n                    \"   vec2 v = vec2(direction.y, -direction.x);\",\n                    \"   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);\",\n                    \"   tc = textureCoord;\",\n                    \"}\"\n                ]), fsColorTexture, bind, shaderparams)\n            );\n        }\n    }\n\n    scene.add(\"nodes\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ], fsColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n            ccNetViz_gl.uniformColor(gl, uniforms.color, c.style.color);\n        })\n    );\n    scene.add(\"nodesColored\", new ccNetViz_primitive(gl, nodeStyle, null, [\n            \"attribute vec2 position;\",\n            \"attribute vec2 textureCoord;\",\n            \"attribute vec4 color;\",\n            \"uniform vec2 size;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"varying vec4 c;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"   c = color;\",\n            \"}\"\n        ], fsVarColorTexture, c => {\n            let size = getNodeSize(c);\n            let uniforms = c.shader.uniforms;\n            gl.uniform2f(uniforms.size, size / c.width, size / c.height);\n        })\n    );\n\n    let vsLabelsShader = [\n            \"attribute vec2 position;\",\n            \"attribute vec2 relative;\",\n            \"attribute vec2 textureCoord;\",\n            \"uniform float offset;\",\n            \"uniform vec2 scale;\",\n            \"uniform float fontScale;\",\n            \"uniform mat4 transform;\",\n            \"varying vec2 tc;\",\n            \"void main(void) {\",\n            \"   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);\",\n            \"   tc = textureCoord;\",\n            \"}\"\n        ];\n    let bindLabels = (is_outline) => {\n      return c => {\n            if (!getNodeSize(c)) return true;\n\n            let l = c.style.label;\n            let f = l.font;\n            let uniforms = c.shader.uniforms;\n\n            gl.uniform1f(uniforms.type, getLabelType(f));\n//            gl.uniform1f(uniforms.type, 0);\n\n            let textEngine = texts.getEngine(f);\n            textEngine.setFont(f);\n\n            let fontScale = 1.0;\n            let sdfSize = textEngine.fontSize;\n            let wantedSize = ( textEngine.isSDF ? getLabelSize(context, l || {}) : sdfSize );\n            if(wantedSize === 0){ fontScale = 0; };\n\n            let opts = {};\n            if(wantedSize && sdfSize){\n              fontScale *= wantedSize / sdfSize;\n            }\n\n            if(is_outline && !textEngine.isSDF) //discardAll\n              fontScale = 0;\n\n            gl.uniform1f(uniforms.buffer, is_outline ? 0.25 : 192.0 / 256.0);\n            gl.uniform1f(uniforms.boldness, (f ? f.boldness : undefined) || 1.);\n            gl.uniform1f(uniforms.fontScale, fontScale);\n            gl.uniform1f(uniforms.height_font, sdfSize);\n            gl.uniform1f(uniforms.offset, 0.5 * c.nodeSize);\n            gl.uniform2f(uniforms.scale, 1 / c.width, 1 / c.height);\n\n            let color;\n            if(is_outline && f)\n                color = new ccNetViz_color(f.outlineColor || backgroundColor);\n            else\n                color = c.style.color;\n            ccNetViz_gl.uniformColor(gl, uniforms.color, color);\n        };\n    };\n    nodeStyle.label && scene.add(\"labelsOutline\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(true)) );\n    nodeStyle.label && scene.add(\"labels\", new ccNetViz_primitive(gl, nodeStyle, \"label\", vsLabelsShader, fsLabelTexture, bindLabels(false)) );\n\n    if (options.onLoad) {\n        let styles = options.styles;\n        for (let p in styles) {\n            let s = styles[p];\n\n            s.texture && textures.get(gl, s.texture, onLoad);\n            s.arrow && s.arrow.texture && textures.get(gl, s.arrow.texture);\n        }\n    }\n\n    function createScene() {\n        return {\n            elements: [],\n            add: (name, e) => {\n                scene[name] = e;\n                scene.elements.push(e);\n            }\n        };\n    }\n}\n","import ccNetViz_shader from './shader' ;\nimport ccNetViz_utils  from './utils' ;\nimport {getPartitionStyle} from './primitiveTools';\n\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\n\n\nexport default class primitive{\n  constructor(gl, baseStyle, styleProperty, vs, fs, bind, shaderParams) {\n    let shader = new ccNetViz_shader(gl, vs.join('\\n'), fs.join('\\n'), shaderParams);\n    let buffers = [];\n    let sections = [];   \n    \n    let sectionsByStyle = {};\n\n    let e = {};\n    let iV, iI, iS = 0, iB = 0;\n\n    let partLength = (filler, part) => {\n        if(filler.size){\n          let n = 0;\n          part.forEach( p => {\n            n+=filler.size(e,p);\n          });\n          return n;\n        }else{\n          return part.length;\n        }\n        return;\n    };\n    \n    let init = (filler, n) => {\n        iV = iI = 0;\n        let max = Math.floor(primitive.maxBufferSize / filler.numVertices);\n        let nV = Math.min(max, n - (iB - iS)*max);\n        let nI = nV * filler.numIndices;\n\n        if (!e.indices || e.indices.length !== nI) {\n            e.indices = new Uint16Array(nI);\n            nV *= filler.numVertices;\n            for (let a in shader.attributes) e[a] = new Float32Array(shader.attributes[a].size * nV);\n        }\n    };\n\n    let zerofiller =  {\n      set: (v, iV, iI, numVertices, numIndices) => {\n        let indicesarr = [v.indices, iV, iI];\n        for(let i = 0; i < numIndices; i++)\n          indicesarr.push(0);\n\n        let verticesarr = [undefined, iV, iI];\n        for(let i = 0; i < numVertices; i++)\n          verticesarr.push(0);\n\n        for(var k in v){\n          if(k === 'indices'){\n            primitive.indices.apply(this, indicesarr);\n          }else{\n            verticesarr[0] = v[k];\n            primitive.vertices.apply(this, verticesarr);\n          }\n        }\n      }\n    }\n    \n    this.set = (gl, styles, adder, data, parts, get) => {\n        var isDirty = false;\n      \n        iS = 0;\n        iB = 0;\n\n        this._iIs = new Uint32Array(data.length);\n        this._iVs = new Uint32Array(data.length);\n        this._iBs = new Uint8Array(data.length);\n        this._sizes = new Uint8Array(data.length);\n\n\n        let store = (section) => {\n            let b = buffers[iB];\n            if (!b) {\n                buffers[iB] = b = {};\n                for (let a in e) b[a] = gl.createBuffer();\n            }\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferData(gl.ARRAY_BUFFER, e[a], gl.STATIC_DRAW);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, e.indices, gl.STATIC_DRAW);\n            b.numIndices = iI;\n            b.numVertices = iV;\n            section.buffers.push(b);\n            iB++;\n        };\n\n        sections = [];\n        for (let p in parts) {\n            iS = iB;\n\n            let section = {\n                style: getPartitionStyle(styles[p], baseStyle, styleProperty),\n                buffers: [],\n                styleName: p\n            };\n\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n            filler.numIndices = filler.numIndices || 6;\n\n            let part = parts[p];\n\n            let pL = partLength(filler, part);\n            init(filler, pL);\n            let max = primitive.maxBufferSize;\n            for (let i = 0; i < part.length; i++) {\n                let s = filler.size ? filler.size(e, part[i]) : 1;\n                let niV = iV + s * filler.numVertices;\n                let niI = iI + s * filler.numIndices;\n\n                if (niV >= max) {\n                    store(section);\n                    init(filler, pL);\n                    niV = iV;\n                    niI = iI;\n                }\n\n\n                if(filler.set(e, part[i], iV, iI))\n                  isDirty = true;\n\n\n                let idx = part.idx[i];\n                this._iIs[idx] = iI;\n                this._iVs[idx] = iV;\n                this._iBs[idx] = iB;\n                this._sizes[idx] = s;\n\n                iI = niI;\n                iV = niV;\n            }\n            store(section);\n\n            function add() {\n                sections.push(this);\n                sectionsByStyle[this.styleName] = this;\n            }\n            let addSection = add.bind(section);\n\n            adder ? adder(section, addSection) : addSection();\n        }\n        \n        return isDirty;\n    }\n\n    let fb;\n    this.update = function(gl, attribute, data, get)  {\n        let i = 0, size = shader.attributes[attribute].size;\n        sections.forEach(function(section)  {\n            let filler = get(section.style);\n            filler.numVertices = filler.numVertices || 4;\n\n            section.buffers.forEach(function(e)  {\n                (!fb || fb.length !== size * e.numVertices) && (fb = new Float32Array(size * e.numVertices));\n                for (let iV = 0; iV < e.numVertices; iV += (filler.size ? filler.size(e, data[i]) : 1) * filler.numVertices) filler.set(fb, data[i++], iV);\n                gl.bindBuffer(gl.ARRAY_BUFFER, e[attribute]);\n                gl.bufferData(gl.ARRAY_BUFFER, fb, gl.DYNAMIC_DRAW);\n            });\n        });\n   }\n\n   this.updateEl = (gl, el, pos, get) => {\n        let storeToPos = (b, iV, iI) => {\n            for (let a in shader.attributes) {\n                gl.bindBuffer(gl.ARRAY_BUFFER, b[a]);\n                gl.bufferSubData(gl.ARRAY_BUFFER, shader.attributes[a].size*iV*e[a].BYTES_PER_ELEMENT, e[a]);\n            }\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.indices);\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, iI*e.indices.BYTES_PER_ELEMENT, e.indices);\n        };\n\n        let section = sectionsByStyle[el.style];\n        \n        let filler = get(section.style);\n        filler.numVertices = filler.numVertices || 4;\n        filler.numIndices = filler.numIndices || 6;\n             \n        iB=iS=0;\n\n        let buffer = section.buffers[this._iBs[pos]];\n        let s = filler.size ? filler.size(buffer, el) : 1;\n        let olds = this._sizes[pos];\n        if(s > olds){\n          console.error('Cannot set primitive to new value which has greater size ('+s+\" > \"+olds+\") - no enough empty space to fill in GL buffer\");\n          return;\n        }\n\n        init(filler, olds);\n        filler.set(e, el, 0, 0);\n\n        for(;s < olds; s++){\n          //zero fill empty spaces\n          zerofiller.set(e, s*filler.numVertices, s*filler.numIndices, filler.numVertices, filler.numIndices);\n        }\n\n        let iV = this._iVs[pos];\n        let iI = this._iIs[pos];\n        storeToPos(buffer, iV, iI);\n    };\n\n    this.draw = (context) => {\n        context.shader = shader;\n        shader.bind();\n\n        gl.uniformMatrix4fv(shader.uniforms.transform, false, context.transform);\n\n        sections.forEach(section => {\n            if (section.style.texture) {\n                section.style.texture.update && section.style.texture.update();\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, section.style.texture);\n                gl.uniform1i(shader.uniforms.texture, 0);\n            }\n\n            context.style = section.style;\n            if (bind(context)) return;\n\n            section.buffers.forEach(e => {\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, e.indices);\n\n                for (var a in shader.attributes) {\n                    var attribute = shader.attributes[a];\n                    gl.bindBuffer(gl.ARRAY_BUFFER, e[a]);\n                    gl.vertexAttribPointer(attribute.index, attribute.size, gl.FLOAT, false, 0, 0);\n                }\n\n                gl.drawElements(gl.TRIANGLES, e.numIndices, gl.UNSIGNED_SHORT, 0);\n            });\n        });\n\n        shader.unbind();\n    }\n  }\n  \n  static vertices(buffer, iV) {\n      for (let i = 2, j = 2 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static singles(buffer, iV) {\n    for (let i = 2, j = 1 * iV, n = arguments.length; i < n; i++, j++) buffer[j] = arguments[i];\n  }\n  \n  static colors(buffer, iV) {\n    for (let i = 2, j = 4 * iV, n = arguments.length; i < n; i++) {\n        let c = arguments[i];\n        buffer[j++] = c.r;\n        buffer[j++] = c.g;\n        buffer[j++] = c.b;\n        buffer[j++] = c.a;\n    }\n  }\n  \n  static indices(buffer, iV, iI){\n      for (let i = 3, j = iI, n = arguments.length; i < n; i++, j++) buffer[j] = iV + arguments[i];\n  }\n\n  static quad(buffer, iV, iI) {\n      primitive.indices(buffer, iV, iI, 0, 1, 2, 2, 3, 0);\n  }\n\n  static get maxBufferSize(){\n    return 65536;\n  } \n}","import ccNetViz_gl from './gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nvar defaultAttr = {color: 4};\n\nexport default class Shader {\n  constructor(gl, vs, fs, shaderParams) {\n    this._gl = gl;\n    this._vs = vs;\n    this._fs = fs;\n    \n    let program = this._program = gl.createProgram();\n    \n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.VERTEX_SHADER, vs));\n    gl.attachShader(program, ccNetViz_gl.createShader(gl, gl.FRAGMENT_SHADER, fs));\n    gl.linkProgram(program);\n    \n    this.uniforms = {};\n    let n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveUniform(program, i).name;\n        this.uniforms[name] = gl.getUniformLocation(program, name);\n    }\n    \n    let attrParams = (shaderParams || {}).attribute || {};\n\n    this.attributes = {};\n    n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) {\n        let name = gl.getActiveAttrib(program, i).name;\n        this.attributes[name] = { index: i, size: attrParams[name] || Shader.attribute[name] || 2 };\n    }\n    \n  }\n  \n  static get attribute(){\n    return defaultAttr;\n  }\n  \n  bind () {\n    this._gl.useProgram(this._program);\n\n    let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < n; i++) this._gl.enableVertexAttribArray(i);\n  }\n\n  unbind () {\n      let n = this._gl.getProgramParameter(this._program, this._gl.ACTIVE_ATTRIBUTES);\n      for (let i = 0; i < n; i++) this._gl.disableVertexAttribArray(i);\n  }\n  \n};","import ccNetViz_quadtree from '../quadTree' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(nodes, edges, options = {}) {\n    const edgeDistance = 15,\n          edgeStrength = 1,\n          friction = 0.9,\n          charge = -30,\n          gravity = 0.4,\n          theta2 = .64,\n          size = [1,1],\n          chargeDistance2 = Infinity;\n\n    let   alpha,\n          distances = [],\n          strengths = [],\n          charges = [];\n\n\n    function accumulate(quad, alpha, charges) {\n        let cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            let nodes = quad.nodes;\n            let c, n = nodes.length;\n\n            for (let i = 0; i < n; i++) {\n                c = nodes[i];\n                if (c == null) continue;\n                accumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - 0.5;\n                quad.point.y += Math.random() - 0.5;\n            }\n            let k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    function repulse(node) {\n        return function(quad, x1, _, x2) {\n            if (quad.point !== node) {\n                let dx = quad.cx - node.x;\n                let dy = quad.cy - node.y;\n                let dw = x2 - x1;\n                let dn = dx * dx + dy * dy;\n\n                if (dw * dw / theta2 < dn) {\n                    if (dn < chargeDistance2) {\n                        let k = quad.charge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                    return true;\n                }\n\n                if (quad.point && dn && dn < chargeDistance2) {\n                    let k = quad.pointCharge / dn;\n                    node.px -= dx * k;\n                    node.py -= dy * k;\n                }\n            }\n            return !quad.charge;\n        };\n    }\n\n    function step() {\n        if ((alpha *= .99) < .05) {\n            alpha = 0;\n            return true;\n        }\n\n        let q, o, s, t, l, k, x, y;\n        let n = nodes.length;\n        let m = edges.length;\n\n        for (let i = 0; i < m; i++) {\n            o = edges[i];\n            s = o.source;\n            t = o.target;\n            x = t.x - s.x;\n            y = t.y - s.y;\n            if (l = (x * x + y * y)) {\n                l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                x *= l;\n                y *= l;\n                t.x -= x * (k = s.weight / (t.weight + s.weight));\n                t.y -= y * k;\n                s.x += x * (k = 1 - k);\n                s.y += y * k;\n            }\n        }\n\n        if (k = alpha * gravity) {\n            x = size[0] / 2;\n            y = size[1] / 2;\n\n            for (let i = 0; i < n; i++) {\n                o = nodes[i];\n                o.x += (x - o.x) * k;\n                o.y += (y - o.y) * k;\n            }\n        }\n\n        if (charge) {\n            accumulate(q = ccNetViz_quadtree(nodes), alpha, charges);\n\n            for (let i = 0; i < n; i++) {\n                let o = nodes[i];\n                !o.fixed && q.visit(repulse(o));\n            }\n        }\n\n        const rnd = (min,max) => Math.random() * (max-min) + min;\n        for (let i = 0; i < n; i++) {\n            o = nodes[i];\n            if (o.fixed || o.fixed2) {\n                o.x = o.px;\n                o.y = o.py;\n            }\n            else {\n                o.x -= (o.px - (o.px = o.x)) * friction;\n                o.y -= (o.py - (o.py = o.y)) * friction;\n\n                if(options && options.minX !== undefined){\n                    if(o.x < options.minX || o.x > options.maxX){\n                        o.x = rnd(options.minX, options.maxX);\n                    }\n                    if(o.y < options.minY || o.y > options.maxY){\n                        o.y = rnd(options.minY, options.maxY);\n                    }\n                }\n            }\n        }\n    };\n\n    this.apply = function() {\n        let n = nodes.length;\n        let d = Math.sqrt(n);\n        let s = 0.3 / d;\n\n        for (let i = 0; i < n; i++) {\n            let o = nodes[i];\n            o.weight = 0;\n            o.x = o.x !== undefined ? o.x : s + (i % d) / d;\n            o.y = o.y !== undefined ? o.y : s + Math.floor(i / d) / d;\n            o.px = o.x;\n            o.py = o.y;\n            charges[i] = charge;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            let o = edges[i];\n            o.source.weight++;\n            o.target.weight++;\n            distances[i] = edgeDistance;\n            strengths[i] = edgeStrength;\n        }\n\n        alpha = 0.1;\n        while (!step());\n\n        return true;\n    };\n};\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default function(points) {\n    let d, xs, ys, i, n, x1_, y1_, x2_, y2_;\n\n    x2_ = y2_ = -(x1_ = y1_ = Infinity);\n    xs = [], ys = [];\n    n = points.length;\n\n    for (i = 0; i < n; ++i) {\n        d = points[i];\n        if (d.x < x1_) x1_ = d.x;\n        if (d.y < y1_) y1_ = d.y;\n        if (d.x > x2_) x2_ = d.x;\n        if (d.y > y2_) y2_ = d.y;\n        xs.push(d.x);\n        ys.push(d.y);\n    }\n\n    let dx = x2_ - x1_;\n    let dy = y2_ - y1_;\n    dx > dy ? y2_ = y1_ + dx : x2_ = x1_ + dy;\n\n    function create() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function visit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            let sx = (x1 + x2) * 0.5;\n            let sy = (y1 + y2) * 0.5;\n            let children = node.nodes;\n\n            if (children[0]) visit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) visit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) visit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) visit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (n.leaf) {\n            let nx = n.x;\n            let ny = n.y;\n\n            if (nx !== null) {\n                if (nx === x && ny === y) {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n                else {\n                    let nPoint = n.point;\n                    n.x = n.y = n.point = null;\n                    insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            } else {\n                n.x = x, n.y = y, n.point = d;\n            }\n        } else {\n            insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n    }\n\n    function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        let xm = (x1 + x2) * 0.5;\n        let ym = (y1 + y2) * 0.5;\n        let right = x >= xm;\n        let below = y >= ym;\n        let i = below << 1 | right;\n\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = create());\n\n        right ? x1 = xm : x2 = xm;\n        below ? y1 = ym : y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n    }\n\n    function findNode(root, x, y, x0, y0, x3, y3) {\n        let minDistance2 = Infinity;\n        let closestPoint;\n\n        (function find(node, x1, y1, x2, y2) {\n            if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n            if (point = node.point) {\n                let point;\n                let dx = x - node.x;\n                let dy = y - node.y;\n                let distance2 = dx * dx + dy * dy;\n\n                if (distance2 < minDistance2) {\n                    let distance = Math.sqrt(minDistance2 = distance2);\n                    x0 = x - distance, y0 = y - distance;\n                    x3 = x + distance, y3 = y + distance;\n                    closestPoint = point;\n                }\n            }\n\n            let children = node.nodes;\n            let xm = (x1 + x2) * .5;\n            let ym = (y1 + y2) * .5;\n            let right = x >= xm;\n            let below = y >= ym;\n\n            for (let i = below << 1 | right, j = i + 4; i < j; ++i) {\n                if (node = children[i & 3]) switch (i & 3) {\n                    case 0: find(node, x1, y1, xm, ym); break;\n                    case 1: find(node, xm, y1, x2, ym); break;\n                    case 2: find(node, x1, ym, xm, y2); break;\n                    case 3: find(node, xm, ym, x2, y2); break;\n                }\n            }\n        })(root, x0, y0, x3, y3);\n\n        return closestPoint;\n    }\n\n    let root = create();\n    root.visit = f => visit(f, root, x1_, y1_, x2_, y2_);\n    root.find = (x, y) => findNode(root, x, y, x1_, y1_, x2_, y2_);\n\n    for (i = 0; i < n; i++) insert(root, points[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n    --i;\n\n    xs = ys = points = d = null;\n\n    return root;\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: David Tichy\n */\n\nexport default class {\n  constructor(nodes){\n    this._nodes = nodes;\n  }\n  \n  apply () {\n    for (let i = 0, n = this._nodes.length; i < n; i++) {\n      let o = this._nodes[i];\n      o.x = Math.random();\n      o.y = Math.random();\n    }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges, layout_options = {}) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._angle_step = 2*Math.PI/nodes.length;\n    if (layout_options.starting_angle == null)\n\tthis._starting_angle = 0;\n    else\n\tthis._starting_angle = layout_options.starting_angle;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[nd.nodes[i].index].x = 0.05+(1+Math.cos(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].y = 0.05+(1+Math.sin(this._starting_angle+i*this._angle_step))*.45;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeCentered(root, visited_leafs_parent=0, layer=1){\n      root.centered = true;\n      root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n      // branch order is for now stable but unpredictable, see layouts.cri\n      let visited_leafs = 0;\n      for (let i=0; i < root.children.length; i++){\n          let child = root.children[i];\n          if (child.centered != true){\n              visited_leafs += this.drawTreeCentered(child, visited_leafs+visited_leafs_parent, layer+1);\n          }\n      }\n      if (root.children == 0){\n          visited_leafs++;\n      }\n      // moving to parent, position node\n      root.y = this.stepy*(visited_leafs_parent+(visited_leafs-1)/2) + this.alphay;\n      root.x = (layer-1)*this.stepx + this.alphax;\n      return visited_leafs;\n  }\n\n  apply () {\n      // only one root node supported for now\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for non-trees (cyclical graphs) should be\n      // implemented separately for now\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      r = getRanges(leafs);\n      // each leaf y = [0+alpha,1-alpha]\n      this.alphay = r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      this.drawTreeCentered(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {getDepth, getRanges} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  drawTreeTop(root, visited_leafs_parent=0, layer=1){\n    // each node is in vertically on the top of the stack of its leafs\n    root.visited = true;\n    root.depth_visited = false; // so that getDepth does not raise error if another tree layout is called subsequently\n    root.x = this.alphax+this.stepx*(layer-1);\n    root.y = 1-(this.alphay+this.stepy*(visited_leafs_parent));\n    // visit children until leafs\n    let visited_leafs = 0;\n    for (let i=0; i < root.children.length; i++){\n       let child = root.children[i];\n       if (child.centered != true){\n         visited_leafs += this.drawTreeTop(child, visited_leafs+visited_leafs_parent, layer+1);\n       }\n    }\n    if(root.children.length == 0){\n        visited_leafs++;\n    }\n    return visited_leafs;\n}\n  apply () {\n      let nodes = this._nodes;\n      // make hierarchy, annotate parent(s) and children in the nodes\n      // this layout can be run on any graph actually\n      // for which the children might be selected e.g. for their degree\n      // draw can be decided on other measures, such as closeness centrality or clustering\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.centered = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the root\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].parents.length == 0){\n              var root = nodes[i];\n              break;\n          }\n      }\n      const depth = getDepth(root);\n      // each layer of tree x = [0+alpha,1-alpha]\n      let r = getRanges(depth);\n      this.alphax = r.start;\n      this.stepx = r.step;\n      // posx = alphax + stepx*(depth-1)\n\n      // find the number of leafs to distribute nodes vertically\n      let leafs = 0;\n      nodes.forEach(function(node){\n          if (node.children.length == 0){\n              leafs++;\n          }\n      });\n      // each leaf y = [0+alpha,1-alpha]\n      r = getRanges(leafs);\n      this.alphay =  r.start;\n      this.stepy = r.step;\n      // posy = alphay + stepy*(leafn-1)\n\n      // give nodes their positions\n      // plot each branch in depth first,\n      // increment y position for each leaf\n      // backtracking to go from leaf to parents\n      // and decide if parent is visited (always in tree layout)\n\n      this.drawTreeTop(root);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n  }\n\n  makeLayers(nodes, layer){\n      if (nodes.length > 1){\n          const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n          for (let i=0; i<nodes.length; ++i){\n              nodes[i].visited = true;\n              nodes[i].layer = layer; // makes x afterwards\n              nodes[i].y = this.alphay + i*stepy;\n          }\n      }\n      else {\n          nodes[0].visited = true;\n          nodes[0].layer = layer; // makes x afterwards\n          nodes[0].y = 0.5;\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let neighbors = nodes[i].parents.concat(nodes[i].children);\n          for (let j=0; j < neighbors.length; j++){\n              if (neighbors[j].visited == false && !next_layer.includes(neighbors[j])){\n                  next_layer.push(neighbors[j]);\n              }\n          }\n      }\n      if (next_layer.length == 0){\n          return layer;\n      }\n      else {\n          return this.makeLayers(next_layer, layer+1);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n      let nodes = this._nodes;\n      nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the first of these approaches.\n      const depth = this.makeLayers(roots, 1);\n      // each layer of tree x = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(depth-1);\n      // posx = alphax + stepx*(depth-1)\n      for (let i=0; i<this._nodes.length; ++i){\n          this._nodes[i].x = this.alphax + stepx*(this._nodes[i].layer - 1);\n      }\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nfunction isOrphan(node){\n    let orphan = true;\n    for (let i=0; i<node.parents.length; ++i){\n        let parent_ = node.parents[i];\n        if (parent_ != node)\n            orphan = false;\n    }\n    for (let i=0; i<node.children.length; ++i){\n        let child = node.children[i];\n        if (child != node)\n            orphan = false;\n    }\n    return orphan;\n}\n\nexport default class {\n  // this layout should handle any digraph\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this.alphay = 0.05; // y margin\n    this.alphax = 0.05; // x margin\n    this.components = {\"current_component\": 0, \"depth\": 1};\n    this.unvisited = nodes;\n  }\n  \n  initHierarchy(){\n      this._nodes.forEach(function(n,i){\n          n.parents = [];\n          n.children = [];\n          n.visited = false;\n      });\n      this._edges.forEach(function(e,i){\n          e.source.children.push(e.target);\n          e.target.parents.push(e.source);\n      });\n  }\n\n  separateOrphans(){\n      let orphans = [];\n      let nodes = [];\n      for (let i=0; i< this._nodes.length; ++i){\n          let node = this._nodes[i];\n          if (isOrphan(node))\n              orphans.push(node);\n          else\n              nodes.push(node);\n      }\n      return orphans;\n  }\n\n  findRoots(nodes){\n      // find the roots:\n      // nodes defined by the user as roots OR\n      // nodes with in-degree == 0 OR\n      // nodes with greatest in-degree (or degree if undirected graph)\n      let roots = [];\n      for (let i = 0; i < nodes.length; i++){\n          if (nodes[i].isroot == true){ // has to be on the json file of the graph\n              roots.push(nodes[i]);\n          }\n      }\n      if (roots.length == 0){\n          for (let i = 0; i < nodes.length; i++){\n              if (nodes[i].parents.length == 0){\n                  roots.push(nodes[i]);\n              }\n          }\n      }\n      if (roots.length == 0){\n          // calculate max out-degree\n          let max_outdegree = 0;\n          nodes.forEach(function(node){\n              if (node.children.length > max_outdegree){\n                  max_outdegree = node.children.length;\n              }\n          });\n          // choose vertices with greatest out-degree\n          nodes.forEach(function(node){\n              if (node.children.length == max_outdegree){\n                  roots.push(node);\n              }\n          });\n      }\n      return roots;\n  }\n\n  placeOrphans(nodes, max_layer){\n      const stepy = (1 - 2*this.alphay)/(nodes.length-1);\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].y = this.alphay + i*stepy;\n          nodes[i].x = max_layer+1;\n      }\n      if (nodes.length > 0)\n          return max_layer+1;\n      else\n          return max_layer;\n  }\n\n  unvisitedNodes(){\n      let nodes = [];\n      let orphans = this.orphans;\n      this.unvisited.forEach(function(node){\n          if (node.visited == false && !(node in orphans))\n              nodes.push(node);\n      });\n      if (nodes.length != this.unvisited){\n          this.maybe_more = true;\n          this.unvisited = nodes;\n      } else this.maybe_more = false;\n  }\n\n  placeAdditional(){\n      // place non-visited nodes in between layers\n      let aux_layers = {};\n      let c = this.components[this.components.current_component];\n      let layers = c.layers;\n      for (let i=0; i<this.unvisited.length; ++i){\n          let node = this.unvisited[i];\n          let lowest_layer = this.components.depth;\n          let child_found = false;\n          for(let j=0; j<node.children.length; ++j){\n              let child = node.children[j];\n              if (child.visited == true){\n                  child_found = true;\n                  if(child.layer <= lowest_layer){ // child has to be visited to have a layer\n                      lowest_layer = child.layer;\n                  }\n                  break;\n              }\n          }\n          if (child_found){\n              node.visited = true;\n              // node.index = lowest_layer-sep;\n              if ( !((lowest_layer-sep) in layers))\n                  layers[lowest_layer-sep] = []\n              layers[lowest_layer-sep].push(node)\n          }\n          else {\n              let lowest_layer = max_layer;\n              let parent_found = false;\n              for(let j=0; j<node.parents.length; ++j){\n                  let parent_ = node.parents[j];\n                  if (parent_.visited == true){\n                      parent_found = true;\n                      if(parent_.layer <= lowest_layer){ // child has to be visited to have a layer\n                          lowest_layer = parent_.layer;\n                      }\n                  }\n              }\n              if (parent_found){\n                  node.visited = true;\n                  node.x = lowest_layer+sep;\n                  if ( !((lowest_layer+sep) in layers) )\n                      layers[lowest_layer+sep] = []\n                  layers[lowest_layer+sep].push(node)\n              }\n          }\n      }\n  }\n\n  initializeComponent(component){\n      this.components[component] = {};\n      this.components[component].max_nodes_layer = 0;\n      if (component > 0)\n          this.components[component].index_offset = this.components[component-1].vertical_nodes;\n      else\n          this.components[component].index_offset = 0;\n      this.components[component].current_layer = 1;\n      //this.components[component].layers = {\"nodes\": [], \"layer_value\": 1};\n      this.components[component].layers = {};\n      this.components[component].vertical_nodes = 0;\n  }\n\n  layerNodes(nodes){\n      if (!(this.components.current_component in this.components))\n          this.initializeComponent(this.components.current_component);\n      let c = this.components[this.components.current_component];\n      if (nodes.length > c.vertical_nodes)\n          c.vertical_nodes = nodes.length;\n      c.layers[c.current_layer] = [];\n      for (let i=0; i<nodes.length; ++i){\n          nodes[i].visited = true;\n          c.layers[c.current_layer].push(nodes[i]);\n      }\n      let next_layer = [];\n      for (let i=0; i<nodes.length; i++){\n          let candidates = nodes[i].children;\n          for (let j=0; j < candidates.length; j++){\n              if (candidates[j].visited == false && !next_layer.includes(candidates[j])){\n                  next_layer.push(candidates[j]);\n              }\n          }\n      }\n      if (next_layer.length > 0){\n          c.current_layer++;\n          if (this.components.depth<c.current_layer)\n              this.components.depth = c.current_layer;\n          this.layerNodes(next_layer);\n      }\n  }\n\n  apply () {\n      // left-right tree by default, let user choose\n      // top-down, bottom-top, right-left in subsequent versions\n      // hierarchical layouts for trees (acyclic graphs) are\n      // implemented separately for now\n\n      // number of layers and max number of nodes in each layer\n      // has to be found by making the layout\n      // there are two approaches to finding the nodes in each layer:\n      // 1) each layer has all the neighbors of the nodes in the previous layer\n      // 2) follow links and then place non visited nodes on the layer of neighbors OR\n      // this layout implements the second of these approaches.\n\n      this.initHierarchy();\n      this.orphans = this.separateOrphans();\n      this.unvisitedNodes();\n      while (this.unvisited.length > 0){\n          let roots = this.findRoots(this.unvisited);\n          this.layerNodes(roots);\n          this.unvisitedNodes(); // update unvisited nodes\n          this.maybe_mode = true;\n          while (this.maybe_more){\n              this.placeAdditional(); // place additional nodes linked to this component\n              this.unvisitedNodes(); // update unvisited nodes\n          }\n          this.components.current_component++;\n      }\n      this.components.vertical_nodes = 0;\n      for (let i=0; i<this.components.current_component; i++){\n          this.components.vertical_nodes += this.components[i].vertical_nodes;\n      }\n\n      // layerNodes should populate the dictionary this.components of components and aux variables:\n      // components[x] is a component, x is an integer\n      // components[x].vertical_nodes is the maximum number of nodes in a layer for the component\n      // components[x].layer[j] is the j-th layer on the component, j can be fractional\n      // components[x].index_offset is the number of nodes positioned in above components\n      // components.ncomponents is the number of components\n      // components.vertical_nodes is the sum of the max nodes in any layer of each component\n      // components.depth is the maximum number of layers\n\n      // each layer of tree xy = [0+alpha,1-alpha]\n      const stepx = (1-2*this.alphax)/(this.components.depth);\n      const stepy = (1-2*this.alphay)/(this.components.vertical_nodes);\n      for (let i=0; i<this.components.current_component; i++){\n          let component = this.components[i];\n          for (let layer_val in component.layers){\n              let layer = component.layers[layer_val];\n              if (layer.length == 1){\n                  let node = layer[0];\n                  node.x = this.alphax + stepx*layer_val;\n                  node.y = this.alphay + stepy*(component.index_offset + component.vertical_nodes/2);\n              } else {\n                  for (let k=0; k<layer.length; ++k){\n                      let node = layer[k];\n                      node.x = this.alphax + stepx*layer_val;\n                      node.y = this.alphay + stepy*(component.index_offset + k);\n                  }\n              }\n          }\n      }\n      this.placeOrphans(this.orphans);\n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {EigenvalueDecomposition} from 'ml-matrix';\nimport {create2dArray} from './utils';\n\nfunction twoSmallest (arr) {\n    const min = Math.min.apply(null, arr), // get the max of the array\n        mini = arr.indexOf(min);\n    arr[mini] = Infinity; // replace max in the array with -infinity\n    const second_min = Math.min.apply(null, arr), // get the new max \n        second_mini = arr.indexOf(second_min);\n    arr[second_mini] = Infinity; // replace max in the array with -infinity\n    const third_min = Math.min.apply(null, arr), // get the new max \n        third_mini = arr.indexOf(third_min);\n    return [second_mini, third_mini];\n}\n\nfunction normalize (x, y) {\n    let maxx = Math.max.apply(null, x.map(Math.abs)),\n        maxy = Math.max.apply(null, y.map(Math.abs));\n    let minx = Math.min.apply(null, x),\n        miny = Math.min.apply(null, y);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx-minx)*1.25);\n        y[i] = 0.1+(y[i]-miny)/((maxy-miny)*1.25);\n    }\n    return [x, y];\n}\n\nexport default class {\n  // get degree of all nodes\n  // let user define at least: starting angle and radius and\n  // clock/cclock direction\n  // size of vertices\n  // more: a ratio of compactness for the more/less connected nodes\n  // a spiral ratio with a rotation ratio for having more than 2pi\n  // distribution of nodes when spiriling\n  // use some other ordering criterion than degree? Strength?\n  // defined by user and found as attribute of each node?\n  // random ordering, minimal crossing of edges?\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n  }\n\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = -1; // not considering edge weight for now (the example json files don't have weight)\n          A[j][ii] = -1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      // build the diagonal of degrees\n      // NOT subtract adjacency from degrees but:\n      // substitute diagonal by degrees\n      for (let i=0; i<this._nodes.length; ++i){\n          A[i][i] = -A[i].reduce((a, b) => a+b, 0);\n      }\n      let foo = new EigenvalueDecomposition(A);\n      const iii = twoSmallest(foo.realEigenvalues);\n      const foo_ = foo.eigenvectorMatrix.transpose();\n      const x = foo_[iii[0]];\n      const y = foo_[iii[1]];\n      const xy = normalize(x, y);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // var fooo = new Matrix.EigenvalueDecomposition(A);\n      // recipe from http://www.sfu.ca/personal/archives/richards/Pages/NAS.AJS-WDR.pdf\n      // and implemented in networkx/drawing/layout.py\n      this._nodes.forEach(function(node, i){\n          node.x = xy[0][i];\n          node.y = xy[1][i];\n      }); \n  }\n};\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\n// inspired in Matlab implementation\n// and JS transcription in\n// https://github.com/alanmeeson/spectral-graph-layout\n\nimport {create2dArray} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._epsilon = 1e-8; // tolerance\n    this._MAX_ITTERATIONS = 100; //We use power iteration, this is analogous to wall time to avoid infinite loops.\n    this._num_elements = nodes.length; //number of nodes in graph\n    this._dims = 2;\n  }\n  apply () {\n      let A = create2dArray(this._nodes.length, this._nodes.length);\n      // build the adjacency matrix\n      for (let i=0; i<this._edges.length; ++i){\n          let ii = this._edges[i].source.index;\n          let j = this._edges[i].target.index;\n          A[ii][j] = 1; // not considering edge weight for now (the example json files don't have weight)\n      }\n      const D = deg(A); //degree of each node in graph (number of connections).\n\n      const dims = this._dims + 1; //add one to the dims to allow for the first eigen vector\n      let u = new Array(dims);//declare the eigen vector matrix\n      u[0] = normalize(ones(this._num_elements)); //create & normalize the first eigen vector\n      for (let i = 1; i < dims; i++) u[i] = zeros(this._num_elements); //create empty space for the other eigen vectors\n\n      //Power iteration to determine the remaining eigen vectors.\n      for (let k=1; k < dims; k++) { //for each eigen vector after the first, \n          //initialize eigen vector with random values\n          let uhk = normalize(rand(this._num_elements));\n\n          let itt_count = 0; //we are allowing a max of 100 iterations, to avoid hanging and infinite loops. (specified above in constants)\n          let stop = false; //stopping criterion flag.\n          while (!stop) { // do...while using flags to keep it consistent with my matlab implementation\n\n              //D-orthogonalize against previous eigenvectors\n              let uk = uhk.slice();\n              for (let l = 0; l < k; l++) {\t\t\t\t\t\t\n                  let ul = u[l]; //extract the l-th eigen vector\n\n                  //Calculate (uk'.D.ul)/(ul'.D.ul)\n                  let top_ = 0;\n                  let bottom = 0;\n                  for (let vmi = 0; vmi < uk.length; vmi++) {\n                      top_ += (uk[vmi] * D[vmi] * ul[vmi]);\n                      bottom += (ul[vmi] * D[vmi] * ul[vmi]);\n                  }\n                  const ratio = top_ / bottom;\n\n                  //uk = uk - ((uk' . D . ul) / (ul' . D ul)) . ul\n                  for (let vsi = 0; vsi < uk.length; vsi++) {\n                      uk[vsi] = uk[vsi] - (ratio * ul[vsi]);\n                  }\n              }\n\n              //multiply with .5(I+D^-1 A)\n              for (let i = 0; i < uhk.length; i++) {\n                  uhk[i] = 0.5 * (uk[i] + dot(A[i], uk) / D[i]);\n              }\n\n\n              uhk = normalize(uhk);\n\n              itt_count = itt_count + 1;\n              stop = (itt_count > 100) | !(dot(uhk, uk) < (1-this._epsilon));\n          }\n          u[k] = uhk.slice();\t\n      }\n\n      //discard the first eigenvector which should be [ones].\n      // var v = new Array(u.length);\n      // for (var i=0; i < u.length; i++) {\n      //     v[i] = new Array(u[i].length);\n      //     for (var j=0; j < u[i].length; j++) v[i][j] = u[i][j];\n      // }\n      const x = normalize2(u[1]);\n      const y = normalize2(u[2]);\n      this._nodes.forEach(function(node, i){\n          node.x = x[i];\n          node.y = y[i];\n      }); \n  }\n};\n\nfunction deg(graph) {\n    //Calculate the degree of each node from the graph matrix.\n    let d = zeros(graph.length);\n\n    //degree of node i is the sum of the weights of all edges connected to it.\n    for (let i = 0; i < graph.length; i++) {\n        let node_degree = 0;\n        for (let j = 0; j < graph[i].length; j++) {\n            node_degree += graph[i][j];\n        }\n        d[i] = node_degree+1;\n    }\n\n    return d;\n}\n\nfunction dot(a,b) {\n    //inner product of two vectors\n    let d = 0;\n    for (let i = 0; i < a.length; i++) {\n        d += a[i] * b[i];\n    }\n    return d;\n}\n\nfunction euclideanDistance(coordinates) {\n    //calculate the euclidean distance between two points/vectors.\n    // used for normalization.\n    let d = 0;\n\n    for (let i = 0; i < coordinates.length; i++) {\n        d += Math.pow(coordinates[i], 2);\n    }\n    return Math.sqrt(d);\n}\n\nfunction normalize(arr) {\n    //normalizes a vector = arr/||arr||\n    const d = euclideanDistance(arr);\n    let narr = new Array(arr.length);\n    for (let i = 0; i < arr.length; i++) {\n        narr[i] = arr[i] / d;\n    }\n\n    return narr;\n}\n\nfunction rand(n) {\n    //create a vector of length n and fill with random numbers.\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = Math.random();\n    return arr;\n}\n\nfunction add(a, b) {\n    let c = new Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        c[i] = new Array(a[i].length);\n        for (let j = 0; j < a[i].length; j++) c[i][j] = a[i][j] + b[i][j];\n    }\n    return c;\n}\n\nfunction symmetricRandMatrix(n, ulim) {\n    let mat = new Array(n);\n    for (let i = 0; i < n; i++) {\n        mat[i] = new Array(n);\n        mat[i][i] = 0;\n    }\n    for (let i = 0; i < n; i++) {\n        for (let j = i + 1; j < n; j++) {\n            mat[i][j] = ulim * Math.random();\n            mat[j][i] = mat[i][j];\n        }\n    }\n    return mat;\n}\n\nfunction zeros(n) {\n    //create a vector filled with zeros\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 0;\n    return arr;\n}\n\nfunction ones(n) {\n    //create a vector filled with ones\n    let arr = new Array(n);\n    for (let i = 0; i < n; i++) arr[i] = 1;\n    return arr;\n}\n\nfunction normalize2 (x) {\n    let maxx = Math.max.apply(null, x.map(Math.abs));\n    let minx = Math.min.apply(null, x);\n    for(let i=0; i<x.length; ++i){\n        x[i] = 0.1+(x[i]-minx)/((maxx - minx)*1.25);\n    }\n    return x;\n}\n","/**\n *  Copyright (c) 2017, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Renato Fabbri\n */\n\nimport {degrees} from './utils';\n\nexport default class {\n  // get degree of all nodes\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05; // from [0,1] borders\n    this._radius = 0.05; // of the empty circle on the center\n    this._nlines = 5;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nodes_segment = this._nodes.length / this._nlines;\n      const segment = 0.5 - (this._margin + this._radius);\n      const step = segment / nodes_segment;\n      const angle = 2*Math.PI/this._nlines;\n      let j = 0;\n      for(let i=0; i<this._nodes.length; ++i){\n          let ii = nd.nodes[i].index;\n          this._nodes[ii].x = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.cos(angle*j+Math.PI/2);\n          this._nodes[ii].y = 0.5+(this._radius + step*(i-j*nodes_segment))*Math.sin(angle*j+Math.PI/2);\n          j = Math.floor(i/nodes_segment);\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const sq = Math.sqrt(this._nodes.length);\n      const reminder = sq - Math.floor(sq);\n      if (reminder > 0)\n\t  var nnodes = Math.floor(sq)+1;\n      else\n\t  var nnodes = sq;\n      const step = (1 - this._margin*2)/nnodes;\n\n      const nlines = this._nodes.length/nnodes;\n      const reminder2 = nlines - Math.floor(nlines);\n      if (reminder2 > 0)\n\t  var nlines2 = Math.floor(nlines)+1;\n      else\n\t  var nlines2 = nlines;\n      const stepy = (1-2*this._margin)/(nlines2-2);\n      for (let i=0; i<this._nodes.length; ++i){\n\t  let j = Math.floor(i/(nnodes+1));\n          this._nodes[nd.nodes[i].index].x = this._margin+step*(i-j*(nnodes+1));\n          this._nodes[nd.nodes[i].index].y = this._margin+stepy*j;\n          this._nodes[nd.nodes[i].index].weight = nd.degrees[i];\n      }\n  }\n};\n","import {degrees} from './utils';\n\nexport default class {\n  // the hubs are on the first half of the sinusoid period\n  // the intermediary are on the second half\n  // and the periphery are on the upper straight line\n  // further versions should enable the choice of other\n  // fractions of hubs, intermediary and peripheral vertices\n  // or the Erdös sectioning.\n  // maybe also let the user set the endpoints of the periphery segment\n  constructor(nodes, edges) {\n    this._nodes = nodes;\n    this._edges = edges;\n    this._margin = 0.05;\n    this._hubs = 0.1; // 10%\n    this._intermediary = 0.2;\n  }\n  apply () {\n      let nd = degrees(this._nodes, this._edges);\n      const nhubs_intermediary = Math.floor(this._nodes.length*(this._hubs + this._intermediary));\n      const nhubs = Math.floor(this._nodes.length*this._hubs);\n      const stepx1 = ((1 - 2*this._margin)/2)/(nhubs - 1);\n      const steprad = Math.PI/(nhubs - 1); \n      let i = 0;\n      while (i < nhubs ){\n        this._nodes[nd.nodes[i].index].x = this._margin + stepx1*i;\n        this._nodes[nd.nodes[i].index].y = this._margin + 0.4 + 0.4*Math.sin(i*steprad);\n\t++i;\n      }\n      const nintermediary = nhubs_intermediary - nhubs;\n      const steprad2 = Math.PI/nintermediary; \n      const stepx2 = ((1 - 2*this._margin)/2)/nintermediary;\n      i = 0;\n      while (i < nintermediary ){\n        this._nodes[nd.nodes[i+nhubs].index].x = 0.5 + stepx2*(i+1);\n        this._nodes[nd.nodes[i+nhubs].index].y = this._margin + 0.4 + 0.4*Math.sin(Math.PI+(i+1)*steprad2);\n\t++i;\n      }\n      const p0 = [0.85, 0.75];\n      const p1 = [0.4, 1-this._margin];\n      const nperipheral = this._nodes.length - nhubs_intermediary;\n      const stepxx = (p1[0]-p0[0])/(nperipheral - 1);\n      const stepy = (p1[1]-p0[1])/(nperipheral - 1);\n      i = 0;\n      while (i < nperipheral ){\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].x = p0[0] + stepxx*i;\n        this._nodes[nd.nodes[i+nhubs_intermediary].index].y = p0[1] + stepy*i;\n\t++i;\n      }\n  }\n};\n","import rbush from './rbush' ;\nimport ccNetViz_geomutils from '../geomutils' ;\nimport {partitionByStyle, getPartitionStyle} from '../primitiveTools' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska - http://alessaska.cz/\n */\n\n\n\nconst EPS = Number.EPSILON || 1e-14;\n\n\n\n\n//solving cube analyticaly for bezier curves\nfunction cuberoot(x) {\n    const y = Math.pow(Math.abs(x), 1/3);\n    return x < 0 ? -y : y;\n}\n\nfunction solveCubic(a, b, c, d) {\n    if (Math.abs(a) < 1e-8) { // Quadratic case, ax^2+bx+c=0\n        a = b; b = c; c = d;\n        if (Math.abs(a) < 1e-8) { // Linear case, ax+b=0\n            a = b; b = c;\n            if (Math.abs(a) < 1e-8) // Degenerate case\n                return [];\n            return [-b/a];\n        }\n\n        const D = b*b - 4*a*c;\n        if (Math.abs(D) < 1e-8)\n            return [-b/(2*a)];\n        else if (D > 0)\n            return [(-b+Math.sqrt(D))/(2*a), (-b-Math.sqrt(D))/(2*a)];\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3*a*c - b*b)/(3*a*a);\n    const q = (2*b*b*b - 9*a*b*c + 27*a*a*d)/(27*a*a*a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) { // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) { // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = q*q/4 + p*p*p/27;\n        if (Math.abs(D) < 1e-8) {       // D = 0 -> two roots\n            roots = [-1.5*q/p, 3*q/p];\n        } else if (D > 0) {             // Only one real root\n            const u = cuberoot(-q/2 - Math.sqrt(D));\n            roots = [u - p/(3*u)];\n        } else {                        // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2*Math.sqrt(-p/3);\n            const t = Math.acos(3*q/p/u)/3;  // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = 2*Math.PI/3;\n            roots = [u*Math.cos(t), u*Math.cos(t-k), u*Math.cos(t-2*k)];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++)\n        roots[i] -= b/(3*a);\n\n    return roots;\n}\n\n//function distanceToBezier(x,y,ax,ay,bx,by,cx,cy){\nfunction distance2ToBezier(x,y,a,d,b,e,c,f){\n  //based on compute derivation of: d/dt ((X - (a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t))^2 + (Y - (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t))^2)\n  \n  const A =   4*a*a  - 16*a*b + 8*a*c  + 16*b*b - 16*b*c + 4*c*c  + 4*d*d  - 16*d*e + 8*d*f  + 16*e*e - 16*e*f + 4*f*f;\n  const B = - 12*a*a + 36*a*b - 12*a*c - 24*b*b + 12*b*c - 12*d*d + 36*d*e - 12*d*f - 24*e*e + 12*e*f;\n  const C =   12*a*a - 24*a*b + 4*a*c  - 4*a*x  + 8*b*b  + 8*b*x  - 4*c*x  + 12*d*d - 24*d*e + 4*d*f  - 4*d*y  + 8*e*e + 8*e*y - 4*f*y\n  const D = - 4*a*a  + 4*a*b  + 4*a*x  - 4*b*x  - 4*d*d  + 4*d*e  + 4*d*y  - 4*e*y;\n    \n  const eqresult = solveCubic(A,B,C,D);\n  \n  \n  //loop through all possible solitions to find out which point is the nearest\n  let mindist = Infinity;\n  for(let i = 0; i < eqresult.length; i++){\n    const t = eqresult[i];\n    \n    if(t < 0 || t > 1)\n      continue;\n    \n    //point at bezier curve\n    const px = a*(1-t)*(1-t)+2*b*t*(1-t)+c*t*t;\n    const py = d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t;\n    \n    const dist = distance2(x,y,px,py);\n    if(dist < mindist)\n      mindist = dist;\n    \n  }\n  \n  return mindist;\n}\n\n/*\n * @param v - array of with points [x1,y1,x2,y2 .... ]\n * @return array representing bounding box [x1,y1,x2,y2]\n */\nfunction getBBFromPoints(v){\n  let xmin = Infinity;\n  let xmax = -xmin;\n  let ymin = Infinity;\n  let ymax = -ymin;\n  \n  //x of points - even indexes in array \n  for(let i = 0; i < v.length; i+=2){\n    const val = v[i];\n    if(val < xmin) xmin = val;\n    if(val > xmax) xmax = val;\n  }\n  \n  //y of points - odd indexes in array \n  for(let i = 1; i < v.length; i+=2){\n    const val = v[i];\n    if(val < ymin) ymin = val;\n    if(val > ymax) ymax = val;\n  }\n\n  return [xmin, ymin, xmax, ymax];\n}\n\n//distance from point to point\nfunction distance2(x1,y1,x2,y2){\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return dx * dx + dy * dy;\n}\n\n//distance from point to line\nfunction pDistance2(x, y, x1, y1, x2, y2) {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  return distance2(x,y,xx,yy);\n}\n\nfunction lineIntersectsLine(l1p1x, l1p1y, l1p2x, l1p2y, l2p1x, l2p1y, l2p2x, l2p2y)\n{\n    let q = (l1p1y - l2p1y) * (l2p2x - l2p1x) - (l1p1x - l2p1x) * (l2p2y - l2p1y);\n    let d = (l1p2x - l1p1x) * (l2p2y - l2p1y) - (l1p2y - l1p1y) * (l2p2x - l2p1x);\n\n    if( d == 0 )\n    {\n        return false;\n    }\n\n    let r = q / d;\n\n    q = (l1p1y - l2p1y) * (l1p2x - l1p1x) - (l1p1x - l2p1x) * (l1p2y - l1p1y);\n    let s = q / d;\n\n    if( r < 0 || r > 1 || s < 0 || s > 1 )\n    {\n        return false;\n    }\n\n    return true;\n}\n\nfunction pointInRect(px,py, x1, y1, x2, y2){\n  return px >= x1 - EPS && px <= x2 + EPS && py >= y1 - EPS && py <= y2 + EPS\n}\n\nfunction rectIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y){\n  return p1x <= r2x &&\n          p1y <= r2y &&\n          p2x >= r1x &&\n          p2y >= r1y;\n}\n\nfunction lineIntersectsRect(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(p1x, p1y, r1x, r1y, r2x, r2y) || pointInRect(p2x, p2y, r1x, r1y, r2x, r2y))\n      return true;\n    \n    return lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r1y, r2x, r1y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r1y, r2x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r2x, r2y, r1x, r2y) ||\n        lineIntersectsLine(p1x, p1y, p2x, p2y, r1x, r2y, r1x, r1y);\n}\n\nfunction eq(a,b){\n  return a >= b-EPS && a <= b+EPS;\n}\n\nfunction neq(a,b){\n  return !eq(a,b);\n}\n\n\nfunction checkBezierTkoef(a,d,b,e,c,f,t,q,s,r,v){\n  if(t < 0 || t > 1)\n    return false;\n  \n  if(neq(v-s,0)){\n    const x = (d*(1-t)*(1-t)+2*e*t*(1-t)+f*t*t)/(v-s);\n    if(x < 0 || x > 1)\n      return false;\n  }\n  \n  return true;\n}\n\nfunction bezierIntersectsLine(a,d,b,e,c,f, q,s,r,v){\n    //based on wolfram alpha: >> solve ((d*(1-x)*(1-x)+2*e*x*(1-x)+f*x*x) = s + ((-a*(x-1)*(x-1) + x*(2*b*(x-1)-c*x)+q)/(q-r))*(v - s)) for x <<\n\n    let t;\n    \n    let tden = -a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r;\n    if(neq(tden, 0)){\n      if(neq(q-r, 0)){\n        let sq1 = 2*a*s-2*a*v-2*b*s+2*b*v-2*d*r+2*e*q-2*e*r;\n        let sq = sq1*sq1 - 4*(-a*s+a*v+d*q-d*r-q*v+r*s)*(-a*s+a*v+2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r);\n        if(sq >= 0){\n          const t1 = a*s-a*v-b*s+b*v-d*q+d*r+e*q-e*r;\n  \n          t = (t1-0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n  \n          t = (t1+0.5*Math.sqrt(sq))/tden;\n          if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n            return true;\n        }\n      }\n    }\n\n    tden = -b*s+b*v+c*s-c*v+e*q-e*r-f*q+f*r;\n    if(eq(d, 2*e-f) && eq(a,2*b-c) && neq(tden, 0) && neq(q*s-q*v-r*s+r*v,0)){\n      t = -2*b*s+2*b*v+c*s-c*v+2*e*q-2*e*r-f*q+f*r-q*v+r*s;\n      t = t/(2*tden);\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    if(eq(s,v) && eq(d,2*e-f) && neq(e-f,0) && neq(q-r,0)){\n      t = (2*e-f-v)/(2*(e-f));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    let aeq = (2*b*s-2*b*v-c*s+c*v+d*q-d*r-2*e*q+2*e*r+f*q-f*r)/(s-v);\n    let val = b*d*s-b*d*v-2*b*e*s+2*b*e*v+b*f*s-b*f*v-c*d*s+c*d*v+2*c*e*s-2*c*e*v-c*f*s+c*f*v-d*e*q+d*e*r+d*f*q-d*f*r+2*e*e*q-2*e*e*r-3*e*f*q+3*e*f*r+f*f*q-f*f*r;\n    if(eq(a, aeq) && neq(val,0) && neq(q-r, 0)){\n      t = (2*b*s-2*b*v-c*s+c*v-2*e*q+2*e*r+f*q-f*r+q*v-r*s)/(2*(b*s-b*v-c*s+c*v-e*q+e*r+f*q-f*r));\n      if(checkBezierTkoef(a,d,b,e,c,f, q,s,r,v,t))\n        return true;\n    }\n\n    return false;\n}\n\nfunction bezierIntersectsRect(a,d,b,e,c,f, r1x, r1y, r2x, r2y)\n{\n    if(pointInRect(a, d, r1x, r1y, r2x, r2y) || pointInRect(c, f, r1x, r1y, r2x, r2y))\n      return true;\n    \n    const centerx = (r1x+r2x)/2;\n    const centery = (r1y+r2y)/2;\n    \n    const diffx = r1x-r2x;\n    const diffy = r1y-r2y;\n    \n    //performance optimalization based on distance\n    let diff2xy = diffx*diffx + diffy*diffy;\n    let dist2 = distance2ToBezier(centerx, centery, a,d,b,e,c,f);\n    if(dist2*4 > diff2xy)\n      return false;\n    if(dist2*4 <= Math.min(diffx*diffx, diffy*diffy))\n      return true;\n\n    return bezierIntersectsLine(a,d,b,e,c,f, r1y, r2x, r1y, r1y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r1y, r2x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r2x, r2y, r1x, r2y) ||\n        bezierIntersectsLine(a,d,b,e,c,f, r1x, r2y, r1x, r1y);\n}\n\nexport {\n        EPS, \n        bezierIntersectsRect, \n        bezierIntersectsLine, \n        lineIntersectsRect, \n        rectIntersectsRect, \n        pointInRect, \n        distance2ToBezier, \n        distance2, \n        pDistance2, \n        getBBFromPoints,\n        eq,\n        neq\n      };\n","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\n// this file creates webGL type textures of images example custom.html\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad, 5)];\n    this._textures = {}; //already converted to textures\n    this._pending = {}; //pending images \n    this._n = 0;  //counts pending images to be converted to textures\n  }\n\n  get(gl, img, action, options) { \n      var p = this._pending[img];\n      var t = this._textures[img];\n\n      \n      // TODO : add explanation about if-else statements below\n      if (p) {\n          p.push(action);\n      }\n      else if (t) {\n          action && action();\n      }\n\n      // if image is neither in this._pending array nor nor in already converted this._textures array\n      //add the image to the pending, then convert it to texture on line ccNetViz_gl.createTexture(gl, img,function)\n      // and remove it from pending + add it to textures\n      \n      else {\n          p = this._pending[img] = [action];\n          this._n++;\n          this._textures[img] = t = ccNetViz_gl.createTexture(gl, img, () => {\n              p.forEach(a => a && a());\n              delete this._pending[img];\n              \n              --this._n || this._load.forEach(l => l());\n          }, options);\n      }\n      return t;\n  }\n\n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n\n}","import ccNetViz_utils from '../utils' ;\nimport ccNetViz_gl from '../gl' ;\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(events, onLoad){\n    this._load = [events.debounce(onLoad || (() => {}), 5)];\n    this._files = {};\n    this._pending = {};\n    this._n = 0;\n  }\n  \n  _transformFile(data, dataType) {\n    if(dataType === 'json')\n      return JSON.parse(data);\n    return data;    \n  }\n  \n  get(url) {\n    return this._files[url];\n  }\n\n  /*\n   * @param type {\n   *   url: 'url of file',\n   *   success: callback\n   *   dataType \"text\" || \"json\"\n   * }\n   */\n  load(url, action, dataType) {\n    let p = this._pending[url];\n    let f = this._files[url];\n\n    if (p) {\n        p.push(action);\n    }\n    else if (f) {\n        action && action();\n    }\n    else {\n      p = this._pending[url] = [action];\n      this._n++;\n\n      ccNetViz_utils.ajax(url, (data) => {\n        this._files[url] = this._transformFile(data,dataType);\n        p.forEach(a => a && a(this._files[url]));\n        delete this._pending[url];\n        --this._n || this._load.forEach(l => l());\n      }, dataType=='arraybuffer'?dataType:undefined);\n    }\n    return f;\n  }\n  \n  onLoad (action) {\n    if(this.allLoaded())\n      action();\n    else\n      this._load.push(action);\n  }\n  \n  allLoaded(){\n    return ccNetViz_utils.emptyObject(this._pending);\n  }\n  \n}\n","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nimport ccNetViz_defaultTexts  from './default';\nimport ccNetViz_sdfTexts      from './sdf/sdf';\nimport ccNetViz_utils         from '../utils';\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n\n    this._modules = {\n      'default': new ccNetViz_defaultTexts(gl, files, textures),\n      'sdf': new ccNetViz_sdfTexts(gl, files, textures),\n    };\n  }\n\n  clear() {\n    for(let k in this._modules){\n      this._modules[k].clear();\n    }\n  }\n  \n  isSDF(font){\n    if(ccNetViz_utils.isObject(font)){\n      if(font.type === 'sdf'){\n        return true;\n      }\n    }\n    return false;\n  }\n  \n  getEngine(font) {\n    if(this.isSDF(font)){\n      return this._modules.sdf;\n    }\n    return this._modules.default;\n  }\n\n  bind () {\n    for(let k in this._modules){\n      this._modules[k].bind();\n    }\n  }\n  \n  remove () {\n    for(let k in this._modules){\n      this._modules[k].remove && this._modules[k].remove();\n    }\n  }\n\n};","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(gl, files, textures){\n    this._gl = gl;\n    this._size = 1024;\n\n    \n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._canvas.height = this._size;\n    this._canvas.style.width = this._canvas.style.height = this._size + 'px';\n    this._canvas.style.display = \"none\";\n    this._el = document.body.appendChild(this._canvas);\n\n    this._context = this._canvas.getContext('2d');\n    this._context.fillStyle = \"white\";\n    this._context.textAlign = \"left\";\n    this._context.textBaseline = \"top\";\n\n    this._rendered = this._texts = this._x = this._y = this._height = undefined;\n\n    this.texture = this._gl.createTexture();\n    \n  }\n\n  clear() {\n    this._rendered = {};\n    this._context.clearRect(0, 0, this._size, this._size);\n    this._height = this._x = this._y = 0;\n  }\n\n  setFont (font) {\n    var fontstr = font ? font.size+\"px \"+font.type : undefined;\n    \n    this._rendered [fontstr] = this._texts = this._rendered [fontstr] || {};\n    this._context.font = fontstr;\n    this._x = 0;\n    this._y += this._height;\n    this._height = font ? font.size + 1 : NaN;\n  }\n  \n  get fontSize(){\n    return this._height - 1;\n  }\n  \n  getTexture (style, onLoad){\n    onLoad();\n    return this.texture;\n  }\n\n  _getText (text) {\n    let result = this._texts[text];\n    if (!result) {\n        let width = this._context.measureText(text).width;\n        if (this._x + width > this._size) {\n            this._x = 0;\n            this._y += this._height;\n        }\n        this._context.fillText(text, this._x, this._y);\n        this._texts[text] = result = {\n            width: width,\n            height: this._height,\n            left: this._x / this._size,\n            right: (this._x + width) / this._size,\n            top: this._y / this._size,\n            bottom: (this._y + this._height) / this._size\n        };\n        this._x += width;\n    }\n    return result;\n  }\n  \n  get (text, x, y) {\n    let c = this._getText(text);\n    \n    let dx = x <= 0.5 ? 0 : -c.width ;\n    let dy = y <= 0.5 ? 0 : -c.height;\n    \n    return [{\n        width:  c.width,\n        height: c.height,\n        left:   c.left,\n        right:  c.right,\n        top:    c.top,\n        bottom: c.bottom,\n        dx: dx,\n        dy: dy\n      }];\n  }\n  \n  steps (text) {\n    return 1;\n  }\n\n  bind () {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this.texture);\n    this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, false);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._canvas);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n  }\n  \n  remove () {\n    this._context && this._el.parentNode.removeChild(this._el);\n  }\n\n};","import GlyphAtlas from './atlas';\nimport SpriteGenerator from './spriteGenerator';\n\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: Aleš Saska\n */\n\n\n// A simplified representation of the glyph containing only the properties needed for shaping.\nclass SimpleGlyph {\n  constructor(glyph, rect, buffer) {\n    const padding = 1;\n    this.advance = glyph.advance;\n    this.left = glyph.left - buffer - padding;\n    this.top = glyph.top + buffer + padding;\n    this.rect = rect;\n  }\n}\n\n\n// Multiplication factor by which the size will grow\nconst SIZE_GROWTH_RATE = 4;\n\n// Size in which we try to contian the glyphs\nconst DEFAULT_SIZE = 512;\n\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\n// Maybe the maximum size allowed of the atlas\nconst MAX_SIZE = 2048;\n\n\n// Class for the text engine\n\n// invoked only when main configuration object, the \"font\" is mentioned and\n// the proper link to the font file is present\nexport default class {\n\n  // new text engine object takes 3 arguments\n  // 1. gl = Webgl context\n  // 2. files = File object programmed in src/dataSources/files.js\n  // 3. texture = Texture object programmed in src/dataSources/textures.js\n\n  constructor(gl, files, textures) {\n    // Defines the dimensions of the texture\n    this.width = DEFAULT_SIZE;\n    this.height = DEFAULT_SIZE;\n\n    // Does nothing. Required in default.js text engine\n    this.clear();\n\n    // _files contains the file object of the glyph obtained via protobuf\n    this._files = files;\n\n    // Webgl Rendering context\n    this._gl = gl;\n\n    // Atlas object programmed in src/texts/sdf/atlas.js\n    this.atlas = new GlyphAtlas(this._gl, () => { this._cachedGlyphs = {}; });\n\n    // For every char_id, contains position, properties and buffer data\n    this._glyphs = {};\n\n    // For every char_id, contains position and properties\n    this._rects = {};\n\n    // glyphs that are cached from previous draw call of label for next one\n    this._cachedGlyphs = {};\n\n    // Client-Side builder of spritesheet\n    this.spriteGenerator = new SpriteGenerator();\n  }\n\n\n  // returns if we are using SDF TextEngine or not\n  get isSDF() {\n    return true;\n  }\n\n  // this is a dummy method to make 'interface' of sdf.js and default.js same\n  clear() {\n  }\n\n\n  /**\n   * style = object: {\n   *   pbf: <url to the font file on the server>\n   *   type: 'sdf' {Type of the font file & sdf => distance transformed spriteSheet}\n   * }\n   */\n  setFont(style) {\n    // curFont => current_font\n    // style.pbf examplar value = http://helikarlab.github.io/ccNetViz/fonts/FineHand/0-65535.pbf\n    this.curFont = style.pbf;\n  }\n\n  // FontSize is fixed and hardcoded i.e. 24\n  get fontSize() {\n    return 24;\n  }\n\n  //\n  getTexture(style, onLoad) {\n    // init with first most-used ASCII chars\n    for (let i = 0; i < 128; i++) {\n      // Cache the most used characters prior to the knowledge if they would be used in lables or not\n      // TODO: Ideally get methods should return something which in-turn should pe passed to other variables\n      this._getChar(String.fromCharCode(i));\n    }\n    onLoad && onLoad.apply(this, arguments);\n\n    // by calling this._getChar, we have updated the texture in this.atlas object\n    // following we are returning the updated object\n    // TODO: this code is not intuitive, we can write better\n    return this.atlas.texture;\n  }\n\n\n  /**\n   * Updates the 'texture' member variable of this.atlas object\n   *\n   * text = single character which is to be added to the texture of 'this.atlas'\n   * markDirty = ??? callback to be called if the size of the texture is resized\n   */\n  // TODO: parameter name should be changed from 'text' to 'char'\n  _getChar(text, markDirty) {\n    // curFont is same as style.pbf defined above\n    // TODO: We are doing this too many times in this code. Find a better mech.\n    const font = this.curFont;\n\n    // glyphId is the character code of the glyph passed in arguments under the name 'text'\n    const glyphID = text.charCodeAt(0);\n\n    // Padding around the glyph\n    const buffer = 0;\n\n    const cache = (this._cachedGlyphs[font] || (this._cachedGlyphs[font] = {}));\n    const glyph = (cache[glyphID] && cache[glyphID].glyph) || this.spriteGenerator.draw(text);\n    \n    const fontSize = this.spriteGenerator.fontSize;\n    \n    if (!this._rects[font]) this._rects[font] = {};\n    let rect = this._rects[font][text] = this.atlas.addGlyph(\n      glyphID, // character id\n      this.curFont, // contains url of the font file on server\n      glyph, // glyph object\n      buffer, // padding\n      fontSize, // fontSize\n      markDirty, // callback function to be called if texture resizes\n    );\n\n    return (\n      cache[glyphID] ||\n      (cache[glyphID] = new SimpleGlyph(\n        glyph,\n        rect,\n        buffer)\n      )\n    );\n  }\n\n  get(text, x, y, markDirty) {\n    let width = 0;\n    let height = 0;\n\n    const horiBearingX = 3;\n    const horiBearingY = 2;\n\n    for (let i = 0; i < text.length; i++) {\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n      height = Math.max(height, rect.h - char.top);\n      width += char.advance + horiBearingX;\n    }\n\n    let dx = x <= 0.5 ? 0 : -width;\n    let dy = y <= 0.5 ? 0 : -height;\n\n\n\n    // \"ret\" must be the return object. \"ret\" is always the return object\n    let ret = [];\n\n    for (let i = 0; i < text.length; i++) {\n\n      const char = this._getChar(text[i], markDirty);\n      const rect = char.rect || {};\n\n      let horiAdvance;\n\n      dx += horiBearingX;\n\n      ret.push({\n        width: rect.w,\n        height: rect.h,\n        left: rect.x / this.atlas.width,\n        right: (rect.x + rect.w) / this.atlas.width,\n        bottom: (rect.y + rect.h) / this.atlas.height,\n        top: rect.y / this.atlas.height,\n        dx: dx,\n        dy: dy + char.top + (height - rect.h)\n      });\n\n      dx += char.advance;\n      //      dx += rect.w;\n    }\n    return ret;\n  }\n\n  steps(text) {\n    return text.length;\n  }\n\n  bind() {\n    this.atlas.updateTexture(this._gl);\n  }\n};\n","'use strict';\n\nimport ShelfPack from 'shelf-pack';\n\n// size of the spritesheet generated in pixels\nconst DEFAULT_SIZE = 1024;\n\n// multiplication factor by which spritesheet can grow, if shelfpack is full\nconst SIZE_GROWTH_RATE = 4;\n\n// max size to contain all the characters in the spritesheet\n// must be \"DEFAULT_SIZE * SIZE_GROWTH_RATE ^ n\" for some integer n\nconst MAX_SIZE = 2048;\n\nexport default class GlyphAtlas {\n    constructor(gl, resetCache) {\n\n        // setting width to default\n        this.width = DEFAULT_SIZE;\n\n        // setting height to default\n        this.height = DEFAULT_SIZE;\n\n        // resets cached glyphs in sdf.js before making resize() call\n        this._resetCache = resetCache;\n\n        // creating an empty spritesheet to pack glyphs\n        this.bin = new ShelfPack(this.width, this.height);\n\n        /**\n         * stores information coordinate about character\n         *\n         * (Object):\n         *  \"fontstring#charid\": {\n         *      id, x, y, h, w, maxh, maxw, ref_count\n         *  }\n         */\n        this.index = {};\n\n        /**\n         * stores list of character ids available in atlas.js\n         *\n         * (Object):\n         *  \"fontstring#charid\": [\"charid\"]\n         */\n        this.ids = {};\n\n        // webgl rendering context\n        this.gl = gl;\n\n        // initialized to empty Uint8Array buffer to store texture data\n        this.data = new Uint8Array(this.width * this.height);\n    }\n\n\n    // refreshes texture of characters when updateTexture() is called\n    _createTexture() {\n        //\n        this.dirty = false;\n\n        // standard creation of webgl texture\n        let gl = this.gl;\n        let texture = gl.createTexture();\n        // binds texture buffer to the target (gl.TEXTURE_2D = a 2 dimensional texture)\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        /**\n         * pixelStorei() (Func): specifies the pixel storage modes\n         * UNPACK_FLIP_Y_WEBGL (Parameter): Flips the source data along its vertical axis if true.\n         */\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        // standard interpolation Filters\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // specifies a two-dimensional image for texture buffer stored in variable named \"texture\"\n        gl.texImage2D(\n            gl.TEXTURE_2D, // target: A two-dimensional texture\n            0, // level of detail: 0 = base image level; n = nth mipmap reduction level\n            gl.ALPHA, // internalFormat: only reads the alpha component\n            this.width, // width\n            this.height, // height\n            0, // border\n            gl.ALPHA, // format\n            gl.UNSIGNED_BYTE, // type\n            this.data // ImageData object\n        );\n\n\n        // Unbinding the buffer channel\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        // returning so formed texture\n        return texture;\n    }\n\n    // utility function that returns list of glyphs added\n    getGlyphs() {\n        const glyphs = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!glyphs[name]) glyphs[name] = [];\n            glyphs[name].push(id);\n        }\n        return glyphs;\n    }\n\n    // utility function that returns list of rects added\n    getRects() {\n        const rects = {};\n        let split,\n            name,\n            id;\n\n        for (const key in this.ids) {\n            split = key.split('#');\n            name = split[0];\n            id = split[1];\n\n            if (!rects[name]) rects[name] = {};\n            rects[name][id] = this.index[key];\n        }\n        return rects;\n    }\n\n    // main function of the module called from sdf.js\n    addGlyph(\n        id, // character id\n        name, // name of the font - \"fontstrong#range.pbf\"\n        glyph, // glyph object from sdf.js\n        buffer, // padding around glyph\n        fontSize,\n        markDirty //\n    ) {\n        if (!glyph) return null;\n\n        // compiles 'name' and glyph.id into a single string with a seperator '#'\n        const key = `${name}#${glyph.id}`;\n\n        // if key is present in index and not present in ids then add it in ids\n        if (this.index[key]) {\n            if (this.ids[key].indexOf(id) < 0) {\n                this.ids[key].push(id);\n            }\n            return this.index[key];\n        }\n\n        const bufferedWidth = glyph.width + buffer * 2;\n        const bufferedHeight = glyph.height + buffer * 2;\n\n        // Add a 1px border around every image.\n        // 'padding' variable is basically border\n        // buffer variable is basically padding\n        const padding = Math.floor( Math.pow( Math.ceil(fontSize/7), 2));\n        // const padding = 12;\n        let packWidth = bufferedWidth + 2 * padding;\n        let packHeight = bufferedHeight + 2 * padding;\n\n        // Increase to next number divisible by 4, but at least 1.\n        // This is so we can scale down the texture coordinates and pack them into fewer bytes\n        packWidth += (4 - packWidth % 4);\n        packHeight += (4 - packHeight % 4);\n\n        let rect = this.bin.packOne(packWidth, packHeight);\n\n        // if the current size is not sufficient to contain all the characters in the texture\n        // then, expand (resize) it\n        if (!rect) {\n            this.resize();\n            rect = this.bin.packOne(packWidth, packHeight);\n            // if markDirty callback was passed then execute it\n            markDirty && markDirty();\n        }\n\n        // if still not found then there is some problem, simply return null to indicate problem\n        if (!rect) {\n            return null;\n        }\n\n\n        this.index[key] = rect;\n        this.ids[key] = [id];\n\n        // if bitmap corresponding to the glyph object exists then, add the glyph\n        if (glyph.bitmap) {\n            const target = this.data;\n            const source = glyph.bitmap;\n            for (let y = 0; y < bufferedHeight; y++) {\n                const y1 = this.width * (rect.y + y + padding) + rect.x + padding;\n                const y2 = bufferedWidth * y;\n                for (let x = 0; x < bufferedWidth; x++) {\n                    target[y1 + x] = source[y2 + x];\n                }\n            }\n        }\n        this.dirty = true;\n        return rect;\n    }\n\n    // expands the size of the texture if all the characters were not contained in default size\n    resize() {\n        const prevWidth = this.width;\n        const prevHeight = this.height;\n\n        if (prevWidth >= MAX_SIZE || prevHeight >= MAX_SIZE) return;\n\n        if (this._texture) {\n            if (this.gl) {\n                this.gl.deleteTexture(this._texture);\n            }\n            this._texture = null;\n        }\n\n        this.width *= SIZE_GROWTH_RATE;\n        this.height *= SIZE_GROWTH_RATE;\n        this.bin.resize(this.width, this.height);\n\n        const buf = new ArrayBuffer(this.width * this.height);\n        for (let i = 0; i < prevHeight; i++) {\n            const src = new Uint8Array(this.data.buffer, prevHeight * i, prevWidth);\n            const dst = new Uint8Array(buf, prevHeight * i * SIZE_GROWTH_RATE, prevWidth);\n            dst.set(src);\n        }\n        this.data = new Uint8Array(buf);\n        this._resetCache();\n    }\n\n    bind(gl) {\n    }\n\n    // getter of texture from GlyphAtlas object\n    get texture() {\n        return this._texture;\n    }\n\n    updateTexture() {\n        let gl = this.gl;\n        if (!this._texture) {\n            this._texture = this._createTexture();\n        }\n\n        // if dirty functionality is true then:\n        if (this.dirty) {\n\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n\n            gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n            // specifies a sub - rectangle of the current texture\n            gl.texSubImage2D(\n                gl.TEXTURE_2D,\n                0,\n                0,\n                0,\n                this.width,\n                this.height,\n                gl.ALPHA,\n                gl.UNSIGNED_BYTE,\n                this.data\n            );\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            this.dirty = false;\n        }\n        return this._texture;\n    }\n};\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.ShelfPack = factory());\n}(this, function () {\n\n/**\n * Create a new ShelfPack bin allocator.\n *\n * Uses the Shelf Best Height Fit algorithm from\n * http://clb.demon.fi/files/RectangleBinPack.pdf\n *\n * @class  ShelfPack\n * @param  {number}  [w=64]  Initial width of the sprite\n * @param  {number}  [h=64]  Initial width of the sprite\n * @param  {Object}  [options]\n * @param  {boolean} [options.autoResize=false]  If `true`, the sprite will automatically grow\n * @example\n * var sprite = new ShelfPack(64, 64, { autoResize: false });\n */\nfunction ShelfPack(w, h, options) {\n    options = options || {};\n    this.w = w || 64;\n    this.h = h || 64;\n    this.autoResize = !!options.autoResize;\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n}\n\n\n/**\n * Batch pack multiple bins into the sprite.\n *\n * @param   {Object[]} bins       Array of requested bins - each object should have `width`, `height` (or `w`, `h`) properties\n * @param   {number}   bins[].w   Requested bin width\n * @param   {number}   bins[].h   Requested bin height\n * @param   {Object}   [options]\n * @param   {boolean}  [options.inPlace=false] If `true`, the supplied bin objects will be updated inplace with `x` and `y` properties\n * @returns {Bin[]}    Array of allocated Bins - each Bin is an object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bins = [\n *     { id: 1, w: 12, h: 12 },\n *     { id: 2, w: 12, h: 16 },\n *     { id: 3, w: 12, h: 24 }\n * ];\n * var results = sprite.pack(bins, { inPlace: false });\n */\nShelfPack.prototype.pack = function(bins, options) {\n    bins = [].concat(bins);\n    options = options || {};\n\n    var results = [],\n        w, h, id, allocation;\n\n    for (var i = 0; i < bins.length; i++) {\n        w  = bins[i].w || bins[i].width;\n        h  = bins[i].h || bins[i].height;\n        id = bins[i].id;\n\n        if (w && h) {\n            allocation = this.packOne(w, h, id);\n            if (!allocation) {\n                continue;\n            }\n            if (options.inPlace) {\n                bins[i].x  = allocation.x;\n                bins[i].y  = allocation.y;\n                bins[i].id = allocation.id;\n            }\n            results.push(allocation);\n        }\n    }\n\n    // Shrink the width/height of the sprite to the bare minimum.\n    // Since shelf-pack doubles first width, then height when running out of shelf space\n    // this can result in fairly large unused space both in width and height if that happens\n    // towards the end of bin packing.\n    if (this.shelves.length > 0) {\n        var w2 = 0;\n        var h2 = 0;\n\n        for (var j = 0; j < this.shelves.length; j++) {\n            var shelf = this.shelves[j];\n            h2 += shelf.h;\n            w2 = Math.max(shelf.w - shelf.free, w2);\n        }\n\n        this.resize(w2, h2);\n    }\n\n    return results;\n};\n\n\n/**\n * Pack a single bin into the sprite.\n *\n * Each bin will have a unique identitifer.\n * If no identifier is supplied in the `id` parameter, one will be created.\n * Note: The supplied `id` is used as an object index, so numeric values are fastest!\n *\n * Bins are automatically refcounted (i.e. a newly packed Bin will have a refcount of 1).\n * When a bin is no longer needed, use the `ShelfPack.unref` function to mark it\n *   as unused.  When a Bin's refcount decrements to 0, the Bin will be marked\n *   as free and its space may be reused by the packing code.\n *\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  [id]   Unique identifier for this bin, (if unsupplied, assume it's a new bin and create an id)\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * var results = sprite.packOne(12, 16, 'a');\n */\nShelfPack.prototype.packOne = function(w, h, id) {\n    var best = { freebin: -1, shelf: -1, waste: Infinity },\n        y = 0,\n        bin, shelf, waste, i;\n\n    // if id was supplied, attempt a lookup..\n    if (typeof id === 'string' || typeof id === 'number') {\n        bin = this.getBin(id);\n        if (bin) {              // we packed this bin already\n            this.ref(bin);\n            return bin;\n        }\n        if (typeof id === 'number') {\n            this.maxId = Math.max(id, this.maxId);\n        }\n    } else {\n        id = ++this.maxId;\n    }\n\n    // First try to reuse a free bin..\n    for (i = 0; i < this.freebins.length; i++) {\n        bin = this.freebins[i];\n\n        // exactly the right height and width, use it..\n        if (h === bin.maxh && w === bin.maxw) {\n            return this.allocFreebin(i, w, h, id);\n        }\n        // not enough height or width, skip it..\n        if (h > bin.maxh || w > bin.maxw) {\n            continue;\n        }\n        // extra height or width, minimize wasted area..\n        if (h <= bin.maxh && w <= bin.maxw) {\n            waste = (bin.maxw * bin.maxh) - (w * h);\n            if (waste < best.waste) {\n                best.waste = waste;\n                best.freebin = i;\n            }\n        }\n    }\n\n    // Next find the best shelf..\n    for (i = 0; i < this.shelves.length; i++) {\n        shelf = this.shelves[i];\n        y += shelf.h;\n\n        // not enough width on this shelf, skip it..\n        if (w > shelf.free) {\n            continue;\n        }\n        // exactly the right height, pack it..\n        if (h === shelf.h) {\n            return this.allocShelf(i, w, h, id);\n        }\n        // not enough height, skip it..\n        if (h > shelf.h) {\n            continue;\n        }\n        // extra height, minimize wasted area..\n        if (h < shelf.h) {\n            waste = (shelf.h - h) * w;\n            if (waste < best.waste) {\n                best.freebin = -1;\n                best.waste = waste;\n                best.shelf = i;\n            }\n        }\n    }\n\n    if (best.freebin !== -1) {\n        return this.allocFreebin(best.freebin, w, h, id);\n    }\n\n    if (best.shelf !== -1) {\n        return this.allocShelf(best.shelf, w, h, id);\n    }\n\n    // No free bins or shelves.. add shelf..\n    if (h <= (this.h - y) && w <= this.w) {\n        shelf = new Shelf(y, this.w, h);\n        return this.allocShelf(this.shelves.push(shelf) - 1, w, h, id);\n    }\n\n    // No room for more shelves..\n    // If `autoResize` option is set, grow the sprite as follows:\n    //  * double whichever sprite dimension is smaller (`w1` or `h1`)\n    //  * if sprite dimensions are equal, grow width before height\n    //  * accomodate very large bin requests (big `w` or `h`)\n    if (this.autoResize) {\n        var h1, h2, w1, w2;\n\n        h1 = h2 = this.h;\n        w1 = w2 = this.w;\n\n        if (w1 <= h1 || w > w1) {   // grow width..\n            w2 = Math.max(w, w1) * 2;\n        }\n        if (h1 < w1 || h > h1) {    // grow height..\n            h2 = Math.max(h, h1) * 2;\n        }\n\n        this.resize(w2, h2);\n        return this.packOne(w, h, id);  // retry\n    }\n\n    return null;\n};\n\n\n/**\n * Called by packOne() to allocate a bin by reusing an existing freebin\n *\n * @private\n * @param    {number}         index  Index into the `this.freebins` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var bin = sprite.allocFreebin(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocFreebin = function (index, w, h, id) {\n    var bin = this.freebins.splice(index, 1)[0];\n    bin.id = id;\n    bin.w = w;\n    bin.h = h;\n    bin.refcount = 0;\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Called by `packOne() to allocate bin on an existing shelf\n *\n * @private\n * @param    {number}         index  Index into the `this.shelves` array\n * @param    {number}         w      Width of the bin to allocate\n * @param    {number}         h      Height of the bin to allocate\n * @param    {number|string}  id     Unique identifier for this bin\n * @returns  {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties\n * @example\n * var results = sprite.allocShelf(0, 12, 16, 'a');\n */\nShelfPack.prototype.allocShelf = function(index, w, h, id) {\n    var shelf = this.shelves[index];\n    var bin = shelf.alloc(w, h, id);\n    this.bins[id] = bin;\n    this.ref(bin);\n    return bin;\n};\n\n\n/**\n * Return a packed bin given its id, or undefined if the id is not found\n *\n * @param    {number|string}  id  Unique identifier for this bin,\n * @returns  {Bin}            The requested bin, or undefined if not yet packed\n * @example\n * var b = sprite.getBin('a');\n */\nShelfPack.prototype.getBin = function(id) {\n    return this.bins[id];\n};\n\n\n/**\n * Increment the ref count of a bin and update statistics.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.ref(bin);\n */\nShelfPack.prototype.ref = function(bin) {\n    if (++bin.refcount === 1) {   // a new Bin.. record height in stats historgram..\n        var h = bin.h;\n        this.stats[h] = (this.stats[h] | 0) + 1;\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Decrement the ref count of a bin and update statistics.\n * The bin will be automatically marked as free space once the refcount reaches 0.\n *\n * @param    {Bin}     bin  Bin instance\n * @returns  {number}  New refcount of the bin\n * @example\n * var bin = sprite.getBin('a');\n * sprite.unref(bin);\n */\nShelfPack.prototype.unref = function(bin) {\n    if (bin.refcount === 0) {\n        return 0;\n    }\n\n    if (--bin.refcount === 0) {\n        this.stats[bin.h]--;\n        delete this.bins[bin.id];\n        this.freebins.push(bin);\n    }\n\n    return bin.refcount;\n};\n\n\n/**\n * Clear the sprite.  Resets everything and resets statistics.\n *\n * @example\n * sprite.clear();\n */\nShelfPack.prototype.clear = function() {\n    this.shelves = [];\n    this.freebins = [];\n    this.stats = {};\n    this.bins = {};\n    this.maxId = 0;\n};\n\n\n/**\n * Resize the sprite.\n *\n * @param   {number}  w  Requested new sprite width\n * @param   {number}  h  Requested new sprite height\n * @returns {boolean} `true` if resize succeeded, `false` if failed\n * @example\n * sprite.resize(256, 256);\n */\nShelfPack.prototype.resize = function(w, h) {\n    this.w = w;\n    this.h = h;\n    for (var i = 0; i < this.shelves.length; i++) {\n        this.shelves[i].resize(w);\n    }\n    return true;\n};\n\n\n/**\n * Create a new Shelf.\n *\n * @private\n * @class  Shelf\n * @param  {number}  y   Top coordinate of the new shelf\n * @param  {number}  w   Width of the new shelf\n * @param  {number}  h   Height of the new shelf\n * @example\n * var shelf = new Shelf(64, 512, 24);\n */\nfunction Shelf(y, w, h) {\n    this.x = 0;\n    this.y = y;\n    this.w = this.free = w;\n    this.h = h;\n}\n\n\n/**\n * Allocate a single bin into the shelf.\n *\n * @private\n * @param   {number}         w   Width of the bin to allocate\n * @param   {number}         h   Height of the bin to allocate\n * @param   {number|string}  id  Unique id of the bin to allocate\n * @returns {Bin}            Bin object with `id`, `x`, `y`, `w`, `h` properties, or `null` if allocation failed\n * @example\n * shelf.alloc(12, 16, 'a');\n */\nShelf.prototype.alloc = function(w, h, id) {\n    if (w > this.free || h > this.h) {\n        return null;\n    }\n    var x = this.x;\n    this.x += w;\n    this.free -= w;\n    return new Bin(id, x, this.y, w, h);\n};\n\n\n/**\n * Resize the shelf.\n *\n * @private\n * @param   {number}  w  Requested new width of the shelf\n * @returns {boolean}    true\n * @example\n * shelf.resize(512);\n */\nShelf.prototype.resize = function(w) {\n    this.free += (w - this.w);\n    this.w = w;\n    return true;\n};\n\n\n/**\n * Create a new Bin object.\n *\n * @class  Bin\n * @param  {number|string}  id  Unique id of the bin\n * @param  {number}         x   Left coordinate of the bin\n * @param  {number}         y   Top coordinate of the bin\n * @param  {number}         w   Width of the bin\n * @param  {number}         h   Height of the bin\n * @example\n * var bin = new Bin('a', 0, 0, 12, 16);\n */\nfunction Bin(id, x, y, w, h) {\n    this.id = id;\n    this.x  = x;\n    this.y  = y;\n    this.w  = w;\n    this.h  = h;\n    this.maxw = w;\n    this.maxh = h;\n    this.refcount = 0;\n}\n\nreturn ShelfPack;\n\n}));","import Trimmer from './glyphTrimmer';\r\n\r\nvar INF = 1e20;\r\n\r\nexport default class SpriteGenerator {\r\n\r\n    constructor() {\r\n        // Member variables for configurations for font-style and box of the font\r\n        const textSize = 23;\r\n        this.fontSize = Math.round(textSize / 4) * 4;\r\n        this.buffer = this.fontSize / 8;\r\n        this.radius = this.fontSize / 3;\r\n        this.cutoff = 0.25;\r\n        this.fontFamily = 'sans-serif';\r\n        // this.fontFamily = 'vedana';\r\n        // this.fontFamily = 'arial';\r\n        this.fontWeight = 'normal';\r\n        // this.fontWeight = 'bold';\r\n        // Size of one box of character\r\n        let size = this.size = this.fontSize + this.buffer * 2;\r\n\r\n        // Member varaibles for single canvas element on which single character is to be drawn\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = this.canvas.height = size;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillStyle = 'black';\r\n\r\n        // Work-around: https://bugzilla.mozilla.org/show_bug.cgi?id=737852\r\n        this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\r\n\r\n\r\n        // Member variables for temp arrays required for the distance transform\r\n        this.gridOuter = new Float64Array(size * size);\r\n        this.gridInner = new Float64Array(size * size);\r\n        this.f = new Float64Array(size);\r\n        this.d = new Float64Array(size);\r\n        this.z = new Float64Array(size + 1);\r\n        this.v = new Int16Array(size);\r\n\r\n        // Glyph Trimmer\r\n        this.trimmer = new Trimmer(0);\r\n        this.count = 1;\r\n    }\r\n\r\n    _makeRGBAImageData(alphaChannel, width, height) {\r\n        let imageData = this.ctx.createImageData(width, height);\r\n        let data = imageData.data;\r\n        for (let i = 0; i < alphaChannel.length; i++) {\r\n            data[4 * i + 0] = alphaChannel[i];\r\n            data[4 * i + 1] = alphaChannel[i];\r\n            data[4 * i + 2] = alphaChannel[i];\r\n            data[4 * i + 3] = 255;\r\n        }\r\n        return imageData;\r\n    }\r\n\r\n    // Returns the alpha channel for a single character\r\n    draw(char) {\r\n        // Clear the area and draw the glyph\r\n        this.ctx.clearRect(0, 0, this.size, this.size);\r\n        this.ctx.fillText(char, this.buffer, this.middle);\r\n        let imgData = this.ctx.getImageData(0, 0, this.size, this.size);\r\n        let alphaChannel = new Uint8ClampedArray(this.size * this.size);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let a = imgData.data[i * 4 + 3] / 255; // alpha value\r\n            this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\r\n            this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n        }\r\n\r\n        this._edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\r\n        this._edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\r\n\r\n        for (let i = 0; i < this.size * this.size; i++) {\r\n            let d = this.gridOuter[i] - this.gridInner[i];\r\n            alphaChannel[i] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n        }\r\n\r\n        const glyph = {\r\n            id: char.charCodeAt(0),\r\n            bitmap: alphaChannel,\r\n            left: 0,\r\n            top: 0,\r\n            width: this.size,\r\n            height: this.size,\r\n            advance: 4, // width\r\n        };\r\n        \r\n        if(glyph.id !== 32) {\r\n            this.trimmer.process(glyph);\r\n        }\r\n\r\n        // TODO: Delete this debugging code\r\n        if (glyph.id == 65 && this.count) {\r\n            const glyphData = glyph.bitmap;\r\n            const numCols = glyph.width;\r\n            let t = [];\r\n            // iterate through every row\r\n            for (let i = 0; i < glyphData.length; i += numCols) {\r\n                // slice out the array\r\n                t.push(Array.from(glyphData.slice(i, i + numCols)));\r\n            }\r\n            this.count--;\r\n        }\r\n        return glyph;\r\n    }\r\n\r\n    // 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\n    _edt(data, width, height, f, d, v, z) {\r\n        for (let x = 0; x < width; x++) {\r\n            for (let y = 0; y < height; y++) {\r\n                f[y] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, height);\r\n            for (let y = 0; y < height; y++) {\r\n                data[y * width + x] = d[y];\r\n            }\r\n        }\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                f[x] = data[y * width + x];\r\n            }\r\n            this._edt1d(f, d, v, z, width);\r\n            for (let x = 0; x < width; x++) {\r\n                data[y * width + x] = Math.sqrt(d[x]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1D squared distance transform\r\n    _edt1d(f, d, v, z, n) {\r\n        v[0] = 0;\r\n        z[0] = -INF;\r\n        z[1] = +INF;\r\n\r\n        for (let q = 1, k = 0; q < n; q++) {\r\n            var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            while (s <= z[k]) {\r\n                k--;\r\n                s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\r\n            }\r\n            k++;\r\n            v[k] = q;\r\n            z[k] = s;\r\n            z[k + 1] = +INF;\r\n        }\r\n\r\n        for (let q = 0, k = 0; q < n; q++) {\r\n            while (z[k + 1] < q) k++;\r\n            d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\r\n        }\r\n    }\r\n}\r\n","/* Algorithm to trim the glyph and add padding to it */\n// Finding absolute left bound (lb) and right bound (rb) of the glyph\n// Slicing the extra columns\n// Adding buffer space on the sides\n\nexport default class {\n    constructor(buffer) {\n        if (buffer == undefined) this.buffer = 0;\n        else this.buffer = buffer;\n    }\n    \n    // find lb and rb of single row\n    _findRowBounds(a) { // a == array\n        let lb = 0, // left bound of individual row\n            rb = 0; // right bound of individual row\n        \n        const threshold = 170;\n            \n        for (let i = 0; i < a.length; i++) {\n            if (a[i] > threshold) {\n                lb = i;\n                break;\n            }\n        }\n        if (!lb) lb = a.length;\n\n        for (let i = a.length; i > -1; i--) {\n            if (a[i] > threshold) {\n                rb = i;\n                break;\n            }\n        }\n        if (!rb) rb = -1;\n\n        return [lb, rb];\n    }\n\n    _findGlyphBounds(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n        let currentRow = [];\n\n        let lbs = [], // row left bounds\n            rbs = []; // row right bounds    \n        let lb = -1,\n            rb = glyphData.length;\n        \n        // iterate through every row\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            // slice out the array\n            currentRow = glyphData.slice(i, i + numCols)\n            var res = this._findRowBounds(currentRow);\n            lbs.push(res[0]);\n            rbs.push(res[1]);\n        }\n\n        // choose the min(lbs) and max(rbs) as absolute lb and rb\n        lb = Math.min(...lbs);\n        rb = Math.max(...rbs);\n        // if (lb >= numCols || rb < 0) throw \"Glyph is empty\";\n        return [lb, rb];\n    }\n\n    process(glyph) {\n        const glyphData = glyph.bitmap;\n        const numCols = glyph.width;\n\n        const bounds = this._findGlyphBounds(glyph);\n        const lb = bounds[0];\n        const rb = bounds[1];\n\n        const buffer = this.buffer;\n        // const buffer = 20;\n        // const buffer = 1;\n        // const buffer = 0;\n\n        var newData = [];\n        // var newWidth = (rb - lb + 1) + buffer * 2 + 2;\n        var newWidth = (rb - lb + 1) + buffer * 2;\n        // var newWidth = (rb - lb + 1);\n\n        // iterate through every row\n        let currentRow = [];\n        for (let i = 0; i < glyphData.length; i += numCols) {\n            currentRow = glyphData.slice(i, i + numCols)\n            const bufferCol = Array.apply(null, Array(buffer)).map(Number.prototype.valueOf, 0);\n            newData.push(\n                // 255,\n                ...bufferCol, //returns array of zeros\n                ...currentRow.slice(lb, rb + 1),\n                ...bufferCol, //returns array of zeros\n                // 255,\n            );\n        }\n\n        // JS passes objects by reference. Therefore,\n        glyph.bitmap = new Uint8ClampedArray(newData);\n        glyph.width = newWidth;\n        glyph.advance = newWidth;\n    }    \n    \n} // ends class","/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Authors: David Tichy, Aleš Saska\n */\n\nexport default class {\n  constructor(){\n    this._enable = true;\n  }\n\n  debounce(func, wait, immediate) {\n      let timeout, args, context, timestamp, result;\n\n      let later = () => {\n          let last = Date.now - timestamp;\n\n          if (last < wait && last > 0) {\n              timeout = setTimeout(later, wait - last);\n          } else {\n              timeout = null;\n              if (!immediate) {\n                  if(this._enable){\n                    result = func.apply(context, args);\n                  }\n                  if (!timeout) context = args = null;\n              }\n          }\n      };\n\n      return () => {\n          context = this;\n          args = arguments;\n          timestamp = Date.now;\n          let callNow = immediate && !timeout;\n          if (!timeout) timeout = setTimeout(later, wait);\n          if (callNow) {\n              if(this._enable){\n                result = func.apply(context, args);\n              }\n              context = args = null;\n          }\n\n          return result;\n      };\n  }\n  \n  disable(){\n    this._enable = false;\n  }\n};","import geomutils from './geomutils';\n/**\n *  Copyright (c) 2016, Helikar Lab.\n *  All rights reserved.\n *\n *  This source code is licensed under the GPLv3 License.\n *  Author: Aleš Saska\n */\n\n\nfunction pushUnique(arr, e){\n  if(arr.indexOf(e) >= 0)\n    return;\n  arr.push(e);\n}\n\nexport default class {\n  constructor(layers, insertTempLayer, draw, nodes, edges, checkUniqId){\n    this._layers = layers;\n    this._insertTempLayer = insertTempLayer;\n\n    this._draw = draw;\n    this._nodes = nodes;\n    this._edges = edges;\n    this._checkUniqId = checkUniqId;\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n\n    //create support structures\n    this._nPos = {};\n    this._ePos = {};\n    this._eDirs = {};\n\n    nodes.forEach((n, i) => {\n      this._nPos[n.uniqid] = i;\n      this._eDirs[n.uniqid] = {};\n    });\n    \n    edges.forEach((e, i) => {\n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      let si = s.uniqid || s.__uniqid;\n      let ti = t.uniqid || t.__uniqid;\n      (this._eDirs[si] || (this._eDirs[si] = {}))[ti] = e;\n      this._ePos[e.uniqid] = i;\n    });\n    \n    this._actualTempNodes = [];\n    this._actualTempEdges = [];\n  }\n  _doRemoveNodes(nodes){\n    nodes.forEach((n) => {\n      if(n.uniqid === undefined)\n        return;\n      \n      if(this._nPos[n.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._nPos[n.uniqid];\n        this._layers.main.removeNodeAtPos(pos);\n        delete this._nPos[n.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempNodes.length; i++){\n          if(this._actualTempNodes[i] === n){\n            this._actualTempNodes.splice(i,1);\n            break;\n          }\n        }\n      }\n      \n      n.__uniqid = n.uniqid;\n      delete n.uniqid;\n    });\n  }\n  _doRemoveEdges(edges){\n    edges.forEach((e) => {\n      if(e.uniqid === undefined)\n        return;\n      \n      let s = geomutils.edgeSource(e);\n      let t = geomutils.edgeTarget(e);\n\n      delete (this._eDirs[s.uniqid || s.__uniqid] || {})[t.uniqid || t.__uniqid];\n      \n      if(this._ePos[e.uniqid] !== undefined){\n        //in the normal graph\n        let pos = this._ePos[e.uniqid];\n        this._layers.main.removeEdgeAtPos(pos);\n        delete this._ePos[e.uniqid];\n      }else{\n        //try to remove from temp graph\n        \n        for(let i = 0; i < this._actualTempEdges.length; i++){\n          if(this._actualTempEdges[i] === e){\n            this._actualTempEdges.splice(i,1);\n            break;\n          }\n        }\n\n      }\n      \n      e.__uniqid = e.uniqid;\n      delete e.uniqid;\n    });\n  }\n  _doAddEdges(){\n    this._toAddEdges.forEach((e) => {\n      //already added in main graph\n      if(\n        this._ePos[e.uniqid] !== undefined\n      ){\n        this._doRemoveEdges([e]);\n      }\n      \n      if(e.uniqid !== undefined){\n        console.error(e);\n        console.error(\"This edge has been already added, if you want to add same edge twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(e);\n      \n      //add this node into temporary chart\n      \n      //TODO: Not so efficient >> causes quadratic complexity of adding edges into temporary graph\n      pushUnique(this._actualTempEdges, e);\n    });\n  }\n  _doAddNodes(nodes){\n    this._toAddNodes.forEach((n) => {\n      if(this._nPos[n.uniqid] !== undefined){\n        this._doRemoveNodes([n]);\n      }\n      \n      //already added\n      if(n.uniqid !== undefined){\n        console.error(n);\n        console.error(\"This node has been already added, if you want to add same node twice, create new object with same properties\");\n        return;\n      }\n      this._checkUniqId(n);\n      \n      this._eDirs[n.uniqid] = {};\n\n      //TODO: Not so efficient >> causes quadratic complexity of adding nodes into temporary graph\n      pushUnique(this._actualTempNodes, n);\n    });\n  }\n  addEdge(e){\n    let s = geomutils.edgeSource(e);\n    let t = geomutils.edgeTarget(e);\n    \n    let tid = t.uniqid || t.__uniqid;\n    let sid = s.uniqid || s.__uniqid;\n    \n    if((this._eDirs[sid] || {})[tid]){\n      //this edge was already added >> remove it\n      this._doRemoveEdges([e]);\n    }\n    \n    if((this._eDirs[tid] || {})[sid]){\n      //must remove line and add two curves\n      \n      this._toAddEdges.push(this._eDirs[tid][sid]);\n      this._doRemoveEdges([this._eDirs[tid][sid]]);\n\n      this._toAddEdges.push(this._eDirs[sid][tid] = e);\n      \n      return this;\n    }\n\n    this._toAddEdges.push(e);\n    return this;\n  }\n  addNode(n){\n    this._toAddNodes.push(n);    \n    return this;\n  }\n  removeNode(n){\n    this._toRemoveNodes.push(n);    \n    return this;\n  }\n  removeEdge(e){\n    this._toRemoveEdges.push(e);\n    return this;\n  }\n  applyChanges(){\n    \n    //nothing to do\n    if(this._toRemoveEdges.length === 0 && this._toRemoveNodes.length === 0 && this._toAddEdges.length === 0 && this._toAddNodes.length === 0)\n      return this;\n    \n    this._actualTempNodes = this._layers.temp ? this._layers.temp.nodes : [];\n    this._actualTempEdges = this._layers.temp ? this._layers.temp.edges : [];\n    \n    this._doRemoveEdges(this._toRemoveEdges);\n    this._doRemoveNodes(this._toRemoveNodes);\n    this._doAddNodes();\n    this._doAddEdges();\n    \n    this._toAddEdges = [];\n    this._toAddNodes = [];\n    this._toRemoveEdges = [];\n    this._toRemoveNodes = [];\n    \n    this._insertTempLayer();\n    this._layers.temp.set(this._actualTempNodes, this._actualTempEdges);\n\n    this._draw();\n    \n    return this;\n  }\n};","import Ellipse from \"./shapes/ellipse\"\nimport Star from \"./shapes/star\"\nimport Polygon from \"./shapes/polygon\"\nimport Square from \"./shapes/square\"\n\nexport { Ellipse, Star, Polygon, Square }","import Shape from \"../shape\"\n\nlet Ellipse = (config, instance) => {\n  class Ellipse extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Ellipse';\n    }\n    _setCanvas() {\n      this.config.radiusX = this.config.radiusX || 16;\n      this.config.radiusY = this.config.radiusY || 16;\n\n      let cursor = {\n        x0: this.config.radiusX,\n        y0: this.config.radiusY,\n        x1: this.config.radiusX + ((this.config.stroke.size * 2) + this.config.radiusX),\n        y1: this.config.radiusY + ((this.config.stroke.size * 2) + this.config.radiusY)\n      };\n\n      if (cursor.x1 < cursor.y1) {\n        cursor.x1 = cursor.y1;\n      } else {\n        cursor.y1 = cursor.x1;\n      }\n\n      this.canvas.width = cursor.x1;\n      this.canvas.height = cursor.y1;\n      this.context = this.canvas.getContext('2d');\n      this.context.fillStyle = this.config.textureColor;\n      this.context.strokeStyle = this.config.stroke.color;\n      this.context.lineWidth = this.config.stroke.size;\n    }\n    _draw() {\n      this.context.ellipse(\n        (this.config.radiusX) + this.config.stroke.size,\n        (this.config.radiusY) + this.config.stroke.size,\n        this.config.radiusX,\n        this.config.radiusY, 0, 0, 2 * Math.PI);\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Ellipse(config, instance)\n}\n\nexport default Ellipse","import Shape from \"../shape\"\n\nlet Star = (config, instance) => {\n  class Star extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Star';\n    }\n    _draw() {\n      this.context.beginPath();\n      let spikes = this.config.spikes || 5;\n      let inset = this.config.inset || 2;\n      let radius = this.config.size / 2;\n\n      for (var i = 1; i <= spikes * 2; i++) {\n        let x, y;\n        let theta = i * (Math.PI * 2) / (spikes * 2);\n        let center = radius + this.config.stroke.size;\n\n        if (i % 2 == 0) {\n          x = center + (radius * Math.cos(theta));\n          y = center + (radius * Math.sin(theta));\n        } else {\n          x = center + ((radius / inset) * Math.cos(theta));\n          y = center + ((radius / inset) * Math.sin(theta));\n        }\n\n        this.context.lineTo(x, y);\n      }\n\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Star(config, instance)\n}\n\nexport default Star","import Shape from \"../shape\"\n\nlet Polygon = (config, instance) => {\n  class Polygon extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Polygon';\n    }\n    _draw() {\n      this.context.beginPath();\n      let edges = this.config.edges || 3;\n      let degree = 360 / edges;\n      let radius = this.config.size / 2;\n\n      for (let i = 0; i < edges; i++) {\n        let theta = (degree * (i + 1)) * (Math.PI / 180);\n        let center = radius + this.config.stroke.size;\n\n        let x = center + (radius * Math.cos(theta));\n        let y = center + (radius * Math.sin(theta));\n        this.context.lineTo(x, y);\n      }\n\n\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Polygon(config, instance)\n}\n\nexport default Polygon","import Shape from \"../shape\"\n\nlet Square = (config, instance) => {\n  class Square extends Shape {\n    constructor(config, instance) {\n      super(config, instance);\n      this.type = 'Square';\n    }\n\n    _draw() {\n      this.context.beginPath();\n      this.context.lineTo(this.t(0), this.t(0));\n      this.context.lineTo(this.t(1), this.t(0));\n      this.context.lineTo(this.t(1), this.t(1));\n      this.context.lineTo(this.t(0), this.t(1));\n      this.context.closePath();\n      this.context.stroke();\n      this.context.fill();\n    }\n  }\n  return new Square(config, instance)\n}\n\nexport default Square","/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function max(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var max = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] > max) max = input[i];\n    }\n    return max;\n}\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nexport default function rescale(input, options = {}) {\n    if (!Array.isArray(input)) {\n        throw new TypeError('input must be an array');\n    } else if (input.length === 0) {\n        throw new TypeError('input must not be empty');\n    }\n\n    let output;\n    if (options.output !== undefined) {\n        if (!Array.isArray(options.output)) {\n            throw new TypeError('output option must be an array if specified');\n        }\n        output = options.output;\n    } else {\n        output = new Array(input.length);\n    }\n\n    const currentMin = min(input);\n    const currentMax = max(input);\n\n    if (currentMin === currentMax) {\n        throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n    }\n\n    const {\n        min: minValue = options.autoMinMax ? currentMin : 0,\n        max: maxValue = options.autoMinMax ? currentMax : 1\n    } = options;\n\n    if (minValue >= maxValue) {\n        throw new RangeError('min option must be smaller than max option');\n    }\n\n    const factor = (maxValue - minValue) / (currentMax - currentMin);\n    for (var i = 0; i < input.length; i++) {\n        output[i] = (input[i] - currentMin) * factor + minValue;\n    }\n\n    return output;\n}\n","/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\nexport default function min(input) {\n    if (!Array.isArray(input)) {\n        throw new Error('input must be an array');\n    }\n\n    if (input.length === 0) {\n        throw new Error('input must not be empty');\n    }\n\n    var min = input[0];\n    for (var i = 1; i < input.length; i++) {\n        if (input[i] < min) min = input[i];\n    }\n    return min;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class LuDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\n * @param {Matrix} matrix\n */\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    var lu = matrix.clone();\n    var rows = lu.rows;\n    var columns = lu.columns;\n    var pivotVector = new Array(rows);\n    var pivotSign = 1;\n    var i, j, k, p, s, t, v;\n    var LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isSingular() {\n    var data = this.LU;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      if (data[j][j] === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var lu = this.LU;\n    var rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    var count = value.columns;\n    var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    var columns = lu.columns;\n    var i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= lu[k][k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * lu[i][k];\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get determinant() {\n    var data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    var determinant = this.pivotSign;\n    var col = data.columns;\n    for (var j = 0; j < col; j++) {\n      determinant *= data[j][j];\n    }\n    return determinant;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i > j) {\n          X[i][j] = data[i][j];\n        } else if (i === j) {\n          X[i][j] = 1;\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var data = this.LU;\n    var rows = data.rows;\n    var columns = data.columns;\n    var X = new Matrix(rows, columns);\n    for (var i = 0; i < rows; i++) {\n      for (var j = 0; j < columns; j++) {\n        if (i <= j) {\n          X[i][j] = data[i][j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get pivotPermutationVector() {\n    return this.pivotVector.slice();\n  }\n}\n","export function hypotenuse(a, b) {\n  var r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n\nexport function getFilled2DArray(rows, columns, value) {\n  var array = new Array(rows);\n  for (var i = 0; i < rows; i++) {\n    array[i] = new Array(columns);\n    for (var j = 0; j < columns; j++) {\n      array[i][j] = value;\n    }\n  }\n  return array;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class SingularValueDecomposition\n * @see https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n * @param {Matrix} value\n * @param {object} [options]\n * @param {boolean} [options.computeLeftSingularVectors=true]\n * @param {boolean} [options.computeRightSingularVectors=true]\n * @param {boolean} [options.autoTranspose=false]\n */\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var m = value.rows;\n    var n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false\n    } = options;\n\n    var wantu = Boolean(computeLeftSingularVectors);\n    var wantv = Boolean(computeRightSingularVectors);\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose'\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        var aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    var nu = Math.min(m, n);\n    var ni = Math.min(m + 1, n);\n    var s = new Array(ni);\n    var U = getFilled2DArray(m, nu, 0);\n    var V = getFilled2DArray(n, n, 0);\n\n    var e = new Array(n);\n    var work = new Array(m);\n\n    var si = new Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n    var mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a[i][k]);\n        }\n        if (s[k] !== 0) {\n          if (a[k][k] < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a[i][k] /= s[k];\n          }\n          a[k][k] += 1;\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a[i][k] * a[i][j];\n          }\n          t = -t / a[k][k];\n          for (let i = k; i < m; i++) {\n            a[i][j] += t * a[i][k];\n          }\n        }\n        e[j] = a[k][j];\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U[i][k] = a[i][k];\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a[i][j];\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a[i][j] += t * work[i];\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V[i][k] = e[i];\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U[i][j] = 0;\n        }\n        U[j][j] = 1;\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U[i][k] * U[i][j];\n            }\n            t = -t / U[k][k];\n            for (let i = k; i < m; i++) {\n              U[i][j] += t * U[i][k];\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U[i][k] = -U[i][k];\n          }\n          U[k][k] = 1 + U[k][k];\n          for (let i = 0; i < k - 1; i++) {\n            U[i][k] = 0;\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U[i][k] = 0;\n          }\n          U[k][k] = 1;\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V[i][k] * V[i][j];\n            }\n            t = -t / V[k + 1][k];\n            for (let i = k + 1; i < n; i++) {\n              V[i][j] += t * V[i][k];\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V[i][k] = 0;\n        }\n        V[k][k] = 1;\n      }\n    }\n\n    var pp = p - 1;\n    var iter = 0;\n    var eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][p - 1];\n                V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                V[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][k - 1];\n                U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k])\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V[i][j] + sn * V[i][j + 1];\n                V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                V[i][j] = t;\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U[i][j] + sn * U[i][j + 1];\n                U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                U[i][j] = t;\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V[i][k] = -V[i][k];\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V[i][k + 1];\n                V[i][k + 1] = V[i][k];\n                V[i][k] = t;\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U[i][k + 1];\n                U[i][k + 1] = U[i][k];\n                U[i][k] = t;\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      var tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the SVD. Useful when A is singular. When A is not singular, it would be better to use qr.solve(value).\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var svd = SingularValueDecomposition(A);\n   * var x = svd.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    var Y = value;\n    var e = this.threshold;\n    var scols = this.s.length;\n    var Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls[i][i] = 0;\n      } else {\n        Ls[i][i] = 1 / this.s[i];\n      }\n    }\n\n    var U = this.U;\n    var V = this.rightSingularVectors;\n\n    var VL = V.mmul(Ls);\n    var vrows = V.rows;\n    var urows = U.length;\n    var VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL[i][k] * U[j][k];\n        }\n        VLU[i][j] = sum;\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  /**\n   *\n   * @param {Array<number>} value\n   * @return {Matrix}\n   */\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  /**\n   * Get the inverse of the matrix. We compute the inverse of a matrix using SVD when this matrix is singular or ill-conditioned. Example :\n   * var svd = SingularValueDecomposition(A);\n   * var inverseA = svd.inverse();\n   * @return {Matrix} - The approximation of the inverse of the matrix\n   */\n  inverse() {\n    var V = this.V;\n    var e = this.threshold;\n    var vrows = V.length;\n    var vcols = V[0].length;\n    var X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X[i][j] = V[i][j] / this.s[j];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n\n    var U = this.U;\n\n    var urows = U.length;\n    var ucols = U[0].length;\n    var Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X[i][k] * U[j][k];\n        }\n        Y[i][j] = sum;\n      }\n    }\n\n    return Y;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get norm2() {\n    return this.s[0];\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get rank() {\n    var tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    var r = 0;\n    var s = this.s;\n    for (var i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get diagonal() {\n    return this.s;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  get threshold() {\n    return Number.EPSILON / 2 * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get leftSingularVectors() {\n    if (!Matrix.isMatrix(this.U)) {\n      this.U = new Matrix(this.U);\n    }\n    return this.U;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get rightSingularVectors() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import Matrix from './matrix';\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  var max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  var max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns'\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices)\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  var rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  var columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function getRange(from, to) {\n  var arr = new Array(to - from + 1);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = from + i;\n  }\n  return arr;\n}\n\nexport function sumByRow(matrix) {\n  var sum = Matrix.zeros(matrix.rows, 1);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  var sum = Matrix.zeros(1, matrix.columns);\n  for (var i = 0; i < matrix.rows; ++i) {\n    for (var j = 0; j < matrix.columns; ++j) {\n      sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  var v = 0;\n  for (var i = 0; i < matrix.rows; i++) {\n    for (var j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class BaseView extends AbstractMatrix() {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex\n    );\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    var indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex]\n    );\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport LuDecomposition from './dc/lu';\nimport SvDecomposition from './dc/svd';\nimport {\n  checkRowVector, checkRowIndex, checkColumnIndex, checkColumnVector,\n  checkRange, checkIndices,\n  sumByRow, sumByColumn, sumAll\n} from './util';\nimport MatrixTransposeView from './views/transpose';\nimport MatrixRowView from './views/row';\nimport MatrixSubView from './views/sub';\nimport MatrixSelectionView from './views/selection';\nimport MatrixRowSelectionView from './views/rowSelection';\nimport MatrixColumnSelectionView from './views/columnSelection';\nimport MatrixColumnView from './views/column';\nimport MatrixFlipRowView from './views/flipRow';\nimport MatrixFlipColumnView from './views/flipColumn';\n\nexport default function AbstractMatrix(superCtor) {\n  if (superCtor === undefined) superCtor = Object;\n\n  /**\n   * Real matrix\n   * @class Matrix\n   * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n   * 2D array containing the data or Matrix instance to clone\n   * @param {number} [nColumns] - Number of columns of the new matrix\n   */\n  class Matrix extends superCtor {\n    static get [Symbol.species]() {\n      return this;\n    }\n\n    /**\n     * Constructs a Matrix with the chosen dimensions from a 1D array\n     * @param {number} newRows - Number of rows\n     * @param {number} newColumns - Number of columns\n     * @param {Array} newData - A 1D array containing data for the matrix\n     * @return {Matrix} - The new matrix\n     */\n    static from1DArray(newRows, newColumns, newData) {\n      var length = newRows * newColumns;\n      if (length !== newData.length) {\n        throw new RangeError('Data length does not match given dimensions');\n      }\n      var newMatrix = new this(newRows, newColumns);\n      for (var row = 0; row < newRows; row++) {\n        for (var column = 0; column < newColumns; column++) {\n          newMatrix.set(row, column, newData[row * newColumns + column]);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static rowVector(newData) {\n      var vector = new this(1, newData.length);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(0, i, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n    static columnVector(newData) {\n      var vector = new this(newData.length, 1);\n      for (var i = 0; i < newData.length; i++) {\n        vector.set(i, 0, newData[i]);\n      }\n      return vector;\n    }\n\n    /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static empty(rows, columns) {\n      return new this(rows, columns);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static zeros(rows, columns) {\n      return this.empty(rows, columns).fill(0);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n    static ones(rows, columns) {\n      return this.empty(rows, columns).fill(1);\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static rand(rows, columns, rng) {\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          matrix.set(i, j, rng());\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n    static randInt(rows, columns, maxValue, rng) {\n      if (maxValue === undefined) maxValue = 1000;\n      if (rng === undefined) rng = Math.random;\n      var matrix = this.empty(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          var value = Math.floor(rng() * maxValue);\n          matrix.set(i, j, value);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n    static eye(rows, columns, value) {\n      if (columns === undefined) columns = rows;\n      if (value === undefined) value = 1;\n      var min = Math.min(rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, value);\n      }\n      return matrix;\n    }\n\n    /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n    static diag(data, rows, columns) {\n      var l = data.length;\n      if (rows === undefined) rows = l;\n      if (columns === undefined) columns = rows;\n      var min = Math.min(l, rows, columns);\n      var matrix = this.zeros(rows, columns);\n      for (var i = 0; i < min; i++) {\n        matrix.set(i, i, data[i]);\n      }\n      return matrix;\n    }\n\n    /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static min(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n    static max(matrix1, matrix2) {\n      matrix1 = this.checkMatrix(matrix1);\n      matrix2 = this.checkMatrix(matrix2);\n      var rows = matrix1.rows;\n      var columns = matrix1.columns;\n      var result = new this(rows, columns);\n      for (var i = 0; i < rows; i++) {\n        for (var j = 0; j < columns; j++) {\n          result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n    static checkMatrix(value) {\n      return Matrix.isMatrix(value) ? value : new this(value);\n    }\n\n    /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n    static isMatrix(value) {\n      return (value != null) && (value.klass === 'Matrix');\n    }\n\n    /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n    get size() {\n      return this.rows * this.columns;\n    }\n\n    /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n    apply(callback) {\n      if (typeof callback !== 'function') {\n        throw new TypeError('callback must be a function');\n      }\n      var ii = this.rows;\n      var jj = this.columns;\n      for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n          callback.call(this, i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n    to1DArray() {\n      var array = new Array(this.size);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          array[i * this.columns + j] = this.get(i, j);\n        }\n      }\n      return array;\n    }\n\n    /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n    to2DArray() {\n      var copy = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        copy[i] = new Array(this.columns);\n        for (var j = 0; j < this.columns; j++) {\n          copy[i][j] = this.get(i, j);\n        }\n      }\n      return copy;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row\n         */\n    isRowVector() {\n      return this.rows === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one column\n         */\n    isColumnVector() {\n      return this.columns === 1;\n    }\n\n    /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n    isVector() {\n      return (this.rows === 1) || (this.columns === 1);\n    }\n\n    /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n    isSquare() {\n      return this.rows === this.columns;\n    }\n\n    /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n    isSymmetric() {\n      if (this.isSquare()) {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j <= i; j++) {\n            if (this.get(i, j) !== this.get(j, i)) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n    set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n      throw new Error('set method is unimplemented');\n    }\n\n    /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n    get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n      throw new Error('get method is unimplemented');\n    }\n\n    /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n    repeat(rowRep, colRep) {\n      rowRep = rowRep || 1;\n      colRep = colRep || 1;\n      var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n      for (var i = 0; i < rowRep; i++) {\n        for (var j = 0; j < colRep; j++) {\n          matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n        }\n      }\n      return matrix;\n    }\n\n    /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n    fill(value) {\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, value);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n    neg() {\n      return this.mulS(-1);\n    }\n\n    /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n    getRow(index) {\n      checkRowIndex(this, index);\n      var row = new Array(this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        row[i] = this.get(index, i);\n      }\n      return row;\n    }\n\n    /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n    getRowVector(index) {\n      return this.constructor.rowVector(this.getRow(index));\n    }\n\n    /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setRow(index, array) {\n      checkRowIndex(this, index);\n      array = checkRowVector(this, array);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n    swapRows(row1, row2) {\n      checkRowIndex(this, row1);\n      checkRowIndex(this, row2);\n      for (var i = 0; i < this.columns; i++) {\n        var temp = this.get(row1, i);\n        this.set(row1, i, this.get(row2, i));\n        this.set(row2, i, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n    getColumn(index) {\n      checkColumnIndex(this, index);\n      var column = new Array(this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        column[i] = this.get(i, index);\n      }\n      return column;\n    }\n\n    /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n    getColumnVector(index) {\n      return this.constructor.columnVector(this.getColumn(index));\n    }\n\n    /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n    setColumn(index, array) {\n      checkColumnIndex(this, index);\n      array = checkColumnVector(this, array);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, array[i]);\n      }\n      return this;\n    }\n\n    /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n    swapColumns(column1, column2) {\n      checkColumnIndex(this, column1);\n      checkColumnIndex(this, column2);\n      for (var i = 0; i < this.rows; i++) {\n        var temp = this.get(i, column1);\n        this.set(i, column1, this.get(i, column2));\n        this.set(i, column2, temp);\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divRowVector(vector) {\n      vector = checkRowVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[j]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    addColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) + vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    subColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) - vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    mulColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) * vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n    divColumnVector(vector) {\n      vector = checkColumnVector(this, vector);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          this.set(i, j, this.get(i, j) / vector[i]);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulRow(index, value) {\n      checkRowIndex(this, index);\n      for (var i = 0; i < this.columns; i++) {\n        this.set(index, i, this.get(index, i) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n    mulColumn(index, value) {\n      checkColumnIndex(this, index);\n      for (var i = 0; i < this.rows; i++) {\n        this.set(i, index, this.get(i, index) * value);\n      }\n      return this;\n    }\n\n    /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n    max() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n    maxIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) > v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n    min() {\n      var v = this.get(0, 0);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n          }\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n    minIndex() {\n      var v = this.get(0, 0);\n      var idx = [0, 0];\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          if (this.get(i, j) < v) {\n            v = this.get(i, j);\n            idx[0] = i;\n            idx[1] = j;\n          }\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    maxRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    maxRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) > v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n    minRow(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n    minRowIndex(row) {\n      checkRowIndex(this, row);\n      var v = this.get(row, 0);\n      var idx = [row, 0];\n      for (var i = 1; i < this.columns; i++) {\n        if (this.get(row, i) < v) {\n          v = this.get(row, i);\n          idx[1] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    maxColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    maxColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) > v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n    minColumn(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n        }\n      }\n      return v;\n    }\n\n    /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n    minColumnIndex(column) {\n      checkColumnIndex(this, column);\n      var v = this.get(0, column);\n      var idx = [0, column];\n      for (var i = 1; i < this.rows; i++) {\n        if (this.get(i, column) < v) {\n          v = this.get(i, column);\n          idx[0] = i;\n        }\n      }\n      return idx;\n    }\n\n    /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n    diag() {\n      var min = Math.min(this.rows, this.columns);\n      var diag = new Array(min);\n      for (var i = 0; i < min; i++) {\n        diag[i] = this.get(i, i);\n      }\n      return diag;\n    }\n\n    /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n    sum(by) {\n      switch (by) {\n        case 'row':\n          return sumByRow(this);\n        case 'column':\n          return sumByColumn(this);\n        default:\n          return sumAll(this);\n      }\n    }\n\n    /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n    mean() {\n      return this.sum() / this.size;\n    }\n\n    /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n    prod() {\n      var prod = 1;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          prod *= this.get(i, j);\n        }\n      }\n      return prod;\n    }\n\n    /**\n         * Returns the norm of a matrix.\n         * @param {string} type - \"frobenius\" (default) or \"max\" return resp. the Frobenius norm and the max norm.\n         * @return {number}\n         */\n    norm(type = 'frobenius') {\n      var result = 0;\n      if (type === 'max') {\n        return this.max();\n      } else if (type === 'frobenius') {\n        for (var i = 0; i < this.rows; i++) {\n          for (var j = 0; j < this.columns; j++) {\n            result = result + this.get(i, j) * this.get(i, j);\n          }\n        }\n        return Math.sqrt(result);\n      } else {\n        throw new RangeError(`unknown norm type: ${type}`);\n      }\n    }\n\n    /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n    cumulativeSum() {\n      var sum = 0;\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          sum += this.get(i, j);\n          this.set(i, j, sum);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n    dot(vector2) {\n      if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n      var vector1 = this.to1DArray();\n      if (vector1.length !== vector2.length) {\n        throw new RangeError('vectors do not have the same size');\n      }\n      var dot = 0;\n      for (var i = 0; i < vector1.length; i++) {\n        dot += vector1[i] * vector2[i];\n      }\n      return dot;\n    }\n\n    /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    mmul(other) {\n      other = this.constructor.checkMatrix(other);\n      if (this.columns !== other.rows) {\n        // eslint-disable-next-line no-console\n        console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n      }\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.columns;\n\n      var result = new this.constructor[Symbol.species](m, p);\n\n      var Bcolj = new Array(n);\n      for (var j = 0; j < p; j++) {\n        for (var k = 0; k < n; k++) {\n          Bcolj[k] = other.get(k, j);\n        }\n\n        for (var i = 0; i < m; i++) {\n          var s = 0;\n          for (k = 0; k < n; k++) {\n            s += this.get(i, k) * Bcolj[k];\n          }\n\n          result.set(i, j, s);\n        }\n      }\n      return result;\n    }\n\n    strassen2x2(other) {\n      var result = new this.constructor[Symbol.species](2, 2);\n      const a11 = this.get(0, 0);\n      const b11 = other.get(0, 0);\n      const a12 = this.get(0, 1);\n      const b12 = other.get(0, 1);\n      const a21 = this.get(1, 0);\n      const b21 = other.get(1, 0);\n      const a22 = this.get(1, 1);\n      const b22 = other.get(1, 1);\n\n      // Compute intermediate values.\n      const m1 = (a11 + a22) * (b11 + b22);\n      const m2 = (a21 + a22) * b11;\n      const m3 = a11 * (b12 - b22);\n      const m4 = a22 * (b21 - b11);\n      const m5 = (a11 + a12) * b22;\n      const m6 = (a21 - a11) * (b11 + b12);\n      const m7 = (a12 - a22) * (b21 + b22);\n\n      // Combine intermediate values into the output.\n      const c00 = m1 + m4 - m5 + m7;\n      const c01 = m3 + m5;\n      const c10 = m2 + m4;\n      const c11 = m1 - m2 + m3 + m6;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      return result;\n    }\n\n    strassen3x3(other) {\n      var result = new this.constructor[Symbol.species](3, 3);\n\n      const a00 = this.get(0, 0);\n      const a01 = this.get(0, 1);\n      const a02 = this.get(0, 2);\n      const a10 = this.get(1, 0);\n      const a11 = this.get(1, 1);\n      const a12 = this.get(1, 2);\n      const a20 = this.get(2, 0);\n      const a21 = this.get(2, 1);\n      const a22 = this.get(2, 2);\n\n      const b00 = other.get(0, 0);\n      const b01 = other.get(0, 1);\n      const b02 = other.get(0, 2);\n      const b10 = other.get(1, 0);\n      const b11 = other.get(1, 1);\n      const b12 = other.get(1, 2);\n      const b20 = other.get(2, 0);\n      const b21 = other.get(2, 1);\n      const b22 = other.get(2, 2);\n\n      const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n      const m2 = (a00 - a10) * (-b01 + b11);\n      const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n      const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n      const m5 = (a10 + a11) * (-b00 + b01);\n      const m6 = a00 * b00;\n      const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n      const m8 = (-a00 + a20) * (b02 - b12);\n      const m9 = (a20 + a21) * (-b00 + b02);\n      const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n      const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n      const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n      const m13 = (a02 - a22) * (b11 - b21);\n      const m14 = a02 * b20;\n      const m15 = (a21 + a22) * (-b20 + b21);\n      const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n      const m17 = (a02 - a12) * (b12 - b22);\n      const m18 = (a11 + a12) * (-b20 + b22);\n      const m19 = a01 * b10;\n      const m20 = a12 * b21;\n      const m21 = a10 * b02;\n      const m22 = a20 * b01;\n      const m23 = a22 * b22;\n\n      const c00 = m6 + m14 + m19;\n      const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n      const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n      const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n      const c11 = m2 + m4 + m5 + m6 + m20;\n      const c12 = m14 + m16 + m17 + m18 + m21;\n      const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n      const c21 = m12 + m13 + m14 + m15 + m22;\n      const c22 = m6 + m7 + m8 + m9 + m23;\n\n      result.set(0, 0, c00);\n      result.set(0, 1, c01);\n      result.set(0, 2, c02);\n      result.set(1, 0, c10);\n      result.set(1, 1, c11);\n      result.set(1, 2, c12);\n      result.set(2, 0, c20);\n      result.set(2, 1, c21);\n      result.set(2, 2, c22);\n      return result;\n    }\n\n    /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n    mmulStrassen(y) {\n      var x = this.clone();\n      var r1 = x.rows;\n      var c1 = x.columns;\n      var r2 = y.rows;\n      var c2 = y.columns;\n      if (c1 !== r2) {\n        // eslint-disable-next-line no-console\n        console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n      }\n\n      // Put a matrix into the top left of a matrix of zeros.\n      // `rows` and `cols` are the dimensions of the output matrix.\n      function embed(mat, rows, cols) {\n        var r = mat.rows;\n        var c = mat.columns;\n        if ((r === rows) && (c === cols)) {\n          return mat;\n        } else {\n          var resultat = Matrix.zeros(rows, cols);\n          resultat = resultat.setSubMatrix(mat, 0, 0);\n          return resultat;\n        }\n      }\n\n\n      // Make sure both matrices are the same size.\n      // This is exclusively for simplicity:\n      // this algorithm can be implemented with matrices of different sizes.\n\n      var r = Math.max(r1, r2);\n      var c = Math.max(c1, c2);\n      x = embed(x, r, c);\n      y = embed(y, r, c);\n\n      // Our recursive multiplication function.\n      function blockMult(a, b, rows, cols) {\n        // For small matrices, resort to naive multiplication.\n        if (rows <= 512 || cols <= 512) {\n          return a.mmul(b); // a is equivalent to this\n        }\n\n        // Apply dynamic padding.\n        if ((rows % 2 === 1) && (cols % 2 === 1)) {\n          a = embed(a, rows + 1, cols + 1);\n          b = embed(b, rows + 1, cols + 1);\n        } else if (rows % 2 === 1) {\n          a = embed(a, rows + 1, cols);\n          b = embed(b, rows + 1, cols);\n        } else if (cols % 2 === 1) {\n          a = embed(a, rows, cols + 1);\n          b = embed(b, rows, cols + 1);\n        }\n\n        var halfRows = parseInt(a.rows / 2, 10);\n        var halfCols = parseInt(a.columns / 2, 10);\n        // Subdivide input matrices.\n        var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n        var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n        var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n        var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n        var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n        var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n        var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n        var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n        // Compute intermediate values.\n        var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n        var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n        var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n        var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n        var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n        var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n        var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n        // Combine intermediate values into the output.\n        var c11 = Matrix.add(m1, m4);\n        c11.sub(m5);\n        c11.add(m7);\n        var c12 = Matrix.add(m3, m5);\n        var c21 = Matrix.add(m2, m4);\n        var c22 = Matrix.sub(m1, m2);\n        c22.add(m3);\n        c22.add(m6);\n\n        // Crop output to the desired size (undo dynamic padding).\n        var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n        resultat = resultat.setSubMatrix(c11, 0, 0);\n        resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n        resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n        resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n        return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n      }\n      return blockMult(x, y, r, c);\n    }\n\n    /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n    scaleRows(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.rows; i++) {\n        var scaled = rescale(this.getRow(i), { min, max });\n        newMatrix.setRow(i, scaled);\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n    scaleColumns(min, max) {\n      min = min === undefined ? 0 : min;\n      max = max === undefined ? 1 : max;\n      if (min >= max) {\n        throw new RangeError('min should be strictly smaller than max');\n      }\n      var newMatrix = this.constructor.empty(this.rows, this.columns);\n      for (var i = 0; i < this.columns; i++) {\n        var scaled = rescale(this.getColumn(i), {\n          min: min,\n          max: max\n        });\n        newMatrix.setColumn(i, scaled);\n      }\n      return newMatrix;\n    }\n\n\n    /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n    kroneckerProduct(other) {\n      other = this.constructor.checkMatrix(other);\n\n      var m = this.rows;\n      var n = this.columns;\n      var p = other.rows;\n      var q = other.columns;\n\n      var result = new this.constructor[Symbol.species](m * p, n * q);\n      for (var i = 0; i < m; i++) {\n        for (var j = 0; j < n; j++) {\n          for (var k = 0; k < p; k++) {\n            for (var l = 0; l < q; l++) {\n              result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n            }\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n    transpose() {\n      var result = new this.constructor[Symbol.species](this.columns, this.rows);\n      for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n          result.set(j, i, this.get(i, j));\n        }\n      }\n      return result;\n    }\n\n    /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortRows(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.rows; i++) {\n        this.setRow(i, this.getRow(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n    sortColumns(compareFunction) {\n      if (compareFunction === undefined) compareFunction = compareNumbers;\n      for (var i = 0; i < this.columns; i++) {\n        this.setColumn(i, this.getColumn(i).sort(compareFunction));\n      }\n      return this;\n    }\n\n    /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n    subMatrix(startRow, endRow, startColumn, endColumn) {\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n      for (var i = startRow; i <= endRow; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n    subMatrixRow(indices, startColumn, endColumn) {\n      if (startColumn === undefined) startColumn = 0;\n      if (endColumn === undefined) endColumn = this.columns - 1;\n      if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startColumn; j <= endColumn; j++) {\n          if (indices[i] < 0 || indices[i] >= this.rows) {\n            throw new RangeError(`Row index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n    subMatrixColumn(indices, startRow, endRow) {\n      if (startRow === undefined) startRow = 0;\n      if (endRow === undefined) endRow = this.rows - 1;\n      if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n        throw new RangeError('Argument out of range');\n      }\n\n      var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n      for (var i = 0; i < indices.length; i++) {\n        for (var j = startRow; j <= endRow; j++) {\n          if (indices[i] < 0 || indices[i] >= this.columns) {\n            throw new RangeError(`Column index out of range: ${indices[i]}`);\n          }\n          newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n    setSubMatrix(matrix, startRow, startColumn) {\n      matrix = this.constructor.checkMatrix(matrix);\n      var endRow = startRow + matrix.rows - 1;\n      var endColumn = startColumn + matrix.columns - 1;\n      checkRange(this, startRow, endRow, startColumn, endColumn);\n      for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n          this[startRow + i][startColumn + j] = matrix.get(i, j);\n        }\n      }\n      return this;\n    }\n\n    /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n    selection(rowIndices, columnIndices) {\n      var indices = checkIndices(this, rowIndices, columnIndices);\n      var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n      for (var i = 0; i < indices.row.length; i++) {\n        var rowIndex = indices.row[i];\n        for (var j = 0; j < indices.column.length; j++) {\n          var columnIndex = indices.column[j];\n          newMatrix[i][j] = this.get(rowIndex, columnIndex);\n        }\n      }\n      return newMatrix;\n    }\n\n    /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n    trace() {\n      var min = Math.min(this.rows, this.columns);\n      var trace = 0;\n      for (var i = 0; i < min; i++) {\n        trace += this.get(i, i);\n      }\n      return trace;\n    }\n\n    /*\n         Matrix views\n         */\n\n    /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n    transposeView() {\n      return new MatrixTransposeView(this);\n    }\n\n    /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n    rowView(row) {\n      checkRowIndex(this, row);\n      return new MatrixRowView(this, row);\n    }\n\n    /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n    columnView(column) {\n      checkColumnIndex(this, column);\n      return new MatrixColumnView(this, column);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n    flipRowView() {\n      return new MatrixFlipRowView(this);\n    }\n\n    /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n    flipColumnView() {\n      return new MatrixFlipColumnView(this);\n    }\n\n    /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n    subMatrixView(startRow, endRow, startColumn, endColumn) {\n      return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n    }\n\n    /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n    selectionView(rowIndices, columnIndices) {\n      return new MatrixSelectionView(this, rowIndices, columnIndices);\n    }\n\n    /**\n         * Returns a view of the row indices\n         * @example\n         * // resulting vector is [[1,2,3], [1,2,3]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).rowSelectionView([0, 0])\n         * @param {Array<number>} rowIndices\n         * @return {MatrixRowSelectionView}\n         */\n    rowSelectionView(rowIndices) {\n      return new MatrixRowSelectionView(this, rowIndices);\n    }\n\n    /**\n         * Returns a view of the column indices\n         * @example\n         * // resulting vector is [[2, 2], [5, 5]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).columnSelectionView([1, 1])\n         * @param {Array<number>} columnIndices\n         * @return {MatrixColumnSelectionView}\n         */\n    columnSelectionView(columnIndices) {\n      return new MatrixColumnSelectionView(this, columnIndices);\n    }\n\n\n    /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n    det() {\n      if (this.isSquare()) {\n        var a, b, c, d;\n        if (this.columns === 2) {\n          // 2 x 2 matrix\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(1, 0);\n          d = this.get(1, 1);\n\n          return a * d - (b * c);\n        } else if (this.columns === 3) {\n          // 3 x 3 matrix\n          var subMatrix0, subMatrix1, subMatrix2;\n          subMatrix0 = this.selectionView([1, 2], [1, 2]);\n          subMatrix1 = this.selectionView([1, 2], [0, 2]);\n          subMatrix2 = this.selectionView([1, 2], [0, 1]);\n          a = this.get(0, 0);\n          b = this.get(0, 1);\n          c = this.get(0, 2);\n\n          return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n        } else {\n          // general purpose determinant using the LU decomposition\n          return new LuDecomposition(this).determinant;\n        }\n      } else {\n        throw Error('Determinant can only be calculated for a square matrix.');\n      }\n    }\n\n    /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n    pseudoInverse(threshold) {\n      if (threshold === undefined) threshold = Number.EPSILON;\n      var svdSolution = new SvDecomposition(this, { autoTranspose: true });\n\n      var U = svdSolution.leftSingularVectors;\n      var V = svdSolution.rightSingularVectors;\n      var s = svdSolution.diagonal;\n\n      for (var i = 0; i < s.length; i++) {\n        if (Math.abs(s[i]) > threshold) {\n          s[i] = 1.0 / s[i];\n        } else {\n          s[i] = 0.0;\n        }\n      }\n\n      // convert list to diagonal\n      s = this.constructor[Symbol.species].diag(s);\n      return V.mmul(s.mmul(U.transposeView()));\n    }\n\n    /**\n         * Creates an exact and independent copy of the matrix\n         * @return {Matrix}\n         */\n    clone() {\n      var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n      for (var row = 0; row < this.rows; row++) {\n        for (var column = 0; column < this.columns; column++) {\n          newMatrix.set(row, column, this.get(row, column));\n        }\n      }\n      return newMatrix;\n    }\n  }\n\n  Matrix.prototype.klass = 'Matrix';\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  /*\n     Synonyms\n     */\n\n  Matrix.random = Matrix.rand;\n  Matrix.diagonal = Matrix.diag;\n  Matrix.prototype.diagonal = Matrix.prototype.diag;\n  Matrix.identity = Matrix.eye;\n  Matrix.prototype.negate = Matrix.prototype.neg;\n  Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n  Matrix.prototype.determinant = Matrix.prototype.det;\n\n  /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n  var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n  var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n  var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n  var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n  var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n  var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n        this.columns !== matrix.columns) {\n        throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n  var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n  var staticMethodWithOneArg = staticMethodWithArgs;\n\n  var operators = [\n    // Arithmetic operators\n    ['+', 'add'],\n    ['-', 'sub', 'subtract'],\n    ['*', 'mul', 'multiply'],\n    ['/', 'div', 'divide'],\n    ['%', 'mod', 'modulus'],\n    // Bitwise operators\n    ['&', 'and'],\n    ['|', 'or'],\n    ['^', 'xor'],\n    ['<<', 'leftShift'],\n    ['>>', 'signPropagatingRightShift'],\n    ['>>>', 'rightShift', 'zeroFillRightShift']\n  ];\n\n  var i;\n  var eval2 = eval; // eslint-disable-line no-eval\n  for (var operator of operators) {\n    var inplaceOp = eval2(fillTemplateFunction(inplaceOperator, { name: operator[1], op: operator[0] }));\n    var inplaceOpS = eval2(fillTemplateFunction(inplaceOperatorScalar, { name: `${operator[1]}S`, op: operator[0] }));\n    var inplaceOpM = eval2(fillTemplateFunction(inplaceOperatorMatrix, { name: `${operator[1]}M`, op: operator[0] }));\n    var staticOp = eval2(fillTemplateFunction(staticOperator, { name: operator[1] }));\n    for (i = 1; i < operator.length; i++) {\n      Matrix.prototype[operator[i]] = inplaceOp;\n      Matrix.prototype[`${operator[i]}S`] = inplaceOpS;\n      Matrix.prototype[`${operator[i]}M`] = inplaceOpM;\n      Matrix[operator[i]] = staticOp;\n    }\n  }\n\n  var methods = [['~', 'not']];\n\n  [\n    'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n    'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n    'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n  ].forEach(function (mathMethod) {\n    methods.push([`Math.${mathMethod}`, mathMethod]);\n  });\n\n  for (var method of methods) {\n    var inplaceMeth = eval2(fillTemplateFunction(inplaceMethod, { name: method[1], method: method[0] }));\n    var staticMeth = eval2(fillTemplateFunction(staticMethod, { name: method[1] }));\n    for (i = 1; i < method.length; i++) {\n      Matrix.prototype[method[i]] = inplaceMeth;\n      Matrix[method[i]] = staticMeth;\n    }\n  }\n\n  var methodsWithArgs = [['Math.pow', 1, 'pow']];\n\n  for (var methodWithArg of methodsWithArgs) {\n    var args = 'arg0';\n    for (i = 1; i < methodWithArg[1]; i++) {\n      args += `, arg${i}`;\n    }\n    if (methodWithArg[1] !== 1) {\n      var inplaceMethWithArgs = eval2(fillTemplateFunction(inplaceMethodWithArgs, {\n        name: methodWithArg[2],\n        method: methodWithArg[0],\n        args: args\n      }));\n      var staticMethWithArgs = eval2(fillTemplateFunction(staticMethodWithArgs, { name: methodWithArg[2], args: args }));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n        Matrix[methodWithArg[i]] = staticMethWithArgs;\n      }\n    } else {\n      var tmplVar = {\n        name: methodWithArg[2],\n        args: args,\n        method: methodWithArg[0]\n      };\n      var inplaceMethod2 = eval2(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n      var inplaceMethodS = eval2(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n      var inplaceMethodM = eval2(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n      var staticMethod2 = eval2(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n      for (i = 2; i < methodWithArg.length; i++) {\n        Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n        Matrix.prototype[`${methodWithArg[i]}M`] = inplaceMethodM;\n        Matrix.prototype[`${methodWithArg[i]}S`] = inplaceMethodS;\n        Matrix[methodWithArg[i]] = staticMethod2;\n      }\n    }\n  }\n\n  function fillTemplateFunction(template, values) {\n    for (var value in values) {\n      template = template.replace(new RegExp(`%${value}%`, 'g'), values[value]);\n    }\n    return template;\n  }\n\n  return Matrix;\n}\n","import AbstractMatrix from './abstractMatrix';\nimport {\n  checkColumnIndex,\n  checkColumnVector,\n  checkRowIndex,\n  checkRowVector\n} from './util';\n\nexport default class Matrix extends AbstractMatrix(Array) {\n  constructor(nRows, nColumns) {\n    var i;\n    if (arguments.length === 1 && typeof nRows === 'number') {\n      return new Array(nRows);\n    }\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      super(nRows);\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (i = 0; i < nRows; i++) {\n          this[i] = new Array(nColumns);\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const matrix = nRows;\n      nRows = matrix.length;\n      nColumns = matrix[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element'\n        );\n      }\n      super(nRows);\n      for (i = 0; i < nRows; i++) {\n        if (matrix[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this[i] = [].concat(matrix[i]);\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array'\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this[rowIndex][columnIndex];\n  }\n\n  /**\n   * Removes a row from the given index\n   * @param {number} index - Row index\n   * @return {Matrix} this\n   */\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a row at the given index\n   * @param {number} [index = this.rows] - Row index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = checkRowVector(this, array, true);\n    this.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  /**\n   * Removes a column from the given index\n   * @param {number} index - Column index\n   * @return {Matrix} this\n   */\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 1);\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  /**\n   * Adds a column at the given index\n   * @param {number} [index = this.columns] - Column index\n   * @param {Array|Matrix} array - Array or vector\n   * @return {Matrix} this\n   */\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (var i = 0; i < this.rows; i++) {\n      this[i].splice(index, 0, array[i]);\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix1D\n   * @param {Array<number>} data\n   * @param {object} [options]\n   * @param {object} [options.rows = 1]\n   */\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    var index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import AbstractMatrix from '../abstractMatrix';\nimport Matrix from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix() {\n  /**\n   * @class WrapperMatrix2D\n   * @param {Array<Array<number>>} data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  static get [Symbol.species]() {\n    return Matrix;\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\n/**\n * @param {Array<Array<number>>|Array<number>} array\n * @param {object} [options]\n * @param {object} [options.rows = 1]\n * @return {WrapperMatrix1D|WrapperMatrix2D}\n */\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse } from './util';\n\n/**\n * @class QrDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\n * @param {Matrix} value\n */\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var qr = value.clone();\n    var m = value.rows;\n    var n = value.columns;\n    var rdiag = new Array(n);\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      var nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  /**\n   * Solve a problem of least square (Ax=b) by using the QR decomposition. Useful when A is rectangular, but not working when A is singular.\n   * Example : We search to approximate x, with A matrix shape m*n, x vector size n, b vector size m (m > n). We will use :\n   * var qr = QrDecomposition(A);\n   * var x = qr.solve(b);\n   * @param {Matrix} value - Matrix 1D which is the vector b (in the equation Ax = b)\n   * @return {Matrix} - The vector x\n   */\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    var qr = this.QR;\n    var m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    var count = value.columns;\n    var X = value.clone();\n    var n = qr.columns;\n    var i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr[i][k] * X[i][j];\n        }\n        s = -s / qr[k][k];\n        for (i = k; i < m; i++) {\n          X[i][j] += s * qr[i][k];\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X[k][j] /= this.Rdiag[k];\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X[i][j] -= X[k][j] * qr[i][k];\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  /**\n   *\n   * @return {boolean}\n   */\n  isFullRank() {\n    var columns = this.QR.columns;\n    for (var i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get upperTriangularMatrix() {\n    var qr = this.QR;\n    var n = qr.columns;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X[i][j] = qr[i][j];\n        } else if (i === j) {\n          X[i][j] = this.Rdiag[i];\n        } else {\n          X[i][j] = 0;\n        }\n      }\n    }\n    return X;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get orthogonalMatrix() {\n    var qr = this.QR;\n    var rows = qr.rows;\n    var columns = qr.columns;\n    var X = new Matrix(rows, columns);\n    var i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X[i][k] = 0;\n      }\n      X[k][k] = 1;\n      for (j = k; j < columns; j++) {\n        if (qr[k][k] !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr[i][k] * X[i][j];\n          }\n\n          s = -s / qr[k][k];\n\n          for (i = k; i < rows; i++) {\n            X[i][j] += s * qr[i][k];\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\n\nimport { Matrix, WrapperMatrix2D } from './index';\n\n/**\n * Computes the inverse of a Matrix\n * @param {Matrix} matrix\n * @param {boolean} [useSVD=false]\n * @return {Matrix}\n */\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\n/**\n *\n * @param {Matrix} leftHandSide\n * @param {Matrix} rightHandSide\n * @param {boolean} [useSVD = false]\n * @return {Matrix}\n */\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import max from 'ml-array-max';\n\nimport Matrix from './matrix';\nimport SingularValueDecomposition from './dc/svd';\n\n// function used by rowsDependencies\nfunction xrange(n, exception) {\n  var range = [];\n  for (var i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\n// function used by rowsDependencies\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    var returnArray = matrix.addRow(index, [0]);\n    for (var i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\n/**\n * Creates a matrix which represents the dependencies between rows.\n * If a row is a linear combination of others rows, the result will be a row with the coefficients of this combination.\n * For example : for A = [[2, 0, 0, 1], [0, 1, 6, 0], [0, 3, 0, 1], [0, 0, 1, 0], [0, 1, 2, 0]], the result will be [[0, 0, 0, 0, 0], [0, 0, 0, 4, 1], [0, 0, 0, 0, 0], [0, 0.25, 0, 0, -0.25], [0, 1, 0, -4, 0]]\n * @param {Matrix} matrix\n * @param {Object} [options] includes thresholdValue and thresholdError.\n * @param {number} [options.thresholdValue = 10e-10] If an absolute value is inferior to this threshold, it will equals zero.\n * @param {number} [options.thresholdError = 10e-10] If the error is inferior to that threshold, the linear combination found is accepted and the row is dependent from other rows.\n * @return {Matrix} the matrix which represents the dependencies between rows.\n */\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n\n  var n = matrix.rows;\n  var results = new Matrix(n, n);\n\n  for (var i = 0; i < n; i++) {\n    var b = Matrix.columnVector(matrix.getRow(i));\n    var Abis = matrix.subMatrixRow(xrange(n, i)).transposeView();\n    var svd = new SingularValueDecomposition(Abis);\n    var x = svd.solve(b);\n    var error = max(\n      Matrix.sub(b, Abis.mmul(x))\n        .abs()\n        .to1DArray()\n    );\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError)\n    );\n  }\n  return results;\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\nimport { hypotenuse, getFilled2DArray } from './util';\n\n/**\n * @class EigenvalueDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\n * @param {Matrix} matrix\n * @param {object} [options]\n * @param {boolean} [options.assumeSymmetric=false]\n */\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns;\n    var V = getFilled2DArray(n, n, 0);\n    var d = new Array(n);\n    var e = new Array(n);\n    var value = matrix;\n    var i, j;\n\n    var isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V[i][j] = value.get(i, j);\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      var H = getFilled2DArray(n, n, 0);\n      var ort = new Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H[i][j] = value.get(i, j);\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get realEigenvalues() {\n    return this.d;\n  }\n\n  /**\n   *\n   * @return {Array<number>}\n   */\n  get imaginaryEigenvalues() {\n    return this.e;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get eigenvectorMatrix() {\n    if (!Matrix.isMatrix(this.V)) {\n      this.V = new Matrix(this.V);\n    }\n    return this.V;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get diagonalMatrix() {\n    var n = this.n;\n    var e = this.e;\n    var d = this.d;\n    var X = new Matrix(n, n);\n    var i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X[i][j] = 0;\n      }\n      X[i][i] = d[i];\n      if (e[i] > 0) {\n        X[i][i + 1] = e[i];\n      } else if (e[i] < 0) {\n        X[i][i - 1] = e[i];\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  var f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n        V[j][i] = 0;\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V[j][i] = f;\n        g = e[j] + V[j][j] * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V[k][j] * d[k];\n          e[k] += V[k][j] * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V[k][j] -= f * e[k] + g * d[k];\n        }\n        d[j] = V[i - 1][j];\n        V[i][j] = 0;\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V[n - 1][i] = V[i][i];\n    V[i][i] = 1;\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V[k][i + 1] / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V[k][i + 1] * V[k][j];\n        }\n        for (k = 0; k <= i; k++) {\n          V[k][j] -= g * d[k];\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V[k][i + 1] = 0;\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V[n - 1][j];\n    V[n - 1][j] = 0;\n  }\n\n  V[n - 1][n - 1] = 1;\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  var g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  var f = 0;\n  var tst1 = 0;\n  var eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V[k][i + 1];\n            V[k][i + 1] = s * V[k][i] + c * h;\n            V[k][i] = c * V[k][i] - s * h;\n          }\n        }\n\n        p = -s * s2 * c3 * el1 * e[l] / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V[j][i];\n        V[j][i] = V[j][k];\n        V[j][k] = p;\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  var low = 0;\n  var high = n - 1;\n  var f, g, h, i, j, m;\n  var scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H[i][m - 1]);\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H[i][m - 1] / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H[i][j];\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H[i][j] -= f * ort[i];\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H[i][j];\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H[i][j] -= f * ort[j];\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H[m][m - 1] = scale * g;\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V[i][j] = i === j ? 1 : 0;\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H[m][m - 1] !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H[i][m - 1];\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V[i][j];\n        }\n\n        g = g / ort[m] / H[m][m - 1];\n        for (i = m; i <= high; i++) {\n          V[i][j] += g * ort[i];\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  var n = nn - 1;\n  var low = 0;\n  var high = nn - 1;\n  var eps = Number.EPSILON;\n  var exshift = 0;\n  var norm = 0;\n  var p = 0;\n  var q = 0;\n  var r = 0;\n  var s = 0;\n  var z = 0;\n  var iter = 0;\n  var i, j, k, l, m, t, w, x, y;\n  var ra, sa, vr, vi;\n  var notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H[i][i];\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H[i][j]);\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H[l][l - 1]) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H[n][n] = H[n][n] + exshift;\n      d[n] = H[n][n];\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H[n][n - 1] * H[n - 1][n];\n      p = (H[n - 1][n - 1] - H[n][n]) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H[n][n] = H[n][n] + exshift;\n      H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n      x = H[n][n];\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H[n][n - 1];\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H[n - 1][j];\n          H[n - 1][j] = q * z + p * H[n][j];\n          H[n][j] = q * H[n][j] - p * z;\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H[i][n - 1];\n          H[i][n - 1] = q * z + p * H[i][n];\n          H[i][n] = q * H[i][n] - p * z;\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V[i][n - 1];\n          V[i][n - 1] = q * z + p * V[i][n];\n          V[i][n] = q * V[i][n] - p * z;\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H[n][n];\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H[n - 1][n - 1];\n        w = H[n][n - 1] * H[n - 1][n];\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H[i][i] -= x;\n        }\n        s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H[i][i] -= s;\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H[m][m];\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n        q = H[m + 1][m + 1] - z - r - s;\n        r = H[m + 2][m + 1];\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H[m - 1][m - 1]) +\n                Math.abs(z) +\n                Math.abs(H[m + 1][m + 1])))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H[i][i - 2] = 0;\n        if (i > m + 2) {\n          H[i][i - 3] = 0;\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H[k][k - 1];\n          q = H[k + 1][k - 1];\n          r = notlast ? H[k + 2][k - 1] : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H[k][k - 1] = -s * x;\n          } else if (l !== m) {\n            H[k][k - 1] = -H[k][k - 1];\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H[k][j] + q * H[k + 1][j];\n            if (notlast) {\n              p = p + r * H[k + 2][j];\n              H[k + 2][j] = H[k + 2][j] - p * z;\n            }\n\n            H[k][j] = H[k][j] - p * x;\n            H[k + 1][j] = H[k + 1][j] - p * y;\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H[i][k] + y * H[i][k + 1];\n            if (notlast) {\n              p = p + z * H[i][k + 2];\n              H[i][k + 2] = H[i][k + 2] - p * r;\n            }\n\n            H[i][k] = H[i][k] - p;\n            H[i][k + 1] = H[i][k + 1] - p * q;\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V[i][k] + y * V[i][k + 1];\n            if (notlast) {\n              p = p + z * V[i][k + 2];\n              V[i][k + 2] = V[i][k + 2] - p * r;\n            }\n\n            V[i][k] = V[i][k] - p;\n            V[i][k + 1] = V[i][k + 1] - p * q;\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H[n][n] = 1;\n      for (i = n - 1; i >= 0; i--) {\n        w = H[i][i] - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H[i][j] * H[j][n];\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H[i][n] = w !== 0 ? -r / w : -r / (eps * norm);\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H[i][n] = t;\n            H[i + 1][n] =\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z;\n          }\n\n          t = Math.abs(H[i][n]);\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n        H[n - 1][n - 1] = q / H[n][n - 1];\n        H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n      } else {\n        cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n        H[n - 1][n - 1] = cdivres[0];\n        H[n - 1][n] = cdivres[1];\n      }\n\n      H[n][n - 1] = 0;\n      H[n][n] = 1;\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H[i][j] * H[j][n - 1];\n          sa = sa + H[i][j] * H[j][n];\n        }\n\n        w = H[i][i] - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n          } else {\n            x = H[i][i + 1];\n            y = H[i + 1][i];\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi\n            );\n            H[i][n - 1] = cdivres[0];\n            H[i][n] = cdivres[1];\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n              H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n            } else {\n              cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n              H[i + 1][n - 1] = cdivres[0];\n              H[i + 1][n] = cdivres[1];\n            }\n          }\n\n          t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H[j][n - 1] = H[j][n - 1] / t;\n              H[j][n] = H[j][n] / t;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V[i][j] = H[i][j];\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V[i][k] * H[k][j];\n      }\n      V[i][j] = z;\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  var r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import { Matrix, WrapperMatrix2D } from '../index';\n\n/**\n * @class CholeskyDecomposition\n * @link https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\n * @param {Matrix} value\n */\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value;\n    var dimension = a.rows;\n    var l = new Matrix(dimension, dimension);\n    var positiveDefinite = true;\n    var i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      var Lrowj = l[j];\n      var d = 0;\n      for (k = 0; k < j; k++) {\n        var Lrowk = l[k];\n        var s = 0;\n        for (i = 0; i < k; i++) {\n          s += Lrowk[i] * Lrowj[i];\n        }\n        Lrowj[k] = s = (a.get(j, k) - s) / l[k][k];\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l[j][j] = Math.sqrt(Math.max(d, 0));\n      for (k = j + 1; k < dimension; k++) {\n        l[j][k] = 0;\n      }\n    }\n\n    if (!positiveDefinite) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n  }\n\n  /**\n   *\n   * @param {Matrix} value\n   * @return {Matrix}\n   */\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    var l = this.L;\n    var dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n\n    var count = value.columns;\n    var B = value.clone();\n    var i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B[k][j] -= B[i][j] * l[k][i];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B[k][j] -= B[i][j] * l[i][k];\n        }\n        B[k][j] /= l[k][k];\n      }\n    }\n\n    return B;\n  }\n\n  /**\n   *\n   * @return {Matrix}\n   */\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n"],"sourceRoot":""}